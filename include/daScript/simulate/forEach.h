#pragma once

#define DAS_EXPAND(x) x
#define  DAS_FOR_EACH_1(WHAT, ARG, X) WHAT(X, ARG)
#define  DAS_FOR_EACH_2(WHAT, ARG, X, ...) WHAT(X, ARG) DAS_EXPAND(DAS_FOR_EACH_1(WHAT, ARG, __VA_ARGS__))
#define  DAS_FOR_EACH_3(WHAT, ARG, X, ...) WHAT(X, ARG) DAS_EXPAND(DAS_FOR_EACH_2(WHAT, ARG, __VA_ARGS__))
#define  DAS_FOR_EACH_4(WHAT, ARG, X, ...) WHAT(X, ARG) DAS_EXPAND(DAS_FOR_EACH_3(WHAT, ARG, __VA_ARGS__))
#define  DAS_FOR_EACH_5(WHAT, ARG, X, ...) WHAT(X, ARG) DAS_EXPAND(DAS_FOR_EACH_4(WHAT, ARG, __VA_ARGS__))
#define  DAS_FOR_EACH_6(WHAT, ARG, X, ...) WHAT(X, ARG) DAS_EXPAND(DAS_FOR_EACH_5(WHAT, ARG, __VA_ARGS__))
#define  DAS_FOR_EACH_7(WHAT, ARG, X, ...) WHAT(X, ARG) DAS_EXPAND(DAS_FOR_EACH_6(WHAT, ARG, __VA_ARGS__))
#define  DAS_FOR_EACH_8(WHAT, ARG, X, ...) WHAT(X, ARG) DAS_EXPAND(DAS_FOR_EACH_7(WHAT, ARG, __VA_ARGS__))
#define  DAS_FOR_EACH_9(WHAT, ARG, X, ...) WHAT(X, ARG) DAS_EXPAND(DAS_FOR_EACH_8(WHAT, ARG, __VA_ARGS__))
#define DAS_FOR_EACH_10(WHAT, ARG, X, ...) WHAT(X, ARG) DAS_EXPAND(DAS_FOR_EACH_9(WHAT, ARG, __VA_ARGS__))
#define DAS_FOR_EACH_11(WHAT, ARG, X, ...) WHAT(X, ARG)DAS_EXPAND(DAS_FOR_EACH_10(WHAT, ARG, __VA_ARGS__))
#define DAS_FOR_EACH_12(WHAT, ARG, X, ...) WHAT(X, ARG)DAS_EXPAND(DAS_FOR_EACH_11(WHAT, ARG, __VA_ARGS__))
#define DAS_FOR_EACH_13(WHAT, ARG, X, ...) WHAT(X, ARG)DAS_EXPAND(DAS_FOR_EACH_12(WHAT, ARG, __VA_ARGS__))
#define DAS_FOR_EACH_14(WHAT, ARG, X, ...) WHAT(X, ARG)DAS_EXPAND(DAS_FOR_EACH_13(WHAT, ARG, __VA_ARGS__))
#define DAS_FOR_EACH_15(WHAT, ARG, X, ...) WHAT(X, ARG)DAS_EXPAND(DAS_FOR_EACH_14(WHAT, ARG, __VA_ARGS__))
#define DAS_FOR_EACH_16(WHAT, ARG, X, ...) WHAT(X, ARG)DAS_EXPAND(DAS_FOR_EACH_15(WHAT, ARG, __VA_ARGS__))
//... repeat as needed

#define DAS_FOR_EACH_NARG(...) DAS_FOR_EACH_NARG_(__VA_ARGS__, DAS_FOR_EACH_RSEQ_N())
#define DAS_FOR_EACH_NARG_(...) DAS_EXPAND(DAS_FOR_EACH_ARG_N(__VA_ARGS__))
#define DAS_FOR_EACH_ARG_N(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, N, ...) N
#define DAS_FOR_EACH_RSEQ_N() 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0
#define CONCATENATE(x,y) x##y
#define DAS_FOR_EACH_(N, what, arg, ...) DAS_EXPAND(CONCATENATE(DAS_FOR_EACH_, N)(what, arg, __VA_ARGS__))
#define DAS_FOR_EACH(what, arg, ...) DAS_FOR_EACH_(DAS_FOR_EACH_NARG(__VA_ARGS__), what, arg, __VA_ARGS__)

(struct Object
    (float 3 position)
    (float 3 velocity)
)

(let
    (Object 10000 objects)
)

(defun (void update)
    (Object a)
    (
        (+= (@ (. a position) 0) (@ (. a velocity) 0))
        (+= (@ (. a position) 1) (@ (. a velocity) 1))
        (+= (@ (. a position) 2) (@ (. a velocity) 2))
    )
)

(defun (void test)
    (let
        (int index 0)
            (while (< index 10000)
                (
                    (update (@ objects index))
                    (+= index 1)
                )
            )
    )
)

(defun (void foreachTest)
    (let
        (Object obj)
            (foreach objects obj
                (update obj)
            )
    )
)

(defun (void interopTest)
    (let
        (int index 0)
            (while (< index 10000)
                (
                    (interopUpdate (@ objects index))
                    (+= index 1)
                )
            )
    )
)

(defun (void initObj)
    (int index)
    (Object a)
    (
        (let
            (float oi (float index))
            (float ii (* oi 2.0))
                (
                (= (@ (. a position) 0) (+ oi 0.1))
                (= (@ (. a position) 1) (+ oi 0.2))
                (= (@ (. a position) 2) (+ oi 0.3))
                (= (@ (. a velocity) 0) (+ ii 1.0))
                (= (@ (. a velocity) 1) (+ ii 2.0))
                (= (@ (. a velocity) 2) (+ ii 3.0))
                )
        )
    )
)

(defun (void init)
    (let
        (int index 0)
            (while (< index 10000)
                (
                    (initObj index (@ objects index))
                    (+= index 1)
                )
            )
    )
)

(defun (void add1) (int & x)
    (+= x 1)
)

(struct bar
    (int    x)
    (int    y)
    (int    z)
)

(struct foo
    (bar    a)
    (bar *  b)
)

(defun (void print_xyz)
        (int x)
        (int y)
        (int z)
        (
            (debug "x = ")(debug  x)(debug "\n")
            (debug "y = ")(debug  y)(debug "\n")
            (debug "z = ")(debug  z)(debug "\n")
            (stackwalk)
        )
)

(defun (void print_bar)
    (string prefix)
    (bar t)
    (
        (debug prefix)(debug "\n")
        (print_xyz (. t x) (. t y) (. t z))
    )
)

(defun (void print_array)
    (int 4 a)
    (
        (debug (@ a 0)) (debug "\n")
        (debug (@ a 1)) (debug "\n")
        (debug (@ a 2)) (debug "\n")
        (debug (@ a 3)) (debug "\n")
        (stackwalk)
    )
)

(defun (void test)
    (
        (let
            (int x 100)
            (
                (add1 x)
                (assert (== x 101) "supposed to be 101")
            )
        )
        (assert (== (sizeof (bar)) 12) "supposed to be 3*sizeof(int)==12")
        (assert (== (sizeof (foo)) 20) "supposed to be sizeof(bar)+sizeof(bar &)==20")
        (let
            (foo    t)
            (
                (=  (.  (.  t   a)  x)  1)
                (=  (.  (.  t   a)  y)  2)
                (=  (.  (.  t   a)  z)  3)
                (print_bar "t.a" (.t a))
                (debug (. t b))(debug "\n")
                (= (.t b) (new (bar)))
                (debug (. t b))(debug "\n")
                (=  (.  (=> (.  t   b))  x)  4)
                (=  (.  (=> (.  t   b))  y)  5)
                (=  (.  (=> (.  t   b))  z)  6)
                (print_bar "t.b" (=> (.t b)))
            )
        )
        (let
            (int 4  a)
            (
                (=  (@ a 0) 1)  (=  (@ a 1) 2)  (=  (@ a 2) 3)  (=  (@ a 3) 4)
                (print_array a)
            )
        )
    )
)

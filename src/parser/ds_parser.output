Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 59 conflicts: 1 shift/reduce
State 313 conflicts: 1 shift/reduce
State 409 conflicts: 1 shift/reduce
State 515 conflicts: 2 shift/reduce
State 517 conflicts: 2 shift/reduce
State 628 conflicts: 1 shift/reduce
State 911 conflicts: 2 shift/reduce
State 1007 conflicts: 1 shift/reduce
State 1097 conflicts: 1 shift/reduce
State 1356 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program ';'

   16 top_level_reader_macro: expr_reader ';'

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"

   28 string_builder_body: %empty
   29                    | string_builder_body character_sequence
   30                    | string_builder_body "{" expr "}"

   31 string_builder: "start of the string" string_builder_body "end of the string"

   32 reader_character_sequence: STRING_CHARACTER
   33                          | reader_character_sequence STRING_CHARACTER

   34 $@1: %empty

   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   36 options_declaration: "options" annotation_argument_list

   37 require_declaration: "require" require_module

   38 keyword_or_name: "name"
   39                | "keyword"
   40                | "type function"

   41 require_module_name: keyword_or_name
   42                    | '%' require_module_name
   43                    | require_module_name '.' keyword_or_name
   44                    | require_module_name '/' keyword_or_name

   45 require_module: require_module_name is_public_module
   46               | require_module_name "as" "name" is_public_module

   47 is_public_module: %empty
   48                 | "public"

   49 expect_declaration: "expect" expect_list

   50 expect_list: expect_error
   51            | expect_list ',' expect_error

   52 expect_error: "integer constant"
   53             | "integer constant" ':' "integer constant"

   54 expression_label: "label" "integer constant" ':'

   55 expression_goto: "goto" "label" "integer constant"
   56                | "goto" expr

   57 elif_or_static_elif: "elif"
   58                    | "static_elif"

   59 expression_else: %empty
   60                | "else" expression_block
   61                | elif_or_static_elif expr expression_block expression_else

   62 if_or_static_if: "if"
   63                | "static_if"

   64 expression_else_one_liner: %empty

   65 $@2: %empty

   66 expression_else_one_liner: "else" $@2 expression_if_one_liner

   67 expression_if_one_liner: expr
   68                        | expression_return_no_pipe
   69                        | expression_yield_no_pipe
   70                        | expression_break
   71                        | expression_continue

   72 expression_if_then_else: if_or_static_if expr expression_block expression_else

   73 $@3: %empty

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner ';'

   75 $@4: %empty

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list expression_block

   77 expression_unsafe: "unsafe" expression_block

   78 expression_while_loop: "while" expr expression_block

   79 expression_with: "with" expr expression_block

   80 $@5: %empty

   81 expression_with_alias: "assume" "name" '=' $@5 expr

   82 annotation_argument_value: string_constant
   83                          | "name"
   84                          | "integer constant"
   85                          | "floating point constant"
   86                          | "true"
   87                          | "false"

   88 annotation_argument_value_list: annotation_argument_value
   89                               | annotation_argument_value_list ',' annotation_argument_value

   90 annotation_argument_name: "name"
   91                         | "type"
   92                         | "in"

   93 annotation_argument: annotation_argument_name '=' string_constant
   94                    | annotation_argument_name '=' "name"
   95                    | annotation_argument_name '=' "integer constant"
   96                    | annotation_argument_name '=' "floating point constant"
   97                    | annotation_argument_name '=' "true"
   98                    | annotation_argument_name '=' "false"
   99                    | annotation_argument_name
  100                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  101 annotation_argument_list: annotation_argument
  102                         | annotation_argument_list ',' annotation_argument

  103 annotation_declaration_name: name_in_namespace
  104                            | "require"
  105                            | "private"

  106 annotation_declaration_basic: annotation_declaration_name
  107                             | annotation_declaration_name '(' annotation_argument_list ')'

  108 annotation_declaration: annotation_declaration_basic
  109                       | '!' annotation_declaration
  110                       | annotation_declaration "&&" annotation_declaration
  111                       | annotation_declaration "||" annotation_declaration
  112                       | annotation_declaration "^^" annotation_declaration
  113                       | '(' annotation_declaration ')'
  114                       | "|>" annotation_declaration

  115 annotation_list: annotation_declaration
  116                | annotation_list ',' annotation_declaration

  117 optional_annotation_list: %empty
  118                         | '[' annotation_list ']'

  119 optional_function_argument_list: %empty
  120                                | '(' ')'
  121                                | '(' function_argument_list ')'

  122 optional_function_type: %empty
  123                       | ':' type_declaration

  124 function_name: "name"
  125              | "operator" '!'
  126              | "operator" '~'
  127              | "operator" "+="
  128              | "operator" "-="
  129              | "operator" "*="
  130              | "operator" "/="
  131              | "operator" "%="
  132              | "operator" "&="
  133              | "operator" "|="
  134              | "operator" "^="
  135              | "operator" "&&="
  136              | "operator" "||="
  137              | "operator" "^^="
  138              | "operator" "&&"
  139              | "operator" "||"
  140              | "operator" "^^"
  141              | "operator" '+'
  142              | "operator" '-'
  143              | "operator" '*'
  144              | "operator" '/'
  145              | "operator" '%'
  146              | "operator" '<'
  147              | "operator" '>'
  148              | "operator" ".."
  149              | "operator" "=="
  150              | "operator" "!="
  151              | "operator" "<="
  152              | "operator" ">="
  153              | "operator" '&'
  154              | "operator" '|'
  155              | "operator" '^'
  156              | "++" "operator"
  157              | "--" "operator"
  158              | "operator" "++"
  159              | "operator" "--"
  160              | "operator" "<<"
  161              | "operator" ">>"
  162              | "operator" "<<="
  163              | "operator" ">>="
  164              | "operator" "<<<"
  165              | "operator" ">>>"
  166              | "operator" "<<<="
  167              | "operator" ">>>="
  168              | "operator" '[' ']'
  169              | "operator" "?[" ']'
  170              | "operator" '.'
  171              | "operator" "?."
  172              | "operator" '.' "name"
  173              | "operator" '.' "name" ":="
  174              | "operator" "?." "name"
  175              | "operator" ":="
  176              | "operator" "delete"
  177              | "operator" "??"
  178              | "operator" "is"
  179              | "operator" "as"
  180              | "operator" "is" "name"
  181              | "operator" "as" "name"
  182              | "operator" '?' "as"
  183              | "operator" '?' "as" "name"
  184              | "bool"
  185              | "string"
  186              | "int"
  187              | "int2"
  188              | "int3"
  189              | "int4"
  190              | "uint"
  191              | "uint2"
  192              | "uint3"
  193              | "uint4"
  194              | "float"
  195              | "float2"
  196              | "float3"
  197              | "float4"
  198              | "range"
  199              | "urange"
  200              | "range64"
  201              | "urange64"
  202              | "int64"
  203              | "uint64"
  204              | "double"
  205              | "int8"
  206              | "uint8"
  207              | "int16"
  208              | "uint16"

  209 global_function_declaration: optional_annotation_list "def" function_declaration

  210 optional_public_or_private_function: %empty
  211                                    | "private"
  212                                    | "public"

  213 function_declaration_header: function_name optional_function_argument_list optional_function_type

  214 $@6: %empty

  215 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block

  216 expression_block: '{' expressions '}'
  217                 | '{' expressions '}' "finally" '{' expressions '}'

  218 expr_call_pipe: expr expr_full_block_assumed_piped
  219               | expression_keyword expr_full_block_assumed_piped

  220 expression_any: ';'
  221               | expr_pipe
  222               | expr_keyword
  223               | expr_assign_pipe
  224               | expr_assign ';'
  225               | expression_delete ';'
  226               | expression_let
  227               | expression_while_loop
  228               | expression_unsafe
  229               | expression_with
  230               | expression_with_alias
  231               | expression_for_loop
  232               | expression_break ';'
  233               | expression_continue ';'
  234               | expression_return
  235               | expression_yield
  236               | expression_if_then_else
  237               | expression_try_catch
  238               | expression_label ';'
  239               | expression_goto ';'
  240               | "pass" ';'

  241 expressions: %empty
  242            | expressions expression_any
  243            | expressions error

  244 expr_keyword: "keyword" expr expression_block

  245 optional_expr_list: %empty
  246                   | expr_list

  247 optional_expr_list_in_braces: %empty
  248                             | '(' optional_expr_list ')'

  249 type_declaration_no_options_list: type_declaration
  250                                 | type_declaration_no_options_list ';' type_declaration

  251 $@7: %empty

  252 $@8: %empty

  253 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 expr

  254 $@9: %empty

  255 $@10: %empty

  256 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

  257 expr_pipe: expr_assign " <|" expr_block
  258          | "@ <|" expr_block
  259          | "@@ <|" expr_block
  260          | "$ <|" expr_block
  261          | expr_call_pipe

  262 name_in_namespace: "name"
  263                  | "name" "::" "name"
  264                  | "::" "name"

  265 expression_delete: "delete" expr
  266                  | "delete" "explicit" expr

  267 $@11: %empty

  268 $@12: %empty

  269 new_type_declaration: '<' $@11 type_declaration '>' $@12
  270                     | structure_type_declaration

  271 expr_new: "new" new_type_declaration
  272         | "new" new_type_declaration '(' ')'
  273         | "new" new_type_declaration '(' expr_list ')'
  274         | "new" new_type_declaration '(' make_struct_dim ')'
  275         | "new" make_decl

  276 expression_break: "break"

  277 expression_continue: "continue"

  278 expression_return_no_pipe: "return"
  279                          | "return" expr_list
  280                          | "return" "<-" expr_list

  281 expression_return: expression_return_no_pipe ';'
  282                  | "return" expr_pipe
  283                  | "return" "<-" expr_pipe

  284 expression_yield_no_pipe: "yield" expr
  285                         | "yield" "<-" expr

  286 expression_yield: expression_yield_no_pipe ';'
  287                 | "yield" expr_pipe
  288                 | "yield" "<-" expr_pipe

  289 expression_try_catch: "try" expression_block "recover" expression_block

  290 kwd_let: "let"
  291        | "var"

  292 optional_in_scope: "inscope"
  293                  | %empty

  294 tuple_expansion: "name"
  295                | tuple_expansion ',' "name"

  296 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  297                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr ';'

  298 expression_let: kwd_let optional_in_scope let_variable_declaration
  299               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  300 $@13: %empty

  301 $@14: %empty

  302 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr

  303 $@15: %empty

  304 $@16: %empty

  305 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr

  306 $@17: %empty

  307 $@18: %empty

  308 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr

  309 $@19: %empty

  310 $@20: %empty

  311 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20

  312 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  313               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  314               | "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

  315 expr_list: expr
  316          | expr_list ',' expr

  317 block_or_simple_block: expression_block
  318                      | "=>" expr
  319                      | "=>" "<-" expr

  320 block_or_lambda: '$'
  321                | '@'
  322                | '@' '@'

  323 capture_entry: '&' "name"
  324              | '=' "name"
  325              | "<-" "name"
  326              | ":=" "name"

  327 capture_list: capture_entry
  328             | capture_list ',' capture_entry

  329 optional_capture_list: %empty
  330                      | "[[" capture_list ']' ']'

  331 expr_block: expression_block
  332           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  333 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  334 $@21: %empty

  335 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

  336 expr_numeric_const: "integer constant"
  337                   | "unsigned integer constant"
  338                   | "long integer constant"
  339                   | "unsigned long integer constant"
  340                   | "unsigned int8 constant"
  341                   | "floating point constant"
  342                   | "double constant"

  343 expr_assign: expr
  344            | expr '=' expr
  345            | expr "<-" expr
  346            | expr ":=" expr
  347            | expr "&=" expr
  348            | expr "|=" expr
  349            | expr "^=" expr
  350            | expr "&&=" expr
  351            | expr "||=" expr
  352            | expr "^^=" expr
  353            | expr "+=" expr
  354            | expr "-=" expr
  355            | expr "*=" expr
  356            | expr "/=" expr
  357            | expr "%=" expr
  358            | expr "<<=" expr
  359            | expr ">>=" expr
  360            | expr "<<<=" expr
  361            | expr ">>>=" expr

  362 expr_assign_pipe: expr '=' "@ <|" expr_block
  363                 | expr '=' "@@ <|" expr_block
  364                 | expr '=' "$ <|" expr_block
  365                 | expr "<-" "@ <|" expr_block
  366                 | expr "<-" "@@ <|" expr_block
  367                 | expr "<-" "$ <|" expr_block
  368                 | expr '=' expr_call_pipe
  369                 | expr "<-" expr_call_pipe

  370 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  371                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  372 expr_method_call: expr "->" "name" '(' ')'
  373                 | expr "->" "name" '(' expr_list ')'

  374 func_addr_name: name_in_namespace
  375               | "$i" '(' expr ')'

  376 func_addr_expr: '@' '@' func_addr_name

  377 $@22: %empty

  378 $@23: %empty

  379 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name

  380 $@24: %empty

  381 $@25: %empty

  382 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name

  383 expr_field: expr '.' "name"
  384           | expr '.' '.' "name"
  385           | expr '.' "name" '(' ')'
  386           | expr '.' "name" '(' expr_list ')'

  387 $@26: %empty

  388 $@27: %empty

  389 expr_field: expr '.' $@26 error $@27

  390 expr_call: name_in_namespace '(' ')'
  391          | name_in_namespace '(' make_struct_dim ')'
  392          | name_in_namespace '(' expr_list ')'
  393          | basic_type_declaration '(' ')'
  394          | basic_type_declaration '(' expr_list ')'

  395 expr: "null"
  396     | name_in_namespace
  397     | expr_numeric_const
  398     | expr_reader
  399     | string_builder
  400     | make_decl
  401     | "true"
  402     | "false"
  403     | expr_field
  404     | expr_mtag
  405     | '!' expr
  406     | '~' expr
  407     | '+' expr
  408     | '-' expr
  409     | expr "<<" expr
  410     | expr ">>" expr
  411     | expr "<<<" expr
  412     | expr ">>>" expr
  413     | expr '+' expr
  414     | expr '-' expr
  415     | expr '*' expr
  416     | expr '/' expr
  417     | expr '%' expr
  418     | expr '<' expr
  419     | expr '>' expr
  420     | expr "==" expr
  421     | expr "!=" expr
  422     | expr "<=" expr
  423     | expr ">=" expr
  424     | expr '&' expr
  425     | expr '|' expr
  426     | expr '^' expr
  427     | expr "&&" expr
  428     | expr "||" expr
  429     | expr "^^" expr
  430     | expr ".." expr
  431     | "++" expr
  432     | "--" expr
  433     | expr "++"
  434     | expr "--"
  435     | '(' expr_list optional_comma ')'
  436     | expr '[' expr ']'
  437     | expr '.' '[' expr ']'
  438     | expr "?[" expr ']'
  439     | expr '.' "?[" expr ']'
  440     | expr "?." "name"
  441     | expr '.' "?." "name"
  442     | func_addr_expr
  443     | expr_call
  444     | '*' expr
  445     | "deref" '(' expr ')'
  446     | "addr" '(' expr ')'
  447     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  448     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  449     | expr "??" expr
  450     | expr '?' expr ':' expr

  451 $@28: %empty

  452 $@29: %empty

  453 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr "is" basic_type_declaration
  455     | expr "is" "name"
  456     | expr "as" "name"

  457 $@30: %empty

  458 $@31: %empty

  459 expr: expr "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr "as" basic_type_declaration
  461     | expr '?' "as" "name"

  462 $@32: %empty

  463 $@33: %empty

  464 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr '?' "as" basic_type_declaration
  466     | expr_type_info
  467     | expr_type_decl
  468     | expr_cast
  469     | expr_new
  470     | expr_method_call
  471     | expr_named_call
  472     | expr_full_block
  473     | expr "<|" expr
  474     | expr "|>" expr
  475     | expr "|>" basic_type_declaration
  476     | name_in_namespace "name"
  477     | "unsafe" '(' expr ')'
  478     | expression_keyword

  479 expr_mtag: "$$" '(' expr ')'
  480          | "$i" '(' expr ')'
  481          | "$v" '(' expr ')'
  482          | "$b" '(' expr ')'
  483          | "$a" '(' expr ')'
  484          | "..."
  485          | "$c" '(' expr ')' '(' ')'
  486          | "$c" '(' expr ')' '(' expr_list ')'
  487          | expr '.' "$f" '(' expr ')'
  488          | expr "?." "$f" '(' expr ')'
  489          | expr '.' '.' "$f" '(' expr ')'
  490          | expr '.' "?." "$f" '(' expr ')'
  491          | expr "as" "$f" '(' expr ')'
  492          | expr '?' "as" "$f" '(' expr ')'
  493          | expr "is" "$f" '(' expr ')'
  494          | '@' '@' "$c" '(' expr ')'

  495 optional_field_annotation: %empty
  496                          | "[[" annotation_argument_list ']' ']'

  497 optional_override: %empty
  498                  | "override"
  499                  | "sealed"

  500 optional_constant: %empty
  501                  | "const"

  502 optional_public_or_private_member_variable: %empty
  503                                           | "public"
  504                                           | "private"

  505 optional_static_member_variable: %empty
  506                                | "static"

  507 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  508 struct_variable_declaration_list: %empty

  509 $@34: %empty

  510 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration ';'

  511 $@35: %empty

  512 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header ';'

  513 $@36: %empty

  514 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block
  515                                 | struct_variable_declaration_list '[' annotation_list ']' ';'

  516 function_argument_declaration: optional_field_annotation variable_declaration
  517                              | optional_field_annotation "var" variable_declaration
  518                              | "$a" '(' expr ')'

  519 function_argument_list: function_argument_declaration
  520                       | function_argument_list ';' function_argument_declaration

  521 tuple_type: type_declaration
  522           | "name" ':' type_declaration

  523 tuple_type_list: tuple_type
  524                | tuple_type_list ';' tuple_type

  525 tuple_alias_type_list: %empty
  526                      | tuple_alias_type_list ';'
  527                      | tuple_alias_type_list tuple_type ';'

  528 variant_type: "name" ':' type_declaration

  529 variant_type_list: variant_type
  530                  | variant_type_list ';' variant_type

  531 variant_alias_type_list: %empty
  532                        | variant_alias_type_list ';'
  533                        | variant_alias_type_list variant_type ';'

  534 copy_or_move: '='
  535             | "<-"

  536 variable_declaration: variable_name_with_pos_list
  537                     | variable_name_with_pos_list '&'
  538                     | variable_name_with_pos_list ':' type_declaration
  539                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  540                     | variable_name_with_pos_list copy_or_move expr
  541                     | variable_name_with_pos_list copy_or_move expr_pipe

  542 copy_or_move_or_clone: '='
  543                      | "<-"
  544                      | ":="

  545 optional_ref: %empty
  546             | '&'

  547 let_variable_name_with_pos_list: "name"
  548                                | "$i" '(' expr ')'
  549                                | "name" "aka" "name"
  550                                | let_variable_name_with_pos_list ',' "name"
  551                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  552 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options ';'
  553                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  554                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  555                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';'
  556                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  557 global_variable_declaration_list: %empty

  558 $@37: %empty

  559 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation let_variable_declaration

  560 optional_shared: %empty
  561                | "shared"

  562 optional_public_or_private_variable: %empty
  563                                    | "private"
  564                                    | "public"

  565 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'

  566 $@38: %empty

  567 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

  568 enum_list: %empty
  569          | enum_list ';'
  570          | enum_list "name" ';'
  571          | enum_list "name" '=' expr ';'

  572 optional_public_or_private_alias: %empty
  573                                 | "private"
  574                                 | "public"

  575 $@39: %empty

  576 single_alias: optional_public_or_private_alias "name" $@39 '=' type_declaration

  577 alias_list: single_alias ';'
  578           | alias_list single_alias ';'

  579 alias_declaration: "typedef" '{' alias_list '}'

  580 $@40: %empty

  581 alias_declaration: "typedef" $@40 single_alias ';'

  582 optional_public_or_private_enum: %empty
  583                                | "private"
  584                                | "public"

  585 enum_name: "name"

  586 $@41: %empty

  587 $@42: %empty

  588 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@41 enum_list $@42 '}'

  589 $@43: %empty

  590 $@44: %empty

  591 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@43 enum_list $@44 '}'

  592 optional_structure_parent: %empty
  593                          | ':' name_in_namespace

  594 optional_sealed: %empty
  595                | "sealed"

  596 structure_name: optional_sealed "name" optional_structure_parent

  597 class_or_struct: "class"
  598                | "struct"

  599 optional_public_or_private_structure: %empty
  600                                     | "private"
  601                                     | "public"

  602 optional_struct_variable_declaration_list: %empty
  603                                          | '{' struct_variable_declaration_list '}'

  604 $@45: %empty

  605 $@46: %empty

  606 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

  607 variable_name_with_pos_list: "name"
  608                            | "$i" '(' expr ')'
  609                            | "name" "aka" "name"
  610                            | variable_name_with_pos_list ',' "name"
  611                            | variable_name_with_pos_list ',' "name" "aka" "name"

  612 basic_type_declaration: "bool"
  613                       | "string"
  614                       | "int"
  615                       | "int8"
  616                       | "int16"
  617                       | "int64"
  618                       | "int2"
  619                       | "int3"
  620                       | "int4"
  621                       | "uint"
  622                       | "uint8"
  623                       | "uint16"
  624                       | "uint64"
  625                       | "uint2"
  626                       | "uint3"
  627                       | "uint4"
  628                       | "float"
  629                       | "float2"
  630                       | "float3"
  631                       | "float4"
  632                       | "void"
  633                       | "range"
  634                       | "urange"
  635                       | "range64"
  636                       | "urange64"
  637                       | "double"
  638                       | "bitfield"

  639 enum_basic_type_declaration: "int"
  640                            | "int8"
  641                            | "int16"
  642                            | "uint"
  643                            | "uint8"
  644                            | "uint16"

  645 structure_type_declaration: name_in_namespace

  646 auto_type_declaration: "auto"
  647                      | "auto" '(' "name" ')'
  648                      | "$t" '(' expr ')'

  649 bitfield_bits: "name"
  650              | bitfield_bits ';' "name"

  651 bitfield_alias_bits: %empty
  652                    | bitfield_alias_bits ';'
  653                    | bitfield_alias_bits "name" ';'

  654 $@47: %empty

  655 $@48: %empty

  656 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' $@48

  657 table_type_pair: type_declaration
  658                | type_declaration ';' type_declaration

  659 dim_list: '[' expr ']'
  660         | dim_list '[' expr ']'

  661 type_declaration_no_options: basic_type_declaration
  662                            | auto_type_declaration
  663                            | bitfield_type_declaration
  664                            | structure_type_declaration
  665                            | type_declaration_no_options dim_list
  666                            | type_declaration_no_options '[' ']'

  667 $@49: %empty

  668 $@50: %empty

  669 type_declaration_no_options: "type" '<' $@49 type_declaration '>' $@50
  670                            | "typedecl" '(' expr ')'
  671                            | '$' name_in_namespace '(' optional_expr_list ')'

  672 $@51: %empty

  673 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  674                            | type_declaration_no_options '-' '[' ']'
  675                            | type_declaration_no_options "explicit"
  676                            | type_declaration_no_options "const"
  677                            | type_declaration_no_options '-' "const"
  678                            | type_declaration_no_options '&'
  679                            | type_declaration_no_options '-' '&'
  680                            | type_declaration_no_options '#'
  681                            | type_declaration_no_options "implicit"
  682                            | type_declaration_no_options '-' '#'
  683                            | type_declaration_no_options "==" "const"
  684                            | type_declaration_no_options "==" '&'
  685                            | type_declaration_no_options '?'

  686 $@52: %empty

  687 $@53: %empty

  688 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' $@53
  689                            | type_declaration_no_options "??"

  690 $@54: %empty

  691 $@55: %empty

  692 type_declaration_no_options: "array" '<' $@54 type_declaration '>' $@55

  693 $@56: %empty

  694 $@57: %empty

  695 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' $@57

  696 $@58: %empty

  697 $@59: %empty

  698 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' $@59
  699                            | "block"

  700 $@60: %empty

  701 $@61: %empty

  702 type_declaration_no_options: "block" '<' $@60 type_declaration '>' $@61

  703 $@62: %empty

  704 $@63: %empty

  705 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' $@63
  706                            | "function"

  707 $@64: %empty

  708 $@65: %empty

  709 type_declaration_no_options: "function" '<' $@64 type_declaration '>' $@65

  710 $@66: %empty

  711 $@67: %empty

  712 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' $@67
  713                            | "lambda"

  714 $@68: %empty

  715 $@69: %empty

  716 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' $@69

  717 $@70: %empty

  718 $@71: %empty

  719 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' $@71

  720 $@72: %empty

  721 $@73: %empty

  722 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' $@73

  723 $@74: %empty

  724 $@75: %empty

  725 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' $@75

  726 type_declaration: type_declaration_no_options
  727                 | type_declaration '|' type_declaration_no_options
  728                 | type_declaration '|' '#'

  729 $@76: %empty

  730 $@77: %empty

  731 $@78: %empty

  732 $@79: %empty

  733 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 '{' $@78 tuple_alias_type_list $@79 '}'

  734 $@80: %empty

  735 $@81: %empty

  736 $@82: %empty

  737 $@83: %empty

  738 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 '{' $@82 variant_alias_type_list $@83 '}'

  739 $@84: %empty

  740 $@85: %empty

  741 $@86: %empty

  742 $@87: %empty

  743 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 '{' $@86 bitfield_alias_bits $@87 '}'

  744 make_decl: make_struct_decl
  745          | make_dim_decl
  746          | make_table_decl
  747          | array_comprehension
  748          | make_tuple_call

  749 make_struct_fields: "name" copy_or_move expr
  750                   | "name" ":=" expr
  751                   | make_struct_fields ',' "name" copy_or_move expr
  752                   | make_struct_fields ',' "name" ":=" expr
  753                   | "$f" '(' expr ')' copy_or_move expr
  754                   | "$f" '(' expr ')' ":=" expr
  755                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  756                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  757 make_struct_dim: make_struct_fields
  758                | make_struct_dim ';' make_struct_fields

  759 optional_block: %empty
  760               | "where" expr_block

  761 optional_trailing_semicolon_cur_cur: '}' '}'
  762                                    | ";}}"

  763 optional_trailing_semicolon_cur_sqr: '}' ']'
  764                                    | ";}]"

  765 optional_trailing_semicolon_sqr_sqr: ']' ']'
  766                                    | ";]]"

  767 optional_trailing_delim_sqr_sqr: ']' ']'
  768                                | ";]]"
  769                                | ",]]"

  770 optional_trailing_delim_cur_sqr: '}' ']'
  771                                | ";}]"
  772                                | ",}]"

  773 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  774                 | "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  775                 | "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  776                 | "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  777                 | "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  778                 | "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

  779 $@88: %empty

  780 $@89: %empty

  781 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' make_struct_dim ')'

  782 $@90: %empty

  783 $@91: %empty

  784 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' make_struct_dim ')'

  785 $@92: %empty

  786 $@93: %empty

  787 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim ')'

  788 $@94: %empty

  789 $@95: %empty

  790 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' $@95

  791 make_tuple: expr
  792           | expr "=>" expr
  793           | make_tuple ',' expr

  794 make_map_tuple: expr "=>" expr
  795               | expr

  796 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  797 $@96: %empty

  798 $@97: %empty

  799 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' make_struct_dim ')'

  800 make_dim: make_tuple
  801         | make_dim ';' make_tuple

  802 make_dim_decl: '[' expr_list optional_comma ']'
  803              | "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  804              | "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  805              | "array" '(' expr_list optional_comma ')'

  806 $@98: %empty

  807 $@99: %empty

  808 make_dim_decl: "array" '<' $@98 type_declaration_no_options '>' $@99 '(' expr_list optional_comma ')'
  809              | "fixed_array" '(' expr_list optional_comma ')'

  810 $@100: %empty

  811 $@101: %empty

  812 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options '>' $@101 '(' expr_list optional_comma ')'

  813 make_table: make_map_tuple
  814           | make_table ';' make_map_tuple

  815 expr_map_tuple_list: make_map_tuple
  816                    | expr_map_tuple_list ',' make_map_tuple

  817 make_table_decl: '{' expr_map_tuple_list optional_comma '}'
  818                | "{{" make_table optional_trailing_semicolon_cur_cur
  819                | "table" '(' expr_map_tuple_list optional_comma ')'
  820                | "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  821                | "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

  822 array_comprehension_where: %empty
  823                          | ';' "where" expr

  824 optional_comma: %empty
  825               | ','

  826 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'
  827                    | "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'
  828                    | "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'
  829                    | '{' "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}'
  830                    | "{{" "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}' '}'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 109 125 405
    '#' (35) 680 682 728
    '$' (36) 20 320 671 673
    '%' (37) 35 42 145 417
    '&' (38) 153 323 424 537 546 678 679 684
    '(' (40) 100 107 113 120 121 248 272 273 274 312 313 314 370 371 372 373 375 385 386 390 391 392 393 394 435 445 446 447 448 477 479 480 481 482 483 485 486 487 488 489 490 491 492 493 494 518 548 608 647 648 670 671 673 753 754 755 756 775 776 778 781 784 787 796 799 805 808 809 812 819 820 821
    ')' (41) 100 107 113 120 121 248 272 273 274 312 313 314 370 371 372 373 375 385 386 390 391 392 393 394 435 445 446 447 448 477 479 480 481 482 483 485 486 487 488 489 490 491 492 493 494 518 548 608 647 648 670 671 673 753 754 755 756 775 776 778 781 784 787 796 799 805 808 809 812 819 820 821
    '*' (42) 143 415 444
    '+' (43) 141 407 413
    ',' (44) 51 89 102 116 295 316 328 371 550 551 610 611 751 752 755 756 793 816 825
    '-' (45) 142 408 414 674 677 679 682
    '.' (46) 43 170 172 173 383 384 385 386 389 437 439 441 487 489 490
    '/' (47) 44 144 416
    ':' (58) 53 54 123 296 450 522 528 538 539 552 553 554 591 593
    ';' (59) 15 16 74 220 224 225 232 233 238 239 240 250 281 286 296 297 314 510 512 515 520 524 526 527 530 532 533 552 553 555 569 570 571 577 578 581 650 652 653 658 758 801 814 821 823 826 827 828 829 830
    '<' (60) 146 253 256 269 302 305 308 311 313 314 379 382 418 447 448 453 459 464 656 669 673 688 692 695 698 702 705 709 712 716 719 722 725 781 784 787 790 799 808 812 820 821
    '=' (61) 81 93 94 95 96 97 98 100 324 344 362 363 364 368 534 542 571 576
    '>' (62) 147 253 256 269 302 305 308 311 313 314 379 382 419 447 448 453 459 464 656 669 673 688 692 695 698 702 705 709 712 716 719 722 725 781 784 787 790 799 808 812 820 821
    '?' (63) 182 183 450 461 464 465 492 685
    '@' (64) 321 322 376 379 382 494
    '[' (91) 118 168 370 371 436 437 515 659 660 666 674 802 826
    ']' (93) 118 168 169 296 297 330 370 371 436 437 438 439 496 515 659 660 666 674 763 765 767 770 802 826 827 828
    '^' (94) 155 426
    '{' (123) 216 217 565 579 588 591 603 733 738 743 817 829
    '|' (124) 154 425 727 728
    '}' (125) 216 217 565 579 588 591 603 733 738 743 761 763 770 817 828 829 830
    '~' (126) 126 406
    error (256) 243 389
    "lexer error" (258)
    "struct" (259) 598 781
    "class" (260) 597 784
    "let" (261) 290
    "def" (262) 209 512 514
    "while" (263) 78
    "if" (264) 62 74
    "static_if" (265) 63
    "else" (266) 60 66
    "for" (267) 76 826 827 828 829 830
    "recover" (268) 289
    "true" (269) 86 97 401
    "false" (270) 87 98 402
    "new" (271) 271 272 273 274 275
    "typeinfo" (272) 312 313 314
    "type" (273) 91 311 453 459 464 669
    "in" (274) 76 92 826 827 828 829 830
    "is" (275) 178 180 453 454 455 493
    "as" (276) 46 179 181 182 183 456 459 460 461 464 465 491 492
    "elif" (277) 57
    "static_elif" (278) 58
    "array" (279) 692 805 808
    "return" (280) 278 279 280 282 283
    "null" (281) 395
    "break" (282) 276
    "try" (283) 289
    "options" (284) 36
    "table" (285) 695 819 820 821
    "expect" (286) 49
    "const" (287) 501 676 677 683
    "require" (288) 37 104
    "operator" (289) 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183
    "enum" (290) 588 591
    "finally" (291) 217
    "delete" (292) 176 265 266
    "deref" (293) 445
    "typedef" (294) 579 581
    "typedecl" (295) 670
    "with" (296) 79
    "aka" (297) 549 551 609 611
    "assume" (298) 81
    "cast" (299) 302
    "override" (300) 498
    "abstract" (301) 512
    "upcast" (302) 305
    "iterator" (303) 698
    "var" (304) 291 517
    "addr" (305) 446
    "continue" (306) 277
    "where" (307) 760 823
    "pass" (308) 240
    "reinterpret" (309) 308
    "module" (310) 22
    "public" (311) 18 48 212 503 564 574 584 601
    "label" (312) 54 55
    "goto" (313) 55 56
    "implicit" (314) 681
    "explicit" (315) 266 675
    "shared" (316) 561
    "private" (317) 19 105 211 504 563 573 583 600
    "smart_ptr" (318) 688
    "unsafe" (319) 77 477
    "inscope" (320) 292
    "static" (321) 506
    "fixed_array" (322) 809 812
    "default" (323) 790
    "bool" (324) 184 612
    "void" (325) 632
    "string" (326) 185 613
    "auto" (327) 646 647
    "int" (328) 186 614 639
    "int2" (329) 187 618
    "int3" (330) 188 619
    "int4" (331) 189 620
    "uint" (332) 190 621 642
    "bitfield" (333) 638 656 743
    "uint2" (334) 191 625
    "uint3" (335) 192 626
    "uint4" (336) 193 627
    "float" (337) 194 628
    "float2" (338) 195 629
    "float3" (339) 196 630
    "float4" (340) 197 631
    "range" (341) 198 633
    "urange" (342) 199 634
    "range64" (343) 200 635
    "urange64" (344) 201 636
    "block" (345) 699 702 705
    "int64" (346) 202 617
    "uint64" (347) 203 624
    "double" (348) 204 637
    "function" (349) 706 709 712
    "lambda" (350) 713 716 719
    "int8" (351) 205 615 640
    "uint8" (352) 206 622 643
    "int16" (353) 207 616 641
    "uint16" (354) 208 623 644
    "tuple" (355) 722 733 796 799
    "variant" (356) 725 738 787
    "generator" (357) 447 448
    "yield" (358) 284 285 287 288
    "sealed" (359) 499 595
    "+=" (360) 127 353
    "-=" (361) 128 354
    "/=" (362) 130 356
    "*=" (363) 129 355
    "%=" (364) 131 357
    "&=" (365) 132 347
    "|=" (366) 133 348
    "^=" (367) 134 349
    "<<" (368) 160 409
    ">>" (369) 161 410
    "++" (370) 156 158 431 433
    "--" (371) 157 159 432 434
    "<=" (372) 151 422
    "<<=" (373) 162 358
    ">>=" (374) 163 359
    ">=" (375) 152 423
    "==" (376) 149 420 683 684
    "!=" (377) 150 421
    "->" (378) 372 373
    "<-" (379) 280 283 285 288 319 325 345 365 366 367 369 535 543
    "??" (380) 177 449 689
    "?." (381) 171 174 440 441 488 490
    "?[" (382) 169 438 439
    "<|" (383) 473
    " <|" (384) 257
    "$ <|" (385) 260 364 367
    "@ <|" (386) 258 362 365
    "@@ <|" (387) 259 363 366
    "|>" (388) 114 474 475
    ":=" (389) 173 175 326 346 544 750 752 754 756
    "<<<" (390) 164 411
    ">>>" (391) 165 412
    "<<<=" (392) 166 360
    ">>>=" (393) 167 361
    "=>" (394) 318 319 792 794
    "::" (395) 263 264
    "&&" (396) 110 138 427
    "||" (397) 111 139 428
    "^^" (398) 112 140 429
    "&&=" (399) 135 350
    "||=" (400) 136 351
    "^^=" (401) 137 352
    ".." (402) 148 430
    "$$" (403) 479
    "$i" (404) 375 480 548 608
    "$v" (405) 481
    "$b" (406) 482
    "$a" (407) 483 518
    "$t" (408) 648
    "$c" (409) 485 486 494
    "$f" (410) 487 488 489 490 491 492 493 753 754 755 756
    "..." (411) 484
    "[[" (412) 296 297 330 496 773 774 775 776 803 827
    "[{" (413) 777 778 804 828
    "{{" (414) 818 830
    "integer constant" <i> (415) 52 53 54 55 84 95 336
    "long integer constant" <i64> (416) 338
    "unsigned integer constant" <ui> (417) 337
    "unsigned long integer constant" <ui64> (418) 339
    "unsigned int8 constant" <ui> (419) 340
    "floating point constant" <fd> (420) 85 96 341
    "double constant" <d> (421) 342
    "name" <s> (422) 21 38 46 81 83 90 94 124 172 173 174 180 181 183 262 263 264 294 295 313 314 323 324 325 326 372 373 383 384 385 386 440 441 455 456 461 476 522 528 547 549 550 551 570 571 576 585 596 607 609 610 611 647 649 650 653 733 738 743 749 750 751 752
    "keyword" <s> (423) 39 244 253
    "type function" <s> (424) 40 256
    "start of the string" (425) 27 31
    STRING_CHARACTER <ch> (426) 23 25 32 33
    STRING_CHARACTER_ESC (427) 24 26
    "end of the string" (428) 27 31
    "{" (429) 30
    "}" (430) 30
    "end of failed eader macro" (431)
    ";}}" (432) 762
    ";}]" (433) 764 771
    ";]]" (434) 766 768
    ",]]" (435) 769
    ",}]" (436) 772
    UNARY_MINUS (437)
    UNARY_PLUS (438)
    PRE_INC (439)
    PRE_DEC (440)
    POST_INC (441)
    POST_DEC (442)
    DEREF (443)


Nonterminals, with rules where they appear

    $accept (216)
        on left: 0
    program (217)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (218)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (219)
        on left: 17 18 19
        on right: 22
    module_name <s> (220)
        on left: 20 21
        on right: 22
    module_declaration (221)
        on left: 22
        on right: 2
    character_sequence <s> (222)
        on left: 23 24 25 26
        on right: 25 26 27 29
    string_constant <s> (223)
        on left: 27
        on right: 82 93
    string_builder_body <pExpression> (224)
        on left: 28 29 30
        on right: 29 30 31
    string_builder <pExpression> (225)
        on left: 31
        on right: 399
    reader_character_sequence (226)
        on left: 32 33
        on right: 33 35
    expr_reader <pExpression> (227)
        on left: 35
        on right: 16 398
    $@1 (228)
        on left: 34
        on right: 35
    options_declaration (229)
        on left: 36
        on right: 9
    require_declaration (230)
        on left: 37
        on right: 8
    keyword_or_name <s> (231)
        on left: 38 39 40
        on right: 41 43 44
    require_module_name <s> (232)
        on left: 41 42 43 44
        on right: 42 43 44 45 46
    require_module (233)
        on left: 45 46
        on right: 37
    is_public_module <b> (234)
        on left: 47 48
        on right: 45 46
    expect_declaration (235)
        on left: 49
        on right: 7
    expect_list (236)
        on left: 50 51
        on right: 49 51
    expect_error (237)
        on left: 52 53
        on right: 50 51
    expression_label <pExpression> (238)
        on left: 54
        on right: 238
    expression_goto <pExpression> (239)
        on left: 55 56
        on right: 239
    elif_or_static_elif <b> (240)
        on left: 57 58
        on right: 61
    expression_else <pExpression> (241)
        on left: 59 60 61
        on right: 61 72
    if_or_static_if <b> (242)
        on left: 62 63
        on right: 72
    expression_else_one_liner <pExpression> (243)
        on left: 64 66
        on right: 74
    $@2 (244)
        on left: 65
        on right: 66
    expression_if_one_liner <pExpression> (245)
        on left: 67 68 69 70 71
        on right: 66 74
    expression_if_then_else <pExpression> (246)
        on left: 72 74
        on right: 236
    $@3 (247)
        on left: 73
        on right: 74
    expression_for_loop <pExpression> (248)
        on left: 76
        on right: 231
    $@4 (249)
        on left: 75
        on right: 76
    expression_unsafe <pExpression> (250)
        on left: 77
        on right: 228
    expression_while_loop <pExpression> (251)
        on left: 78
        on right: 227
    expression_with <pExpression> (252)
        on left: 79
        on right: 229
    expression_with_alias <pExpression> (253)
        on left: 81
        on right: 230
    $@5 (254)
        on left: 80
        on right: 81
    annotation_argument_value <aa> (255)
        on left: 82 83 84 85 86 87
        on right: 88 89
    annotation_argument_value_list <aaList> (256)
        on left: 88 89
        on right: 89 100
    annotation_argument_name <s> (257)
        on left: 90 91 92
        on right: 93 94 95 96 97 98 99 100
    annotation_argument <aa> (258)
        on left: 93 94 95 96 97 98 99 100
        on right: 101 102
    annotation_argument_list <aaList> (259)
        on left: 101 102
        on right: 36 102 107 496
    annotation_declaration_name <s> (260)
        on left: 103 104 105
        on right: 106 107
    annotation_declaration_basic <fa> (261)
        on left: 106 107
        on right: 108
    annotation_declaration <fa> (262)
        on left: 108 109 110 111 112 113 114
        on right: 109 110 111 112 113 114 115 116
    annotation_list <faList> (263)
        on left: 115 116
        on right: 116 118 515
    optional_annotation_list <faList> (264)
        on left: 117 118
        on right: 209 332 333 335 512 514 588 591 606
    optional_function_argument_list <pVarDeclList> (265)
        on left: 119 120 121
        on right: 213 332 333 335 382 705 712 719
    optional_function_type <pTypeDecl> (266)
        on left: 122 123
        on right: 213 332 333 335 382 705 712 719
    function_name <s> (267)
        on left: 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208
        on right: 213
    global_function_declaration (268)
        on left: 209
        on right: 6
    optional_public_or_private_function <b> (269)
        on left: 210 211 212
        on right: 215
    function_declaration_header <pFuncDecl> (270)
        on left: 213
        on right: 215 512 514
    function_declaration <pFuncDecl> (271)
        on left: 215
        on right: 209
    $@6 (272)
        on left: 214
        on right: 215
    expression_block <pExpression> (273)
        on left: 216 217
        on right: 60 61 72 76 77 78 79 215 244 289 317 331 335 514
    expr_call_pipe <pExpression> (274)
        on left: 218 219
        on right: 261 368 369
    expression_any <pExpression> (275)
        on left: 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240
        on right: 242
    expressions <pExpression> (276)
        on left: 241 242 243
        on right: 216 217 242 243
    expr_keyword <pExpression> (277)
        on left: 244
        on right: 222
    optional_expr_list <pExpression> (278)
        on left: 245 246
        on right: 248 671 673
    optional_expr_list_in_braces <pExpression> (279)
        on left: 247 248
        on right: 256
    type_declaration_no_options_list <pTypeDeclList> (280)
        on left: 249 250
        on right: 250 253 256 673
    expression_keyword <pExpression> (281)
        on left: 253 256
        on right: 219 478
    $@7 (282)
        on left: 251
        on right: 253
    $@8 (283)
        on left: 252
        on right: 253
    $@9 (284)
        on left: 254
        on right: 256
    $@10 (285)
        on left: 255
        on right: 256
    expr_pipe <pExpression> (286)
        on left: 257 258 259 260 261
        on right: 221 282 283 287 288 541 554 556
    name_in_namespace <s> (287)
        on left: 262 263 264
        on right: 35 103 312 313 314 370 371 374 390 391 392 396 476 593 645 671 673
    expression_delete <pExpression> (288)
        on left: 265 266
        on right: 225
    new_type_declaration <pTypeDecl> (289)
        on left: 269 270
        on right: 271 272 273 274
    $@11 (290)
        on left: 267
        on right: 269
    $@12 (291)
        on left: 268
        on right: 269
    expr_new <pExpression> (292)
        on left: 271 272 273 274 275
        on right: 469
    expression_break <pExpression> (293)
        on left: 276
        on right: 70 232
    expression_continue <pExpression> (294)
        on left: 277
        on right: 71 233
    expression_return_no_pipe <pExpression> (295)
        on left: 278 279 280
        on right: 68 281
    expression_return <pExpression> (296)
        on left: 281 282 283
        on right: 234
    expression_yield_no_pipe <pExpression> (297)
        on left: 284 285
        on right: 69 286
    expression_yield <pExpression> (298)
        on left: 286 287 288
        on right: 235
    expression_try_catch <pExpression> (299)
        on left: 289
        on right: 237
    kwd_let <b> (300)
        on left: 290 291
        on right: 298 299 565 567
    optional_in_scope <b> (301)
        on left: 292 293
        on right: 298 299
    tuple_expansion <pNameList> (302)
        on left: 294 295
        on right: 295 296 297
    tuple_expansion_variable_declaration <pVarDecl> (303)
        on left: 296 297
        on right: 299
    expression_let <pExpression> (304)
        on left: 298 299
        on right: 226
    expr_cast <pExpression> (305)
        on left: 302 305 308
        on right: 468
    $@13 (306)
        on left: 300
        on right: 302
    $@14 (307)
        on left: 301
        on right: 302
    $@15 (308)
        on left: 303
        on right: 305
    $@16 (309)
        on left: 304
        on right: 305
    $@17 (310)
        on left: 306
        on right: 308
    $@18 (311)
        on left: 307
        on right: 308
    expr_type_decl <pExpression> (312)
        on left: 311
        on right: 467
    $@19 (313)
        on left: 309
        on right: 311
    $@20 (314)
        on left: 310
        on right: 311
    expr_type_info <pExpression> (315)
        on left: 312 313 314
        on right: 466
    expr_list <pExpression> (316)
        on left: 315 316
        on right: 76 246 273 279 280 316 371 373 386 392 394 435 486 796 802 805 808 809 812 826 827 828 829 830
    block_or_simple_block <pExpression> (317)
        on left: 317 318 319
        on right: 332 333
    block_or_lambda <i> (318)
        on left: 320 321 322
        on right: 332 333 335
    capture_entry <pCapt> (319)
        on left: 323 324 325 326
        on right: 327 328
    capture_list <pCaptList> (320)
        on left: 327 328
        on right: 328 330
    optional_capture_list <pCaptList> (321)
        on left: 329 330
        on right: 332 333 335 447 448
    expr_block <pExpression> (322)
        on left: 331 332
        on right: 257 258 259 260 362 363 364 365 366 367 760
    expr_full_block <pExpression> (323)
        on left: 333
        on right: 472
    expr_full_block_assumed_piped <pExpression> (324)
        on left: 335
        on right: 218 219
    $@21 (325)
        on left: 334
        on right: 335
    expr_numeric_const <pExpression> (326)
        on left: 336 337 338 339 340 341 342
        on right: 397
    expr_assign <pExpression> (327)
        on left: 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361
        on right: 224 257
    expr_assign_pipe <pExpression> (328)
        on left: 362 363 364 365 366 367 368 369
        on right: 223
    expr_named_call <pExpression> (329)
        on left: 370 371
        on right: 471
    expr_method_call <pExpression> (330)
        on left: 372 373
        on right: 470
    func_addr_name <pExpression> (331)
        on left: 374 375
        on right: 376 379 382
    func_addr_expr <pExpression> (332)
        on left: 376 379 382
        on right: 442
    $@22 (333)
        on left: 377
        on right: 379
    $@23 (334)
        on left: 378
        on right: 379
    $@24 (335)
        on left: 380
        on right: 382
    $@25 (336)
        on left: 381
        on right: 382
    expr_field <pExpression> (337)
        on left: 383 384 385 386 389
        on right: 403
    $@26 (338)
        on left: 387
        on right: 389
    $@27 (339)
        on left: 388
        on right: 389
    expr_call <pExpression> (340)
        on left: 390 391 392 393 394
        on right: 443
    expr <pExpression> (341)
        on left: 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 453 454 455 456 459 460 461 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478
        on right: 30 56 61 67 72 74 78 79 81 218 244 253 265 266 284 285 296 297 302 305 308 312 313 314 315 316 318 319 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 372 373 375 383 384 385 386 389 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 436 437 438 439 440 441 444 445 446 448 449 450 453 454 455 456 459 460 461 464 465 473 474 475 477 479 480 481 482 483 485 486 487 488 489 490 491 492 493 494 518 539 540 548 553 555 571 608 648 659 660 670 749 750 751 752 753 754 755 756 791 792 793 794 795 823 826 827 828
    $@28 (342)
        on left: 451
        on right: 453
    $@29 (343)
        on left: 452
        on right: 453
    $@30 (344)
        on left: 457
        on right: 459
    $@31 (345)
        on left: 458
        on right: 459
    $@32 (346)
        on left: 462
        on right: 464
    $@33 (347)
        on left: 463
        on right: 464
    expr_mtag <pExpression> (348)
        on left: 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494
        on right: 404
    optional_field_annotation <aaList> (349)
        on left: 495 496
        on right: 507 516 517 559 567
    optional_override <i> (350)
        on left: 497 498 499
        on right: 507 514
    optional_constant <b> (351)
        on left: 500 501
        on right: 512 514
    optional_public_or_private_member_variable <b> (352)
        on left: 502 503 504
        on right: 507 512 514
    optional_static_member_variable <b> (353)
        on left: 505 506
        on right: 507 514
    structure_variable_declaration <pVarDecl> (354)
        on left: 507
        on right: 510
    struct_variable_declaration_list <pVarDeclList> (355)
        on left: 508 510 512 514 515
        on right: 510 512 514 515 603
    $@34 (356)
        on left: 509
        on right: 510
    $@35 (357)
        on left: 511
        on right: 512
    $@36 (358)
        on left: 513
        on right: 514
    function_argument_declaration <pVarDecl> (359)
        on left: 516 517 518
        on right: 519 520
    function_argument_list <pVarDeclList> (360)
        on left: 519 520
        on right: 121 520
    tuple_type <pVarDecl> (361)
        on left: 521 522
        on right: 523 524 527
    tuple_type_list <pVarDeclList> (362)
        on left: 523 524
        on right: 524 722
    tuple_alias_type_list <pVarDeclList> (363)
        on left: 525 526 527
        on right: 526 527 733
    variant_type <pVarDecl> (364)
        on left: 528
        on right: 529 530 533
    variant_type_list <pVarDeclList> (365)
        on left: 529 530
        on right: 530 725
    variant_alias_type_list <pVarDeclList> (366)
        on left: 531 532 533
        on right: 532 533 738
    copy_or_move <b> (367)
        on left: 534 535
        on right: 539 540 541 749 751 753 755
    variable_declaration <pVarDecl> (368)
        on left: 536 537 538 539 540 541
        on right: 507 516 517
    copy_or_move_or_clone <i> (369)
        on left: 542 543 544
        on right: 296 297 553 554 555 556
    optional_ref <b> (370)
        on left: 545 546
        on right: 297 555 556
    let_variable_name_with_pos_list <pNameWithPosList> (371)
        on left: 547 548 549 550 551
        on right: 550 551 552 553 554 555 556
    let_variable_declaration <pVarDecl> (372)
        on left: 552 553 554 555 556
        on right: 298 559 567
    global_variable_declaration_list <pVarDeclList> (373)
        on left: 557 559
        on right: 559 565
    $@37 (374)
        on left: 558
        on right: 559
    optional_shared <b> (375)
        on left: 560 561
        on right: 22 565 567
    optional_public_or_private_variable <b> (376)
        on left: 562 563 564
        on right: 565 567
    global_let (377)
        on left: 565 567
        on right: 5
    $@38 (378)
        on left: 566
        on right: 567
    enum_list <pEnum> (379)
        on left: 568 569 570 571
        on right: 569 570 571 588 591
    optional_public_or_private_alias <b> (380)
        on left: 572 573 574
        on right: 576 733 738 743
    single_alias (381)
        on left: 576
        on right: 577 578 581
    $@39 (382)
        on left: 575
        on right: 576
    alias_list (383)
        on left: 577 578
        on right: 578 579
    alias_declaration (384)
        on left: 579 581
        on right: 10
    $@40 (385)
        on left: 580
        on right: 581
    optional_public_or_private_enum <b> (386)
        on left: 582 583 584
        on right: 588 591
    enum_name <pEnum> (387)
        on left: 585
        on right: 588 591
    enum_declaration (388)
        on left: 588 591
        on right: 4
    $@41 (389)
        on left: 586
        on right: 588
    $@42 (390)
        on left: 587
        on right: 588
    $@43 (391)
        on left: 589
        on right: 591
    $@44 (392)
        on left: 590
        on right: 591
    optional_structure_parent <s> (393)
        on left: 592 593
        on right: 596
    optional_sealed <b> (394)
        on left: 594 595
        on right: 596
    structure_name <pStructure> (395)
        on left: 596
        on right: 606
    class_or_struct <b> (396)
        on left: 597 598
        on right: 606
    optional_public_or_private_structure <b> (397)
        on left: 599 600 601
        on right: 606
    optional_struct_variable_declaration_list <pVarDeclList> (398)
        on left: 602 603
        on right: 606
    structure_declaration (399)
        on left: 606
        on right: 3
    $@45 (400)
        on left: 604
        on right: 606
    $@46 (401)
        on left: 605
        on right: 606
    variable_name_with_pos_list <pNameWithPosList> (402)
        on left: 607 608 609 610 611
        on right: 76 536 537 538 539 540 541 610 611 826 827 828 829 830
    basic_type_declaration <type> (403)
        on left: 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638
        on right: 393 394 454 460 465 475 661
    enum_basic_type_declaration <type> (404)
        on left: 639 640 641 642 643 644
        on right: 591
    structure_type_declaration <pTypeDecl> (405)
        on left: 645
        on right: 270 664
    auto_type_declaration <pTypeDecl> (406)
        on left: 646 647 648
        on right: 662
    bitfield_bits <pNameList> (407)
        on left: 649 650
        on right: 650 656
    bitfield_alias_bits <pNameList> (408)
        on left: 651 652 653
        on right: 652 653 743
    bitfield_type_declaration <pTypeDecl> (409)
        on left: 656
        on right: 663
    $@47 (410)
        on left: 654
        on right: 656
    $@48 (411)
        on left: 655
        on right: 656
    table_type_pair <aTypePair> (412)
        on left: 657 658
        on right: 695
    dim_list <pTypeDecl> (413)
        on left: 659 660
        on right: 660 665
    type_declaration_no_options <pTypeDecl> (414)
        on left: 661 662 663 664 665 666 669 670 671 673 674 675 676 677 678 679 680 681 682 683 684 685 688 689 692 695 698 699 702 705 706 709 712 713 716 719 722 725
        on right: 296 302 305 308 379 447 448 453 552 553 554 665 666 674 675 676 677 678 679 680 681 682 683 684 685 689 726 727 773 774 775 776 777 778 781 784 787 790 799 803 804 808 812 820 821
    $@49 (415)
        on left: 667
        on right: 669
    $@50 (416)
        on left: 668
        on right: 669
    $@51 (417)
        on left: 672
        on right: 673
    $@52 (418)
        on left: 686
        on right: 688
    $@53 (419)
        on left: 687
        on right: 688
    $@54 (420)
        on left: 690
        on right: 692
    $@55 (421)
        on left: 691
        on right: 692
    $@56 (422)
        on left: 693
        on right: 695
    $@57 (423)
        on left: 694
        on right: 695
    $@58 (424)
        on left: 696
        on right: 698
    $@59 (425)
        on left: 697
        on right: 698
    $@60 (426)
        on left: 700
        on right: 702
    $@61 (427)
        on left: 701
        on right: 702
    $@62 (428)
        on left: 703
        on right: 705
    $@63 (429)
        on left: 704
        on right: 705
    $@64 (430)
        on left: 707
        on right: 709
    $@65 (431)
        on left: 708
        on right: 709
    $@66 (432)
        on left: 710
        on right: 712
    $@67 (433)
        on left: 711
        on right: 712
    $@68 (434)
        on left: 714
        on right: 716
    $@69 (435)
        on left: 715
        on right: 716
    $@70 (436)
        on left: 717
        on right: 719
    $@71 (437)
        on left: 718
        on right: 719
    $@72 (438)
        on left: 720
        on right: 722
    $@73 (439)
        on left: 721
        on right: 722
    $@74 (440)
        on left: 723
        on right: 725
    $@75 (441)
        on left: 724
        on right: 725
    type_declaration <pTypeDecl> (442)
        on left: 726 727 728
        on right: 123 249 250 269 311 459 464 521 522 528 538 539 576 657 658 669 688 692 698 702 709 716 727 728
    tuple_alias_declaration (443)
        on left: 733
        on right: 12
    $@76 (444)
        on left: 729
        on right: 733
    $@77 (445)
        on left: 730
        on right: 733
    $@78 (446)
        on left: 731
        on right: 733
    $@79 (447)
        on left: 732
        on right: 733
    variant_alias_declaration (448)
        on left: 738
        on right: 11
    $@80 (449)
        on left: 734
        on right: 738
    $@81 (450)
        on left: 735
        on right: 738
    $@82 (451)
        on left: 736
        on right: 738
    $@83 (452)
        on left: 737
        on right: 738
    bitfield_alias_declaration (453)
        on left: 743
        on right: 13
    $@84 (454)
        on left: 739
        on right: 743
    $@85 (455)
        on left: 740
        on right: 743
    $@86 (456)
        on left: 741
        on right: 743
    $@87 (457)
        on left: 742
        on right: 743
    make_decl <pExpression> (458)
        on left: 744 745 746 747 748
        on right: 275 400
    make_struct_fields <pMakeStruct> (459)
        on left: 749 750 751 752 753 754 755 756
        on right: 370 371 751 752 755 756 757 758
    make_struct_dim <pExpression> (460)
        on left: 757 758
        on right: 274 391 758 773 776 777 778 781 784 787 799
    optional_block <pExpression> (461)
        on left: 759 760
        on right: 773 774 775 776 777 778
    optional_trailing_semicolon_cur_cur (462)
        on left: 761 762
        on right: 818
    optional_trailing_semicolon_cur_sqr (463)
        on left: 763 764
        on right: 804
    optional_trailing_semicolon_sqr_sqr (464)
        on left: 765 766
        on right: 803
    optional_trailing_delim_sqr_sqr (465)
        on left: 767 768 769
        on right: 773 774 775 776
    optional_trailing_delim_cur_sqr (466)
        on left: 770 771 772
        on right: 777 778
    make_struct_decl <pExpression> (467)
        on left: 773 774 775 776 777 778 781 784 787 790
        on right: 744
    $@88 (468)
        on left: 779
        on right: 781
    $@89 (469)
        on left: 780
        on right: 781
    $@90 (470)
        on left: 782
        on right: 784
    $@91 (471)
        on left: 783
        on right: 784
    $@92 (472)
        on left: 785
        on right: 787
    $@93 (473)
        on left: 786
        on right: 787
    $@94 (474)
        on left: 788
        on right: 790
    $@95 (475)
        on left: 789
        on right: 790
    make_tuple <pExpression> (476)
        on left: 791 792 793
        on right: 793 800 801
    make_map_tuple <pExpression> (477)
        on left: 794 795
        on right: 813 814 815 816 829 830
    make_tuple_call <pExpression> (478)
        on left: 796 799
        on right: 748
    $@96 (479)
        on left: 797
        on right: 799
    $@97 (480)
        on left: 798
        on right: 799
    make_dim <pExpression> (481)
        on left: 800 801
        on right: 801 803 804
    make_dim_decl <pExpression> (482)
        on left: 802 803 804 805 808 809 812
        on right: 745
    $@98 (483)
        on left: 806
        on right: 808
    $@99 (484)
        on left: 807
        on right: 808
    $@100 (485)
        on left: 810
        on right: 812
    $@101 (486)
        on left: 811
        on right: 812
    make_table <pExpression> (487)
        on left: 813 814
        on right: 814 818
    expr_map_tuple_list <pExpression> (488)
        on left: 815 816
        on right: 816 817 819 820 821
    make_table_decl <pExpression> (489)
        on left: 817 818 819 820 821
        on right: 746
    array_comprehension_where <pExpression> (490)
        on left: 822 823
        on right: 826 827 828 829 830
    optional_comma <b> (491)
        on left: 824 825
        on right: 435 796 802 805 808 809 812 817 819 820 821
    array_comprehension <pExpression> (492)
        on left: 826 827 828 829 830
        on right: 747


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . ';'

    $end        shift, and go to state 2
    "let"       shift, and go to state 3
    "options"   shift, and go to state 4
    "expect"    shift, and go to state 5
    "require"   shift, and go to state 6
    "typedef"   shift, and go to state 7
    "var"       shift, and go to state 8
    "module"    shift, and go to state 9
    "bitfield"  shift, and go to state 10
    "tuple"     shift, and go to state 11
    "variant"   shift, and go to state 12
    '%'         shift, and go to state 13
    '['         shift, and go to state 14
    ';'         shift, and go to state 15

    $default  reduce using rule 117 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  290 kwd_let: "let" .

    $default  reduce using rule 290 (kwd_let)


State 4

   36 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   49 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   37 require_declaration: "require" . require_module

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 46
    require_module       go to state 47


State 7

  579 alias_declaration: "typedef" . '{' alias_list '}'
  581                  | "typedef" . $@40 single_alias ';'

    '{'  shift, and go to state 48

    $default  reduce using rule 580 ($@40)

    $@40  go to state 49


State 8

  291 kwd_let: "var" .

    $default  reduce using rule 291 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 50
    '$'     shift, and go to state 51

    module_name  go to state 52


State 10

  743 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias $@84 "name" $@85 '{' $@86 bitfield_alias_bits $@87 '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 572 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 55


State 11

  733 tuple_alias_declaration: "tuple" . optional_public_or_private_alias $@76 "name" $@77 '{' $@78 tuple_alias_type_list $@79 '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 572 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 56


State 12

  738 variant_alias_declaration: "variant" . optional_public_or_private_alias $@80 "name" $@81 '{' $@82 variant_alias_type_list $@83 '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 572 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 57


State 13

   35 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 60


State 14

  118 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 69
    name_in_namespace             go to state 70


State 15

   15 program: program ';' .

    $default  reduce using rule 15 (program)


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   16 top_level_reader_macro: expr_reader . ';'

    ';'  shift, and go to state 71


State 19

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 20

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  209 global_function_declaration: optional_annotation_list . "def" function_declaration
  588 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name '{' $@41 enum_list $@42 '}'
  591                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@43 enum_list $@44 '}'
  606 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

    "struct"  shift, and go to state 72
    "class"   shift, and go to state 73
    "def"     shift, and go to state 74
    "enum"    shift, and go to state 75

    class_or_struct  go to state 76


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  565 global_let: kwd_let . optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'
  567           | kwd_let . optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 77

    $default  reduce using rule 560 (optional_shared)

    optional_shared  go to state 78


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

   91 annotation_argument_name: "type" .

    $default  reduce using rule 91 (annotation_argument_name)


State 33

   92 annotation_argument_name: "in" .

    $default  reduce using rule 92 (annotation_argument_name)


State 34

   90 annotation_argument_name: "name" .

    $default  reduce using rule 90 (annotation_argument_name)


State 35

   93 annotation_argument: annotation_argument_name . '=' string_constant
   94                    | annotation_argument_name . '=' "name"
   95                    | annotation_argument_name . '=' "integer constant"
   96                    | annotation_argument_name . '=' "floating point constant"
   97                    | annotation_argument_name . '=' "true"
   98                    | annotation_argument_name . '=' "false"
   99                    | annotation_argument_name .
  100                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 79

    $default  reduce using rule 99 (annotation_argument)


State 36

  101 annotation_argument_list: annotation_argument .

    $default  reduce using rule 101 (annotation_argument_list)


State 37

   36 options_declaration: "options" annotation_argument_list .
  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 80

    $default  reduce using rule 36 (options_declaration)


State 38

   52 expect_error: "integer constant" .
   53             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 81

    $default  reduce using rule 52 (expect_error)


State 39

   49 expect_declaration: "expect" expect_list .
   51 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 82

    $default  reduce using rule 49 (expect_declaration)


State 40

   50 expect_list: expect_error .

    $default  reduce using rule 50 (expect_list)


State 41

   38 keyword_or_name: "name" .

    $default  reduce using rule 38 (keyword_or_name)


State 42

   39 keyword_or_name: "keyword" .

    $default  reduce using rule 39 (keyword_or_name)


State 43

   40 keyword_or_name: "type function" .

    $default  reduce using rule 40 (keyword_or_name)


State 44

   42 require_module_name: '%' . require_module_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 83


State 45

   41 require_module_name: keyword_or_name .

    $default  reduce using rule 41 (require_module_name)


State 46

   43 require_module_name: require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name
   45 require_module: require_module_name . is_public_module
   46               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 84
    "public"  shift, and go to state 85
    '/'       shift, and go to state 86
    '.'       shift, and go to state 87

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 88


State 47

   37 require_declaration: "require" require_module .

    $default  reduce using rule 37 (require_declaration)


State 48

  579 alias_declaration: "typedef" '{' . alias_list '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 572 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 90
    alias_list                        go to state 91


State 49

  581 alias_declaration: "typedef" $@40 . single_alias ';'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 572 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 92


State 50

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 51

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 52

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 77

    $default  reduce using rule 560 (optional_shared)

    optional_shared  go to state 93


State 53

  574 optional_public_or_private_alias: "public" .

    $default  reduce using rule 574 (optional_public_or_private_alias)


State 54

  573 optional_public_or_private_alias: "private" .

    $default  reduce using rule 573 (optional_public_or_private_alias)


State 55

  743 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . $@84 "name" $@85 '{' $@86 bitfield_alias_bits $@87 '}'

    $default  reduce using rule 739 ($@84)

    $@84  go to state 94


State 56

  733 tuple_alias_declaration: "tuple" optional_public_or_private_alias . $@76 "name" $@77 '{' $@78 tuple_alias_type_list $@79 '}'

    $default  reduce using rule 729 ($@76)

    $@76  go to state 95


State 57

  738 variant_alias_declaration: "variant" optional_public_or_private_alias . $@80 "name" $@81 '{' $@82 variant_alias_type_list $@83 '}'

    $default  reduce using rule 734 ($@80)

    $@80  go to state 96


State 58

  264 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 97


State 59

  262 name_in_namespace: "name" .
  263                  | "name" . "::" "name"

    "::"  shift, and go to state 98

    "::"      [reduce using rule 262 (name_in_namespace)]
    $default  reduce using rule 262 (name_in_namespace)


State 60

   35 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 34 ($@1)

    $@1  go to state 99


State 61

  104 annotation_declaration_name: "require" .

    $default  reduce using rule 104 (annotation_declaration_name)


State 62

  105 annotation_declaration_name: "private" .

    $default  reduce using rule 105 (annotation_declaration_name)


State 63

  114 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 100
    name_in_namespace             go to state 70


State 64

  109 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 101
    name_in_namespace             go to state 70


State 65

  113 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 102
    name_in_namespace             go to state 70


State 66

  106 annotation_declaration_basic: annotation_declaration_name .
  107                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 103

    $default  reduce using rule 106 (annotation_declaration_basic)


State 67

  108 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 108 (annotation_declaration)


State 68

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  115 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106

    $default  reduce using rule 115 (annotation_list)


State 69

  116 annotation_list: annotation_list . ',' annotation_declaration
  118 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 107
    ']'  shift, and go to state 108


State 70

  103 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 103 (annotation_declaration_name)


State 71

   16 top_level_reader_macro: expr_reader ';' .

    $default  reduce using rule 16 (top_level_reader_macro)


State 72

  598 class_or_struct: "struct" .

    $default  reduce using rule 598 (class_or_struct)


State 73

  597 class_or_struct: "class" .

    $default  reduce using rule 597 (class_or_struct)


State 74

  209 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 109
    "private"  shift, and go to state 110

    $default  reduce using rule 210 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 111
    function_declaration                 go to state 112


State 75

  588 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name '{' $@41 enum_list $@42 '}'
  591                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@43 enum_list $@44 '}'

    "public"   shift, and go to state 113
    "private"  shift, and go to state 114

    $default  reduce using rule 582 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 115


State 76

  606 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list

    "public"   shift, and go to state 116
    "private"  shift, and go to state 117

    $default  reduce using rule 599 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 118


State 77

  561 optional_shared: "shared" .

    $default  reduce using rule 561 (optional_shared)


State 78

  565 global_let: kwd_let optional_shared . optional_public_or_private_variable '{' global_variable_declaration_list '}'
  567           | kwd_let optional_shared . optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 119
    "private"  shift, and go to state 120

    $default  reduce using rule 562 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 121


State 79

   93 annotation_argument: annotation_argument_name '=' . string_constant
   94                    | annotation_argument_name '=' . "name"
   95                    | annotation_argument_name '=' . "integer constant"
   96                    | annotation_argument_name '=' . "floating point constant"
   97                    | annotation_argument_name '=' . "true"
   98                    | annotation_argument_name '=' . "false"
  100                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 122
    "false"                    shift, and go to state 123
    "integer constant"         shift, and go to state 124
    "floating point constant"  shift, and go to state 125
    "name"                     shift, and go to state 126
    "start of the string"      shift, and go to state 127
    '('                        shift, and go to state 128

    string_constant  go to state 129


State 80

  102 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 130


State 81

   53 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 131


State 82

   51 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 132


State 83

   42 require_module_name: '%' require_module_name .
   43                    | require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name

    '.'  shift, and go to state 87

    $default  reduce using rule 42 (require_module_name)


State 84

   46 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 133


State 85

   48 is_public_module: "public" .

    $default  reduce using rule 48 (is_public_module)


State 86

   44 require_module_name: require_module_name '/' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 134


State 87

   43 require_module_name: require_module_name '.' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 135


State 88

   45 require_module: require_module_name is_public_module .

    $default  reduce using rule 45 (require_module)


State 89

  576 single_alias: optional_public_or_private_alias . "name" $@39 '=' type_declaration

    "name"  shift, and go to state 136


State 90

  577 alias_list: single_alias . ';'

    ';'  shift, and go to state 137


State 91

  578 alias_list: alias_list . single_alias ';'
  579 alias_declaration: "typedef" '{' alias_list . '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54
    '}'        shift, and go to state 138

    $default  reduce using rule 572 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 139


State 92

  581 alias_declaration: "typedef" $@40 single_alias . ';'

    ';'  shift, and go to state 140


State 93

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 141
    "private"  shift, and go to state 142

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 143


State 94

  743 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 . "name" $@85 '{' $@86 bitfield_alias_bits $@87 '}'

    "name"  shift, and go to state 144


State 95

  733 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 . "name" $@77 '{' $@78 tuple_alias_type_list $@79 '}'

    "name"  shift, and go to state 145


State 96

  738 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 . "name" $@81 '{' $@82 variant_alias_type_list $@83 '}'

    "name"  shift, and go to state 146


State 97

  264 name_in_namespace: "::" "name" .

    $default  reduce using rule 264 (name_in_namespace)


State 98

  263 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 147


State 99

   35 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 148

    reader_character_sequence  go to state 149


State 100

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  114                       | "|>" annotation_declaration .

    $default  reduce using rule 114 (annotation_declaration)


State 101

  109 annotation_declaration: '!' annotation_declaration .
  110                       | annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 109 (annotation_declaration)


State 102

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  113                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106
    ')'   shift, and go to state 150


State 103

  107 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 151


State 104

  110 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 152
    name_in_namespace             go to state 70


State 105

  111 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 153
    name_in_namespace             go to state 70


State 106

  112 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 154
    name_in_namespace             go to state 70


State 107

  116 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 155
    name_in_namespace             go to state 70


State 108

  118 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 118 (optional_annotation_list)


State 109

  212 optional_public_or_private_function: "public" .

    $default  reduce using rule 212 (optional_public_or_private_function)


State 110

  211 optional_public_or_private_function: "private" .

    $default  reduce using rule 211 (optional_public_or_private_function)


State 111

  215 function_declaration: optional_public_or_private_function . $@6 function_declaration_header expression_block

    $default  reduce using rule 214 ($@6)

    $@6  go to state 156


State 112

  209 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 209 (global_function_declaration)


State 113

  584 optional_public_or_private_enum: "public" .

    $default  reduce using rule 584 (optional_public_or_private_enum)


State 114

  583 optional_public_or_private_enum: "private" .

    $default  reduce using rule 583 (optional_public_or_private_enum)


State 115

  588 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name '{' $@41 enum_list $@42 '}'
  591                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration '{' $@43 enum_list $@44 '}'

    "name"  shift, and go to state 157

    enum_name  go to state 158


State 116

  601 optional_public_or_private_structure: "public" .

    $default  reduce using rule 601 (optional_public_or_private_structure)


State 117

  600 optional_public_or_private_structure: "private" .

    $default  reduce using rule 600 (optional_public_or_private_structure)


State 118

  606 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@45 structure_name $@46 optional_struct_variable_declaration_list

    $default  reduce using rule 604 ($@45)

    $@45  go to state 159


State 119

  564 optional_public_or_private_variable: "public" .

    $default  reduce using rule 564 (optional_public_or_private_variable)


State 120

  563 optional_public_or_private_variable: "private" .

    $default  reduce using rule 563 (optional_public_or_private_variable)


State 121

  565 global_let: kwd_let optional_shared optional_public_or_private_variable . '{' global_variable_declaration_list '}'
  567           | kwd_let optional_shared optional_public_or_private_variable . $@38 optional_field_annotation let_variable_declaration

    '{'  shift, and go to state 160

    $default  reduce using rule 566 ($@38)

    $@38  go to state 161


State 122

   97 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 97 (annotation_argument)


State 123

   98 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 98 (annotation_argument)


State 124

   95 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 95 (annotation_argument)


State 125

   96 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 96 (annotation_argument)


State 126

   94 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 94 (annotation_argument)


State 127

   27 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163

    character_sequence  go to state 164


State 128

  100 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 127

    string_constant                 go to state 170
    annotation_argument_value       go to state 171
    annotation_argument_value_list  go to state 172


State 129

   93 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 93 (annotation_argument)


State 130

  102 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 102 (annotation_argument_list)


State 131

   53 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 53 (expect_error)


State 132

   51 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 51 (expect_list)


State 133

   46 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 85

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 173


State 134

   44 require_module_name: require_module_name '/' keyword_or_name .

    $default  reduce using rule 44 (require_module_name)


State 135

   43 require_module_name: require_module_name '.' keyword_or_name .

    $default  reduce using rule 43 (require_module_name)


State 136

  576 single_alias: optional_public_or_private_alias "name" . $@39 '=' type_declaration

    $default  reduce using rule 575 ($@39)

    $@39  go to state 174


State 137

  577 alias_list: single_alias ';' .

    $default  reduce using rule 577 (alias_list)


State 138

  579 alias_declaration: "typedef" '{' alias_list '}' .

    $default  reduce using rule 579 (alias_declaration)


State 139

  578 alias_list: alias_list single_alias . ';'

    ';'  shift, and go to state 175


State 140

  581 alias_declaration: "typedef" $@40 single_alias ';' .

    $default  reduce using rule 581 (alias_declaration)


State 141

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 142

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 143

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 144

  743 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" . $@85 '{' $@86 bitfield_alias_bits $@87 '}'

    $default  reduce using rule 740 ($@85)

    $@85  go to state 176


State 145

  733 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" . $@77 '{' $@78 tuple_alias_type_list $@79 '}'

    $default  reduce using rule 730 ($@77)

    $@77  go to state 177


State 146

  738 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" . $@81 '{' $@82 variant_alias_type_list $@83 '}'

    $default  reduce using rule 735 ($@81)

    $@81  go to state 178


State 147

  263 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 263 (name_in_namespace)


State 148

   32 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 32 (reader_character_sequence)


State 149

   33 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 179

    $default  reduce using rule 35 (expr_reader)


State 150

  113 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 113 (annotation_declaration)


State 151

  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  107 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 80
    ')'  shift, and go to state 180


State 152

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  110                       | annotation_declaration "&&" annotation_declaration .
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 110 (annotation_declaration)


State 153

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  111                       | annotation_declaration "||" annotation_declaration .
  112                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 104
    "^^"  shift, and go to state 106

    $default  reduce using rule 111 (annotation_declaration)


State 154

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  112                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 104

    $default  reduce using rule 112 (annotation_declaration)


State 155

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  116 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106

    $default  reduce using rule 116 (annotation_list)


State 156

  215 function_declaration: optional_public_or_private_function $@6 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 211


State 157

  585 enum_name: "name" .

    $default  reduce using rule 585 (enum_name)


State 158

  588 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . '{' $@41 enum_list $@42 '}'
  591                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration '{' $@43 enum_list $@44 '}'

    ':'  shift, and go to state 212
    '{'  shift, and go to state 213


State 159

  606 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 . structure_name $@46 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 214

    $default  reduce using rule 594 (optional_sealed)

    optional_sealed  go to state 215
    structure_name   go to state 216


State 160

  565 global_let: kwd_let optional_shared optional_public_or_private_variable '{' . global_variable_declaration_list '}'

    $default  reduce using rule 557 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 217


State 161

  567 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 218

    $default  reduce using rule 495 (optional_field_annotation)

    optional_field_annotation  go to state 219


State 162

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 163

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 164

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 220
    STRING_CHARACTER_ESC  shift, and go to state 221
    "end of the string"   shift, and go to state 222


State 165

   86 annotation_argument_value: "true" .

    $default  reduce using rule 86 (annotation_argument_value)


State 166

   87 annotation_argument_value: "false" .

    $default  reduce using rule 87 (annotation_argument_value)


State 167

   84 annotation_argument_value: "integer constant" .

    $default  reduce using rule 84 (annotation_argument_value)


State 168

   85 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 85 (annotation_argument_value)


State 169

   83 annotation_argument_value: "name" .

    $default  reduce using rule 83 (annotation_argument_value)


State 170

   82 annotation_argument_value: string_constant .

    $default  reduce using rule 82 (annotation_argument_value)


State 171

   88 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 88 (annotation_argument_value_list)


State 172

   89 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  100 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 223
    ')'  shift, and go to state 224


State 173

   46 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 46 (require_module)


State 174

  576 single_alias: optional_public_or_private_alias "name" $@39 . '=' type_declaration

    '='  shift, and go to state 225


State 175

  578 alias_list: alias_list single_alias ';' .

    $default  reduce using rule 578 (alias_list)


State 176

  743 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 . '{' $@86 bitfield_alias_bits $@87 '}'

    '{'  shift, and go to state 226


State 177

  733 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 . '{' $@78 tuple_alias_type_list $@79 '}'

    '{'  shift, and go to state 227


State 178

  738 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 . '{' $@82 variant_alias_type_list $@83 '}'

    '{'  shift, and go to state 228


State 179

   33 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 33 (reader_character_sequence)


State 180

  107 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 107 (annotation_declaration_basic)


State 181

  125 function_name: "operator" . '!'
  126              | "operator" . '~'
  127              | "operator" . "+="
  128              | "operator" . "-="
  129              | "operator" . "*="
  130              | "operator" . "/="
  131              | "operator" . "%="
  132              | "operator" . "&="
  133              | "operator" . "|="
  134              | "operator" . "^="
  135              | "operator" . "&&="
  136              | "operator" . "||="
  137              | "operator" . "^^="
  138              | "operator" . "&&"
  139              | "operator" . "||"
  140              | "operator" . "^^"
  141              | "operator" . '+'
  142              | "operator" . '-'
  143              | "operator" . '*'
  144              | "operator" . '/'
  145              | "operator" . '%'
  146              | "operator" . '<'
  147              | "operator" . '>'
  148              | "operator" . ".."
  149              | "operator" . "=="
  150              | "operator" . "!="
  151              | "operator" . "<="
  152              | "operator" . ">="
  153              | "operator" . '&'
  154              | "operator" . '|'
  155              | "operator" . '^'
  158              | "operator" . "++"
  159              | "operator" . "--"
  160              | "operator" . "<<"
  161              | "operator" . ">>"
  162              | "operator" . "<<="
  163              | "operator" . ">>="
  164              | "operator" . "<<<"
  165              | "operator" . ">>>"
  166              | "operator" . "<<<="
  167              | "operator" . ">>>="
  168              | "operator" . '[' ']'
  169              | "operator" . "?[" ']'
  170              | "operator" . '.'
  171              | "operator" . "?."
  172              | "operator" . '.' "name"
  173              | "operator" . '.' "name" ":="
  174              | "operator" . "?." "name"
  175              | "operator" . ":="
  176              | "operator" . "delete"
  177              | "operator" . "??"
  178              | "operator" . "is"
  179              | "operator" . "as"
  180              | "operator" . "is" "name"
  181              | "operator" . "as" "name"
  182              | "operator" . '?' "as"
  183              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 229
    "as"      shift, and go to state 230
    "delete"  shift, and go to state 231
    "+="      shift, and go to state 232
    "-="      shift, and go to state 233
    "/="      shift, and go to state 234
    "*="      shift, and go to state 235
    "%="      shift, and go to state 236
    "&="      shift, and go to state 237
    "|="      shift, and go to state 238
    "^="      shift, and go to state 239
    "<<"      shift, and go to state 240
    ">>"      shift, and go to state 241
    "++"      shift, and go to state 242
    "--"      shift, and go to state 243
    "<="      shift, and go to state 244
    "<<="     shift, and go to state 245
    ">>="     shift, and go to state 246
    ">="      shift, and go to state 247
    "=="      shift, and go to state 248
    "!="      shift, and go to state 249
    "??"      shift, and go to state 250
    "?."      shift, and go to state 251
    "?["      shift, and go to state 252
    ":="      shift, and go to state 253
    "<<<"     shift, and go to state 254
    ">>>"     shift, and go to state 255
    "<<<="    shift, and go to state 256
    ">>>="    shift, and go to state 257
    "&&"      shift, and go to state 258
    "||"      shift, and go to state 259
    "^^"      shift, and go to state 260
    "&&="     shift, and go to state 261
    "||="     shift, and go to state 262
    "^^="     shift, and go to state 263
    ".."      shift, and go to state 264
    '?'       shift, and go to state 265
    '|'       shift, and go to state 266
    '^'       shift, and go to state 267
    '&'       shift, and go to state 268
    '<'       shift, and go to state 269
    '>'       shift, and go to state 270
    '-'       shift, and go to state 271
    '+'       shift, and go to state 272
    '*'       shift, and go to state 273
    '/'       shift, and go to state 274
    '%'       shift, and go to state 275
    '~'       shift, and go to state 276
    '!'       shift, and go to state 277
    '.'       shift, and go to state 278
    '['       shift, and go to state 279


State 182

  184 function_name: "bool" .

    $default  reduce using rule 184 (function_name)


State 183

  185 function_name: "string" .

    $default  reduce using rule 185 (function_name)


State 184

  186 function_name: "int" .

    $default  reduce using rule 186 (function_name)


State 185

  187 function_name: "int2" .

    $default  reduce using rule 187 (function_name)


State 186

  188 function_name: "int3" .

    $default  reduce using rule 188 (function_name)


State 187

  189 function_name: "int4" .

    $default  reduce using rule 189 (function_name)


State 188

  190 function_name: "uint" .

    $default  reduce using rule 190 (function_name)


State 189

  191 function_name: "uint2" .

    $default  reduce using rule 191 (function_name)


State 190

  192 function_name: "uint3" .

    $default  reduce using rule 192 (function_name)


State 191

  193 function_name: "uint4" .

    $default  reduce using rule 193 (function_name)


State 192

  194 function_name: "float" .

    $default  reduce using rule 194 (function_name)


State 193

  195 function_name: "float2" .

    $default  reduce using rule 195 (function_name)


State 194

  196 function_name: "float3" .

    $default  reduce using rule 196 (function_name)


State 195

  197 function_name: "float4" .

    $default  reduce using rule 197 (function_name)


State 196

  198 function_name: "range" .

    $default  reduce using rule 198 (function_name)


State 197

  199 function_name: "urange" .

    $default  reduce using rule 199 (function_name)


State 198

  200 function_name: "range64" .

    $default  reduce using rule 200 (function_name)


State 199

  201 function_name: "urange64" .

    $default  reduce using rule 201 (function_name)


State 200

  202 function_name: "int64" .

    $default  reduce using rule 202 (function_name)


State 201

  203 function_name: "uint64" .

    $default  reduce using rule 203 (function_name)


State 202

  204 function_name: "double" .

    $default  reduce using rule 204 (function_name)


State 203

  205 function_name: "int8" .

    $default  reduce using rule 205 (function_name)


State 204

  206 function_name: "uint8" .

    $default  reduce using rule 206 (function_name)


State 205

  207 function_name: "int16" .

    $default  reduce using rule 207 (function_name)


State 206

  208 function_name: "uint16" .

    $default  reduce using rule 208 (function_name)


State 207

  156 function_name: "++" . "operator"

    "operator"  shift, and go to state 280


State 208

  157 function_name: "--" . "operator"

    "operator"  shift, and go to state 281


State 209

  124 function_name: "name" .

    $default  reduce using rule 124 (function_name)


State 210

  213 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 283


State 211

  215 function_declaration: optional_public_or_private_function $@6 function_declaration_header . expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 285


State 212

  591 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration '{' $@43 enum_list $@44 '}'

    "int"     shift, and go to state 286
    "uint"    shift, and go to state 287
    "int8"    shift, and go to state 288
    "uint8"   shift, and go to state 289
    "int16"   shift, and go to state 290
    "uint16"  shift, and go to state 291

    enum_basic_type_declaration  go to state 292


State 213

  588 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' . $@41 enum_list $@42 '}'

    $default  reduce using rule 586 ($@41)

    $@41  go to state 293


State 214

  595 optional_sealed: "sealed" .

    $default  reduce using rule 595 (optional_sealed)


State 215

  596 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 294


State 216

  606 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name . $@46 optional_struct_variable_declaration_list

    $default  reduce using rule 605 ($@46)

    $@46  go to state 295


State 217

  559 global_variable_declaration_list: global_variable_declaration_list . $@37 optional_field_annotation let_variable_declaration
  565 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list . '}'

    '}'  shift, and go to state 296

    $default  reduce using rule 558 ($@37)

    $@37  go to state 297


State 218

  496 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 298


State 219

  567 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 299
    "name"  shift, and go to state 300

    let_variable_name_with_pos_list  go to state 301
    let_variable_declaration         go to state 302


State 220

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 221

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 222

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 223

   89 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 127

    string_constant            go to state 170
    annotation_argument_value  go to state 303


State 224

  100 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 100 (annotation_argument)


State 225

  576 single_alias: optional_public_or_private_alias "name" $@39 '=' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 351


State 226

  743 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 '{' . $@86 bitfield_alias_bits $@87 '}'

    $default  reduce using rule 741 ($@86)

    $@86  go to state 352


State 227

  733 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 '{' . $@78 tuple_alias_type_list $@79 '}'

    $default  reduce using rule 731 ($@78)

    $@78  go to state 353


State 228

  738 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 '{' . $@82 variant_alias_type_list $@83 '}'

    $default  reduce using rule 736 ($@82)

    $@82  go to state 354


State 229

  178 function_name: "operator" "is" .
  180              | "operator" "is" . "name"

    "name"  shift, and go to state 355

    $default  reduce using rule 178 (function_name)


State 230

  179 function_name: "operator" "as" .
  181              | "operator" "as" . "name"

    "name"  shift, and go to state 356

    $default  reduce using rule 179 (function_name)


State 231

  176 function_name: "operator" "delete" .

    $default  reduce using rule 176 (function_name)


State 232

  127 function_name: "operator" "+=" .

    $default  reduce using rule 127 (function_name)


State 233

  128 function_name: "operator" "-=" .

    $default  reduce using rule 128 (function_name)


State 234

  130 function_name: "operator" "/=" .

    $default  reduce using rule 130 (function_name)


State 235

  129 function_name: "operator" "*=" .

    $default  reduce using rule 129 (function_name)


State 236

  131 function_name: "operator" "%=" .

    $default  reduce using rule 131 (function_name)


State 237

  132 function_name: "operator" "&=" .

    $default  reduce using rule 132 (function_name)


State 238

  133 function_name: "operator" "|=" .

    $default  reduce using rule 133 (function_name)


State 239

  134 function_name: "operator" "^=" .

    $default  reduce using rule 134 (function_name)


State 240

  160 function_name: "operator" "<<" .

    $default  reduce using rule 160 (function_name)


State 241

  161 function_name: "operator" ">>" .

    $default  reduce using rule 161 (function_name)


State 242

  158 function_name: "operator" "++" .

    $default  reduce using rule 158 (function_name)


State 243

  159 function_name: "operator" "--" .

    $default  reduce using rule 159 (function_name)


State 244

  151 function_name: "operator" "<=" .

    $default  reduce using rule 151 (function_name)


State 245

  162 function_name: "operator" "<<=" .

    $default  reduce using rule 162 (function_name)


State 246

  163 function_name: "operator" ">>=" .

    $default  reduce using rule 163 (function_name)


State 247

  152 function_name: "operator" ">=" .

    $default  reduce using rule 152 (function_name)


State 248

  149 function_name: "operator" "==" .

    $default  reduce using rule 149 (function_name)


State 249

  150 function_name: "operator" "!=" .

    $default  reduce using rule 150 (function_name)


State 250

  177 function_name: "operator" "??" .

    $default  reduce using rule 177 (function_name)


State 251

  171 function_name: "operator" "?." .
  174              | "operator" "?." . "name"

    "name"  shift, and go to state 357

    $default  reduce using rule 171 (function_name)


State 252

  169 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 358


State 253

  175 function_name: "operator" ":=" .

    $default  reduce using rule 175 (function_name)


State 254

  164 function_name: "operator" "<<<" .

    $default  reduce using rule 164 (function_name)


State 255

  165 function_name: "operator" ">>>" .

    $default  reduce using rule 165 (function_name)


State 256

  166 function_name: "operator" "<<<=" .

    $default  reduce using rule 166 (function_name)


State 257

  167 function_name: "operator" ">>>=" .

    $default  reduce using rule 167 (function_name)


State 258

  138 function_name: "operator" "&&" .

    $default  reduce using rule 138 (function_name)


State 259

  139 function_name: "operator" "||" .

    $default  reduce using rule 139 (function_name)


State 260

  140 function_name: "operator" "^^" .

    $default  reduce using rule 140 (function_name)


State 261

  135 function_name: "operator" "&&=" .

    $default  reduce using rule 135 (function_name)


State 262

  136 function_name: "operator" "||=" .

    $default  reduce using rule 136 (function_name)


State 263

  137 function_name: "operator" "^^=" .

    $default  reduce using rule 137 (function_name)


State 264

  148 function_name: "operator" ".." .

    $default  reduce using rule 148 (function_name)


State 265

  182 function_name: "operator" '?' . "as"
  183              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 359


State 266

  154 function_name: "operator" '|' .

    $default  reduce using rule 154 (function_name)


State 267

  155 function_name: "operator" '^' .

    $default  reduce using rule 155 (function_name)


State 268

  153 function_name: "operator" '&' .

    $default  reduce using rule 153 (function_name)


State 269

  146 function_name: "operator" '<' .

    $default  reduce using rule 146 (function_name)


State 270

  147 function_name: "operator" '>' .

    $default  reduce using rule 147 (function_name)


State 271

  142 function_name: "operator" '-' .

    $default  reduce using rule 142 (function_name)


State 272

  141 function_name: "operator" '+' .

    $default  reduce using rule 141 (function_name)


State 273

  143 function_name: "operator" '*' .

    $default  reduce using rule 143 (function_name)


State 274

  144 function_name: "operator" '/' .

    $default  reduce using rule 144 (function_name)


State 275

  145 function_name: "operator" '%' .

    $default  reduce using rule 145 (function_name)


State 276

  126 function_name: "operator" '~' .

    $default  reduce using rule 126 (function_name)


State 277

  125 function_name: "operator" '!' .

    $default  reduce using rule 125 (function_name)


State 278

  170 function_name: "operator" '.' .
  172              | "operator" '.' . "name"
  173              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 360

    $default  reduce using rule 170 (function_name)


State 279

  168 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 361


State 280

  156 function_name: "++" "operator" .

    $default  reduce using rule 156 (function_name)


State 281

  157 function_name: "--" "operator" .

    $default  reduce using rule 157 (function_name)


State 282

  120 optional_function_argument_list: '(' . ')'
  121                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 362
    "[["  shift, and go to state 218
    ')'   shift, and go to state 363

    $default  reduce using rule 495 (optional_field_annotation)

    optional_field_annotation      go to state 364
    function_argument_declaration  go to state 365
    function_argument_list         go to state 366


State 283

  213 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 368


State 284

  216 expression_block: '{' . expressions '}'
  217                 | '{' . expressions '}' "finally" '{' expressions '}'

    $default  reduce using rule 241 (expressions)

    expressions  go to state 369


State 285

  215 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block .

    $default  reduce using rule 215 (function_declaration)


State 286

  639 enum_basic_type_declaration: "int" .

    $default  reduce using rule 639 (enum_basic_type_declaration)


State 287

  642 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 642 (enum_basic_type_declaration)


State 288

  640 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 640 (enum_basic_type_declaration)


State 289

  643 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 643 (enum_basic_type_declaration)


State 290

  641 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 641 (enum_basic_type_declaration)


State 291

  644 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 644 (enum_basic_type_declaration)


State 292

  591 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . '{' $@43 enum_list $@44 '}'

    '{'  shift, and go to state 370


State 293

  588 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@41 . enum_list $@42 '}'

    $default  reduce using rule 568 (enum_list)

    enum_list  go to state 371


State 294

  596 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 372

    $default  reduce using rule 592 (optional_structure_parent)

    optional_structure_parent  go to state 373


State 295

  606 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 . optional_struct_variable_declaration_list

    '{'  shift, and go to state 374

    $default  reduce using rule 602 (optional_struct_variable_declaration_list)

    optional_struct_variable_declaration_list  go to state 375


State 296

  565 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}' .

    $default  reduce using rule 565 (global_let)


State 297

  559 global_variable_declaration_list: global_variable_declaration_list $@37 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 218

    $default  reduce using rule 495 (optional_field_annotation)

    optional_field_annotation  go to state 376


State 298

  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  496 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 80
    ']'  shift, and go to state 377


State 299

  548 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 378


State 300

  547 let_variable_name_with_pos_list: "name" .
  549                                | "name" . "aka" "name"

    "aka"  shift, and go to state 379

    $default  reduce using rule 547 (let_variable_name_with_pos_list)


State 301

  550 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  551                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  552 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options ';'
  553                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  554                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  555                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr ';'
  556                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 380
    ':'  shift, and go to state 381
    '&'  shift, and go to state 382

    $default  reduce using rule 545 (optional_ref)

    optional_ref  go to state 383


State 302

  567 global_let: kwd_let optional_shared optional_public_or_private_variable $@38 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 567 (global_let)


State 303

   89 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 89 (annotation_argument_value_list)


State 304

  669 type_declaration_no_options: "type" . '<' $@49 type_declaration '>' $@50

    '<'  shift, and go to state 384


State 305

  692 type_declaration_no_options: "array" . '<' $@54 type_declaration '>' $@55

    '<'  shift, and go to state 385


State 306

  695 type_declaration_no_options: "table" . '<' $@56 table_type_pair '>' $@57

    '<'  shift, and go to state 386


State 307

  670 type_declaration_no_options: "typedecl" . '(' expr ')'

    '('  shift, and go to state 387


State 308

  698 type_declaration_no_options: "iterator" . '<' $@58 type_declaration '>' $@59

    '<'  shift, and go to state 388


State 309

  688 type_declaration_no_options: "smart_ptr" . '<' $@52 type_declaration '>' $@53

    '<'  shift, and go to state 389


State 310

  612 basic_type_declaration: "bool" .

    $default  reduce using rule 612 (basic_type_declaration)


State 311

  632 basic_type_declaration: "void" .

    $default  reduce using rule 632 (basic_type_declaration)


State 312

  613 basic_type_declaration: "string" .

    $default  reduce using rule 613 (basic_type_declaration)


State 313

  646 auto_type_declaration: "auto" .
  647                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 390

    '('       [reduce using rule 646 (auto_type_declaration)]
    $default  reduce using rule 646 (auto_type_declaration)


State 314

  614 basic_type_declaration: "int" .

    $default  reduce using rule 614 (basic_type_declaration)


State 315

  618 basic_type_declaration: "int2" .

    $default  reduce using rule 618 (basic_type_declaration)


State 316

  619 basic_type_declaration: "int3" .

    $default  reduce using rule 619 (basic_type_declaration)


State 317

  620 basic_type_declaration: "int4" .

    $default  reduce using rule 620 (basic_type_declaration)


State 318

  621 basic_type_declaration: "uint" .

    $default  reduce using rule 621 (basic_type_declaration)


State 319

  638 basic_type_declaration: "bitfield" .
  656 bitfield_type_declaration: "bitfield" . '<' $@47 bitfield_bits '>' $@48

    '<'  shift, and go to state 391

    $default  reduce using rule 638 (basic_type_declaration)


State 320

  625 basic_type_declaration: "uint2" .

    $default  reduce using rule 625 (basic_type_declaration)


State 321

  626 basic_type_declaration: "uint3" .

    $default  reduce using rule 626 (basic_type_declaration)


State 322

  627 basic_type_declaration: "uint4" .

    $default  reduce using rule 627 (basic_type_declaration)


State 323

  628 basic_type_declaration: "float" .

    $default  reduce using rule 628 (basic_type_declaration)


State 324

  629 basic_type_declaration: "float2" .

    $default  reduce using rule 629 (basic_type_declaration)


State 325

  630 basic_type_declaration: "float3" .

    $default  reduce using rule 630 (basic_type_declaration)


State 326

  631 basic_type_declaration: "float4" .

    $default  reduce using rule 631 (basic_type_declaration)


State 327

  633 basic_type_declaration: "range" .

    $default  reduce using rule 633 (basic_type_declaration)


State 328

  634 basic_type_declaration: "urange" .

    $default  reduce using rule 634 (basic_type_declaration)


State 329

  635 basic_type_declaration: "range64" .

    $default  reduce using rule 635 (basic_type_declaration)


State 330

  636 basic_type_declaration: "urange64" .

    $default  reduce using rule 636 (basic_type_declaration)


State 331

  699 type_declaration_no_options: "block" .
  702                            | "block" . '<' $@60 type_declaration '>' $@61
  705                            | "block" . '<' $@62 optional_function_argument_list optional_function_type '>' $@63

    '<'  shift, and go to state 392

    $default  reduce using rule 699 (type_declaration_no_options)


State 332

  617 basic_type_declaration: "int64" .

    $default  reduce using rule 617 (basic_type_declaration)


State 333

  624 basic_type_declaration: "uint64" .

    $default  reduce using rule 624 (basic_type_declaration)


State 334

  637 basic_type_declaration: "double" .

    $default  reduce using rule 637 (basic_type_declaration)


State 335

  706 type_declaration_no_options: "function" .
  709                            | "function" . '<' $@64 type_declaration '>' $@65
  712                            | "function" . '<' $@66 optional_function_argument_list optional_function_type '>' $@67

    '<'  shift, and go to state 393

    $default  reduce using rule 706 (type_declaration_no_options)


State 336

  713 type_declaration_no_options: "lambda" .
  716                            | "lambda" . '<' $@68 type_declaration '>' $@69
  719                            | "lambda" . '<' $@70 optional_function_argument_list optional_function_type '>' $@71

    '<'  shift, and go to state 394

    $default  reduce using rule 713 (type_declaration_no_options)


State 337

  615 basic_type_declaration: "int8" .

    $default  reduce using rule 615 (basic_type_declaration)


State 338

  622 basic_type_declaration: "uint8" .

    $default  reduce using rule 622 (basic_type_declaration)


State 339

  616 basic_type_declaration: "int16" .

    $default  reduce using rule 616 (basic_type_declaration)


State 340

  623 basic_type_declaration: "uint16" .

    $default  reduce using rule 623 (basic_type_declaration)


State 341

  722 type_declaration_no_options: "tuple" . '<' $@72 tuple_type_list '>' $@73

    '<'  shift, and go to state 395


State 342

  725 type_declaration_no_options: "variant" . '<' $@74 variant_type_list '>' $@75

    '<'  shift, and go to state 396


State 343

  648 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 397


State 344

  671 type_declaration_no_options: '$' . name_in_namespace '(' optional_expr_list ')'
  673                            | '$' . name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 398


State 345

  645 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 645 (structure_type_declaration)


State 346

  661 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 661 (type_declaration_no_options)


State 347

  664 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 664 (type_declaration_no_options)


State 348

  662 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 662 (type_declaration_no_options)


State 349

  663 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 663 (type_declaration_no_options)


State 350

  665 type_declaration_no_options: type_declaration_no_options . dim_list
  666                            | type_declaration_no_options . '[' ']'
  674                            | type_declaration_no_options . '-' '[' ']'
  675                            | type_declaration_no_options . "explicit"
  676                            | type_declaration_no_options . "const"
  677                            | type_declaration_no_options . '-' "const"
  678                            | type_declaration_no_options . '&'
  679                            | type_declaration_no_options . '-' '&'
  680                            | type_declaration_no_options . '#'
  681                            | type_declaration_no_options . "implicit"
  682                            | type_declaration_no_options . '-' '#'
  683                            | type_declaration_no_options . "==" "const"
  684                            | type_declaration_no_options . "==" '&'
  685                            | type_declaration_no_options . '?'
  689                            | type_declaration_no_options . "??"
  726 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    $default  reduce using rule 726 (type_declaration)

    dim_list  go to state 409


State 351

  576 single_alias: optional_public_or_private_alias "name" $@39 '=' type_declaration .
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 576 (single_alias)


State 352

  743 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 '{' $@86 . bitfield_alias_bits $@87 '}'

    $default  reduce using rule 651 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 411


State 353

  733 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 '{' $@78 . tuple_alias_type_list $@79 '}'

    $default  reduce using rule 525 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 412


State 354

  738 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 '{' $@82 . variant_alias_type_list $@83 '}'

    $default  reduce using rule 531 (variant_alias_type_list)

    variant_alias_type_list  go to state 413


State 355

  180 function_name: "operator" "is" "name" .

    $default  reduce using rule 180 (function_name)


State 356

  181 function_name: "operator" "as" "name" .

    $default  reduce using rule 181 (function_name)


State 357

  174 function_name: "operator" "?." "name" .

    $default  reduce using rule 174 (function_name)


State 358

  169 function_name: "operator" "?[" ']' .

    $default  reduce using rule 169 (function_name)


State 359

  182 function_name: "operator" '?' "as" .
  183              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 414

    $default  reduce using rule 182 (function_name)


State 360

  172 function_name: "operator" '.' "name" .
  173              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 415

    $default  reduce using rule 172 (function_name)


State 361

  168 function_name: "operator" '[' ']' .

    $default  reduce using rule 168 (function_name)


State 362

  518 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 416


State 363

  120 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 120 (optional_function_argument_list)


State 364

  516 function_argument_declaration: optional_field_annotation . variable_declaration
  517                              | optional_field_annotation . "var" variable_declaration

    "var"   shift, and go to state 417
    "$i"    shift, and go to state 418
    "name"  shift, and go to state 419

    variable_declaration         go to state 420
    variable_name_with_pos_list  go to state 421


State 365

  519 function_argument_list: function_argument_declaration .

    $default  reduce using rule 519 (function_argument_list)


State 366

  121 optional_function_argument_list: '(' function_argument_list . ')'
  520 function_argument_list: function_argument_list . ';' function_argument_declaration

    ')'  shift, and go to state 422
    ';'  shift, and go to state 423


State 367

  123 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 424


State 368

  213 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 213 (function_declaration_header)


State 369

  216 expression_block: '{' expressions . '}'
  217                 | '{' expressions . '}' "finally" '{' expressions '}'
  242 expressions: expressions . expression_any
  243            | expressions . error

    error                             shift, and go to state 425
    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 428
    "if"                              shift, and go to state 429
    "static_if"                       shift, and go to state 430
    "for"                             shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "return"                          shift, and go to state 438
    "null"                            shift, and go to state 439
    "break"                           shift, and go to state 440
    "try"                             shift, and go to state 441
    "table"                           shift, and go to state 442
    "delete"                          shift, and go to state 443
    "deref"                           shift, and go to state 444
    "with"                            shift, and go to state 445
    "assume"                          shift, and go to state 446
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 449
    "continue"                        shift, and go to state 450
    "pass"                            shift, and go to state 451
    "reinterpret"                     shift, and go to state 452
    "label"                           shift, and go to state 453
    "goto"                            shift, and go to state 454
    "unsafe"                          shift, and go to state 455
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "yield"                           shift, and go to state 462
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 465
    "@ <|"                            shift, and go to state 466
    "@@ <|"                           shift, and go to state 467
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 485
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    ';'                               shift, and go to state 497
    '{'                               shift, and go to state 498
    '}'                               shift, and go to state 499

    string_builder             go to state 500
    expr_reader                go to state 501
    expression_label           go to state 502
    expression_goto            go to state 503
    if_or_static_if            go to state 504
    expression_if_one_liner    go to state 505
    expression_if_then_else    go to state 506
    expression_for_loop        go to state 507
    expression_unsafe          go to state 508
    expression_while_loop      go to state 509
    expression_with            go to state 510
    expression_with_alias      go to state 511
    expr_call_pipe             go to state 512
    expression_any             go to state 513
    expr_keyword               go to state 514
    expression_keyword         go to state 515
    expr_pipe                  go to state 516
    name_in_namespace          go to state 517
    expression_delete          go to state 518
    expr_new                   go to state 519
    expression_break           go to state 520
    expression_continue        go to state 521
    expression_return_no_pipe  go to state 522
    expression_return          go to state 523
    expression_yield_no_pipe   go to state 524
    expression_yield           go to state 525
    expression_try_catch       go to state 526
    kwd_let                    go to state 527
    expression_let             go to state 528
    expr_cast                  go to state 529
    expr_type_decl             go to state 530
    expr_type_info             go to state 531
    block_or_lambda            go to state 532
    expr_full_block            go to state 533
    expr_numeric_const         go to state 534
    expr_assign                go to state 535
    expr_assign_pipe           go to state 536
    expr_named_call            go to state 537
    expr_method_call           go to state 538
    func_addr_expr             go to state 539
    expr_field                 go to state 540
    expr_call                  go to state 541
    expr                       go to state 542
    expr_mtag                  go to state 543
    basic_type_declaration     go to state 544
    make_decl                  go to state 545
    make_struct_decl           go to state 546
    make_tuple_call            go to state 547
    make_dim_decl              go to state 548
    make_table_decl            go to state 549
    array_comprehension        go to state 550


State 370

  591 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' . $@43 enum_list $@44 '}'

    $default  reduce using rule 589 ($@43)

    $@43  go to state 551


State 371

  569 enum_list: enum_list . ';'
  570          | enum_list . "name" ';'
  571          | enum_list . "name" '=' expr ';'
  588 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@41 enum_list . $@42 '}'

    "name"  shift, and go to state 552
    ';'     shift, and go to state 553

    $default  reduce using rule 587 ($@42)

    $@42  go to state 554


State 372

  593 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 555


State 373

  596 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 596 (structure_name)


State 374

  603 optional_struct_variable_declaration_list: '{' . struct_variable_declaration_list '}'

    $default  reduce using rule 508 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 556


State 375

  606 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@45 structure_name $@46 optional_struct_variable_declaration_list .

    $default  reduce using rule 606 (structure_declaration)


State 376

  559 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 299
    "name"  shift, and go to state 300

    let_variable_name_with_pos_list  go to state 301
    let_variable_declaration         go to state 557


State 377

  496 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 558


State 378

  548 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 562
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 379

  549 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 563


State 380

  550 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  551                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 564


State 381

  552 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options ';'
  553                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr ';'
  554                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 565


State 382

  546 optional_ref: '&' .

    $default  reduce using rule 546 (optional_ref)


State 383

  555 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr ';'
  556                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 566
    ":="  shift, and go to state 567
    '='   shift, and go to state 568

    copy_or_move_or_clone  go to state 569


State 384

  669 type_declaration_no_options: "type" '<' . $@49 type_declaration '>' $@50

    $default  reduce using rule 667 ($@49)

    $@49  go to state 570


State 385

  692 type_declaration_no_options: "array" '<' . $@54 type_declaration '>' $@55

    $default  reduce using rule 690 ($@54)

    $@54  go to state 571


State 386

  695 type_declaration_no_options: "table" '<' . $@56 table_type_pair '>' $@57

    $default  reduce using rule 693 ($@56)

    $@56  go to state 572


State 387

  670 type_declaration_no_options: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 573
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 388

  698 type_declaration_no_options: "iterator" '<' . $@58 type_declaration '>' $@59

    $default  reduce using rule 696 ($@58)

    $@58  go to state 574


State 389

  688 type_declaration_no_options: "smart_ptr" '<' . $@52 type_declaration '>' $@53

    $default  reduce using rule 686 ($@52)

    $@52  go to state 575


State 390

  647 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 576


State 391

  656 bitfield_type_declaration: "bitfield" '<' . $@47 bitfield_bits '>' $@48

    $default  reduce using rule 654 ($@47)

    $@47  go to state 577


State 392

  702 type_declaration_no_options: "block" '<' . $@60 type_declaration '>' $@61
  705                            | "block" '<' . $@62 optional_function_argument_list optional_function_type '>' $@63

    ':'       reduce using rule 703 ($@62)
    '>'       reduce using rule 703 ($@62)
    '('       reduce using rule 703 ($@62)
    $default  reduce using rule 700 ($@60)

    $@60  go to state 578
    $@62  go to state 579


State 393

  709 type_declaration_no_options: "function" '<' . $@64 type_declaration '>' $@65
  712                            | "function" '<' . $@66 optional_function_argument_list optional_function_type '>' $@67

    ':'       reduce using rule 710 ($@66)
    '>'       reduce using rule 710 ($@66)
    '('       reduce using rule 710 ($@66)
    $default  reduce using rule 707 ($@64)

    $@64  go to state 580
    $@66  go to state 581


State 394

  716 type_declaration_no_options: "lambda" '<' . $@68 type_declaration '>' $@69
  719                            | "lambda" '<' . $@70 optional_function_argument_list optional_function_type '>' $@71

    ':'       reduce using rule 717 ($@70)
    '>'       reduce using rule 717 ($@70)
    '('       reduce using rule 717 ($@70)
    $default  reduce using rule 714 ($@68)

    $@68  go to state 582
    $@70  go to state 583


State 395

  722 type_declaration_no_options: "tuple" '<' . $@72 tuple_type_list '>' $@73

    $default  reduce using rule 720 ($@72)

    $@72  go to state 584


State 396

  725 type_declaration_no_options: "variant" '<' . $@74 variant_type_list '>' $@75

    $default  reduce using rule 723 ($@74)

    $@74  go to state 585


State 397

  648 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 586
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 398

  671 type_declaration_no_options: '$' name_in_namespace . '(' optional_expr_list ')'
  673                            | '$' name_in_namespace . '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 587
    '('  shift, and go to state 588


State 399

  676 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 676 (type_declaration_no_options)


State 400

  681 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 681 (type_declaration_no_options)


State 401

  675 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 675 (type_declaration_no_options)


State 402

  683 type_declaration_no_options: type_declaration_no_options "==" . "const"
  684                            | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 589
    '&'      shift, and go to state 590


State 403

  689 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 689 (type_declaration_no_options)


State 404

  685 type_declaration_no_options: type_declaration_no_options '?' .

    $default  reduce using rule 685 (type_declaration_no_options)


State 405

  678 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 678 (type_declaration_no_options)


State 406

  674 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  677                            | type_declaration_no_options '-' . "const"
  679                            | type_declaration_no_options '-' . '&'
  682                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 591
    '&'      shift, and go to state 592
    '['      shift, and go to state 593
    '#'      shift, and go to state 594


State 407

  659 dim_list: '[' . expr ']'
  666 type_declaration_no_options: type_declaration_no_options '[' . ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    ']'                               shift, and go to state 595
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 596
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 408

  680 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 680 (type_declaration_no_options)


State 409

  660 dim_list: dim_list . '[' expr ']'
  665 type_declaration_no_options: type_declaration_no_options dim_list .

    '['  shift, and go to state 597

    '['       [reduce using rule 665 (type_declaration_no_options)]
    $default  reduce using rule 665 (type_declaration_no_options)


State 410

  727 type_declaration: type_declaration '|' . type_declaration_no_options
  728                 | type_declaration '|' . '#'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344
    '#'          shift, and go to state 598

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 599


State 411

  652 bitfield_alias_bits: bitfield_alias_bits . ';'
  653                    | bitfield_alias_bits . "name" ';'
  743 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 '{' $@86 bitfield_alias_bits . $@87 '}'

    "name"  shift, and go to state 600
    ';'     shift, and go to state 601

    $default  reduce using rule 742 ($@87)

    $@87  go to state 602


State 412

  526 tuple_alias_type_list: tuple_alias_type_list . ';'
  527                      | tuple_alias_type_list . tuple_type ';'
  733 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 '{' $@78 tuple_alias_type_list . $@79 '}'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 603
    '$'          shift, and go to state 344
    ';'          shift, and go to state 604

    $default  reduce using rule 732 ($@79)

    name_in_namespace            go to state 345
    tuple_type                   go to state 605
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 606
    $@79                         go to state 607


State 413

  532 variant_alias_type_list: variant_alias_type_list . ';'
  533                        | variant_alias_type_list . variant_type ';'
  738 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 '{' $@82 variant_alias_type_list . $@83 '}'

    "name"  shift, and go to state 608
    ';'     shift, and go to state 609

    $default  reduce using rule 737 ($@83)

    variant_type  go to state 610
    $@83          go to state 611


State 414

  183 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 183 (function_name)


State 415

  173 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 173 (function_name)


State 416

  518 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 612
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 417

  517 function_argument_declaration: optional_field_annotation "var" . variable_declaration

    "$i"    shift, and go to state 418
    "name"  shift, and go to state 419

    variable_declaration         go to state 613
    variable_name_with_pos_list  go to state 421


State 418

  608 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 614


State 419

  607 variable_name_with_pos_list: "name" .
  609                            | "name" . "aka" "name"

    "aka"  shift, and go to state 615

    $default  reduce using rule 607 (variable_name_with_pos_list)


State 420

  516 function_argument_declaration: optional_field_annotation variable_declaration .

    $default  reduce using rule 516 (function_argument_declaration)


State 421

  536 variable_declaration: variable_name_with_pos_list .
  537                     | variable_name_with_pos_list . '&'
  538                     | variable_name_with_pos_list . ':' type_declaration
  539                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  540                     | variable_name_with_pos_list . copy_or_move expr
  541                     | variable_name_with_pos_list . copy_or_move expr_pipe
  610 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  611                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 616
    ','   shift, and go to state 617
    '='   shift, and go to state 618
    ':'   shift, and go to state 619
    '&'   shift, and go to state 620

    $default  reduce using rule 536 (variable_declaration)

    copy_or_move  go to state 621


State 422

  121 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 121 (optional_function_argument_list)


State 423

  520 function_argument_list: function_argument_list ';' . function_argument_declaration

    "$a"  shift, and go to state 362
    "[["  shift, and go to state 218

    $default  reduce using rule 495 (optional_field_annotation)

    optional_field_annotation      go to state 364
    function_argument_declaration  go to state 622


State 424

  123 optional_function_type: ':' type_declaration .
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 123 (optional_function_type)


State 425

  243 expressions: expressions error .

    $default  reduce using rule 243 (expressions)


State 426

  781 make_struct_decl: "struct" . '<' $@88 type_declaration_no_options '>' $@89 '(' make_struct_dim ')'

    '<'  shift, and go to state 623


State 427

  784 make_struct_decl: "class" . '<' $@90 type_declaration_no_options '>' $@91 '(' make_struct_dim ')'

    '<'  shift, and go to state 624


State 428

   78 expression_while_loop: "while" . expr expression_block

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 625
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 429

   62 if_or_static_if: "if" .

    $default  reduce using rule 62 (if_or_static_if)


State 430

   63 if_or_static_if: "static_if" .

    $default  reduce using rule 63 (if_or_static_if)


State 431

   76 expression_for_loop: "for" . $@4 variable_name_with_pos_list "in" expr_list expression_block

    $default  reduce using rule 75 ($@4)

    $@4  go to state 626


State 432

  401 expr: "true" .

    $default  reduce using rule 401 (expr)


State 433

  402 expr: "false" .

    $default  reduce using rule 402 (expr)


State 434

  271 expr_new: "new" . new_type_declaration
  272         | "new" . new_type_declaration '(' ')'
  273         | "new" . new_type_declaration '(' expr_list ')'
  274         | "new" . new_type_declaration '(' make_struct_dim ')'
  275         | "new" . make_decl

    "struct"       shift, and go to state 426
    "class"        shift, and go to state 427
    "array"        shift, and go to state 437
    "table"        shift, and go to state 442
    "fixed_array"  shift, and go to state 456
    "default"      shift, and go to state 457
    "tuple"        shift, and go to state 459
    "variant"      shift, and go to state 460
    "::"           shift, and go to state 58
    "[["           shift, and go to state 475
    "[{"           shift, and go to state 476
    "{{"           shift, and go to state 477
    "name"         shift, and go to state 59
    '<'            shift, and go to state 627
    '['            shift, and go to state 493
    '{'            shift, and go to state 498

    name_in_namespace           go to state 345
    new_type_declaration        go to state 628
    structure_type_declaration  go to state 629
    make_decl                   go to state 630
    make_struct_decl            go to state 546
    make_tuple_call             go to state 547
    make_dim_decl               go to state 548
    make_table_decl             go to state 549
    array_comprehension         go to state 550


State 435

  312 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  313               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  314               | "typeinfo" . '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

    '('  shift, and go to state 631


State 436

  311 expr_type_decl: "type" . '<' $@19 type_declaration '>' $@20

    '<'  shift, and go to state 632


State 437

  805 make_dim_decl: "array" . '(' expr_list optional_comma ')'
  808              | "array" . '<' $@98 type_declaration_no_options '>' $@99 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 633
    '('  shift, and go to state 634


State 438

  278 expression_return_no_pipe: "return" .
  279                          | "return" . expr_list
  280                          | "return" . "<-" expr_list
  282 expression_return: "return" . expr_pipe
  283                  | "return" . "<-" expr_pipe

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "<-"                              shift, and go to state 635
    "$ <|"                            shift, and go to state 465
    "@ <|"                            shift, and go to state 466
    "@@ <|"                           shift, and go to state 467
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    $default  reduce using rule 278 (expression_return_no_pipe)

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 512
    expression_keyword      go to state 515
    expr_pipe               go to state 636
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 637
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign             go to state 638
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 639
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 439

  395 expr: "null" .

    $default  reduce using rule 395 (expr)


State 440

  276 expression_break: "break" .

    $default  reduce using rule 276 (expression_break)


State 441

  289 expression_try_catch: "try" . expression_block "recover" expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 640


State 442

  819 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  820                | "table" . '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  821                | "table" . '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    '<'  shift, and go to state 641
    '('  shift, and go to state 642


State 443

  265 expression_delete: "delete" . expr
  266                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "explicit"                        shift, and go to state 643
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 644
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 444

  445 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 645


State 445

   79 expression_with: "with" . expr expression_block

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 646
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 446

   81 expression_with_alias: "assume" . "name" '=' $@5 expr

    "name"  shift, and go to state 647


State 447

  302 expr_cast: "cast" . '<' $@13 type_declaration_no_options '>' $@14 expr

    '<'  shift, and go to state 648


State 448

  305 expr_cast: "upcast" . '<' $@15 type_declaration_no_options '>' $@16 expr

    '<'  shift, and go to state 649


State 449

  446 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 650


State 450

  277 expression_continue: "continue" .

    $default  reduce using rule 277 (expression_continue)


State 451

  240 expression_any: "pass" . ';'

    ';'  shift, and go to state 651


State 452

  308 expr_cast: "reinterpret" . '<' $@17 type_declaration_no_options '>' $@18 expr

    '<'  shift, and go to state 652


State 453

   54 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 653


State 454

   55 expression_goto: "goto" . "label" "integer constant"
   56                | "goto" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "label"                           shift, and go to state 654
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 655
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 455

   77 expression_unsafe: "unsafe" . expression_block
  477 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 656
    '{'  shift, and go to state 284

    expression_block  go to state 657


State 456

  809 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  812              | "fixed_array" . '<' $@100 type_declaration_no_options '>' $@101 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 658
    '('  shift, and go to state 659


State 457

  790 make_struct_decl: "default" . '<' $@94 type_declaration_no_options '>' $@95

    '<'  shift, and go to state 660


State 458

  638 basic_type_declaration: "bitfield" .

    $default  reduce using rule 638 (basic_type_declaration)


State 459

  796 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  799                | "tuple" . '<' $@96 type_declaration_no_options '>' $@97 '(' make_struct_dim ')'

    '<'  shift, and go to state 661
    '('  shift, and go to state 662


State 460

  787 make_struct_decl: "variant" . '<' $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim ')'

    '<'  shift, and go to state 663


State 461

  447 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  448     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 664


State 462

  284 expression_yield_no_pipe: "yield" . expr
  285                         | "yield" . "<-" expr
  287 expression_yield: "yield" . expr_pipe
  288                 | "yield" . "<-" expr_pipe

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "<-"                              shift, and go to state 665
    "$ <|"                            shift, and go to state 465
    "@ <|"                            shift, and go to state 466
    "@@ <|"                           shift, and go to state 467
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 512
    expression_keyword      go to state 515
    expr_pipe               go to state 666
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign             go to state 638
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 667
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 463

  431 expr: "++" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 668
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 464

  432 expr: "--" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 669
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 465

  260 expr_pipe: "$ <|" . expr_block

    '$'  shift, and go to state 495
    '@'  shift, and go to state 670
    '{'  shift, and go to state 284

    expression_block  go to state 671
    block_or_lambda   go to state 672
    expr_block        go to state 673


State 466

  258 expr_pipe: "@ <|" . expr_block

    '$'  shift, and go to state 495
    '@'  shift, and go to state 670
    '{'  shift, and go to state 284

    expression_block  go to state 671
    block_or_lambda   go to state 672
    expr_block        go to state 674


State 467

  259 expr_pipe: "@@ <|" . expr_block

    '$'  shift, and go to state 495
    '@'  shift, and go to state 670
    '{'  shift, and go to state 284

    expression_block  go to state 671
    block_or_lambda   go to state 672
    expr_block        go to state 675


State 468

  479 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 676


State 469

  480 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 677


State 470

  481 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 678


State 471

  482 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 679


State 472

  483 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 680


State 473

  485 expr_mtag: "$c" . '(' expr ')' '(' ')'
  486          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 681


State 474

  484 expr_mtag: "..." .

    $default  reduce using rule 484 (expr_mtag)


State 475

  773 make_struct_decl: "[[" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  774                 | "[[" . type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  775                 | "[[" . type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  776                 | "[[" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  803 make_dim_decl: "[[" . type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  827 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 682
    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 683


State 476

  777 make_struct_decl: "[{" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  778                 | "[{" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  804 make_dim_decl: "[{" . type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  828 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "for"        shift, and go to state 684
    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 685


State 477

  818 make_table_decl: "{{" . make_table optional_trailing_semicolon_cur_cur
  830 array_comprehension: "{{" . "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}' '}'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "for"                             shift, and go to state 686
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 687
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_map_tuple          go to state 688
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table              go to state 689
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 478

  336 expr_numeric_const: "integer constant" .

    $default  reduce using rule 336 (expr_numeric_const)


State 479

  338 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 338 (expr_numeric_const)


State 480

  337 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 337 (expr_numeric_const)


State 481

  339 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 339 (expr_numeric_const)


State 482

  340 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 340 (expr_numeric_const)


State 483

  341 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 341 (expr_numeric_const)


State 484

  342 expr_numeric_const: "double constant" .

    $default  reduce using rule 342 (expr_numeric_const)


State 485

  244 expr_keyword: "keyword" . expr expression_block
  253 expression_keyword: "keyword" . '<' $@7 type_declaration_no_options_list '>' $@8 expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '<'                               shift, and go to state 690
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 691
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 486

  256 expression_keyword: "type function" . '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    '<'  shift, and go to state 692


State 487

   31 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 28 (string_builder_body)

    string_builder_body  go to state 693


State 488

  408 expr: '-' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 694
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 489

  407 expr: '+' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 695
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 490

  444 expr: '*' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 696
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 491

  406 expr: '~' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 697
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 492

  405 expr: '!' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 698
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 493

  802 make_dim_decl: '[' . expr_list optional_comma ']'
  826 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "for"                             shift, and go to state 699
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 700
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 494

  435 expr: '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 702
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 495

  320 block_or_lambda: '$' .

    $default  reduce using rule 320 (block_or_lambda)


State 496

  321 block_or_lambda: '@' .
  322                | '@' . '@'
  376 func_addr_expr: '@' . '@' func_addr_name
  379               | '@' . '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name
  382               | '@' . '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name
  494 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 703

    $default  reduce using rule 321 (block_or_lambda)


State 497

  220 expression_any: ';' .

    $default  reduce using rule 220 (expression_any)


State 498

  817 make_table_decl: '{' . expr_map_tuple_list optional_comma '}'
  829 array_comprehension: '{' . "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "for"                             shift, and go to state 704
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 687
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_map_tuple          go to state 705
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    expr_map_tuple_list     go to state 706
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 499

  216 expression_block: '{' expressions '}' .
  217                 | '{' expressions '}' . "finally" '{' expressions '}'

    "finally"  shift, and go to state 707

    $default  reduce using rule 216 (expression_block)


State 500

  399 expr: string_builder .

    $default  reduce using rule 399 (expr)


State 501

  398 expr: expr_reader .

    $default  reduce using rule 398 (expr)


State 502

  238 expression_any: expression_label . ';'

    ';'  shift, and go to state 708


State 503

  239 expression_any: expression_goto . ';'

    ';'  shift, and go to state 709


State 504

   72 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 710
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 505

   74 expression_if_then_else: expression_if_one_liner . "if" $@3 expr expression_else_one_liner ';'

    "if"  shift, and go to state 711


State 506

  236 expression_any: expression_if_then_else .

    $default  reduce using rule 236 (expression_any)


State 507

  231 expression_any: expression_for_loop .

    $default  reduce using rule 231 (expression_any)


State 508

  228 expression_any: expression_unsafe .

    $default  reduce using rule 228 (expression_any)


State 509

  227 expression_any: expression_while_loop .

    $default  reduce using rule 227 (expression_any)


State 510

  229 expression_any: expression_with .

    $default  reduce using rule 229 (expression_any)


State 511

  230 expression_any: expression_with_alias .

    $default  reduce using rule 230 (expression_any)


State 512

  261 expr_pipe: expr_call_pipe .

    $default  reduce using rule 261 (expr_pipe)


State 513

  242 expressions: expressions expression_any .

    $default  reduce using rule 242 (expressions)


State 514

  222 expression_any: expr_keyword .

    $default  reduce using rule 222 (expression_any)


State 515

  219 expr_call_pipe: expression_keyword . expr_full_block_assumed_piped
  478 expr: expression_keyword .

    '$'  shift, and go to state 495
    '@'  shift, and go to state 670

    '$'       [reduce using rule 478 (expr)]
    '@'       [reduce using rule 478 (expr)]
    $default  reduce using rule 478 (expr)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 713


State 516

  221 expression_any: expr_pipe .

    $default  reduce using rule 221 (expression_any)


State 517

  370 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  371                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  390 expr_call: name_in_namespace . '(' ')'
  391          | name_in_namespace . '(' make_struct_dim ')'
  392          | name_in_namespace . '(' expr_list ')'
  396 expr: name_in_namespace .
  476     | name_in_namespace . "name"

    "name"  shift, and go to state 714
    '('     shift, and go to state 715

    "name"    [reduce using rule 396 (expr)]
    '('       [reduce using rule 396 (expr)]
    $default  reduce using rule 396 (expr)


State 518

  225 expression_any: expression_delete . ';'

    ';'  shift, and go to state 716


State 519

  469 expr: expr_new .

    $default  reduce using rule 469 (expr)


State 520

   70 expression_if_one_liner: expression_break .
  232 expression_any: expression_break . ';'

    ';'  shift, and go to state 717

    $default  reduce using rule 70 (expression_if_one_liner)


State 521

   71 expression_if_one_liner: expression_continue .
  233 expression_any: expression_continue . ';'

    ';'  shift, and go to state 718

    $default  reduce using rule 71 (expression_if_one_liner)


State 522

   68 expression_if_one_liner: expression_return_no_pipe .
  281 expression_return: expression_return_no_pipe . ';'

    ';'  shift, and go to state 719

    $default  reduce using rule 68 (expression_if_one_liner)


State 523

  234 expression_any: expression_return .

    $default  reduce using rule 234 (expression_any)


State 524

   69 expression_if_one_liner: expression_yield_no_pipe .
  286 expression_yield: expression_yield_no_pipe . ';'

    ';'  shift, and go to state 720

    $default  reduce using rule 69 (expression_if_one_liner)


State 525

  235 expression_any: expression_yield .

    $default  reduce using rule 235 (expression_any)


State 526

  237 expression_any: expression_try_catch .

    $default  reduce using rule 237 (expression_any)


State 527

  298 expression_let: kwd_let . optional_in_scope let_variable_declaration
  299               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 721

    $default  reduce using rule 293 (optional_in_scope)

    optional_in_scope  go to state 722


State 528

  226 expression_any: expression_let .

    $default  reduce using rule 226 (expression_any)


State 529

  468 expr: expr_cast .

    $default  reduce using rule 468 (expr)


State 530

  467 expr: expr_type_decl .

    $default  reduce using rule 467 (expr)


State 531

  466 expr: expr_type_info .

    $default  reduce using rule 466 (expr)


State 532

  333 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 14

    $default  reduce using rule 117 (optional_annotation_list)

    optional_annotation_list  go to state 723


State 533

  472 expr: expr_full_block .

    $default  reduce using rule 472 (expr)


State 534

  397 expr: expr_numeric_const .

    $default  reduce using rule 397 (expr)


State 535

  224 expression_any: expr_assign . ';'
  257 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 724
    ';'    shift, and go to state 725


State 536

  223 expression_any: expr_assign_pipe .

    $default  reduce using rule 223 (expression_any)


State 537

  471 expr: expr_named_call .

    $default  reduce using rule 471 (expr)


State 538

  470 expr: expr_method_call .

    $default  reduce using rule 470 (expr)


State 539

  442 expr: func_addr_expr .

    $default  reduce using rule 442 (expr)


State 540

  403 expr: expr_field .

    $default  reduce using rule 403 (expr)


State 541

  443 expr: expr_call .

    $default  reduce using rule 443 (expr)


State 542

   67 expression_if_one_liner: expr .
  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  343 expr_assign: expr .
  344            | expr . '=' expr
  345            | expr . "<-" expr
  346            | expr . ":=" expr
  347            | expr . "&=" expr
  348            | expr . "|=" expr
  349            | expr . "^=" expr
  350            | expr . "&&=" expr
  351            | expr . "||=" expr
  352            | expr . "^^=" expr
  353            | expr . "+=" expr
  354            | expr . "-=" expr
  355            | expr . "*=" expr
  356            | expr . "/=" expr
  357            | expr . "%=" expr
  358            | expr . "<<=" expr
  359            | expr . ">>=" expr
  360            | expr . "<<<=" expr
  361            | expr . ">>>=" expr
  362 expr_assign_pipe: expr . '=' "@ <|" expr_block
  363                 | expr . '=' "@@ <|" expr_block
  364                 | expr . '=' "$ <|" expr_block
  365                 | expr . "<-" "@ <|" expr_block
  366                 | expr . "<-" "@@ <|" expr_block
  367                 | expr . "<-" "$ <|" expr_block
  368                 | expr . '=' expr_call_pipe
  369                 | expr . "<-" expr_call_pipe
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 726
    "as"    shift, and go to state 727
    "+="    shift, and go to state 728
    "-="    shift, and go to state 729
    "/="    shift, and go to state 730
    "*="    shift, and go to state 731
    "%="    shift, and go to state 732
    "&="    shift, and go to state 733
    "|="    shift, and go to state 734
    "^="    shift, and go to state 735
    "<<"    shift, and go to state 736
    ">>"    shift, and go to state 737
    "++"    shift, and go to state 738
    "--"    shift, and go to state 739
    "<="    shift, and go to state 740
    "<<="   shift, and go to state 741
    ">>="   shift, and go to state 742
    ">="    shift, and go to state 743
    "=="    shift, and go to state 744
    "!="    shift, and go to state 745
    "->"    shift, and go to state 746
    "<-"    shift, and go to state 747
    "??"    shift, and go to state 748
    "?."    shift, and go to state 749
    "?["    shift, and go to state 750
    "<|"    shift, and go to state 751
    "|>"    shift, and go to state 752
    ":="    shift, and go to state 753
    "<<<"   shift, and go to state 754
    ">>>"   shift, and go to state 755
    "<<<="  shift, and go to state 756
    ">>>="  shift, and go to state 757
    "&&"    shift, and go to state 758
    "||"    shift, and go to state 759
    "^^"    shift, and go to state 760
    "&&="   shift, and go to state 761
    "||="   shift, and go to state 762
    "^^="   shift, and go to state 763
    ".."    shift, and go to state 764
    '='     shift, and go to state 765
    '?'     shift, and go to state 766
    '|'     shift, and go to state 767
    '^'     shift, and go to state 768
    '&'     shift, and go to state 769
    '<'     shift, and go to state 770
    '>'     shift, and go to state 771
    '-'     shift, and go to state 772
    '+'     shift, and go to state 773
    '*'     shift, and go to state 774
    '/'     shift, and go to state 775
    '%'     shift, and go to state 776
    '.'     shift, and go to state 777
    '['     shift, and go to state 778
    '$'     shift, and go to state 495
    '@'     shift, and go to state 670

    "if"      reduce using rule 67 (expression_if_one_liner)
    $default  reduce using rule 343 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 543

  404 expr: expr_mtag .

    $default  reduce using rule 404 (expr)


State 544

  393 expr_call: basic_type_declaration . '(' ')'
  394          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 780


State 545

  400 expr: make_decl .

    $default  reduce using rule 400 (expr)


State 546

  744 make_decl: make_struct_decl .

    $default  reduce using rule 744 (make_decl)


State 547

  748 make_decl: make_tuple_call .

    $default  reduce using rule 748 (make_decl)


State 548

  745 make_decl: make_dim_decl .

    $default  reduce using rule 745 (make_decl)


State 549

  746 make_decl: make_table_decl .

    $default  reduce using rule 746 (make_decl)


State 550

  747 make_decl: array_comprehension .

    $default  reduce using rule 747 (make_decl)


State 551

  591 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@43 . enum_list $@44 '}'

    $default  reduce using rule 568 (enum_list)

    enum_list  go to state 781


State 552

  570 enum_list: enum_list "name" . ';'
  571          | enum_list "name" . '=' expr ';'

    '='  shift, and go to state 782
    ';'  shift, and go to state 783


State 553

  569 enum_list: enum_list ';' .

    $default  reduce using rule 569 (enum_list)


State 554

  588 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@41 enum_list $@42 . '}'

    '}'  shift, and go to state 784


State 555

  593 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 593 (optional_structure_parent)


State 556

  510 struct_variable_declaration_list: struct_variable_declaration_list . $@34 structure_variable_declaration ';'
  512                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header ';'
  514                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block
  515                                 | struct_variable_declaration_list . '[' annotation_list ']' ';'
  603 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list . '}'

    '['  shift, and go to state 785
    '}'  shift, and go to state 786

    "def"     reduce using rule 117 (optional_annotation_list)
    $default  reduce using rule 509 ($@34)

    optional_annotation_list  go to state 787
    $@34                      go to state 788


State 557

  559 global_variable_declaration_list: global_variable_declaration_list $@37 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 559 (global_variable_declaration_list)


State 558

  496 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 496 (optional_field_annotation)


State 559

  477 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 656


State 560

  253 expression_keyword: "keyword" . '<' $@7 type_declaration_no_options_list '>' $@8 expr

    '<'  shift, and go to state 690


State 561

  478 expr: expression_keyword .

    $default  reduce using rule 478 (expr)


State 562

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'
  548 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 789


State 563

  549 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 549 (let_variable_name_with_pos_list)


State 564

  550 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  551                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 790

    $default  reduce using rule 550 (let_variable_name_with_pos_list)


State 565

  552 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . ';'
  553                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr ';'
  554                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  665 type_declaration_no_options: type_declaration_no_options . dim_list
  666                            | type_declaration_no_options . '[' ']'
  674                            | type_declaration_no_options . '-' '[' ']'
  675                            | type_declaration_no_options . "explicit"
  676                            | type_declaration_no_options . "const"
  677                            | type_declaration_no_options . '-' "const"
  678                            | type_declaration_no_options . '&'
  679                            | type_declaration_no_options . '-' '&'
  680                            | type_declaration_no_options . '#'
  681                            | type_declaration_no_options . "implicit"
  682                            | type_declaration_no_options . '-' '#'
  683                            | type_declaration_no_options . "==" "const"
  684                            | type_declaration_no_options . "==" '&'
  685                            | type_declaration_no_options . '?'
  689                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "<-"        shift, and go to state 566
    "??"        shift, and go to state 403
    ":="        shift, and go to state 567
    '='         shift, and go to state 568
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    ';'         shift, and go to state 791
    '#'         shift, and go to state 408

    copy_or_move_or_clone  go to state 792
    dim_list               go to state 409


State 566

  543 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 543 (copy_or_move_or_clone)


State 567

  544 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 544 (copy_or_move_or_clone)


State 568

  542 copy_or_move_or_clone: '=' .

    $default  reduce using rule 542 (copy_or_move_or_clone)


State 569

  555 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr ';'
  556                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 465
    "@ <|"                            shift, and go to state 466
    "@@ <|"                           shift, and go to state 467
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 512
    expression_keyword      go to state 515
    expr_pipe               go to state 793
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign             go to state 638
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 794
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 570

  669 type_declaration_no_options: "type" '<' $@49 . type_declaration '>' $@50

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 795


State 571

  692 type_declaration_no_options: "array" '<' $@54 . type_declaration '>' $@55

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 796


State 572

  695 type_declaration_no_options: "table" '<' $@56 . table_type_pair '>' $@57

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    table_type_pair              go to state 797
    type_declaration_no_options  go to state 350
    type_declaration             go to state 798


State 573

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'
  670 type_declaration_no_options: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 799


State 574

  698 type_declaration_no_options: "iterator" '<' $@58 . type_declaration '>' $@59

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 800


State 575

  688 type_declaration_no_options: "smart_ptr" '<' $@52 . type_declaration '>' $@53

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 801


State 576

  647 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 802


State 577

  656 bitfield_type_declaration: "bitfield" '<' $@47 . bitfield_bits '>' $@48

    "name"  shift, and go to state 803

    bitfield_bits  go to state 804


State 578

  702 type_declaration_no_options: "block" '<' $@60 . type_declaration '>' $@61

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 805


State 579

  705 type_declaration_no_options: "block" '<' $@62 . optional_function_argument_list optional_function_type '>' $@63

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 806


State 580

  709 type_declaration_no_options: "function" '<' $@64 . type_declaration '>' $@65

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 807


State 581

  712 type_declaration_no_options: "function" '<' $@66 . optional_function_argument_list optional_function_type '>' $@67

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 808


State 582

  716 type_declaration_no_options: "lambda" '<' $@68 . type_declaration '>' $@69

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 809


State 583

  719 type_declaration_no_options: "lambda" '<' $@70 . optional_function_argument_list optional_function_type '>' $@71

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 810


State 584

  722 type_declaration_no_options: "tuple" '<' $@72 . tuple_type_list '>' $@73

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 603
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    tuple_type                   go to state 811
    tuple_type_list              go to state 812
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 606


State 585

  725 type_declaration_no_options: "variant" '<' $@74 . variant_type_list '>' $@75

    "name"  shift, and go to state 608

    variant_type       go to state 813
    variant_type_list  go to state 814


State 586

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'
  648 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 815


State 587

  673 type_declaration_no_options: '$' name_in_namespace '<' . $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 672 ($@51)

    $@51  go to state 816


State 588

  671 type_declaration_no_options: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    $default  reduce using rule 245 (optional_expr_list)

    string_builder          go to state 500
    expr_reader             go to state 501
    optional_expr_list      go to state 817
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 818
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 589

  683 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 683 (type_declaration_no_options)


State 590

  684 type_declaration_no_options: type_declaration_no_options "==" '&' .

    $default  reduce using rule 684 (type_declaration_no_options)


State 591

  677 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 677 (type_declaration_no_options)


State 592

  679 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 679 (type_declaration_no_options)


State 593

  674 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 819


State 594

  682 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 682 (type_declaration_no_options)


State 595

  666 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 666 (type_declaration_no_options)


State 596

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'
  659 dim_list: '[' expr . ']'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ']'    shift, and go to state 820


State 597

  660 dim_list: dim_list '[' . expr ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 821
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 598

  728 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 728 (type_declaration)


State 599

  665 type_declaration_no_options: type_declaration_no_options . dim_list
  666                            | type_declaration_no_options . '[' ']'
  674                            | type_declaration_no_options . '-' '[' ']'
  675                            | type_declaration_no_options . "explicit"
  676                            | type_declaration_no_options . "const"
  677                            | type_declaration_no_options . '-' "const"
  678                            | type_declaration_no_options . '&'
  679                            | type_declaration_no_options . '-' '&'
  680                            | type_declaration_no_options . '#'
  681                            | type_declaration_no_options . "implicit"
  682                            | type_declaration_no_options . '-' '#'
  683                            | type_declaration_no_options . "==" "const"
  684                            | type_declaration_no_options . "==" '&'
  685                            | type_declaration_no_options . '?'
  689                            | type_declaration_no_options . "??"
  727 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    $default  reduce using rule 727 (type_declaration)

    dim_list  go to state 409


State 600

  653 bitfield_alias_bits: bitfield_alias_bits "name" . ';'

    ';'  shift, and go to state 822


State 601

  652 bitfield_alias_bits: bitfield_alias_bits ';' .

    $default  reduce using rule 652 (bitfield_alias_bits)


State 602

  743 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 '{' $@86 bitfield_alias_bits $@87 . '}'

    '}'  shift, and go to state 823


State 603

  262 name_in_namespace: "name" .
  263                  | "name" . "::" "name"
  522 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 98
    ':'   shift, and go to state 824

    $default  reduce using rule 262 (name_in_namespace)


State 604

  526 tuple_alias_type_list: tuple_alias_type_list ';' .

    $default  reduce using rule 526 (tuple_alias_type_list)


State 605

  527 tuple_alias_type_list: tuple_alias_type_list tuple_type . ';'

    ';'  shift, and go to state 825


State 606

  521 tuple_type: type_declaration .
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 521 (tuple_type)


State 607

  733 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 '{' $@78 tuple_alias_type_list $@79 . '}'

    '}'  shift, and go to state 826


State 608

  528 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 827


State 609

  532 variant_alias_type_list: variant_alias_type_list ';' .

    $default  reduce using rule 532 (variant_alias_type_list)


State 610

  533 variant_alias_type_list: variant_alias_type_list variant_type . ';'

    ';'  shift, and go to state 828


State 611

  738 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 '{' $@82 variant_alias_type_list $@83 . '}'

    '}'  shift, and go to state 829


State 612

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'
  518 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 830


State 613

  517 function_argument_declaration: optional_field_annotation "var" variable_declaration .

    $default  reduce using rule 517 (function_argument_declaration)


State 614

  608 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 831
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 615

  609 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 832


State 616

  535 copy_or_move: "<-" .

    $default  reduce using rule 535 (copy_or_move)


State 617

  610 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  611                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 833


State 618

  534 copy_or_move: '=' .

    $default  reduce using rule 534 (copy_or_move)


State 619

  538 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  539                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 834


State 620

  537 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 537 (variable_declaration)


State 621

  540 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  541                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 465
    "@ <|"                            shift, and go to state 466
    "@@ <|"                           shift, and go to state 467
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 512
    expression_keyword      go to state 515
    expr_pipe               go to state 835
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign             go to state 638
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 836
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 622

  520 function_argument_list: function_argument_list ';' function_argument_declaration .

    $default  reduce using rule 520 (function_argument_list)


State 623

  781 make_struct_decl: "struct" '<' . $@88 type_declaration_no_options '>' $@89 '(' make_struct_dim ')'

    $default  reduce using rule 779 ($@88)

    $@88  go to state 837


State 624

  784 make_struct_decl: "class" '<' . $@90 type_declaration_no_options '>' $@91 '(' make_struct_dim ')'

    $default  reduce using rule 782 ($@90)

    $@90  go to state 838


State 625

   78 expression_while_loop: "while" expr . expression_block
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '{'    shift, and go to state 284

    expression_block  go to state 839


State 626

   76 expression_for_loop: "for" $@4 . variable_name_with_pos_list "in" expr_list expression_block

    "$i"    shift, and go to state 418
    "name"  shift, and go to state 419

    variable_name_with_pos_list  go to state 840


State 627

  269 new_type_declaration: '<' . $@11 type_declaration '>' $@12

    $default  reduce using rule 267 ($@11)

    $@11  go to state 841


State 628

  271 expr_new: "new" new_type_declaration .
  272         | "new" new_type_declaration . '(' ')'
  273         | "new" new_type_declaration . '(' expr_list ')'
  274         | "new" new_type_declaration . '(' make_struct_dim ')'

    '('  shift, and go to state 842

    '('       [reduce using rule 271 (expr_new)]
    $default  reduce using rule 271 (expr_new)


State 629

  270 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 270 (new_type_declaration)


State 630

  275 expr_new: "new" make_decl .

    $default  reduce using rule 275 (expr_new)


State 631

  312 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  313               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  314               | "typeinfo" '(' . name_in_namespace '<' "name" ';' "name" '>' expr ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 843


State 632

  311 expr_type_decl: "type" '<' . $@19 type_declaration '>' $@20

    $default  reduce using rule 309 ($@19)

    $@19  go to state 844


State 633

  808 make_dim_decl: "array" '<' . $@98 type_declaration_no_options '>' $@99 '(' expr_list optional_comma ')'

    $default  reduce using rule 806 ($@98)

    $@98  go to state 845


State 634

  805 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 846
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 635

  280 expression_return_no_pipe: "return" "<-" . expr_list
  283 expression_return: "return" "<-" . expr_pipe

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 465
    "@ <|"                            shift, and go to state 466
    "@@ <|"                           shift, and go to state 467
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 512
    expression_keyword      go to state 515
    expr_pipe               go to state 847
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 848
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign             go to state 638
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 639
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 636

  282 expression_return: "return" expr_pipe .

    $default  reduce using rule 282 (expression_return)


State 637

  279 expression_return_no_pipe: "return" expr_list .
  316 expr_list: expr_list . ',' expr

    ','  shift, and go to state 849

    $default  reduce using rule 279 (expression_return_no_pipe)


State 638

  257 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 724


State 639

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  315 expr_list: expr .
  343 expr_assign: expr .
  344            | expr . '=' expr
  345            | expr . "<-" expr
  346            | expr . ":=" expr
  347            | expr . "&=" expr
  348            | expr . "|=" expr
  349            | expr . "^=" expr
  350            | expr . "&&=" expr
  351            | expr . "||=" expr
  352            | expr . "^^=" expr
  353            | expr . "+=" expr
  354            | expr . "-=" expr
  355            | expr . "*=" expr
  356            | expr . "/=" expr
  357            | expr . "%=" expr
  358            | expr . "<<=" expr
  359            | expr . ">>=" expr
  360            | expr . "<<<=" expr
  361            | expr . ">>>=" expr
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 726
    "as"    shift, and go to state 727
    "+="    shift, and go to state 728
    "-="    shift, and go to state 729
    "/="    shift, and go to state 730
    "*="    shift, and go to state 731
    "%="    shift, and go to state 732
    "&="    shift, and go to state 733
    "|="    shift, and go to state 734
    "^="    shift, and go to state 735
    "<<"    shift, and go to state 736
    ">>"    shift, and go to state 737
    "++"    shift, and go to state 738
    "--"    shift, and go to state 739
    "<="    shift, and go to state 740
    "<<="   shift, and go to state 741
    ">>="   shift, and go to state 742
    ">="    shift, and go to state 743
    "=="    shift, and go to state 744
    "!="    shift, and go to state 745
    "->"    shift, and go to state 746
    "<-"    shift, and go to state 850
    "??"    shift, and go to state 748
    "?."    shift, and go to state 749
    "?["    shift, and go to state 750
    "<|"    shift, and go to state 751
    "|>"    shift, and go to state 752
    ":="    shift, and go to state 753
    "<<<"   shift, and go to state 754
    ">>>"   shift, and go to state 755
    "<<<="  shift, and go to state 756
    ">>>="  shift, and go to state 757
    "&&"    shift, and go to state 758
    "||"    shift, and go to state 759
    "^^"    shift, and go to state 760
    "&&="   shift, and go to state 761
    "||="   shift, and go to state 762
    "^^="   shift, and go to state 763
    ".."    shift, and go to state 764
    '='     shift, and go to state 851
    '?'     shift, and go to state 766
    '|'     shift, and go to state 767
    '^'     shift, and go to state 768
    '&'     shift, and go to state 769
    '<'     shift, and go to state 770
    '>'     shift, and go to state 771
    '-'     shift, and go to state 772
    '+'     shift, and go to state 773
    '*'     shift, and go to state 774
    '/'     shift, and go to state 775
    '%'     shift, and go to state 776
    '.'     shift, and go to state 777
    '['     shift, and go to state 778
    '$'     shift, and go to state 495
    '@'     shift, and go to state 670

    " <|"     reduce using rule 343 (expr_assign)
    $default  reduce using rule 315 (expr_list)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 640

  289 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 852


State 641

  820 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  821                | "table" '<' . type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 853


State 642

  819 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 687
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_map_tuple          go to state 705
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    expr_map_tuple_list     go to state 854
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 643

  266 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 855
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 644

  265 expression_delete: "delete" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 265 (expression_delete)


State 645

  445 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 856
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 646

   79 expression_with: "with" expr . expression_block
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '{'    shift, and go to state 284

    expression_block  go to state 857


State 647

   81 expression_with_alias: "assume" "name" . '=' $@5 expr

    '='  shift, and go to state 858


State 648

  302 expr_cast: "cast" '<' . $@13 type_declaration_no_options '>' $@14 expr

    $default  reduce using rule 300 ($@13)

    $@13  go to state 859


State 649

  305 expr_cast: "upcast" '<' . $@15 type_declaration_no_options '>' $@16 expr

    $default  reduce using rule 303 ($@15)

    $@15  go to state 860


State 650

  446 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 861
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 651

  240 expression_any: "pass" ';' .

    $default  reduce using rule 240 (expression_any)


State 652

  308 expr_cast: "reinterpret" '<' . $@17 type_declaration_no_options '>' $@18 expr

    $default  reduce using rule 306 ($@17)

    $@17  go to state 862


State 653

   54 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 863


State 654

   55 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 864


State 655

   56 expression_goto: "goto" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 56 (expression_goto)


State 656

  477 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 865
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 657

   77 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 77 (expression_unsafe)


State 658

  812 make_dim_decl: "fixed_array" '<' . $@100 type_declaration_no_options '>' $@101 '(' expr_list optional_comma ')'

    $default  reduce using rule 810 ($@100)

    $@100  go to state 866


State 659

  809 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 867
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 660

  790 make_struct_decl: "default" '<' . $@94 type_declaration_no_options '>' $@95

    $default  reduce using rule 788 ($@94)

    $@94  go to state 868


State 661

  799 make_tuple_call: "tuple" '<' . $@96 type_declaration_no_options '>' $@97 '(' make_struct_dim ')'

    $default  reduce using rule 797 ($@96)

    $@96  go to state 869


State 662

  796 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 870
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 663

  787 make_struct_decl: "variant" '<' . $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim ')'

    $default  reduce using rule 785 ($@92)

    $@92  go to state 871


State 664

  447 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  448     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 872


State 665

  285 expression_yield_no_pipe: "yield" "<-" . expr
  288 expression_yield: "yield" "<-" . expr_pipe

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 465
    "@ <|"                            shift, and go to state 466
    "@@ <|"                           shift, and go to state 467
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 512
    expression_keyword      go to state 515
    expr_pipe               go to state 873
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign             go to state 638
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 874
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 666

  287 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 287 (expression_yield)


State 667

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  284 expression_yield_no_pipe: "yield" expr .
  343 expr_assign: expr .
  344            | expr . '=' expr
  345            | expr . "<-" expr
  346            | expr . ":=" expr
  347            | expr . "&=" expr
  348            | expr . "|=" expr
  349            | expr . "^=" expr
  350            | expr . "&&=" expr
  351            | expr . "||=" expr
  352            | expr . "^^=" expr
  353            | expr . "+=" expr
  354            | expr . "-=" expr
  355            | expr . "*=" expr
  356            | expr . "/=" expr
  357            | expr . "%=" expr
  358            | expr . "<<=" expr
  359            | expr . ">>=" expr
  360            | expr . "<<<=" expr
  361            | expr . ">>>=" expr
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 726
    "as"    shift, and go to state 727
    "+="    shift, and go to state 728
    "-="    shift, and go to state 729
    "/="    shift, and go to state 730
    "*="    shift, and go to state 731
    "%="    shift, and go to state 732
    "&="    shift, and go to state 733
    "|="    shift, and go to state 734
    "^="    shift, and go to state 735
    "<<"    shift, and go to state 736
    ">>"    shift, and go to state 737
    "++"    shift, and go to state 738
    "--"    shift, and go to state 739
    "<="    shift, and go to state 740
    "<<="   shift, and go to state 741
    ">>="   shift, and go to state 742
    ">="    shift, and go to state 743
    "=="    shift, and go to state 744
    "!="    shift, and go to state 745
    "->"    shift, and go to state 746
    "<-"    shift, and go to state 850
    "??"    shift, and go to state 748
    "?."    shift, and go to state 749
    "?["    shift, and go to state 750
    "<|"    shift, and go to state 751
    "|>"    shift, and go to state 752
    ":="    shift, and go to state 753
    "<<<"   shift, and go to state 754
    ">>>"   shift, and go to state 755
    "<<<="  shift, and go to state 756
    ">>>="  shift, and go to state 757
    "&&"    shift, and go to state 758
    "||"    shift, and go to state 759
    "^^"    shift, and go to state 760
    "&&="   shift, and go to state 761
    "||="   shift, and go to state 762
    "^^="   shift, and go to state 763
    ".."    shift, and go to state 764
    '='     shift, and go to state 851
    '?'     shift, and go to state 766
    '|'     shift, and go to state 767
    '^'     shift, and go to state 768
    '&'     shift, and go to state 769
    '<'     shift, and go to state 770
    '>'     shift, and go to state 771
    '-'     shift, and go to state 772
    '+'     shift, and go to state 773
    '*'     shift, and go to state 774
    '/'     shift, and go to state 775
    '%'     shift, and go to state 776
    '.'     shift, and go to state 777
    '['     shift, and go to state 778
    '$'     shift, and go to state 495
    '@'     shift, and go to state 670

    " <|"     reduce using rule 343 (expr_assign)
    $default  reduce using rule 284 (expression_yield_no_pipe)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 668

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  431     | "++" expr .
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 431 (expr)


State 669

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  432     | "--" expr .
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 432 (expr)


State 670

  321 block_or_lambda: '@' .
  322                | '@' . '@'

    '@'  shift, and go to state 875

    $default  reduce using rule 321 (block_or_lambda)


State 671

  331 expr_block: expression_block .

    $default  reduce using rule 331 (expr_block)


State 672

  332 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 14

    $default  reduce using rule 117 (optional_annotation_list)

    optional_annotation_list  go to state 876


State 673

  260 expr_pipe: "$ <|" expr_block .

    $default  reduce using rule 260 (expr_pipe)


State 674

  258 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 258 (expr_pipe)


State 675

  259 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 259 (expr_pipe)


State 676

  479 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 877
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 677

  480 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 878
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 678

  481 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 879
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 679

  482 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 880
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 680

  483 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 881
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 681

  485 expr_mtag: "$c" '(' . expr ')' '(' ')'
  486          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 882
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 682

  827 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "$i"    shift, and go to state 418
    "name"  shift, and go to state 419

    variable_name_with_pos_list  go to state 883


State 683

  665 type_declaration_no_options: type_declaration_no_options . dim_list
  666                            | type_declaration_no_options . '[' ']'
  674                            | type_declaration_no_options . '-' '[' ']'
  675                            | type_declaration_no_options . "explicit"
  676                            | type_declaration_no_options . "const"
  677                            | type_declaration_no_options . '-' "const"
  678                            | type_declaration_no_options . '&'
  679                            | type_declaration_no_options . '-' '&'
  680                            | type_declaration_no_options . '#'
  681                            | type_declaration_no_options . "implicit"
  682                            | type_declaration_no_options . '-' '#'
  683                            | type_declaration_no_options . "==" "const"
  684                            | type_declaration_no_options . "==" '&'
  685                            | type_declaration_no_options . '?'
  689                            | type_declaration_no_options . "??"
  773 make_struct_decl: "[[" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  774                 | "[[" type_declaration_no_options . optional_block optional_trailing_delim_sqr_sqr
  775                 | "[[" type_declaration_no_options . '(' ')' optional_block optional_trailing_delim_sqr_sqr
  776                 | "[[" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  803 make_dim_decl: "[[" type_declaration_no_options . make_dim optional_trailing_semicolon_sqr_sqr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "const"                           shift, and go to state 399
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "where"                           shift, and go to state 884
    "reinterpret"                     shift, and go to state 452
    "implicit"                        shift, and go to state 400
    "explicit"                        shift, and go to state 401
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "=="                              shift, and go to state 402
    "??"                              shift, and go to state 403
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "$f"                              shift, and go to state 885
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 886
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '?'                               shift, and go to state 404
    '&'                               shift, and go to state 405
    '-'                               shift, and go to state 887
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 888
    '('                               shift, and go to state 889
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498
    '#'                               shift, and go to state 408

    $default  reduce using rule 759 (optional_block)

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 890
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    dim_list                go to state 409
    make_decl               go to state 545
    make_struct_fields      go to state 891
    make_struct_dim         go to state 892
    optional_block          go to state 893
    make_struct_decl        go to state 546
    make_tuple              go to state 894
    make_tuple_call         go to state 547
    make_dim                go to state 895
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 684

  828 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "$i"    shift, and go to state 418
    "name"  shift, and go to state 419

    variable_name_with_pos_list  go to state 896


State 685

  665 type_declaration_no_options: type_declaration_no_options . dim_list
  666                            | type_declaration_no_options . '[' ']'
  674                            | type_declaration_no_options . '-' '[' ']'
  675                            | type_declaration_no_options . "explicit"
  676                            | type_declaration_no_options . "const"
  677                            | type_declaration_no_options . '-' "const"
  678                            | type_declaration_no_options . '&'
  679                            | type_declaration_no_options . '-' '&'
  680                            | type_declaration_no_options . '#'
  681                            | type_declaration_no_options . "implicit"
  682                            | type_declaration_no_options . '-' '#'
  683                            | type_declaration_no_options . "==" "const"
  684                            | type_declaration_no_options . "==" '&'
  685                            | type_declaration_no_options . '?'
  689                            | type_declaration_no_options . "??"
  777 make_struct_decl: "[{" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_cur_sqr
  778                 | "[{" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  804 make_dim_decl: "[{" type_declaration_no_options . make_dim optional_trailing_semicolon_cur_sqr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "const"                           shift, and go to state 399
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "implicit"                        shift, and go to state 400
    "explicit"                        shift, and go to state 401
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "=="                              shift, and go to state 402
    "??"                              shift, and go to state 403
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "$f"                              shift, and go to state 885
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 886
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '?'                               shift, and go to state 404
    '&'                               shift, and go to state 405
    '-'                               shift, and go to state 887
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 888
    '('                               shift, and go to state 897
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498
    '#'                               shift, and go to state 408

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 890
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    dim_list                go to state 409
    make_decl               go to state 545
    make_struct_fields      go to state 891
    make_struct_dim         go to state 898
    make_struct_decl        go to state 546
    make_tuple              go to state 894
    make_tuple_call         go to state 547
    make_dim                go to state 899
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 686

  830 array_comprehension: "{{" "for" . variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}' '}'

    "$i"    shift, and go to state 418
    "name"  shift, and go to state 419

    variable_name_with_pos_list  go to state 900


State 687

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'
  794 make_map_tuple: expr . "=>" expr
  795               | expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "=>"   shift, and go to state 901
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 795 (make_map_tuple)


State 688

  813 make_table: make_map_tuple .

    $default  reduce using rule 813 (make_table)


State 689

  814 make_table: make_table . ';' make_map_tuple
  818 make_table_decl: "{{" make_table . optional_trailing_semicolon_cur_cur

    ";}}"  shift, and go to state 902
    ';'    shift, and go to state 903
    '}'    shift, and go to state 904

    optional_trailing_semicolon_cur_cur  go to state 905


State 690

  253 expression_keyword: "keyword" '<' . $@7 type_declaration_no_options_list '>' $@8 expr

    $default  reduce using rule 251 ($@7)

    $@7  go to state 906


State 691

  244 expr_keyword: "keyword" expr . expression_block
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '{'    shift, and go to state 284

    expression_block  go to state 907


State 692

  256 expression_keyword: "type function" '<' . $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    $default  reduce using rule 254 ($@9)

    $@9  go to state 908


State 693

   29 string_builder_body: string_builder_body . character_sequence
   30                    | string_builder_body . "{" expr "}"
   31 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163
    "end of the string"   shift, and go to state 909
    "{"                   shift, and go to state 910

    character_sequence  go to state 911


State 694

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  408 expr: '-' expr .
  409     | expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 408 (expr)


State 695

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  407 expr: '+' expr .
  409     | expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 407 (expr)


State 696

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  444     | '*' expr .
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 444 (expr)


State 697

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  406 expr: '~' expr .
  409     | expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 406 (expr)


State 698

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  405 expr: '!' expr .
  409     | expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 405 (expr)


State 699

  826 array_comprehension: '[' "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 418
    "name"  shift, and go to state 419

    variable_name_with_pos_list  go to state 912


State 700

  316 expr_list: expr_list . ',' expr
  802 make_dim_decl: '[' expr_list . optional_comma ']'

    ','  shift, and go to state 913

    $default  reduce using rule 824 (optional_comma)

    optional_comma  go to state 914


State 701

  315 expr_list: expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 315 (expr_list)


State 702

  316 expr_list: expr_list . ',' expr
  435 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 913

    $default  reduce using rule 824 (optional_comma)

    optional_comma  go to state 915


State 703

  322 block_or_lambda: '@' '@' .
  376 func_addr_expr: '@' '@' . func_addr_name
  379               | '@' '@' . '<' $@22 type_declaration_no_options '>' $@23 func_addr_name
  382               | '@' '@' . '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name
  494 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 916
    "$c"    shift, and go to state 917
    "name"  shift, and go to state 59
    '<'     shift, and go to state 918

    $default  reduce using rule 322 (block_or_lambda)

    name_in_namespace  go to state 919
    func_addr_name     go to state 920


State 704

  829 array_comprehension: '{' "for" . variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}'

    "$i"    shift, and go to state 418
    "name"  shift, and go to state 419

    variable_name_with_pos_list  go to state 921


State 705

  815 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 815 (expr_map_tuple_list)


State 706

  816 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  817 make_table_decl: '{' expr_map_tuple_list . optional_comma '}'

    ','  shift, and go to state 922

    $default  reduce using rule 824 (optional_comma)

    optional_comma  go to state 923


State 707

  217 expression_block: '{' expressions '}' "finally" . '{' expressions '}'

    '{'  shift, and go to state 924


State 708

  238 expression_any: expression_label ';' .

    $default  reduce using rule 238 (expression_any)


State 709

  239 expression_any: expression_goto ';' .

    $default  reduce using rule 239 (expression_any)


State 710

   72 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '{'    shift, and go to state 284

    expression_block  go to state 925


State 711

   74 expression_if_then_else: expression_if_one_liner "if" . $@3 expr expression_else_one_liner ';'

    $default  reduce using rule 73 ($@3)

    $@3  go to state 926


State 712

  335 expr_full_block_assumed_piped: block_or_lambda . $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    $default  reduce using rule 334 ($@21)

    $@21  go to state 927


State 713

  219 expr_call_pipe: expression_keyword expr_full_block_assumed_piped .

    $default  reduce using rule 219 (expr_call_pipe)


State 714

  476 expr: name_in_namespace "name" .

    $default  reduce using rule 476 (expr)


State 715

  370 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  371                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  390 expr_call: name_in_namespace '(' . ')'
  391          | name_in_namespace '(' . make_struct_dim ')'
  392          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "$f"                              shift, and go to state 885
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 886
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 928
    '('                               shift, and go to state 494
    ')'                               shift, and go to state 929
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 930
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_fields      go to state 891
    make_struct_dim         go to state 931
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 716

  225 expression_any: expression_delete ';' .

    $default  reduce using rule 225 (expression_any)


State 717

  232 expression_any: expression_break ';' .

    $default  reduce using rule 232 (expression_any)


State 718

  233 expression_any: expression_continue ';' .

    $default  reduce using rule 233 (expression_any)


State 719

  281 expression_return: expression_return_no_pipe ';' .

    $default  reduce using rule 281 (expression_return)


State 720

  286 expression_yield: expression_yield_no_pipe ';' .

    $default  reduce using rule 286 (expression_yield)


State 721

  292 optional_in_scope: "inscope" .

    $default  reduce using rule 292 (optional_in_scope)


State 722

  298 expression_let: kwd_let optional_in_scope . let_variable_declaration
  299               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 299
    "[["    shift, and go to state 932
    "name"  shift, and go to state 300

    tuple_expansion_variable_declaration  go to state 933
    let_variable_name_with_pos_list       go to state 301
    let_variable_declaration              go to state 934


State 723

  333 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 935

    $default  reduce using rule 329 (optional_capture_list)

    optional_capture_list  go to state 936


State 724

  257 expr_pipe: expr_assign " <|" . expr_block

    '$'  shift, and go to state 495
    '@'  shift, and go to state 670
    '{'  shift, and go to state 284

    expression_block  go to state 671
    block_or_lambda   go to state 672
    expr_block        go to state 937


State 725

  224 expression_any: expr_assign ';' .

    $default  reduce using rule 224 (expression_any)


State 726

  453 expr: expr "is" . "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr "is" . basic_type_declaration
  455     | expr "is" . "name"
  493 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 938
    "bool"      shift, and go to state 310
    "void"      shift, and go to state 311
    "string"    shift, and go to state 312
    "int"       shift, and go to state 314
    "int2"      shift, and go to state 315
    "int3"      shift, and go to state 316
    "int4"      shift, and go to state 317
    "uint"      shift, and go to state 318
    "bitfield"  shift, and go to state 458
    "uint2"     shift, and go to state 320
    "uint3"     shift, and go to state 321
    "uint4"     shift, and go to state 322
    "float"     shift, and go to state 323
    "float2"    shift, and go to state 324
    "float3"    shift, and go to state 325
    "float4"    shift, and go to state 326
    "range"     shift, and go to state 327
    "urange"    shift, and go to state 328
    "range64"   shift, and go to state 329
    "urange64"  shift, and go to state 330
    "int64"     shift, and go to state 332
    "uint64"    shift, and go to state 333
    "double"    shift, and go to state 334
    "int8"      shift, and go to state 337
    "uint8"     shift, and go to state 338
    "int16"     shift, and go to state 339
    "uint16"    shift, and go to state 340
    "$f"        shift, and go to state 939
    "name"      shift, and go to state 940

    basic_type_declaration  go to state 941


State 727

  456 expr: expr "as" . "name"
  459     | expr "as" . "type" '<' $@30 type_declaration '>' $@31
  460     | expr "as" . basic_type_declaration
  491 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 942
    "bool"      shift, and go to state 310
    "void"      shift, and go to state 311
    "string"    shift, and go to state 312
    "int"       shift, and go to state 314
    "int2"      shift, and go to state 315
    "int3"      shift, and go to state 316
    "int4"      shift, and go to state 317
    "uint"      shift, and go to state 318
    "bitfield"  shift, and go to state 458
    "uint2"     shift, and go to state 320
    "uint3"     shift, and go to state 321
    "uint4"     shift, and go to state 322
    "float"     shift, and go to state 323
    "float2"    shift, and go to state 324
    "float3"    shift, and go to state 325
    "float4"    shift, and go to state 326
    "range"     shift, and go to state 327
    "urange"    shift, and go to state 328
    "range64"   shift, and go to state 329
    "urange64"  shift, and go to state 330
    "int64"     shift, and go to state 332
    "uint64"    shift, and go to state 333
    "double"    shift, and go to state 334
    "int8"      shift, and go to state 337
    "uint8"     shift, and go to state 338
    "int16"     shift, and go to state 339
    "uint16"    shift, and go to state 340
    "$f"        shift, and go to state 943
    "name"      shift, and go to state 944

    basic_type_declaration  go to state 945


State 728

  353 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 946
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 729

  354 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 947
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 730

  356 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 948
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 731

  355 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 949
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 732

  357 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 950
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 733

  347 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 951
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 734

  348 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 952
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 735

  349 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 953
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 736

  409 expr: expr "<<" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 954
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 737

  410 expr: expr ">>" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 955
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 738

  433 expr: expr "++" .

    $default  reduce using rule 433 (expr)


State 739

  434 expr: expr "--" .

    $default  reduce using rule 434 (expr)


State 740

  422 expr: expr "<=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 956
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 741

  358 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 957
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 742

  359 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 958
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 743

  423 expr: expr ">=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 959
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 744

  420 expr: expr "==" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 960
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 745

  421 expr: expr "!=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 961
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 746

  372 expr_method_call: expr "->" . "name" '(' ')'
  373                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 962


State 747

  345 expr_assign: expr "<-" . expr
  365 expr_assign_pipe: expr "<-" . "@ <|" expr_block
  366                 | expr "<-" . "@@ <|" expr_block
  367                 | expr "<-" . "$ <|" expr_block
  369                 | expr "<-" . expr_call_pipe

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 963
    "@ <|"                            shift, and go to state 964
    "@@ <|"                           shift, and go to state 965
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 966
    expression_keyword      go to state 515
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 967
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 748

  449 expr: expr "??" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 968
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 749

  440 expr: expr "?." . "name"
  488 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 969
    "name"  shift, and go to state 970


State 750

  438 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 971
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 751

  473 expr: expr "<|" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 972
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 752

  474 expr: expr "|>" . expr
  475     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 973
    expr_mtag               go to state 543
    basic_type_declaration  go to state 974
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 753

  346 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 975
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 754

  411 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 976
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 755

  412 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 977
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 756

  360 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 978
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 757

  361 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 979
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 758

  427 expr: expr "&&" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 980
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 759

  428 expr: expr "||" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 981
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 760

  429 expr: expr "^^" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 982
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 761

  350 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 983
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 762

  351 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 984
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 763

  352 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 985
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 764

  430 expr: expr ".." . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 986
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 765

  344 expr_assign: expr '=' . expr
  362 expr_assign_pipe: expr '=' . "@ <|" expr_block
  363                 | expr '=' . "@@ <|" expr_block
  364                 | expr '=' . "$ <|" expr_block
  368                 | expr '=' . expr_call_pipe

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 987
    "@ <|"                            shift, and go to state 988
    "@@ <|"                           shift, and go to state 989
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 990
    expression_keyword      go to state 515
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 991
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 766

  450 expr: expr '?' . expr ':' expr
  461     | expr '?' . "as" "name"
  464     | expr '?' . "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr '?' . "as" basic_type_declaration
  492 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "as"                              shift, and go to state 992
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 993
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 767

  425 expr: expr '|' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 994
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 768

  426 expr: expr '^' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 995
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 769

  424 expr: expr '&' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 996
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 770

  418 expr: expr '<' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 997
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 771

  419 expr: expr '>' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 998
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 772

  414 expr: expr '-' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 999
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 773

  413 expr: expr '+' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1000
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 774

  415 expr: expr '*' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1001
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 775

  416 expr: expr '/' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1002
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 776

  417 expr: expr '%' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1003
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 777

  383 expr_field: expr '.' . "name"
  384           | expr '.' . '.' "name"
  385           | expr '.' . "name" '(' ')'
  386           | expr '.' . "name" '(' expr_list ')'
  389           | expr '.' . $@26 error $@27
  437 expr: expr '.' . '[' expr ']'
  439     | expr '.' . "?[" expr ']'
  441     | expr '.' . "?." "name"
  487 expr_mtag: expr '.' . "$f" '(' expr ')'
  489          | expr '.' . '.' "$f" '(' expr ')'
  490          | expr '.' . "?." "$f" '(' expr ')'

    "?."    shift, and go to state 1004
    "?["    shift, and go to state 1005
    "$f"    shift, and go to state 1006
    "name"  shift, and go to state 1007
    '.'     shift, and go to state 1008
    '['     shift, and go to state 1009

    $default  reduce using rule 387 ($@26)

    $@26  go to state 1010


State 778

  436 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1011
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 779

  218 expr_call_pipe: expr expr_full_block_assumed_piped .

    $default  reduce using rule 218 (expr_call_pipe)


State 780

  393 expr_call: basic_type_declaration '(' . ')'
  394          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    ')'                               shift, and go to state 1012
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1013
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 781

  569 enum_list: enum_list . ';'
  570          | enum_list . "name" ';'
  571          | enum_list . "name" '=' expr ';'
  591 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@43 enum_list . $@44 '}'

    "name"  shift, and go to state 552
    ';'     shift, and go to state 553

    $default  reduce using rule 590 ($@44)

    $@44  go to state 1014


State 782

  571 enum_list: enum_list "name" '=' . expr ';'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1015
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 783

  570 enum_list: enum_list "name" ';' .

    $default  reduce using rule 570 (enum_list)


State 784

  588 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@41 enum_list $@42 '}' .

    $default  reduce using rule 588 (enum_declaration)


State 785

  118 optional_annotation_list: '[' . annotation_list ']'
  515 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' ';'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 1016
    name_in_namespace             go to state 70


State 786

  603 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list '}' .

    $default  reduce using rule 603 (optional_struct_variable_declaration_list)


State 787

  512 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header ';'
  514                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "def"  shift, and go to state 1017


State 788

  510 struct_variable_declaration_list: struct_variable_declaration_list $@34 . structure_variable_declaration ';'

    "[["  shift, and go to state 218

    $default  reduce using rule 495 (optional_field_annotation)

    optional_field_annotation       go to state 1018
    structure_variable_declaration  go to state 1019


State 789

  548 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 548 (let_variable_name_with_pos_list)


State 790

  551 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1020


State 791

  552 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options ';' .

    $default  reduce using rule 552 (let_variable_declaration)


State 792

  553 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr ';'
  554                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 465
    "@ <|"                            shift, and go to state 466
    "@@ <|"                           shift, and go to state 467
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expr_call_pipe          go to state 512
    expression_keyword      go to state 515
    expr_pipe               go to state 1021
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_assign             go to state 638
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1022
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 793

  556 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 556 (let_variable_declaration)


State 794

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  343 expr_assign: expr .
  344            | expr . '=' expr
  345            | expr . "<-" expr
  346            | expr . ":=" expr
  347            | expr . "&=" expr
  348            | expr . "|=" expr
  349            | expr . "^=" expr
  350            | expr . "&&=" expr
  351            | expr . "||=" expr
  352            | expr . "^^=" expr
  353            | expr . "+=" expr
  354            | expr . "-=" expr
  355            | expr . "*=" expr
  356            | expr . "/=" expr
  357            | expr . "%=" expr
  358            | expr . "<<=" expr
  359            | expr . ">>=" expr
  360            | expr . "<<<=" expr
  361            | expr . ">>>=" expr
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'
  555 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 726
    "as"    shift, and go to state 727
    "+="    shift, and go to state 728
    "-="    shift, and go to state 729
    "/="    shift, and go to state 730
    "*="    shift, and go to state 731
    "%="    shift, and go to state 732
    "&="    shift, and go to state 733
    "|="    shift, and go to state 734
    "^="    shift, and go to state 735
    "<<"    shift, and go to state 736
    ">>"    shift, and go to state 737
    "++"    shift, and go to state 738
    "--"    shift, and go to state 739
    "<="    shift, and go to state 740
    "<<="   shift, and go to state 741
    ">>="   shift, and go to state 742
    ">="    shift, and go to state 743
    "=="    shift, and go to state 744
    "!="    shift, and go to state 745
    "->"    shift, and go to state 746
    "<-"    shift, and go to state 850
    "??"    shift, and go to state 748
    "?."    shift, and go to state 749
    "?["    shift, and go to state 750
    "<|"    shift, and go to state 751
    "|>"    shift, and go to state 752
    ":="    shift, and go to state 753
    "<<<"   shift, and go to state 754
    ">>>"   shift, and go to state 755
    "<<<="  shift, and go to state 756
    ">>>="  shift, and go to state 757
    "&&"    shift, and go to state 758
    "||"    shift, and go to state 759
    "^^"    shift, and go to state 760
    "&&="   shift, and go to state 761
    "||="   shift, and go to state 762
    "^^="   shift, and go to state 763
    ".."    shift, and go to state 764
    '='     shift, and go to state 851
    '?'     shift, and go to state 766
    '|'     shift, and go to state 767
    '^'     shift, and go to state 768
    '&'     shift, and go to state 769
    '<'     shift, and go to state 770
    '>'     shift, and go to state 771
    '-'     shift, and go to state 772
    '+'     shift, and go to state 773
    '*'     shift, and go to state 774
    '/'     shift, and go to state 775
    '%'     shift, and go to state 776
    '.'     shift, and go to state 777
    '['     shift, and go to state 778
    '$'     shift, and go to state 495
    '@'     shift, and go to state 670
    ';'     shift, and go to state 1023

    $default  reduce using rule 343 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 795

  669 type_declaration_no_options: "type" '<' $@49 type_declaration . '>' $@50
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1024


State 796

  692 type_declaration_no_options: "array" '<' $@54 type_declaration . '>' $@55
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1025


State 797

  695 type_declaration_no_options: "table" '<' $@56 table_type_pair . '>' $@57

    '>'  shift, and go to state 1026


State 798

  657 table_type_pair: type_declaration .
  658                | type_declaration . ';' type_declaration
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    ';'  shift, and go to state 1027

    $default  reduce using rule 657 (table_type_pair)


State 799

  670 type_declaration_no_options: "typedecl" '(' expr ')' .

    $default  reduce using rule 670 (type_declaration_no_options)


State 800

  698 type_declaration_no_options: "iterator" '<' $@58 type_declaration . '>' $@59
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1028


State 801

  688 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration . '>' $@53
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1029


State 802

  647 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 647 (auto_type_declaration)


State 803

  649 bitfield_bits: "name" .

    $default  reduce using rule 649 (bitfield_bits)


State 804

  650 bitfield_bits: bitfield_bits . ';' "name"
  656 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits . '>' $@48

    '>'  shift, and go to state 1030
    ';'  shift, and go to state 1031


State 805

  702 type_declaration_no_options: "block" '<' $@60 type_declaration . '>' $@61
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1032


State 806

  705 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list . optional_function_type '>' $@63

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1033


State 807

  709 type_declaration_no_options: "function" '<' $@64 type_declaration . '>' $@65
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1034


State 808

  712 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list . optional_function_type '>' $@67

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1035


State 809

  716 type_declaration_no_options: "lambda" '<' $@68 type_declaration . '>' $@69
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1036


State 810

  719 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list . optional_function_type '>' $@71

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1037


State 811

  523 tuple_type_list: tuple_type .

    $default  reduce using rule 523 (tuple_type_list)


State 812

  524 tuple_type_list: tuple_type_list . ';' tuple_type
  722 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list . '>' $@73

    '>'  shift, and go to state 1038
    ';'  shift, and go to state 1039


State 813

  529 variant_type_list: variant_type .

    $default  reduce using rule 529 (variant_type_list)


State 814

  530 variant_type_list: variant_type_list . ';' variant_type
  725 type_declaration_no_options: "variant" '<' $@74 variant_type_list . '>' $@75

    '>'  shift, and go to state 1040
    ';'  shift, and go to state 1041


State 815

  648 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 648 (auto_type_declaration)


State 816

  673 type_declaration_no_options: '$' name_in_namespace '<' $@51 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    type_declaration_no_options_list  go to state 1042
    name_in_namespace                 go to state 345
    basic_type_declaration            go to state 346
    structure_type_declaration        go to state 347
    auto_type_declaration             go to state 348
    bitfield_type_declaration         go to state 349
    type_declaration_no_options       go to state 350
    type_declaration                  go to state 1043


State 817

  671 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 1044


State 818

  246 optional_expr_list: expr_list .
  316 expr_list: expr_list . ',' expr

    ','  shift, and go to state 849

    $default  reduce using rule 246 (optional_expr_list)


State 819

  674 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 674 (type_declaration_no_options)


State 820

  659 dim_list: '[' expr ']' .

    $default  reduce using rule 659 (dim_list)


State 821

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'
  660 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ']'    shift, and go to state 1045


State 822

  653 bitfield_alias_bits: bitfield_alias_bits "name" ';' .

    $default  reduce using rule 653 (bitfield_alias_bits)


State 823

  743 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@84 "name" $@85 '{' $@86 bitfield_alias_bits $@87 '}' .

    $default  reduce using rule 743 (bitfield_alias_declaration)


State 824

  522 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1046


State 825

  527 tuple_alias_type_list: tuple_alias_type_list tuple_type ';' .

    $default  reduce using rule 527 (tuple_alias_type_list)


State 826

  733 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@76 "name" $@77 '{' $@78 tuple_alias_type_list $@79 '}' .

    $default  reduce using rule 733 (tuple_alias_declaration)


State 827

  528 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1047


State 828

  533 variant_alias_type_list: variant_alias_type_list variant_type ';' .

    $default  reduce using rule 533 (variant_alias_type_list)


State 829

  738 variant_alias_declaration: "variant" optional_public_or_private_alias $@80 "name" $@81 '{' $@82 variant_alias_type_list $@83 '}' .

    $default  reduce using rule 738 (variant_alias_declaration)


State 830

  518 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 518 (function_argument_declaration)


State 831

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'
  608 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1048


State 832

  609 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 609 (variable_name_with_pos_list)


State 833

  610 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  611                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1049

    $default  reduce using rule 610 (variable_name_with_pos_list)


State 834

  538 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  539                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 616
    '='   shift, and go to state 618
    '|'   shift, and go to state 410

    $default  reduce using rule 538 (variable_declaration)

    copy_or_move  go to state 1050


State 835

  541 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 541 (variable_declaration)


State 836

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  343 expr_assign: expr .
  344            | expr . '=' expr
  345            | expr . "<-" expr
  346            | expr . ":=" expr
  347            | expr . "&=" expr
  348            | expr . "|=" expr
  349            | expr . "^=" expr
  350            | expr . "&&=" expr
  351            | expr . "||=" expr
  352            | expr . "^^=" expr
  353            | expr . "+=" expr
  354            | expr . "-=" expr
  355            | expr . "*=" expr
  356            | expr . "/=" expr
  357            | expr . "%=" expr
  358            | expr . "<<=" expr
  359            | expr . ">>=" expr
  360            | expr . "<<<=" expr
  361            | expr . ">>>=" expr
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'
  540 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 726
    "as"    shift, and go to state 727
    "+="    shift, and go to state 728
    "-="    shift, and go to state 729
    "/="    shift, and go to state 730
    "*="    shift, and go to state 731
    "%="    shift, and go to state 732
    "&="    shift, and go to state 733
    "|="    shift, and go to state 734
    "^="    shift, and go to state 735
    "<<"    shift, and go to state 736
    ">>"    shift, and go to state 737
    "++"    shift, and go to state 738
    "--"    shift, and go to state 739
    "<="    shift, and go to state 740
    "<<="   shift, and go to state 741
    ">>="   shift, and go to state 742
    ">="    shift, and go to state 743
    "=="    shift, and go to state 744
    "!="    shift, and go to state 745
    "->"    shift, and go to state 746
    "<-"    shift, and go to state 850
    "??"    shift, and go to state 748
    "?."    shift, and go to state 749
    "?["    shift, and go to state 750
    "<|"    shift, and go to state 751
    "|>"    shift, and go to state 752
    ":="    shift, and go to state 753
    "<<<"   shift, and go to state 754
    ">>>"   shift, and go to state 755
    "<<<="  shift, and go to state 756
    ">>>="  shift, and go to state 757
    "&&"    shift, and go to state 758
    "||"    shift, and go to state 759
    "^^"    shift, and go to state 760
    "&&="   shift, and go to state 761
    "||="   shift, and go to state 762
    "^^="   shift, and go to state 763
    ".."    shift, and go to state 764
    '='     shift, and go to state 851
    '?'     shift, and go to state 766
    '|'     shift, and go to state 767
    '^'     shift, and go to state 768
    '&'     shift, and go to state 769
    '<'     shift, and go to state 770
    '>'     shift, and go to state 771
    '-'     shift, and go to state 772
    '+'     shift, and go to state 773
    '*'     shift, and go to state 774
    '/'     shift, and go to state 775
    '%'     shift, and go to state 776
    '.'     shift, and go to state 777
    '['     shift, and go to state 778
    '$'     shift, and go to state 495
    '@'     shift, and go to state 670

    " <|"     reduce using rule 343 (expr_assign)
    $default  reduce using rule 540 (variable_declaration)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 837

  781 make_struct_decl: "struct" '<' $@88 . type_declaration_no_options '>' $@89 '(' make_struct_dim ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1051


State 838

  784 make_struct_decl: "class" '<' $@90 . type_declaration_no_options '>' $@91 '(' make_struct_dim ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1052


State 839

   78 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 78 (expression_while_loop)


State 840

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list . "in" expr_list expression_block
  610 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  611                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1053
    ','   shift, and go to state 617


State 841

  269 new_type_declaration: '<' $@11 . type_declaration '>' $@12

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1054


State 842

  272 expr_new: "new" new_type_declaration '(' . ')'
  273         | "new" new_type_declaration '(' . expr_list ')'
  274         | "new" new_type_declaration '(' . make_struct_dim ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "$f"                              shift, and go to state 885
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 886
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    ')'                               shift, and go to state 1055
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1056
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_fields      go to state 891
    make_struct_dim         go to state 1057
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 843

  312 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  313               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  314               | "typeinfo" '(' name_in_namespace . '<' "name" ';' "name" '>' expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '<'                               shift, and go to state 1058
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1059
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 844

  311 expr_type_decl: "type" '<' $@19 . type_declaration '>' $@20

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1060


State 845

  808 make_dim_decl: "array" '<' $@98 . type_declaration_no_options '>' $@99 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1061


State 846

  316 expr_list: expr_list . ',' expr
  805 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 913

    $default  reduce using rule 824 (optional_comma)

    optional_comma  go to state 1062


State 847

  283 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 283 (expression_return)


State 848

  280 expression_return_no_pipe: "return" "<-" expr_list .
  316 expr_list: expr_list . ',' expr

    ','  shift, and go to state 849

    $default  reduce using rule 280 (expression_return_no_pipe)


State 849

  316 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1063
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 850

  345 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1064
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 851

  344 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1065
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 852

  289 expression_try_catch: "try" expression_block "recover" . expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 1066


State 853

  665 type_declaration_no_options: type_declaration_no_options . dim_list
  666                            | type_declaration_no_options . '[' ']'
  674                            | type_declaration_no_options . '-' '[' ']'
  675                            | type_declaration_no_options . "explicit"
  676                            | type_declaration_no_options . "const"
  677                            | type_declaration_no_options . '-' "const"
  678                            | type_declaration_no_options . '&'
  679                            | type_declaration_no_options . '-' '&'
  680                            | type_declaration_no_options . '#'
  681                            | type_declaration_no_options . "implicit"
  682                            | type_declaration_no_options . '-' '#'
  683                            | type_declaration_no_options . "==" "const"
  684                            | type_declaration_no_options . "==" '&'
  685                            | type_declaration_no_options . '?'
  689                            | type_declaration_no_options . "??"
  820 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' expr_map_tuple_list optional_comma ')'
  821                | "table" '<' type_declaration_no_options . ';' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1067
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    ';'         shift, and go to state 1068
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 854

  816 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  819 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 922

    $default  reduce using rule 824 (optional_comma)

    optional_comma  go to state 1069


State 855

  266 expression_delete: "delete" "explicit" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 266 (expression_delete)


State 856

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  445     | "deref" '(' expr . ')'
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1070


State 857

   79 expression_with: "with" expr expression_block .

    $default  reduce using rule 79 (expression_with)


State 858

   81 expression_with_alias: "assume" "name" '=' . $@5 expr

    $default  reduce using rule 80 ($@5)

    $@5  go to state 1071


State 859

  302 expr_cast: "cast" '<' $@13 . type_declaration_no_options '>' $@14 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1072


State 860

  305 expr_cast: "upcast" '<' $@15 . type_declaration_no_options '>' $@16 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1073


State 861

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  446     | "addr" '(' expr . ')'
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1074


State 862

  308 expr_cast: "reinterpret" '<' $@17 . type_declaration_no_options '>' $@18 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1075


State 863

   54 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 54 (expression_label)


State 864

   55 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 55 (expression_goto)


State 865

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  477     | "unsafe" '(' expr . ')'
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1076


State 866

  812 make_dim_decl: "fixed_array" '<' $@100 . type_declaration_no_options '>' $@101 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1077


State 867

  316 expr_list: expr_list . ',' expr
  809 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 913

    $default  reduce using rule 824 (optional_comma)

    optional_comma  go to state 1078


State 868

  790 make_struct_decl: "default" '<' $@94 . type_declaration_no_options '>' $@95

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1079


State 869

  799 make_tuple_call: "tuple" '<' $@96 . type_declaration_no_options '>' $@97 '(' make_struct_dim ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1080


State 870

  316 expr_list: expr_list . ',' expr
  796 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 913

    $default  reduce using rule 824 (optional_comma)

    optional_comma  go to state 1081


State 871

  787 make_struct_decl: "variant" '<' $@92 . type_declaration_no_options '>' $@93 '(' make_struct_dim ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1082


State 872

  447 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  448     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  665 type_declaration_no_options: type_declaration_no_options . dim_list
  666                            | type_declaration_no_options . '[' ']'
  674                            | type_declaration_no_options . '-' '[' ']'
  675                            | type_declaration_no_options . "explicit"
  676                            | type_declaration_no_options . "const"
  677                            | type_declaration_no_options . '-' "const"
  678                            | type_declaration_no_options . '&'
  679                            | type_declaration_no_options . '-' '&'
  680                            | type_declaration_no_options . '#'
  681                            | type_declaration_no_options . "implicit"
  682                            | type_declaration_no_options . '-' '#'
  683                            | type_declaration_no_options . "==" "const"
  684                            | type_declaration_no_options . "==" '&'
  685                            | type_declaration_no_options . '?'
  689                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1083
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 873

  288 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 288 (expression_yield)


State 874

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  285 expression_yield_no_pipe: "yield" "<-" expr .
  343 expr_assign: expr .
  344            | expr . '=' expr
  345            | expr . "<-" expr
  346            | expr . ":=" expr
  347            | expr . "&=" expr
  348            | expr . "|=" expr
  349            | expr . "^=" expr
  350            | expr . "&&=" expr
  351            | expr . "||=" expr
  352            | expr . "^^=" expr
  353            | expr . "+=" expr
  354            | expr . "-=" expr
  355            | expr . "*=" expr
  356            | expr . "/=" expr
  357            | expr . "%=" expr
  358            | expr . "<<=" expr
  359            | expr . ">>=" expr
  360            | expr . "<<<=" expr
  361            | expr . ">>>=" expr
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 726
    "as"    shift, and go to state 727
    "+="    shift, and go to state 728
    "-="    shift, and go to state 729
    "/="    shift, and go to state 730
    "*="    shift, and go to state 731
    "%="    shift, and go to state 732
    "&="    shift, and go to state 733
    "|="    shift, and go to state 734
    "^="    shift, and go to state 735
    "<<"    shift, and go to state 736
    ">>"    shift, and go to state 737
    "++"    shift, and go to state 738
    "--"    shift, and go to state 739
    "<="    shift, and go to state 740
    "<<="   shift, and go to state 741
    ">>="   shift, and go to state 742
    ">="    shift, and go to state 743
    "=="    shift, and go to state 744
    "!="    shift, and go to state 745
    "->"    shift, and go to state 746
    "<-"    shift, and go to state 850
    "??"    shift, and go to state 748
    "?."    shift, and go to state 749
    "?["    shift, and go to state 750
    "<|"    shift, and go to state 751
    "|>"    shift, and go to state 752
    ":="    shift, and go to state 753
    "<<<"   shift, and go to state 754
    ">>>"   shift, and go to state 755
    "<<<="  shift, and go to state 756
    ">>>="  shift, and go to state 757
    "&&"    shift, and go to state 758
    "||"    shift, and go to state 759
    "^^"    shift, and go to state 760
    "&&="   shift, and go to state 761
    "||="   shift, and go to state 762
    "^^="   shift, and go to state 763
    ".."    shift, and go to state 764
    '='     shift, and go to state 851
    '?'     shift, and go to state 766
    '|'     shift, and go to state 767
    '^'     shift, and go to state 768
    '&'     shift, and go to state 769
    '<'     shift, and go to state 770
    '>'     shift, and go to state 771
    '-'     shift, and go to state 772
    '+'     shift, and go to state 773
    '*'     shift, and go to state 774
    '/'     shift, and go to state 775
    '%'     shift, and go to state 776
    '.'     shift, and go to state 777
    '['     shift, and go to state 778
    '$'     shift, and go to state 495
    '@'     shift, and go to state 670

    " <|"     reduce using rule 343 (expr_assign)
    $default  reduce using rule 285 (expression_yield_no_pipe)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 875

  322 block_or_lambda: '@' '@' .

    $default  reduce using rule 322 (block_or_lambda)


State 876

  332 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 935

    $default  reduce using rule 329 (optional_capture_list)

    optional_capture_list  go to state 1084


State 877

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  479 expr_mtag: "$$" '(' expr . ')'
  487          | expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1085


State 878

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  480 expr_mtag: "$i" '(' expr . ')'
  487          | expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1086


State 879

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  481 expr_mtag: "$v" '(' expr . ')'
  487          | expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1087


State 880

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  482 expr_mtag: "$b" '(' expr . ')'
  487          | expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1088


State 881

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  483 expr_mtag: "$a" '(' expr . ')'
  487          | expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1089


State 882

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  485 expr_mtag: "$c" '(' expr . ')' '(' ')'
  486          | "$c" '(' expr . ')' '(' expr_list ')'
  487          | expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1090


State 883

  610 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  611                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  827 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 1091
    ','   shift, and go to state 617


State 884

  760 optional_block: "where" . expr_block

    '$'  shift, and go to state 495
    '@'  shift, and go to state 670
    '{'  shift, and go to state 284

    expression_block  go to state 671
    block_or_lambda   go to state 672
    expr_block        go to state 1092


State 885

  753 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  754                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1093


State 886

  262 name_in_namespace: "name" .
  263                  | "name" . "::" "name"
  749 make_struct_fields: "name" . copy_or_move expr
  750                   | "name" . ":=" expr

    "<-"  shift, and go to state 616
    ":="  shift, and go to state 1094
    "::"  shift, and go to state 98
    '='   shift, and go to state 618

    $default  reduce using rule 262 (name_in_namespace)

    copy_or_move  go to state 1095


State 887

  408 expr: '-' . expr
  674 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  677                            | type_declaration_no_options '-' . "const"
  679                            | type_declaration_no_options '-' . '&'
  682                            | type_declaration_no_options '-' . '#'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "const"                           shift, and go to state 591
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '&'                               shift, and go to state 592
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 1096
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498
    '#'                               shift, and go to state 594

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 694
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 888

  659 dim_list: '[' . expr ']'
  666 type_declaration_no_options: type_declaration_no_options '[' . ']'
  802 make_dim_decl: '[' . expr_list optional_comma ']'
  826 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "for"                             shift, and go to state 699
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    ']'                               shift, and go to state 595
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 700
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1097
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 889

  435 expr: '(' . expr_list optional_comma ')'
  775 make_struct_decl: "[[" type_declaration_no_options '(' . ')' optional_block optional_trailing_delim_sqr_sqr
  776                 | "[[" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    ')'                               shift, and go to state 1098
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 702
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 890

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'
  791 make_tuple: expr .
  792           | expr . "=>" expr

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "=>"   shift, and go to state 1099
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 791 (make_tuple)


State 891

  751 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  752                   | make_struct_fields . ',' "name" ":=" expr
  755                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  756                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  757 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 1100

    $default  reduce using rule 757 (make_struct_dim)


State 892

  758 make_struct_dim: make_struct_dim . ';' make_struct_fields
  773 make_struct_decl: "[[" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 884
    ';'      shift, and go to state 1101

    $default  reduce using rule 759 (optional_block)

    optional_block  go to state 1102


State 893

  774 make_struct_decl: "[[" type_declaration_no_options optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1103
    ",]]"  shift, and go to state 1104
    ']'    shift, and go to state 1105

    optional_trailing_delim_sqr_sqr  go to state 1106


State 894

  793 make_tuple: make_tuple . ',' expr
  800 make_dim: make_tuple .

    ','  shift, and go to state 1107

    $default  reduce using rule 800 (make_dim)


State 895

  801 make_dim: make_dim . ';' make_tuple
  803 make_dim_decl: "[[" type_declaration_no_options make_dim . optional_trailing_semicolon_sqr_sqr

    ";]]"  shift, and go to state 1108
    ']'    shift, and go to state 1109
    ';'    shift, and go to state 1110

    optional_trailing_semicolon_sqr_sqr  go to state 1111


State 896

  610 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  611                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  828 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where '}' ']'

    "in"  shift, and go to state 1112
    ','   shift, and go to state 617


State 897

  435 expr: '(' . expr_list optional_comma ')'
  778 make_struct_decl: "[{" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    ')'                               shift, and go to state 1113
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 702
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 898

  758 make_struct_dim: make_struct_dim . ';' make_struct_fields
  777 make_struct_decl: "[{" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"  shift, and go to state 884
    ';'      shift, and go to state 1101

    $default  reduce using rule 759 (optional_block)

    optional_block  go to state 1114


State 899

  801 make_dim: make_dim . ';' make_tuple
  804 make_dim_decl: "[{" type_declaration_no_options make_dim . optional_trailing_semicolon_cur_sqr

    ";}]"  shift, and go to state 1115
    ';'    shift, and go to state 1110
    '}'    shift, and go to state 1116

    optional_trailing_semicolon_cur_sqr  go to state 1117


State 900

  610 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  611                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  830 array_comprehension: "{{" "for" variable_name_with_pos_list . "in" expr_list ';' make_map_tuple array_comprehension_where '}' '}'

    "in"  shift, and go to state 1118
    ','   shift, and go to state 617


State 901

  794 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1119
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 902

  762 optional_trailing_semicolon_cur_cur: ";}}" .

    $default  reduce using rule 762 (optional_trailing_semicolon_cur_cur)


State 903

  814 make_table: make_table ';' . make_map_tuple

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 687
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_map_tuple          go to state 1120
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 904

  761 optional_trailing_semicolon_cur_cur: '}' . '}'

    '}'  shift, and go to state 1121


State 905

  818 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur .

    $default  reduce using rule 818 (make_table_decl)


State 906

  253 expression_keyword: "keyword" '<' $@7 . type_declaration_no_options_list '>' $@8 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    type_declaration_no_options_list  go to state 1122
    name_in_namespace                 go to state 345
    basic_type_declaration            go to state 346
    structure_type_declaration        go to state 347
    auto_type_declaration             go to state 348
    bitfield_type_declaration         go to state 349
    type_declaration_no_options       go to state 350
    type_declaration                  go to state 1043


State 907

  244 expr_keyword: "keyword" expr expression_block .

    $default  reduce using rule 244 (expr_keyword)


State 908

  256 expression_keyword: "type function" '<' $@9 . type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    type_declaration_no_options_list  go to state 1123
    name_in_namespace                 go to state 345
    basic_type_declaration            go to state 346
    structure_type_declaration        go to state 347
    auto_type_declaration             go to state 348
    bitfield_type_declaration         go to state 349
    type_declaration_no_options       go to state 350
    type_declaration                  go to state 1043


State 909

   31 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 31 (string_builder)


State 910

   30 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1124
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 911

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   29 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 220
    STRING_CHARACTER_ESC  shift, and go to state 221

    STRING_CHARACTER      [reduce using rule 29 (string_builder_body)]
    STRING_CHARACTER_ESC  [reduce using rule 29 (string_builder_body)]
    $default              reduce using rule 29 (string_builder_body)


State 912

  610 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  611                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  826 array_comprehension: '[' "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1125
    ','   shift, and go to state 617


State 913

  316 expr_list: expr_list ',' . expr
  825 optional_comma: ',' .

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    $default  reduce using rule 825 (optional_comma)

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1063
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 914

  802 make_dim_decl: '[' expr_list optional_comma . ']'

    ']'  shift, and go to state 1126


State 915

  435 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1127


State 916

  375 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1128


State 917

  494 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1129


State 918

  379 func_addr_expr: '@' '@' '<' . $@22 type_declaration_no_options '>' $@23 func_addr_name
  382               | '@' '@' '<' . $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name

    ':'       reduce using rule 380 ($@24)
    '>'       reduce using rule 380 ($@24)
    '('       reduce using rule 380 ($@24)
    $default  reduce using rule 377 ($@22)

    $@22  go to state 1130
    $@24  go to state 1131


State 919

  374 func_addr_name: name_in_namespace .

    $default  reduce using rule 374 (func_addr_name)


State 920

  376 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 376 (func_addr_expr)


State 921

  610 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  611                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  829 array_comprehension: '{' "for" variable_name_with_pos_list . "in" expr_list ';' make_map_tuple array_comprehension_where '}'

    "in"  shift, and go to state 1132
    ','   shift, and go to state 617


State 922

  816 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  825 optional_comma: ',' .

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    $default  reduce using rule 825 (optional_comma)

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 687
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_map_tuple          go to state 1133
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 923

  817 make_table_decl: '{' expr_map_tuple_list optional_comma . '}'

    '}'  shift, and go to state 1134


State 924

  217 expression_block: '{' expressions '}' "finally" '{' . expressions '}'

    $default  reduce using rule 241 (expressions)

    expressions  go to state 1135


State 925

   72 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1136
    "elif"         shift, and go to state 1137
    "static_elif"  shift, and go to state 1138

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1139
    expression_else      go to state 1140


State 926

   74 expression_if_then_else: expression_if_one_liner "if" $@3 . expr expression_else_one_liner ';'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1141
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 927

  335 expr_full_block_assumed_piped: block_or_lambda $@21 . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 14

    $default  reduce using rule 117 (optional_annotation_list)

    optional_annotation_list  go to state 1142


State 928

  370 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  802 make_dim_decl: '[' . expr_list optional_comma ']'
  826 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "for"                             shift, and go to state 699
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "$f"                              shift, and go to state 885
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 886
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 700
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_fields      go to state 1143
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 929

  390 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 390 (expr_call)


State 930

  316 expr_list: expr_list . ',' expr
  371 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  392 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1144
    ')'  shift, and go to state 1145


State 931

  391 expr_call: name_in_namespace '(' make_struct_dim . ')'
  758 make_struct_dim: make_struct_dim . ';' make_struct_fields

    ')'  shift, and go to state 1146
    ';'  shift, and go to state 1101


State 932

  296 tuple_expansion_variable_declaration: "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  297                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr ';'

    "name"  shift, and go to state 1147

    tuple_expansion  go to state 1148


State 933

  299 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 299 (expression_let)


State 934

  298 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 298 (expression_let)


State 935

  330 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"  shift, and go to state 1149
    ":="  shift, and go to state 1150
    '='   shift, and go to state 1151
    '&'   shift, and go to state 1152

    capture_entry  go to state 1153
    capture_list   go to state 1154


State 936

  333 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 1155


State 937

  257 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 257 (expr_pipe)


State 938

  453 expr: expr "is" "type" . '<' $@28 type_declaration_no_options '>' $@29

    '<'  shift, and go to state 1156


State 939

  493 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1157


State 940

  455 expr: expr "is" "name" .

    $default  reduce using rule 455 (expr)


State 941

  454 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 454 (expr)


State 942

  459 expr: expr "as" "type" . '<' $@30 type_declaration '>' $@31

    '<'  shift, and go to state 1158


State 943

  491 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1159


State 944

  456 expr: expr "as" "name" .

    $default  reduce using rule 456 (expr)


State 945

  460 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 460 (expr)


State 946

  353 expr_assign: expr "+=" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 353 (expr_assign)


State 947

  354 expr_assign: expr "-=" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 354 (expr_assign)


State 948

  356 expr_assign: expr "/=" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 356 (expr_assign)


State 949

  355 expr_assign: expr "*=" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 355 (expr_assign)


State 950

  357 expr_assign: expr "%=" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 357 (expr_assign)


State 951

  347 expr_assign: expr "&=" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 347 (expr_assign)


State 952

  348 expr_assign: expr "|=" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 348 (expr_assign)


State 953

  349 expr_assign: expr "^=" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 349 (expr_assign)


State 954

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  409     | expr "<<" expr .
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "??"  shift, and go to state 748
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '-'   shift, and go to state 772
    '+'   shift, and go to state 773
    '*'   shift, and go to state 774
    '/'   shift, and go to state 775
    '%'   shift, and go to state 776
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 409 (expr)


State 955

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  410     | expr ">>" expr .
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "??"  shift, and go to state 748
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '-'   shift, and go to state 772
    '+'   shift, and go to state 773
    '*'   shift, and go to state 774
    '/'   shift, and go to state 775
    '%'   shift, and go to state 776
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 410 (expr)


State 956

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  422     | expr "<=" expr .
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 422 (expr)


State 957

  358 expr_assign: expr "<<=" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 358 (expr_assign)


State 958

  359 expr_assign: expr ">>=" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 359 (expr_assign)


State 959

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  423     | expr ">=" expr .
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 423 (expr)


State 960

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  420     | expr "==" expr .
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 420 (expr)


State 961

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  421     | expr "!=" expr .
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 421 (expr)


State 962

  372 expr_method_call: expr "->" "name" . '(' ')'
  373                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1160


State 963

  367 expr_assign_pipe: expr "<-" "$ <|" . expr_block

    '$'  shift, and go to state 495
    '@'  shift, and go to state 670
    '{'  shift, and go to state 284

    expression_block  go to state 671
    block_or_lambda   go to state 672
    expr_block        go to state 1161


State 964

  365 expr_assign_pipe: expr "<-" "@ <|" . expr_block

    '$'  shift, and go to state 495
    '@'  shift, and go to state 670
    '{'  shift, and go to state 284

    expression_block  go to state 671
    block_or_lambda   go to state 672
    expr_block        go to state 1162


State 965

  366 expr_assign_pipe: expr "<-" "@@ <|" . expr_block

    '$'  shift, and go to state 495
    '@'  shift, and go to state 670
    '{'  shift, and go to state 284

    expression_block  go to state 671
    block_or_lambda   go to state 672
    expr_block        go to state 1163


State 966

  369 expr_assign_pipe: expr "<-" expr_call_pipe .

    $default  reduce using rule 369 (expr_assign_pipe)


State 967

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  345 expr_assign: expr "<-" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '$'    shift, and go to state 495
    '@'    shift, and go to state 670

    $default  reduce using rule 345 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 968

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  449     | expr "??" expr .
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "??"  shift, and go to state 748
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 449 (expr)


State 969

  488 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1164


State 970

  440 expr: expr "?." "name" .

    $default  reduce using rule 440 (expr)


State 971

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  438     | expr "?[" expr . ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ']'    shift, and go to state 1165


State 972

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  473     | expr "<|" expr .
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 746
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 473 (expr)


State 973

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  474     | expr "|>" expr .
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 746
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 474 (expr)


State 974

  393 expr_call: basic_type_declaration . '(' ')'
  394          | basic_type_declaration . '(' expr_list ')'
  475 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 780

    $default  reduce using rule 475 (expr)


State 975

  346 expr_assign: expr ":=" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 346 (expr_assign)


State 976

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  411     | expr "<<<" expr .
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "??"  shift, and go to state 748
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '-'   shift, and go to state 772
    '+'   shift, and go to state 773
    '*'   shift, and go to state 774
    '/'   shift, and go to state 775
    '%'   shift, and go to state 776
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 411 (expr)


State 977

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  412     | expr ">>>" expr .
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "??"  shift, and go to state 748
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '-'   shift, and go to state 772
    '+'   shift, and go to state 773
    '*'   shift, and go to state 774
    '/'   shift, and go to state 775
    '%'   shift, and go to state 776
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 412 (expr)


State 978

  360 expr_assign: expr "<<<=" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 360 (expr_assign)


State 979

  361 expr_assign: expr ">>>=" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 361 (expr_assign)


State 980

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  427     | expr "&&" expr .
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 427 (expr)


State 981

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  428     | expr "||" expr .
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "^^"   shift, and go to state 760
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 428 (expr)


State 982

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  429     | expr "^^" expr .
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 429 (expr)


State 983

  350 expr_assign: expr "&&=" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 350 (expr_assign)


State 984

  351 expr_assign: expr "||=" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 351 (expr_assign)


State 985

  352 expr_assign: expr "^^=" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 352 (expr_assign)


State 986

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  430     | expr ".." expr .
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    ".."  error (nonassociative)

    $default  reduce using rule 430 (expr)


State 987

  364 expr_assign_pipe: expr '=' "$ <|" . expr_block

    '$'  shift, and go to state 495
    '@'  shift, and go to state 670
    '{'  shift, and go to state 284

    expression_block  go to state 671
    block_or_lambda   go to state 672
    expr_block        go to state 1166


State 988

  362 expr_assign_pipe: expr '=' "@ <|" . expr_block

    '$'  shift, and go to state 495
    '@'  shift, and go to state 670
    '{'  shift, and go to state 284

    expression_block  go to state 671
    block_or_lambda   go to state 672
    expr_block        go to state 1167


State 989

  363 expr_assign_pipe: expr '=' "@@ <|" . expr_block

    '$'  shift, and go to state 495
    '@'  shift, and go to state 670
    '{'  shift, and go to state 284

    expression_block  go to state 671
    block_or_lambda   go to state 672
    expr_block        go to state 1168


State 990

  368 expr_assign_pipe: expr '=' expr_call_pipe .

    $default  reduce using rule 368 (expr_assign_pipe)


State 991

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  344 expr_assign: expr '=' expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '$'    shift, and go to state 495
    '@'    shift, and go to state 670

    $default  reduce using rule 344 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 992

  461 expr: expr '?' "as" . "name"
  464     | expr '?' "as" . "type" '<' $@32 type_declaration '>' $@33
  465     | expr '?' "as" . basic_type_declaration
  492 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1169
    "bool"      shift, and go to state 310
    "void"      shift, and go to state 311
    "string"    shift, and go to state 312
    "int"       shift, and go to state 314
    "int2"      shift, and go to state 315
    "int3"      shift, and go to state 316
    "int4"      shift, and go to state 317
    "uint"      shift, and go to state 318
    "bitfield"  shift, and go to state 458
    "uint2"     shift, and go to state 320
    "uint3"     shift, and go to state 321
    "uint4"     shift, and go to state 322
    "float"     shift, and go to state 323
    "float2"    shift, and go to state 324
    "float3"    shift, and go to state 325
    "float4"    shift, and go to state 326
    "range"     shift, and go to state 327
    "urange"    shift, and go to state 328
    "range64"   shift, and go to state 329
    "urange64"  shift, and go to state 330
    "int64"     shift, and go to state 332
    "uint64"    shift, and go to state 333
    "double"    shift, and go to state 334
    "int8"      shift, and go to state 337
    "uint8"     shift, and go to state 338
    "int16"     shift, and go to state 339
    "uint16"    shift, and go to state 340
    "$f"        shift, and go to state 1170
    "name"      shift, and go to state 1171

    basic_type_declaration  go to state 1172


State 993

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  450     | expr '?' expr . ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    ':'    shift, and go to state 1173
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778


State 994

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  425     | expr '|' expr .
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 425 (expr)


State 995

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  426     | expr '^' expr .
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 426 (expr)


State 996

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  424     | expr '&' expr .
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 424 (expr)


State 997

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  418     | expr '<' expr .
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 418 (expr)


State 998

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  419     | expr '>' expr .
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 419 (expr)


State 999

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  414     | expr '-' expr .
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "??"  shift, and go to state 748
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '*'   shift, and go to state 774
    '/'   shift, and go to state 775
    '%'   shift, and go to state 776
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 414 (expr)


State 1000

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  413     | expr '+' expr .
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "??"  shift, and go to state 748
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '*'   shift, and go to state 774
    '/'   shift, and go to state 775
    '%'   shift, and go to state 776
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 413 (expr)


State 1001

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  415     | expr '*' expr .
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "??"  shift, and go to state 748
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 415 (expr)


State 1002

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  416     | expr '/' expr .
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "??"  shift, and go to state 748
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 416 (expr)


State 1003

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  417     | expr '%' expr .
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 726
    "as"  shift, and go to state 727
    "++"  shift, and go to state 738
    "--"  shift, and go to state 739
    "->"  shift, and go to state 746
    "??"  shift, and go to state 748
    "?."  shift, and go to state 749
    "?["  shift, and go to state 750
    "<|"  shift, and go to state 751
    "|>"  shift, and go to state 752
    '.'   shift, and go to state 777
    '['   shift, and go to state 778

    $default  reduce using rule 417 (expr)


State 1004

  441 expr: expr '.' "?." . "name"
  490 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1174
    "name"  shift, and go to state 1175


State 1005

  439 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1176
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1006

  487 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1177


State 1007

  383 expr_field: expr '.' "name" .
  385           | expr '.' "name" . '(' ')'
  386           | expr '.' "name" . '(' expr_list ')'

    '('  shift, and go to state 1178

    '('       [reduce using rule 383 (expr_field)]
    $default  reduce using rule 383 (expr_field)


State 1008

  384 expr_field: expr '.' '.' . "name"
  489 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1179
    "name"  shift, and go to state 1180


State 1009

  437 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1181
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1010

  389 expr_field: expr '.' $@26 . error $@27

    error  shift, and go to state 1182


State 1011

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  436     | expr '[' expr . ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ']'    shift, and go to state 1183


State 1012

  393 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 393 (expr_call)


State 1013

  316 expr_list: expr_list . ',' expr
  394 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 849
    ')'  shift, and go to state 1184


State 1014

  591 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@43 enum_list $@44 . '}'

    '}'  shift, and go to state 1185


State 1015

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'
  571 enum_list: enum_list "name" '=' expr . ';'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ';'    shift, and go to state 1186


State 1016

  116 annotation_list: annotation_list . ',' annotation_declaration
  118 optional_annotation_list: '[' annotation_list . ']'
  515 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' ';'

    ','  shift, and go to state 107
    ']'  shift, and go to state 1187


State 1017

  512 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header ';'
  514                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "public"   shift, and go to state 1188
    "private"  shift, and go to state 1189

    $default  reduce using rule 502 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1190


State 1018

  507 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1191

    $default  reduce using rule 505 (optional_static_member_variable)

    optional_static_member_variable  go to state 1192


State 1019

  510 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration . ';'

    ';'  shift, and go to state 1193


State 1020

  551 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 551 (let_variable_name_with_pos_list)


State 1021

  554 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 554 (let_variable_declaration)


State 1022

  218 expr_call_pipe: expr . expr_full_block_assumed_piped
  343 expr_assign: expr .
  344            | expr . '=' expr
  345            | expr . "<-" expr
  346            | expr . ":=" expr
  347            | expr . "&=" expr
  348            | expr . "|=" expr
  349            | expr . "^=" expr
  350            | expr . "&&=" expr
  351            | expr . "||=" expr
  352            | expr . "^^=" expr
  353            | expr . "+=" expr
  354            | expr . "-=" expr
  355            | expr . "*=" expr
  356            | expr . "/=" expr
  357            | expr . "%=" expr
  358            | expr . "<<=" expr
  359            | expr . ">>=" expr
  360            | expr . "<<<=" expr
  361            | expr . ">>>=" expr
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'
  553 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 726
    "as"    shift, and go to state 727
    "+="    shift, and go to state 728
    "-="    shift, and go to state 729
    "/="    shift, and go to state 730
    "*="    shift, and go to state 731
    "%="    shift, and go to state 732
    "&="    shift, and go to state 733
    "|="    shift, and go to state 734
    "^="    shift, and go to state 735
    "<<"    shift, and go to state 736
    ">>"    shift, and go to state 737
    "++"    shift, and go to state 738
    "--"    shift, and go to state 739
    "<="    shift, and go to state 740
    "<<="   shift, and go to state 741
    ">>="   shift, and go to state 742
    ">="    shift, and go to state 743
    "=="    shift, and go to state 744
    "!="    shift, and go to state 745
    "->"    shift, and go to state 746
    "<-"    shift, and go to state 850
    "??"    shift, and go to state 748
    "?."    shift, and go to state 749
    "?["    shift, and go to state 750
    "<|"    shift, and go to state 751
    "|>"    shift, and go to state 752
    ":="    shift, and go to state 753
    "<<<"   shift, and go to state 754
    ">>>"   shift, and go to state 755
    "<<<="  shift, and go to state 756
    ">>>="  shift, and go to state 757
    "&&"    shift, and go to state 758
    "||"    shift, and go to state 759
    "^^"    shift, and go to state 760
    "&&="   shift, and go to state 761
    "||="   shift, and go to state 762
    "^^="   shift, and go to state 763
    ".."    shift, and go to state 764
    '='     shift, and go to state 851
    '?'     shift, and go to state 766
    '|'     shift, and go to state 767
    '^'     shift, and go to state 768
    '&'     shift, and go to state 769
    '<'     shift, and go to state 770
    '>'     shift, and go to state 771
    '-'     shift, and go to state 772
    '+'     shift, and go to state 773
    '*'     shift, and go to state 774
    '/'     shift, and go to state 775
    '%'     shift, and go to state 776
    '.'     shift, and go to state 777
    '['     shift, and go to state 778
    '$'     shift, and go to state 495
    '@'     shift, and go to state 670
    ';'     shift, and go to state 1194

    $default  reduce using rule 343 (expr_assign)

    block_or_lambda                go to state 712
    expr_full_block_assumed_piped  go to state 779


State 1023

  555 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';' .

    $default  reduce using rule 555 (let_variable_declaration)


State 1024

  669 type_declaration_no_options: "type" '<' $@49 type_declaration '>' . $@50

    $default  reduce using rule 668 ($@50)

    $@50  go to state 1195


State 1025

  692 type_declaration_no_options: "array" '<' $@54 type_declaration '>' . $@55

    $default  reduce using rule 691 ($@55)

    $@55  go to state 1196


State 1026

  695 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' . $@57

    $default  reduce using rule 694 ($@57)

    $@57  go to state 1197


State 1027

  658 table_type_pair: type_declaration ';' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1198


State 1028

  698 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' . $@59

    $default  reduce using rule 697 ($@59)

    $@59  go to state 1199


State 1029

  688 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' . $@53

    $default  reduce using rule 687 ($@53)

    $@53  go to state 1200


State 1030

  656 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' . $@48

    $default  reduce using rule 655 ($@48)

    $@48  go to state 1201


State 1031

  650 bitfield_bits: bitfield_bits ';' . "name"

    "name"  shift, and go to state 1202


State 1032

  702 type_declaration_no_options: "block" '<' $@60 type_declaration '>' . $@61

    $default  reduce using rule 701 ($@61)

    $@61  go to state 1203


State 1033

  705 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type . '>' $@63

    '>'  shift, and go to state 1204


State 1034

  709 type_declaration_no_options: "function" '<' $@64 type_declaration '>' . $@65

    $default  reduce using rule 708 ($@65)

    $@65  go to state 1205


State 1035

  712 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type . '>' $@67

    '>'  shift, and go to state 1206


State 1036

  716 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' . $@69

    $default  reduce using rule 715 ($@69)

    $@69  go to state 1207


State 1037

  719 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type . '>' $@71

    '>'  shift, and go to state 1208


State 1038

  722 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' . $@73

    $default  reduce using rule 721 ($@73)

    $@73  go to state 1209


State 1039

  524 tuple_type_list: tuple_type_list ';' . tuple_type

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 603
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    tuple_type                   go to state 1210
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 606


State 1040

  725 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' . $@75

    $default  reduce using rule 724 ($@75)

    $@75  go to state 1211


State 1041

  530 variant_type_list: variant_type_list ';' . variant_type

    "name"  shift, and go to state 608

    variant_type  go to state 1212


State 1042

  250 type_declaration_no_options_list: type_declaration_no_options_list . ';' type_declaration
  673 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    '>'  shift, and go to state 1213
    ';'  shift, and go to state 1214


State 1043

  249 type_declaration_no_options_list: type_declaration .
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 249 (type_declaration_no_options_list)


State 1044

  671 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 671 (type_declaration_no_options)


State 1045

  660 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 660 (dim_list)


State 1046

  522 tuple_type: "name" ':' type_declaration .
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 522 (tuple_type)


State 1047

  528 variant_type: "name" ':' type_declaration .
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 528 (variant_type)


State 1048

  608 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 608 (variable_name_with_pos_list)


State 1049

  611 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1215


State 1050

  539 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1216
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1051

  665 type_declaration_no_options: type_declaration_no_options . dim_list
  666                            | type_declaration_no_options . '[' ']'
  674                            | type_declaration_no_options . '-' '[' ']'
  675                            | type_declaration_no_options . "explicit"
  676                            | type_declaration_no_options . "const"
  677                            | type_declaration_no_options . '-' "const"
  678                            | type_declaration_no_options . '&'
  679                            | type_declaration_no_options . '-' '&'
  680                            | type_declaration_no_options . '#'
  681                            | type_declaration_no_options . "implicit"
  682                            | type_declaration_no_options . '-' '#'
  683                            | type_declaration_no_options . "==" "const"
  684                            | type_declaration_no_options . "==" '&'
  685                            | type_declaration_no_options . '?'
  689                            | type_declaration_no_options . "??"
  781 make_struct_decl: "struct" '<' $@88 type_declaration_no_options . '>' $@89 '(' make_struct_dim ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1217
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1052

  665 type_declaration_no_options: type_declaration_no_options . dim_list
  666                            | type_declaration_no_options . '[' ']'
  674                            | type_declaration_no_options . '-' '[' ']'
  675                            | type_declaration_no_options . "explicit"
  676                            | type_declaration_no_options . "const"
  677                            | type_declaration_no_options . '-' "const"
  678                            | type_declaration_no_options . '&'
  679                            | type_declaration_no_options . '-' '&'
  680                            | type_declaration_no_options . '#'
  681                            | type_declaration_no_options . "implicit"
  682                            | type_declaration_no_options . '-' '#'
  683                            | type_declaration_no_options . "==" "const"
  684                            | type_declaration_no_options . "==" '&'
  685                            | type_declaration_no_options . '?'
  689                            | type_declaration_no_options . "??"
  784 make_struct_decl: "class" '<' $@90 type_declaration_no_options . '>' $@91 '(' make_struct_dim ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1218
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1053

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" . expr_list expression_block

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1219
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1054

  269 new_type_declaration: '<' $@11 type_declaration . '>' $@12
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1220


State 1055

  272 expr_new: "new" new_type_declaration '(' ')' .

    $default  reduce using rule 272 (expr_new)


State 1056

  273 expr_new: "new" new_type_declaration '(' expr_list . ')'
  316 expr_list: expr_list . ',' expr

    ','  shift, and go to state 849
    ')'  shift, and go to state 1221


State 1057

  274 expr_new: "new" new_type_declaration '(' make_struct_dim . ')'
  758 make_struct_dim: make_struct_dim . ';' make_struct_fields

    ')'  shift, and go to state 1222
    ';'  shift, and go to state 1101


State 1058

  313 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  314               | "typeinfo" '(' name_in_namespace '<' . "name" ';' "name" '>' expr ')'

    "name"  shift, and go to state 1223


State 1059

  312 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1224


State 1060

  311 expr_type_decl: "type" '<' $@19 type_declaration . '>' $@20
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1225


State 1061

  665 type_declaration_no_options: type_declaration_no_options . dim_list
  666                            | type_declaration_no_options . '[' ']'
  674                            | type_declaration_no_options . '-' '[' ']'
  675                            | type_declaration_no_options . "explicit"
  676                            | type_declaration_no_options . "const"
  677                            | type_declaration_no_options . '-' "const"
  678                            | type_declaration_no_options . '&'
  679                            | type_declaration_no_options . '-' '&'
  680                            | type_declaration_no_options . '#'
  681                            | type_declaration_no_options . "implicit"
  682                            | type_declaration_no_options . '-' '#'
  683                            | type_declaration_no_options . "==" "const"
  684                            | type_declaration_no_options . "==" '&'
  685                            | type_declaration_no_options . '?'
  689                            | type_declaration_no_options . "??"
  808 make_dim_decl: "array" '<' $@98 type_declaration_no_options . '>' $@99 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1226
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1062

  805 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1227


State 1063

  316 expr_list: expr_list ',' expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 316 (expr_list)


State 1064

  345 expr_assign: expr "<-" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 345 (expr_assign)


State 1065

  344 expr_assign: expr '=' expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 344 (expr_assign)


State 1066

  289 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 289 (expression_try_catch)


State 1067

  820 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' expr_map_tuple_list optional_comma ')'

    '('  shift, and go to state 1228


State 1068

  821 make_table_decl: "table" '<' type_declaration_no_options ';' . type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1229


State 1069

  819 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1230


State 1070

  445 expr: "deref" '(' expr ')' .

    $default  reduce using rule 445 (expr)


State 1071

   81 expression_with_alias: "assume" "name" '=' $@5 . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1231
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1072

  302 expr_cast: "cast" '<' $@13 type_declaration_no_options . '>' $@14 expr
  665 type_declaration_no_options: type_declaration_no_options . dim_list
  666                            | type_declaration_no_options . '[' ']'
  674                            | type_declaration_no_options . '-' '[' ']'
  675                            | type_declaration_no_options . "explicit"
  676                            | type_declaration_no_options . "const"
  677                            | type_declaration_no_options . '-' "const"
  678                            | type_declaration_no_options . '&'
  679                            | type_declaration_no_options . '-' '&'
  680                            | type_declaration_no_options . '#'
  681                            | type_declaration_no_options . "implicit"
  682                            | type_declaration_no_options . '-' '#'
  683                            | type_declaration_no_options . "==" "const"
  684                            | type_declaration_no_options . "==" '&'
  685                            | type_declaration_no_options . '?'
  689                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1232
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1073

  305 expr_cast: "upcast" '<' $@15 type_declaration_no_options . '>' $@16 expr
  665 type_declaration_no_options: type_declaration_no_options . dim_list
  666                            | type_declaration_no_options . '[' ']'
  674                            | type_declaration_no_options . '-' '[' ']'
  675                            | type_declaration_no_options . "explicit"
  676                            | type_declaration_no_options . "const"
  677                            | type_declaration_no_options . '-' "const"
  678                            | type_declaration_no_options . '&'
  679                            | type_declaration_no_options . '-' '&'
  680                            | type_declaration_no_options . '#'
  681                            | type_declaration_no_options . "implicit"
  682                            | type_declaration_no_options . '-' '#'
  683                            | type_declaration_no_options . "==" "const"
  684                            | type_declaration_no_options . "==" '&'
  685                            | type_declaration_no_options . '?'
  689                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1233
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1074

  446 expr: "addr" '(' expr ')' .

    $default  reduce using rule 446 (expr)


State 1075

  308 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options . '>' $@18 expr
  665 type_declaration_no_options: type_declaration_no_options . dim_list
  666                            | type_declaration_no_options . '[' ']'
  674                            | type_declaration_no_options . '-' '[' ']'
  675                            | type_declaration_no_options . "explicit"
  676                            | type_declaration_no_options . "const"
  677                            | type_declaration_no_options . '-' "const"
  678                            | type_declaration_no_options . '&'
  679                            | type_declaration_no_options . '-' '&'
  680                            | type_declaration_no_options . '#'
  681                            | type_declaration_no_options . "implicit"
  682                            | type_declaration_no_options . '-' '#'
  683                            | type_declaration_no_options . "==" "const"
  684                            | type_declaration_no_options . "==" '&'
  685                            | type_declaration_no_options . '?'
  689                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1234
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1076

  477 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 477 (expr)


State 1077

  665 type_declaration_no_options: type_declaration_no_options . dim_list
  666                            | type_declaration_no_options . '[' ']'
  674                            | type_declaration_no_options . '-' '[' ']'
  675                            | type_declaration_no_options . "explicit"
  676                            | type_declaration_no_options . "const"
  677                            | type_declaration_no_options . '-' "const"
  678                            | type_declaration_no_options . '&'
  679                            | type_declaration_no_options . '-' '&'
  680                            | type_declaration_no_options . '#'
  681                            | type_declaration_no_options . "implicit"
  682                            | type_declaration_no_options . '-' '#'
  683                            | type_declaration_no_options . "==" "const"
  684                            | type_declaration_no_options . "==" '&'
  685                            | type_declaration_no_options . '?'
  689                            | type_declaration_no_options . "??"
  812 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options . '>' $@101 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1235
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1078

  809 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1236


State 1079

  665 type_declaration_no_options: type_declaration_no_options . dim_list
  666                            | type_declaration_no_options . '[' ']'
  674                            | type_declaration_no_options . '-' '[' ']'
  675                            | type_declaration_no_options . "explicit"
  676                            | type_declaration_no_options . "const"
  677                            | type_declaration_no_options . '-' "const"
  678                            | type_declaration_no_options . '&'
  679                            | type_declaration_no_options . '-' '&'
  680                            | type_declaration_no_options . '#'
  681                            | type_declaration_no_options . "implicit"
  682                            | type_declaration_no_options . '-' '#'
  683                            | type_declaration_no_options . "==" "const"
  684                            | type_declaration_no_options . "==" '&'
  685                            | type_declaration_no_options . '?'
  689                            | type_declaration_no_options . "??"
  790 make_struct_decl: "default" '<' $@94 type_declaration_no_options . '>' $@95

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1237
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1080

  665 type_declaration_no_options: type_declaration_no_options . dim_list
  666                            | type_declaration_no_options . '[' ']'
  674                            | type_declaration_no_options . '-' '[' ']'
  675                            | type_declaration_no_options . "explicit"
  676                            | type_declaration_no_options . "const"
  677                            | type_declaration_no_options . '-' "const"
  678                            | type_declaration_no_options . '&'
  679                            | type_declaration_no_options . '-' '&'
  680                            | type_declaration_no_options . '#'
  681                            | type_declaration_no_options . "implicit"
  682                            | type_declaration_no_options . '-' '#'
  683                            | type_declaration_no_options . "==" "const"
  684                            | type_declaration_no_options . "==" '&'
  685                            | type_declaration_no_options . '?'
  689                            | type_declaration_no_options . "??"
  799 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options . '>' $@97 '(' make_struct_dim ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1238
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1081

  796 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1239


State 1082

  665 type_declaration_no_options: type_declaration_no_options . dim_list
  666                            | type_declaration_no_options . '[' ']'
  674                            | type_declaration_no_options . '-' '[' ']'
  675                            | type_declaration_no_options . "explicit"
  676                            | type_declaration_no_options . "const"
  677                            | type_declaration_no_options . '-' "const"
  678                            | type_declaration_no_options . '&'
  679                            | type_declaration_no_options . '-' '&'
  680                            | type_declaration_no_options . '#'
  681                            | type_declaration_no_options . "implicit"
  682                            | type_declaration_no_options . '-' '#'
  683                            | type_declaration_no_options . "==" "const"
  684                            | type_declaration_no_options . "==" '&'
  685                            | type_declaration_no_options . '?'
  689                            | type_declaration_no_options . "??"
  787 make_struct_decl: "variant" '<' $@92 type_declaration_no_options . '>' $@93 '(' make_struct_dim ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1240
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1083

  447 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  448     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "[["  shift, and go to state 935

    $default  reduce using rule 329 (optional_capture_list)

    optional_capture_list  go to state 1241


State 1084

  332 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 1242


State 1085

  479 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 479 (expr_mtag)


State 1086

  480 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 480 (expr_mtag)


State 1087

  481 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 481 (expr_mtag)


State 1088

  482 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 482 (expr_mtag)


State 1089

  483 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 483 (expr_mtag)


State 1090

  485 expr_mtag: "$c" '(' expr ')' . '(' ')'
  486          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1243


State 1091

  827 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1244
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1092

  760 optional_block: "where" expr_block .

    $default  reduce using rule 760 (optional_block)


State 1093

  753 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  754                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1245
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1094

  750 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1246
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1095

  749 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1247
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1096

  674 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'
  802 make_dim_decl: '[' . expr_list optional_comma ']'
  826 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "for"                             shift, and go to state 699
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    ']'                               shift, and go to state 819
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 700
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1097

  315 expr_list: expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'
  659 dim_list: '[' expr . ']'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ']'    shift, and go to state 820

    ']'       [reduce using rule 315 (expr_list)]
    $default  reduce using rule 315 (expr_list)


State 1098

  775 make_struct_decl: "[[" type_declaration_no_options '(' ')' . optional_block optional_trailing_delim_sqr_sqr
  776                 | "[[" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 884
    "$f"     shift, and go to state 885
    "name"   shift, and go to state 1248

    $default  reduce using rule 759 (optional_block)

    make_struct_fields  go to state 891
    make_struct_dim     go to state 1249
    optional_block      go to state 1250


State 1099

  792 make_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1251
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1100

  751 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  752                   | make_struct_fields ',' . "name" ":=" expr
  755                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  756                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1252
    "name"  shift, and go to state 1253


State 1101

  758 make_struct_dim: make_struct_dim ';' . make_struct_fields

    "$f"    shift, and go to state 885
    "name"  shift, and go to state 1248

    make_struct_fields  go to state 1254


State 1102

  773 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1103
    ",]]"  shift, and go to state 1104
    ']'    shift, and go to state 1105

    optional_trailing_delim_sqr_sqr  go to state 1255


State 1103

  768 optional_trailing_delim_sqr_sqr: ";]]" .

    $default  reduce using rule 768 (optional_trailing_delim_sqr_sqr)


State 1104

  769 optional_trailing_delim_sqr_sqr: ",]]" .

    $default  reduce using rule 769 (optional_trailing_delim_sqr_sqr)


State 1105

  767 optional_trailing_delim_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1256


State 1106

  774 make_struct_decl: "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 774 (make_struct_decl)


State 1107

  793 make_tuple: make_tuple ',' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1257
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1108

  766 optional_trailing_semicolon_sqr_sqr: ";]]" .

    $default  reduce using rule 766 (optional_trailing_semicolon_sqr_sqr)


State 1109

  765 optional_trailing_semicolon_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1258


State 1110

  801 make_dim: make_dim ';' . make_tuple

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 890
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple              go to state 1259
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1111

  803 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr .

    $default  reduce using rule 803 (make_dim_decl)


State 1112

  828 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where '}' ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1260
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1113

  778 make_struct_decl: "[{" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "$f"    shift, and go to state 885
    "name"  shift, and go to state 1248

    make_struct_fields  go to state 891
    make_struct_dim     go to state 1261


State 1114

  777 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    ";}]"  shift, and go to state 1262
    ",}]"  shift, and go to state 1263
    '}'    shift, and go to state 1264

    optional_trailing_delim_cur_sqr  go to state 1265


State 1115

  764 optional_trailing_semicolon_cur_sqr: ";}]" .

    $default  reduce using rule 764 (optional_trailing_semicolon_cur_sqr)


State 1116

  763 optional_trailing_semicolon_cur_sqr: '}' . ']'

    ']'  shift, and go to state 1266


State 1117

  804 make_dim_decl: "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr .

    $default  reduce using rule 804 (make_dim_decl)


State 1118

  830 array_comprehension: "{{" "for" variable_name_with_pos_list "in" . expr_list ';' make_map_tuple array_comprehension_where '}' '}'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1267
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1119

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'
  794 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 794 (make_map_tuple)


State 1120

  814 make_table: make_table ';' make_map_tuple .

    $default  reduce using rule 814 (make_table)


State 1121

  761 optional_trailing_semicolon_cur_cur: '}' '}' .

    $default  reduce using rule 761 (optional_trailing_semicolon_cur_cur)


State 1122

  250 type_declaration_no_options_list: type_declaration_no_options_list . ';' type_declaration
  253 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list . '>' $@8 expr

    '>'  shift, and go to state 1268
    ';'  shift, and go to state 1214


State 1123

  250 type_declaration_no_options_list: type_declaration_no_options_list . ';' type_declaration
  256 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list . '>' $@10 optional_expr_list_in_braces

    '>'  shift, and go to state 1269
    ';'  shift, and go to state 1214


State 1124

   30 string_builder_body: string_builder_body "{" expr . "}"
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    "}"    shift, and go to state 1270
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778


State 1125

  826 array_comprehension: '[' "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1271
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1126

  802 make_dim_decl: '[' expr_list optional_comma ']' .

    $default  reduce using rule 802 (make_dim_decl)


State 1127

  435 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 435 (expr)


State 1128

  375 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1272
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1129

  494 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1273
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1130

  379 func_addr_expr: '@' '@' '<' $@22 . type_declaration_no_options '>' $@23 func_addr_name

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1274


State 1131

  382 func_addr_expr: '@' '@' '<' $@24 . optional_function_argument_list optional_function_type '>' $@25 func_addr_name

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 1275


State 1132

  829 array_comprehension: '{' "for" variable_name_with_pos_list "in" . expr_list ';' make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1276
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1133

  816 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 816 (expr_map_tuple_list)


State 1134

  817 make_table_decl: '{' expr_map_tuple_list optional_comma '}' .

    $default  reduce using rule 817 (make_table_decl)


State 1135

  217 expression_block: '{' expressions '}' "finally" '{' expressions . '}'
  242 expressions: expressions . expression_any
  243            | expressions . error

    error                             shift, and go to state 425
    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 428
    "if"                              shift, and go to state 429
    "static_if"                       shift, and go to state 430
    "for"                             shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "return"                          shift, and go to state 438
    "null"                            shift, and go to state 439
    "break"                           shift, and go to state 440
    "try"                             shift, and go to state 441
    "table"                           shift, and go to state 442
    "delete"                          shift, and go to state 443
    "deref"                           shift, and go to state 444
    "with"                            shift, and go to state 445
    "assume"                          shift, and go to state 446
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 449
    "continue"                        shift, and go to state 450
    "pass"                            shift, and go to state 451
    "reinterpret"                     shift, and go to state 452
    "label"                           shift, and go to state 453
    "goto"                            shift, and go to state 454
    "unsafe"                          shift, and go to state 455
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "yield"                           shift, and go to state 462
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "$ <|"                            shift, and go to state 465
    "@ <|"                            shift, and go to state 466
    "@@ <|"                           shift, and go to state 467
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 485
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    ';'                               shift, and go to state 497
    '{'                               shift, and go to state 498
    '}'                               shift, and go to state 1277

    string_builder             go to state 500
    expr_reader                go to state 501
    expression_label           go to state 502
    expression_goto            go to state 503
    if_or_static_if            go to state 504
    expression_if_one_liner    go to state 505
    expression_if_then_else    go to state 506
    expression_for_loop        go to state 507
    expression_unsafe          go to state 508
    expression_while_loop      go to state 509
    expression_with            go to state 510
    expression_with_alias      go to state 511
    expr_call_pipe             go to state 512
    expression_any             go to state 513
    expr_keyword               go to state 514
    expression_keyword         go to state 515
    expr_pipe                  go to state 516
    name_in_namespace          go to state 517
    expression_delete          go to state 518
    expr_new                   go to state 519
    expression_break           go to state 520
    expression_continue        go to state 521
    expression_return_no_pipe  go to state 522
    expression_return          go to state 523
    expression_yield_no_pipe   go to state 524
    expression_yield           go to state 525
    expression_try_catch       go to state 526
    kwd_let                    go to state 527
    expression_let             go to state 528
    expr_cast                  go to state 529
    expr_type_decl             go to state 530
    expr_type_info             go to state 531
    block_or_lambda            go to state 532
    expr_full_block            go to state 533
    expr_numeric_const         go to state 534
    expr_assign                go to state 535
    expr_assign_pipe           go to state 536
    expr_named_call            go to state 537
    expr_method_call           go to state 538
    func_addr_expr             go to state 539
    expr_field                 go to state 540
    expr_call                  go to state 541
    expr                       go to state 542
    expr_mtag                  go to state 543
    basic_type_declaration     go to state 544
    make_decl                  go to state 545
    make_struct_decl           go to state 546
    make_tuple_call            go to state 547
    make_dim_decl              go to state 548
    make_table_decl            go to state 549
    array_comprehension        go to state 550


State 1136

   60 expression_else: "else" . expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 1278


State 1137

   57 elif_or_static_elif: "elif" .

    $default  reduce using rule 57 (elif_or_static_elif)


State 1138

   58 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 58 (elif_or_static_elif)


State 1139

   61 expression_else: elif_or_static_elif . expr expression_block expression_else

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1279
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1140

   72 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 72 (expression_if_then_else)


State 1141

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr . expression_else_one_liner ';'
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1280
    "is"    shift, and go to state 726
    "as"    shift, and go to state 727
    "<<"    shift, and go to state 736
    ">>"    shift, and go to state 737
    "++"    shift, and go to state 738
    "--"    shift, and go to state 739
    "<="    shift, and go to state 740
    ">="    shift, and go to state 743
    "=="    shift, and go to state 744
    "!="    shift, and go to state 745
    "->"    shift, and go to state 746
    "??"    shift, and go to state 748
    "?."    shift, and go to state 749
    "?["    shift, and go to state 750
    "<|"    shift, and go to state 751
    "|>"    shift, and go to state 752
    "<<<"   shift, and go to state 754
    ">>>"   shift, and go to state 755
    "&&"    shift, and go to state 758
    "||"    shift, and go to state 759
    "^^"    shift, and go to state 760
    ".."    shift, and go to state 764
    '?'     shift, and go to state 766
    '|'     shift, and go to state 767
    '^'     shift, and go to state 768
    '&'     shift, and go to state 769
    '<'     shift, and go to state 770
    '>'     shift, and go to state 771
    '-'     shift, and go to state 772
    '+'     shift, and go to state 773
    '*'     shift, and go to state 774
    '/'     shift, and go to state 775
    '%'     shift, and go to state 776
    '.'     shift, and go to state 777
    '['     shift, and go to state 778

    $default  reduce using rule 64 (expression_else_one_liner)

    expression_else_one_liner  go to state 1281


State 1142

  335 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type expression_block

    "[["  shift, and go to state 935

    $default  reduce using rule 329 (optional_capture_list)

    optional_capture_list  go to state 1282


State 1143

  370 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  751 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  752                   | make_struct_fields . ',' "name" ":=" expr
  755                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  756                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1100
    ']'  shift, and go to state 1283


State 1144

  316 expr_list: expr_list ',' . expr
  371 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 1284
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1063
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1145

  392 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 392 (expr_call)


State 1146

  391 expr_call: name_in_namespace '(' make_struct_dim ')' .

    $default  reduce using rule 391 (expr_call)


State 1147

  294 tuple_expansion: "name" .

    $default  reduce using rule 294 (tuple_expansion)


State 1148

  295 tuple_expansion: tuple_expansion . ',' "name"
  296 tuple_expansion_variable_declaration: "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  297                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr ';'

    ','  shift, and go to state 1285
    ']'  shift, and go to state 1286


State 1149

  325 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1287


State 1150

  326 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1288


State 1151

  324 capture_entry: '=' . "name"

    "name"  shift, and go to state 1289


State 1152

  323 capture_entry: '&' . "name"

    "name"  shift, and go to state 1290


State 1153

  327 capture_list: capture_entry .

    $default  reduce using rule 327 (capture_list)


State 1154

  328 capture_list: capture_list . ',' capture_entry
  330 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 1291
    ']'  shift, and go to state 1292


State 1155

  333 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1293


State 1156

  453 expr: expr "is" "type" '<' . $@28 type_declaration_no_options '>' $@29

    $default  reduce using rule 451 ($@28)

    $@28  go to state 1294


State 1157

  493 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1295
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1158

  459 expr: expr "as" "type" '<' . $@30 type_declaration '>' $@31

    $default  reduce using rule 457 ($@30)

    $@30  go to state 1296


State 1159

  491 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1297
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1160

  372 expr_method_call: expr "->" "name" '(' . ')'
  373                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    ')'                               shift, and go to state 1298
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1299
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1161

  367 expr_assign_pipe: expr "<-" "$ <|" expr_block .

    $default  reduce using rule 367 (expr_assign_pipe)


State 1162

  365 expr_assign_pipe: expr "<-" "@ <|" expr_block .

    $default  reduce using rule 365 (expr_assign_pipe)


State 1163

  366 expr_assign_pipe: expr "<-" "@@ <|" expr_block .

    $default  reduce using rule 366 (expr_assign_pipe)


State 1164

  488 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1300
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1165

  438 expr: expr "?[" expr ']' .

    $default  reduce using rule 438 (expr)


State 1166

  364 expr_assign_pipe: expr '=' "$ <|" expr_block .

    $default  reduce using rule 364 (expr_assign_pipe)


State 1167

  362 expr_assign_pipe: expr '=' "@ <|" expr_block .

    $default  reduce using rule 362 (expr_assign_pipe)


State 1168

  363 expr_assign_pipe: expr '=' "@@ <|" expr_block .

    $default  reduce using rule 363 (expr_assign_pipe)


State 1169

  464 expr: expr '?' "as" "type" . '<' $@32 type_declaration '>' $@33

    '<'  shift, and go to state 1301


State 1170

  492 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1302


State 1171

  461 expr: expr '?' "as" "name" .

    $default  reduce using rule 461 (expr)


State 1172

  465 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 465 (expr)


State 1173

  450 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1303
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1174

  490 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1304


State 1175

  441 expr: expr '.' "?." "name" .

    $default  reduce using rule 441 (expr)


State 1176

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  439     | expr '.' "?[" expr . ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ']'    shift, and go to state 1305


State 1177

  487 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1306
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1178

  385 expr_field: expr '.' "name" '(' . ')'
  386           | expr '.' "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    ')'                               shift, and go to state 1307
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1308
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1179

  489 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1309


State 1180

  384 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 384 (expr_field)


State 1181

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  437     | expr '.' '[' expr . ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ']'    shift, and go to state 1310


State 1182

  389 expr_field: expr '.' $@26 error . $@27

    $default  reduce using rule 388 ($@27)

    $@27  go to state 1311


State 1183

  436 expr: expr '[' expr ']' .

    $default  reduce using rule 436 (expr)


State 1184

  394 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 394 (expr_call)


State 1185

  591 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@43 enum_list $@44 '}' .

    $default  reduce using rule 591 (enum_declaration)


State 1186

  571 enum_list: enum_list "name" '=' expr ';' .

    $default  reduce using rule 571 (enum_list)


State 1187

  118 optional_annotation_list: '[' annotation_list ']' .
  515 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . ';'

    ';'  shift, and go to state 1312

    $default  reduce using rule 118 (optional_annotation_list)


State 1188

  503 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 503 (optional_public_or_private_member_variable)


State 1189

  504 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 504 (optional_public_or_private_member_variable)


State 1190

  512 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@35 function_declaration_header ';'
  514                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block

    "abstract"  shift, and go to state 1313
    "static"    shift, and go to state 1191

    $default  reduce using rule 505 (optional_static_member_variable)

    optional_static_member_variable  go to state 1314


State 1191

  506 optional_static_member_variable: "static" .

    $default  reduce using rule 506 (optional_static_member_variable)


State 1192

  507 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1315
    "sealed"    shift, and go to state 1316

    $default  reduce using rule 497 (optional_override)

    optional_override  go to state 1317


State 1193

  510 struct_variable_declaration_list: struct_variable_declaration_list $@34 structure_variable_declaration ';' .

    $default  reduce using rule 510 (struct_variable_declaration_list)


State 1194

  553 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr ';' .

    $default  reduce using rule 553 (let_variable_declaration)


State 1195

  669 type_declaration_no_options: "type" '<' $@49 type_declaration '>' $@50 .

    $default  reduce using rule 669 (type_declaration_no_options)


State 1196

  692 type_declaration_no_options: "array" '<' $@54 type_declaration '>' $@55 .

    $default  reduce using rule 692 (type_declaration_no_options)


State 1197

  695 type_declaration_no_options: "table" '<' $@56 table_type_pair '>' $@57 .

    $default  reduce using rule 695 (type_declaration_no_options)


State 1198

  658 table_type_pair: type_declaration ';' type_declaration .
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 658 (table_type_pair)


State 1199

  698 type_declaration_no_options: "iterator" '<' $@58 type_declaration '>' $@59 .

    $default  reduce using rule 698 (type_declaration_no_options)


State 1200

  688 type_declaration_no_options: "smart_ptr" '<' $@52 type_declaration '>' $@53 .

    $default  reduce using rule 688 (type_declaration_no_options)


State 1201

  656 bitfield_type_declaration: "bitfield" '<' $@47 bitfield_bits '>' $@48 .

    $default  reduce using rule 656 (bitfield_type_declaration)


State 1202

  650 bitfield_bits: bitfield_bits ';' "name" .

    $default  reduce using rule 650 (bitfield_bits)


State 1203

  702 type_declaration_no_options: "block" '<' $@60 type_declaration '>' $@61 .

    $default  reduce using rule 702 (type_declaration_no_options)


State 1204

  705 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' . $@63

    $default  reduce using rule 704 ($@63)

    $@63  go to state 1318


State 1205

  709 type_declaration_no_options: "function" '<' $@64 type_declaration '>' $@65 .

    $default  reduce using rule 709 (type_declaration_no_options)


State 1206

  712 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' . $@67

    $default  reduce using rule 711 ($@67)

    $@67  go to state 1319


State 1207

  716 type_declaration_no_options: "lambda" '<' $@68 type_declaration '>' $@69 .

    $default  reduce using rule 716 (type_declaration_no_options)


State 1208

  719 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' . $@71

    $default  reduce using rule 718 ($@71)

    $@71  go to state 1320


State 1209

  722 type_declaration_no_options: "tuple" '<' $@72 tuple_type_list '>' $@73 .

    $default  reduce using rule 722 (type_declaration_no_options)


State 1210

  524 tuple_type_list: tuple_type_list ';' tuple_type .

    $default  reduce using rule 524 (tuple_type_list)


State 1211

  725 type_declaration_no_options: "variant" '<' $@74 variant_type_list '>' $@75 .

    $default  reduce using rule 725 (type_declaration_no_options)


State 1212

  530 variant_type_list: variant_type_list ';' variant_type .

    $default  reduce using rule 530 (variant_type_list)


State 1213

  673 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1321


State 1214

  250 type_declaration_no_options_list: type_declaration_no_options_list ';' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1322


State 1215

  611 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 611 (variable_name_with_pos_list)


State 1216

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'
  539 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 539 (variable_declaration)


State 1217

  781 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' . $@89 '(' make_struct_dim ')'

    $default  reduce using rule 780 ($@89)

    $@89  go to state 1323


State 1218

  784 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' . $@91 '(' make_struct_dim ')'

    $default  reduce using rule 783 ($@91)

    $@91  go to state 1324


State 1219

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list . expression_block
  316 expr_list: expr_list . ',' expr

    ','  shift, and go to state 849
    '{'  shift, and go to state 284

    expression_block  go to state 1325


State 1220

  269 new_type_declaration: '<' $@11 type_declaration '>' . $@12

    $default  reduce using rule 268 ($@12)

    $@12  go to state 1326


State 1221

  273 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 273 (expr_new)


State 1222

  274 expr_new: "new" new_type_declaration '(' make_struct_dim ')' .

    $default  reduce using rule 274 (expr_new)


State 1223

  313 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  314               | "typeinfo" '(' name_in_namespace '<' "name" . ';' "name" '>' expr ')'

    '>'  shift, and go to state 1327
    ';'  shift, and go to state 1328


State 1224

  312 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 312 (expr_type_info)


State 1225

  311 expr_type_decl: "type" '<' $@19 type_declaration '>' . $@20

    $default  reduce using rule 310 ($@20)

    $@20  go to state 1329


State 1226

  808 make_dim_decl: "array" '<' $@98 type_declaration_no_options '>' . $@99 '(' expr_list optional_comma ')'

    $default  reduce using rule 807 ($@99)

    $@99  go to state 1330


State 1227

  805 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 805 (make_dim_decl)


State 1228

  820 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 687
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_map_tuple          go to state 705
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    expr_map_tuple_list     go to state 1331
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1229

  665 type_declaration_no_options: type_declaration_no_options . dim_list
  666                            | type_declaration_no_options . '[' ']'
  674                            | type_declaration_no_options . '-' '[' ']'
  675                            | type_declaration_no_options . "explicit"
  676                            | type_declaration_no_options . "const"
  677                            | type_declaration_no_options . '-' "const"
  678                            | type_declaration_no_options . '&'
  679                            | type_declaration_no_options . '-' '&'
  680                            | type_declaration_no_options . '#'
  681                            | type_declaration_no_options . "implicit"
  682                            | type_declaration_no_options . '-' '#'
  683                            | type_declaration_no_options . "==" "const"
  684                            | type_declaration_no_options . "==" '&'
  685                            | type_declaration_no_options . '?'
  689                            | type_declaration_no_options . "??"
  821 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options . '>' '(' expr_map_tuple_list optional_comma ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1332
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1230

  819 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 819 (make_table_decl)


State 1231

   81 expression_with_alias: "assume" "name" '=' $@5 expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 81 (expression_with_alias)


State 1232

  302 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' . $@14 expr

    $default  reduce using rule 301 ($@14)

    $@14  go to state 1333


State 1233

  305 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' . $@16 expr

    $default  reduce using rule 304 ($@16)

    $@16  go to state 1334


State 1234

  308 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' . $@18 expr

    $default  reduce using rule 307 ($@18)

    $@18  go to state 1335


State 1235

  812 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options '>' . $@101 '(' expr_list optional_comma ')'

    $default  reduce using rule 811 ($@101)

    $@101  go to state 1336


State 1236

  809 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 809 (make_dim_decl)


State 1237

  790 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' . $@95

    $default  reduce using rule 789 ($@95)

    $@95  go to state 1337


State 1238

  799 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' . $@97 '(' make_struct_dim ')'

    $default  reduce using rule 798 ($@97)

    $@97  go to state 1338


State 1239

  796 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 796 (make_tuple_call)


State 1240

  787 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' . $@93 '(' make_struct_dim ')'

    $default  reduce using rule 786 ($@93)

    $@93  go to state 1339


State 1241

  447 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  448     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1340


State 1242

  332 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1341


State 1243

  485 expr_mtag: "$c" '(' expr ')' '(' . ')'
  486          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    ')'                               shift, and go to state 1342
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1343
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1244

  316 expr_list: expr_list . ',' expr
  827 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where ']' ']'

    ','  shift, and go to state 849
    ';'  shift, and go to state 1344


State 1245

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'
  753 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  754                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1345


State 1246

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'
  750 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 750 (make_struct_fields)


State 1247

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'
  749 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 749 (make_struct_fields)


State 1248

  749 make_struct_fields: "name" . copy_or_move expr
  750                   | "name" . ":=" expr

    "<-"  shift, and go to state 616
    ":="  shift, and go to state 1094
    '='   shift, and go to state 618

    copy_or_move  go to state 1095


State 1249

  758 make_struct_dim: make_struct_dim . ';' make_struct_fields
  776 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 884
    ';'      shift, and go to state 1101

    $default  reduce using rule 759 (optional_block)

    optional_block  go to state 1346


State 1250

  775 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1103
    ",]]"  shift, and go to state 1104
    ']'    shift, and go to state 1105

    optional_trailing_delim_sqr_sqr  go to state 1347


State 1251

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'
  792 make_tuple: expr "=>" expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 792 (make_tuple)


State 1252

  755 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  756                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1348


State 1253

  751 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  752                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 616
    ":="  shift, and go to state 1349
    '='   shift, and go to state 618

    copy_or_move  go to state 1350


State 1254

  751 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  752                   | make_struct_fields . ',' "name" ":=" expr
  755                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  756                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  758 make_struct_dim: make_struct_dim ';' make_struct_fields .

    ','  shift, and go to state 1100

    $default  reduce using rule 758 (make_struct_dim)


State 1255

  773 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 773 (make_struct_decl)


State 1256

  767 optional_trailing_delim_sqr_sqr: ']' ']' .

    $default  reduce using rule 767 (optional_trailing_delim_sqr_sqr)


State 1257

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'
  793 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 793 (make_tuple)


State 1258

  765 optional_trailing_semicolon_sqr_sqr: ']' ']' .

    $default  reduce using rule 765 (optional_trailing_semicolon_sqr_sqr)


State 1259

  793 make_tuple: make_tuple . ',' expr
  801 make_dim: make_dim ';' make_tuple .

    ','  shift, and go to state 1107

    $default  reduce using rule 801 (make_dim)


State 1260

  316 expr_list: expr_list . ',' expr
  828 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where '}' ']'

    ','  shift, and go to state 849
    ';'  shift, and go to state 1351


State 1261

  758 make_struct_dim: make_struct_dim . ';' make_struct_fields
  778 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"  shift, and go to state 884
    ';'      shift, and go to state 1101

    $default  reduce using rule 759 (optional_block)

    optional_block  go to state 1352


State 1262

  771 optional_trailing_delim_cur_sqr: ";}]" .

    $default  reduce using rule 771 (optional_trailing_delim_cur_sqr)


State 1263

  772 optional_trailing_delim_cur_sqr: ",}]" .

    $default  reduce using rule 772 (optional_trailing_delim_cur_sqr)


State 1264

  770 optional_trailing_delim_cur_sqr: '}' . ']'

    ']'  shift, and go to state 1353


State 1265

  777 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 777 (make_struct_decl)


State 1266

  763 optional_trailing_semicolon_cur_sqr: '}' ']' .

    $default  reduce using rule 763 (optional_trailing_semicolon_cur_sqr)


State 1267

  316 expr_list: expr_list . ',' expr
  830 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list . ';' make_map_tuple array_comprehension_where '}' '}'

    ','  shift, and go to state 849
    ';'  shift, and go to state 1354


State 1268

  253 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' . $@8 expr

    $default  reduce using rule 252 ($@8)

    $@8  go to state 1355


State 1269

  256 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' . $@10 optional_expr_list_in_braces

    $default  reduce using rule 255 ($@10)

    $@10  go to state 1356


State 1270

   30 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 30 (string_builder_body)


State 1271

  316 expr_list: expr_list . ',' expr
  826 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where ']'

    ','  shift, and go to state 849
    ';'  shift, and go to state 1357


State 1272

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  375 func_addr_name: "$i" '(' expr . ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1358


State 1273

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'
  494          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1359


State 1274

  379 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options . '>' $@23 func_addr_name
  665 type_declaration_no_options: type_declaration_no_options . dim_list
  666                            | type_declaration_no_options . '[' ']'
  674                            | type_declaration_no_options . '-' '[' ']'
  675                            | type_declaration_no_options . "explicit"
  676                            | type_declaration_no_options . "const"
  677                            | type_declaration_no_options . '-' "const"
  678                            | type_declaration_no_options . '&'
  679                            | type_declaration_no_options . '-' '&'
  680                            | type_declaration_no_options . '#'
  681                            | type_declaration_no_options . "implicit"
  682                            | type_declaration_no_options . '-' '#'
  683                            | type_declaration_no_options . "==" "const"
  684                            | type_declaration_no_options . "==" '&'
  685                            | type_declaration_no_options . '?'
  689                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1360
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1275

  382 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list . optional_function_type '>' $@25 func_addr_name

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1361


State 1276

  316 expr_list: expr_list . ',' expr
  829 array_comprehension: '{' "for" variable_name_with_pos_list "in" expr_list . ';' make_map_tuple array_comprehension_where '}'

    ','  shift, and go to state 849
    ';'  shift, and go to state 1362


State 1277

  217 expression_block: '{' expressions '}' "finally" '{' expressions '}' .

    $default  reduce using rule 217 (expression_block)


State 1278

   60 expression_else: "else" expression_block .

    $default  reduce using rule 60 (expression_else)


State 1279

   61 expression_else: elif_or_static_elif expr . expression_block expression_else
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    '{'    shift, and go to state 284

    expression_block  go to state 1363


State 1280

   66 expression_else_one_liner: "else" . $@2 expression_if_one_liner

    $default  reduce using rule 65 ($@2)

    $@2  go to state 1364


State 1281

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner . ';'

    ';'  shift, and go to state 1365


State 1282

  335 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type expression_block

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 1366


State 1283

  370 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1367


State 1284

  371 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  802 make_dim_decl: '[' . expr_list optional_comma ']'
  826 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "for"                             shift, and go to state 699
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "$f"                              shift, and go to state 885
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 886
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 700
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_fields      go to state 1368
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1285

  295 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1369


State 1286

  296 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  297                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr ';'

    ']'  shift, and go to state 1370


State 1287

  325 capture_entry: "<-" "name" .

    $default  reduce using rule 325 (capture_entry)


State 1288

  326 capture_entry: ":=" "name" .

    $default  reduce using rule 326 (capture_entry)


State 1289

  324 capture_entry: '=' "name" .

    $default  reduce using rule 324 (capture_entry)


State 1290

  323 capture_entry: '&' "name" .

    $default  reduce using rule 323 (capture_entry)


State 1291

  328 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 1149
    ":="  shift, and go to state 1150
    '='   shift, and go to state 1151
    '&'   shift, and go to state 1152

    capture_entry  go to state 1371


State 1292

  330 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 1372


State 1293

  333 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"  shift, and go to state 1373
    '{'   shift, and go to state 284

    expression_block       go to state 1374
    block_or_simple_block  go to state 1375


State 1294

  453 expr: expr "is" "type" '<' $@28 . type_declaration_no_options '>' $@29

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1376


State 1295

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'
  493          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1377


State 1296

  459 expr: expr "as" "type" '<' $@30 . type_declaration '>' $@31

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1378


State 1297

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  491          | expr "as" "$f" '(' expr . ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1379


State 1298

  372 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 372 (expr_method_call)


State 1299

  316 expr_list: expr_list . ',' expr
  373 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 849
    ')'  shift, and go to state 1380


State 1300

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  488          | expr "?." "$f" '(' expr . ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1381


State 1301

  464 expr: expr '?' "as" "type" '<' . $@32 type_declaration '>' $@33

    $default  reduce using rule 462 ($@32)

    $@32  go to state 1382


State 1302

  492 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1383
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1303

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  450     | expr '?' expr ':' expr .
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 450 (expr)


State 1304

  490 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1384
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1305

  439 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 439 (expr)


State 1306

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr '.' "$f" '(' expr . ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1385


State 1307

  385 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 385 (expr_field)


State 1308

  316 expr_list: expr_list . ',' expr
  386 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 849
    ')'  shift, and go to state 1386


State 1309

  489 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1387
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1310

  437 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 437 (expr)


State 1311

  389 expr_field: expr '.' $@26 error $@27 .

    $default  reduce using rule 389 (expr_field)


State 1312

  515 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' ';' .

    $default  reduce using rule 515 (struct_variable_declaration_list)


State 1313

  512 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@35 function_declaration_header ';'

    "const"  shift, and go to state 1388

    $default  reduce using rule 500 (optional_constant)

    optional_constant  go to state 1389


State 1314

  514 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@36 function_declaration_header expression_block

    "override"  shift, and go to state 1315
    "sealed"    shift, and go to state 1316

    $default  reduce using rule 497 (optional_override)

    optional_override  go to state 1390


State 1315

  498 optional_override: "override" .

    $default  reduce using rule 498 (optional_override)


State 1316

  499 optional_override: "sealed" .

    $default  reduce using rule 499 (optional_override)


State 1317

  507 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1188
    "private"  shift, and go to state 1189

    $default  reduce using rule 502 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1391


State 1318

  705 type_declaration_no_options: "block" '<' $@62 optional_function_argument_list optional_function_type '>' $@63 .

    $default  reduce using rule 705 (type_declaration_no_options)


State 1319

  712 type_declaration_no_options: "function" '<' $@66 optional_function_argument_list optional_function_type '>' $@67 .

    $default  reduce using rule 712 (type_declaration_no_options)


State 1320

  719 type_declaration_no_options: "lambda" '<' $@70 optional_function_argument_list optional_function_type '>' $@71 .

    $default  reduce using rule 719 (type_declaration_no_options)


State 1321

  673 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    $default  reduce using rule 245 (optional_expr_list)

    string_builder          go to state 500
    expr_reader             go to state 501
    optional_expr_list      go to state 1392
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 818
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1322

  250 type_declaration_no_options_list: type_declaration_no_options_list ';' type_declaration .
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410

    $default  reduce using rule 250 (type_declaration_no_options_list)


State 1323

  781 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 . '(' make_struct_dim ')'

    '('  shift, and go to state 1393


State 1324

  784 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 . '(' make_struct_dim ')'

    '('  shift, and go to state 1394


State 1325

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list expression_block .

    $default  reduce using rule 76 (expression_for_loop)


State 1326

  269 new_type_declaration: '<' $@11 type_declaration '>' $@12 .

    $default  reduce using rule 269 (new_type_declaration)


State 1327

  313 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1395
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1328

  314 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' . "name" '>' expr ')'

    "name"  shift, and go to state 1396


State 1329

  311 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20 .

    $default  reduce using rule 311 (expr_type_decl)


State 1330

  808 make_dim_decl: "array" '<' $@98 type_declaration_no_options '>' $@99 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1397


State 1331

  816 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  820 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 922

    $default  reduce using rule 824 (optional_comma)

    optional_comma  go to state 1398


State 1332

  821 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' . '(' expr_map_tuple_list optional_comma ')'

    '('  shift, and go to state 1399


State 1333

  302 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1400
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1334

  305 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1401
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1335

  308 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1402
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1336

  812 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options '>' $@101 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1403


State 1337

  790 make_struct_decl: "default" '<' $@94 type_declaration_no_options '>' $@95 .

    $default  reduce using rule 790 (make_struct_decl)


State 1338

  799 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 . '(' make_struct_dim ')'

    '('  shift, and go to state 1404


State 1339

  787 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 . '(' make_struct_dim ')'

    '('  shift, and go to state 1405


State 1340

  447 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  448     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    ')'                               shift, and go to state 1406
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1407
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1341

  332 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"  shift, and go to state 1373
    '{'   shift, and go to state 284

    expression_block       go to state 1374
    block_or_simple_block  go to state 1408


State 1342

  485 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 485 (expr_mtag)


State 1343

  316 expr_list: expr_list . ',' expr
  486 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 849
    ')'  shift, and go to state 1409


State 1344

  827 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1410
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1345

  753 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  754                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 616
    ":="  shift, and go to state 1411
    '='   shift, and go to state 618

    copy_or_move  go to state 1412


State 1346

  776 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1103
    ",]]"  shift, and go to state 1104
    ']'    shift, and go to state 1105

    optional_trailing_delim_sqr_sqr  go to state 1413


State 1347

  775 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 775 (make_struct_decl)


State 1348

  755 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  756                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1414
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1349

  752 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1415
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1350

  751 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1416
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1351

  828 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where '}' ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1417
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1352

  778 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    ";}]"  shift, and go to state 1262
    ",}]"  shift, and go to state 1263
    '}'    shift, and go to state 1264

    optional_trailing_delim_cur_sqr  go to state 1418


State 1353

  770 optional_trailing_delim_cur_sqr: '}' ']' .

    $default  reduce using rule 770 (optional_trailing_delim_cur_sqr)


State 1354

  830 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list ';' . make_map_tuple array_comprehension_where '}' '}'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 687
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_map_tuple          go to state 1419
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1355

  253 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1420
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1356

  256 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 . optional_expr_list_in_braces

    '('  shift, and go to state 1421

    '('       [reduce using rule 247 (optional_expr_list_in_braces)]
    $default  reduce using rule 247 (optional_expr_list_in_braces)

    optional_expr_list_in_braces  go to state 1422


State 1357

  826 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1423
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1358

  375 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 375 (func_addr_name)


State 1359

  494 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 494 (expr_mtag)


State 1360

  379 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' . $@23 func_addr_name

    $default  reduce using rule 378 ($@23)

    $@23  go to state 1424


State 1361

  382 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type . '>' $@25 func_addr_name

    '>'  shift, and go to state 1425


State 1362

  829 array_comprehension: '{' "for" variable_name_with_pos_list "in" expr_list ';' . make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 687
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_map_tuple          go to state 1426
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1363

   61 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1136
    "elif"         shift, and go to state 1137
    "static_elif"  shift, and go to state 1138

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1139
    expression_else      go to state 1427


State 1364

   66 expression_else_one_liner: "else" $@2 . expression_if_one_liner

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "return"                          shift, and go to state 1428
    "null"                            shift, and go to state 439
    "break"                           shift, and go to state 440
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "continue"                        shift, and go to state 450
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "yield"                           shift, and go to state 1429
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder             go to state 500
    expr_reader                go to state 501
    expression_if_one_liner    go to state 1430
    expression_keyword         go to state 561
    name_in_namespace          go to state 517
    expr_new                   go to state 519
    expression_break           go to state 1431
    expression_continue        go to state 1432
    expression_return_no_pipe  go to state 1433
    expression_yield_no_pipe   go to state 1434
    expr_cast                  go to state 529
    expr_type_decl             go to state 530
    expr_type_info             go to state 531
    block_or_lambda            go to state 532
    expr_full_block            go to state 533
    expr_numeric_const         go to state 534
    expr_named_call            go to state 537
    expr_method_call           go to state 538
    func_addr_expr             go to state 539
    expr_field                 go to state 540
    expr_call                  go to state 541
    expr                       go to state 1435
    expr_mtag                  go to state 543
    basic_type_declaration     go to state 544
    make_decl                  go to state 545
    make_struct_decl           go to state 546
    make_tuple_call            go to state 547
    make_dim_decl              go to state 548
    make_table_decl            go to state 549
    array_comprehension        go to state 550


State 1365

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner ';' .

    $default  reduce using rule 74 (expression_if_then_else)


State 1366

  335 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type expression_block

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1436


State 1367

  370 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 370 (expr_named_call)


State 1368

  371 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  751 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  752                   | make_struct_fields . ',' "name" ":=" expr
  755                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  756                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1100
    ']'  shift, and go to state 1437


State 1369

  295 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 295 (tuple_expansion)


State 1370

  296 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  297                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr ';'

    ':'  shift, and go to state 1438
    '&'  shift, and go to state 382

    $default  reduce using rule 545 (optional_ref)

    optional_ref  go to state 1439


State 1371

  328 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 328 (capture_list)


State 1372

  330 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 330 (optional_capture_list)


State 1373

  318 block_or_simple_block: "=>" . expr
  319                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "<-"                              shift, and go to state 1440
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1441
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1374

  317 block_or_simple_block: expression_block .

    $default  reduce using rule 317 (block_or_simple_block)


State 1375

  333 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 333 (expr_full_block)


State 1376

  453 expr: expr "is" "type" '<' $@28 type_declaration_no_options . '>' $@29
  665 type_declaration_no_options: type_declaration_no_options . dim_list
  666                            | type_declaration_no_options . '[' ']'
  674                            | type_declaration_no_options . '-' '[' ']'
  675                            | type_declaration_no_options . "explicit"
  676                            | type_declaration_no_options . "const"
  677                            | type_declaration_no_options . '-' "const"
  678                            | type_declaration_no_options . '&'
  679                            | type_declaration_no_options . '-' '&'
  680                            | type_declaration_no_options . '#'
  681                            | type_declaration_no_options . "implicit"
  682                            | type_declaration_no_options . '-' '#'
  683                            | type_declaration_no_options . "==" "const"
  684                            | type_declaration_no_options . "==" '&'
  685                            | type_declaration_no_options . '?'
  689                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1442
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    dim_list  go to state 409


State 1377

  493 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 493 (expr_mtag)


State 1378

  459 expr: expr "as" "type" '<' $@30 type_declaration . '>' $@31
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1443


State 1379

  491 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 491 (expr_mtag)


State 1380

  373 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 373 (expr_method_call)


State 1381

  488 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 488 (expr_mtag)


State 1382

  464 expr: expr '?' "as" "type" '<' $@32 . type_declaration '>' $@33

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1444


State 1383

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr '?' "as" "$f" '(' expr . ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1445


State 1384

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr '.' "?." "$f" '(' expr . ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1446


State 1385

  487 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 487 (expr_mtag)


State 1386

  386 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 386 (expr_field)


State 1387

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr '.' '.' "$f" '(' expr . ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1447


State 1388

  501 optional_constant: "const" .

    $default  reduce using rule 501 (optional_constant)


State 1389

  512 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@35 function_declaration_header ';'

    $default  reduce using rule 511 ($@35)

    $@35  go to state 1448


State 1390

  514 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@36 function_declaration_header expression_block

    "const"  shift, and go to state 1388

    $default  reduce using rule 500 (optional_constant)

    optional_constant  go to state 1449


State 1391

  507 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 418
    "name"  shift, and go to state 419

    variable_declaration         go to state 1450
    variable_name_with_pos_list  go to state 421


State 1392

  673 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1451


State 1393

  781 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 885
    "name"  shift, and go to state 1248

    make_struct_fields  go to state 891
    make_struct_dim     go to state 1452


State 1394

  784 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 885
    "name"  shift, and go to state 1248

    make_struct_fields  go to state 891
    make_struct_dim     go to state 1453


State 1395

  313 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1454


State 1396

  314 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" . '>' expr ')'

    '>'  shift, and go to state 1455


State 1397

  808 make_dim_decl: "array" '<' $@98 type_declaration_no_options '>' $@99 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1456
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1398

  820 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1457


State 1399

  821 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 687
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_map_tuple          go to state 705
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    expr_map_tuple_list     go to state 1458
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1400

  302 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 302 (expr_cast)


State 1401

  305 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 305 (expr_cast)


State 1402

  308 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 308 (expr_cast)


State 1403

  812 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options '>' $@101 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 1459
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1404

  799 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 885
    "name"  shift, and go to state 1248

    make_struct_fields  go to state 891
    make_struct_dim     go to state 1460


State 1405

  787 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 885
    "name"  shift, and go to state 1248

    make_struct_fields  go to state 891
    make_struct_dim     go to state 1461


State 1406

  447 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 447 (expr)


State 1407

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  448     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1462


State 1408

  332 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 332 (expr_block)


State 1409

  486 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 486 (expr_mtag)


State 1410

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'
  827 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where ']' ']'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ';'    shift, and go to state 1463

    $default  reduce using rule 822 (array_comprehension_where)

    array_comprehension_where  go to state 1464


State 1411

  754 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1465
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1412

  753 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1466
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1413

  776 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 776 (make_struct_decl)


State 1414

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'
  755 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  756                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1467


State 1415

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'
  752 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 752 (make_struct_fields)


State 1416

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'
  751 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 751 (make_struct_fields)


State 1417

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'
  828 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where '}' ']'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ';'    shift, and go to state 1463

    $default  reduce using rule 822 (array_comprehension_where)

    array_comprehension_where  go to state 1468


State 1418

  778 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 778 (make_struct_decl)


State 1419

  830 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple . array_comprehension_where '}' '}'

    ';'  shift, and go to state 1463

    $default  reduce using rule 822 (array_comprehension_where)

    array_comprehension_where  go to state 1469


State 1420

  253 expression_keyword: "keyword" '<' $@7 type_declaration_no_options_list '>' $@8 expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 253 (expression_keyword)


State 1421

  248 optional_expr_list_in_braces: '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    $default  reduce using rule 245 (optional_expr_list)

    string_builder          go to state 500
    expr_reader             go to state 501
    optional_expr_list      go to state 1470
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 818
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1422

  256 expression_keyword: "type function" '<' $@9 type_declaration_no_options_list '>' $@10 optional_expr_list_in_braces .

    $default  reduce using rule 256 (expression_keyword)


State 1423

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'
  826 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ';'    shift, and go to state 1463

    $default  reduce using rule 822 (array_comprehension_where)

    array_comprehension_where  go to state 1471


State 1424

  379 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 916
    "name"  shift, and go to state 59

    name_in_namespace  go to state 919
    func_addr_name     go to state 1472


State 1425

  382 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' . $@25 func_addr_name

    $default  reduce using rule 381 ($@25)

    $@25  go to state 1473


State 1426

  829 array_comprehension: '{' "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple . array_comprehension_where '}'

    ';'  shift, and go to state 1463

    $default  reduce using rule 822 (array_comprehension_where)

    array_comprehension_where  go to state 1474


State 1427

   61 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 61 (expression_else)


State 1428

  278 expression_return_no_pipe: "return" .
  279                          | "return" . expr_list
  280                          | "return" . "<-" expr_list

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "<-"                              shift, and go to state 1475
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    $default  reduce using rule 278 (expression_return_no_pipe)

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 637
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1429

  284 expression_yield_no_pipe: "yield" . expr
  285                         | "yield" . "<-" expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "<-"                              shift, and go to state 1476
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1477
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1430

   66 expression_else_one_liner: "else" $@2 expression_if_one_liner .

    $default  reduce using rule 66 (expression_else_one_liner)


State 1431

   70 expression_if_one_liner: expression_break .

    $default  reduce using rule 70 (expression_if_one_liner)


State 1432

   71 expression_if_one_liner: expression_continue .

    $default  reduce using rule 71 (expression_if_one_liner)


State 1433

   68 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 68 (expression_if_one_liner)


State 1434

   69 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 69 (expression_if_one_liner)


State 1435

   67 expression_if_one_liner: expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 67 (expression_if_one_liner)


State 1436

  335 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 1478


State 1437

  371 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1479


State 1438

  296 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr ';'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1480


State 1439

  297 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr ';'

    "<-"  shift, and go to state 566
    ":="  shift, and go to state 567
    '='   shift, and go to state 568

    copy_or_move_or_clone  go to state 1481


State 1440

  319 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1482
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1441

  318 block_or_simple_block: "=>" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    ".."  error (nonassociative)

    $default  reduce using rule 318 (block_or_simple_block)


State 1442

  453 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' . $@29

    $default  reduce using rule 452 ($@29)

    $@29  go to state 1483


State 1443

  459 expr: expr "as" "type" '<' $@30 type_declaration '>' . $@31

    $default  reduce using rule 458 ($@31)

    $@31  go to state 1484


State 1444

  464 expr: expr '?' "as" "type" '<' $@32 type_declaration . '>' $@33
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 410
    '>'  shift, and go to state 1485


State 1445

  492 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 492 (expr_mtag)


State 1446

  490 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 490 (expr_mtag)


State 1447

  489 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 489 (expr_mtag)


State 1448

  512 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 . function_declaration_header ';'

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1486


State 1449

  514 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@36 function_declaration_header expression_block

    $default  reduce using rule 513 ($@36)

    $@36  go to state 1487


State 1450

  507 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 507 (structure_variable_declaration)


State 1451

  673 type_declaration_no_options: '$' name_in_namespace '<' $@51 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 673 (type_declaration_no_options)


State 1452

  758 make_struct_dim: make_struct_dim . ';' make_struct_fields
  781 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' make_struct_dim . ')'

    ')'  shift, and go to state 1488
    ';'  shift, and go to state 1101


State 1453

  758 make_struct_dim: make_struct_dim . ';' make_struct_fields
  784 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' make_struct_dim . ')'

    ')'  shift, and go to state 1489
    ';'  shift, and go to state 1101


State 1454

  313 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 313 (expr_type_info)


State 1455

  314 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' . expr ')'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1490
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1456

  316 expr_list: expr_list . ',' expr
  808 make_dim_decl: "array" '<' $@98 type_declaration_no_options '>' $@99 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 913

    $default  reduce using rule 824 (optional_comma)

    optional_comma  go to state 1491


State 1457

  820 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 820 (make_table_decl)


State 1458

  816 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  821 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 922

    $default  reduce using rule 824 (optional_comma)

    optional_comma  go to state 1492


State 1459

  316 expr_list: expr_list . ',' expr
  812 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options '>' $@101 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 913

    $default  reduce using rule 824 (optional_comma)

    optional_comma  go to state 1493


State 1460

  758 make_struct_dim: make_struct_dim . ';' make_struct_fields
  799 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' make_struct_dim . ')'

    ')'  shift, and go to state 1494
    ';'  shift, and go to state 1101


State 1461

  758 make_struct_dim: make_struct_dim . ';' make_struct_fields
  787 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim . ')'

    ')'  shift, and go to state 1495
    ';'  shift, and go to state 1101


State 1462

  448 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 448 (expr)


State 1463

  823 array_comprehension_where: ';' . "where" expr

    "where"  shift, and go to state 1496


State 1464

  827 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1497


State 1465

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'
  754 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 754 (make_struct_fields)


State 1466

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'
  753 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 753 (make_struct_fields)


State 1467

  755 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  756                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 616
    ":="  shift, and go to state 1498
    '='   shift, and go to state 618

    copy_or_move  go to state 1499


State 1468

  828 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . '}' ']'

    '}'  shift, and go to state 1500


State 1469

  830 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where . '}' '}'

    '}'  shift, and go to state 1501


State 1470

  248 optional_expr_list_in_braces: '(' optional_expr_list . ')'

    ')'  shift, and go to state 1502


State 1471

  826 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1503


State 1472

  379 func_addr_expr: '@' '@' '<' $@22 type_declaration_no_options '>' $@23 func_addr_name .

    $default  reduce using rule 379 (func_addr_expr)


State 1473

  382 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 916
    "name"  shift, and go to state 59

    name_in_namespace  go to state 919
    func_addr_name     go to state 1504


State 1474

  829 array_comprehension: '{' "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where . '}'

    '}'  shift, and go to state 1505


State 1475

  280 expression_return_no_pipe: "return" "<-" . expr_list

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    expr_list               go to state 848
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 701
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1476

  285 expression_yield_no_pipe: "yield" "<-" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1506
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1477

  284 expression_yield_no_pipe: "yield" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 284 (expression_yield_no_pipe)


State 1478

  335 expr_full_block_assumed_piped: block_or_lambda $@21 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block .

    $default  reduce using rule 335 (expr_full_block_assumed_piped)


State 1479

  371 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 371 (expr_named_call)


State 1480

  296 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr ';'
  665 type_declaration_no_options: type_declaration_no_options . dim_list
  666                            | type_declaration_no_options . '[' ']'
  674                            | type_declaration_no_options . '-' '[' ']'
  675                            | type_declaration_no_options . "explicit"
  676                            | type_declaration_no_options . "const"
  677                            | type_declaration_no_options . '-' "const"
  678                            | type_declaration_no_options . '&'
  679                            | type_declaration_no_options . '-' '&'
  680                            | type_declaration_no_options . '#'
  681                            | type_declaration_no_options . "implicit"
  682                            | type_declaration_no_options . '-' '#'
  683                            | type_declaration_no_options . "==" "const"
  684                            | type_declaration_no_options . "==" '&'
  685                            | type_declaration_no_options . '?'
  689                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "<-"        shift, and go to state 566
    "??"        shift, and go to state 403
    ":="        shift, and go to state 567
    '='         shift, and go to state 568
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    copy_or_move_or_clone  go to state 1507
    dim_list               go to state 409


State 1481

  297 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr ';'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1508
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1482

  319 block_or_simple_block: "=>" "<-" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 319 (block_or_simple_block)


State 1483

  453 expr: expr "is" "type" '<' $@28 type_declaration_no_options '>' $@29 .

    $default  reduce using rule 453 (expr)


State 1484

  459 expr: expr "as" "type" '<' $@30 type_declaration '>' $@31 .

    $default  reduce using rule 459 (expr)


State 1485

  464 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' . $@33

    $default  reduce using rule 463 ($@33)

    $@33  go to state 1509


State 1486

  512 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header . ';'

    ';'  shift, and go to state 1510


State 1487

  514 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1511


State 1488

  781 make_struct_decl: "struct" '<' $@88 type_declaration_no_options '>' $@89 '(' make_struct_dim ')' .

    $default  reduce using rule 781 (make_struct_decl)


State 1489

  784 make_struct_decl: "class" '<' $@90 type_declaration_no_options '>' $@91 '(' make_struct_dim ')' .

    $default  reduce using rule 784 (make_struct_decl)


State 1490

  314 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr . ')'
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ')'    shift, and go to state 1512


State 1491

  808 make_dim_decl: "array" '<' $@98 type_declaration_no_options '>' $@99 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1513


State 1492

  821 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1514


State 1493

  812 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options '>' $@101 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1515


State 1494

  799 make_tuple_call: "tuple" '<' $@96 type_declaration_no_options '>' $@97 '(' make_struct_dim ')' .

    $default  reduce using rule 799 (make_tuple_call)


State 1495

  787 make_struct_decl: "variant" '<' $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim ')' .

    $default  reduce using rule 787 (make_struct_decl)


State 1496

  823 array_comprehension_where: ';' "where" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1516
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1497

  827 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1517


State 1498

  756 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1518
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1499

  755 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1519
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1500

  828 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' . ']'

    ']'  shift, and go to state 1520


State 1501

  830 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}' . '}'

    '}'  shift, and go to state 1521


State 1502

  248 optional_expr_list_in_braces: '(' optional_expr_list ')' .

    $default  reduce using rule 248 (optional_expr_list_in_braces)


State 1503

  826 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' .

    $default  reduce using rule 826 (array_comprehension)


State 1504

  382 func_addr_expr: '@' '@' '<' $@24 optional_function_argument_list optional_function_type '>' $@25 func_addr_name .

    $default  reduce using rule 382 (func_addr_expr)


State 1505

  829 array_comprehension: '{' "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}' .

    $default  reduce using rule 829 (array_comprehension)


State 1506

  285 expression_yield_no_pipe: "yield" "<-" expr .
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 285 (expression_yield_no_pipe)


State 1507

  296 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr ';'

    "struct"                          shift, and go to state 426
    "class"                           shift, and go to state 427
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 439
    "table"                           shift, and go to state 442
    "deref"                           shift, and go to state 444
    "cast"                            shift, and go to state 447
    "upcast"                          shift, and go to state 448
    "addr"                            shift, and go to state 449
    "reinterpret"                     shift, and go to state 452
    "unsafe"                          shift, and go to state 559
    "fixed_array"                     shift, and go to state 456
    "default"                         shift, and go to state 457
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 458
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 459
    "variant"                         shift, and go to state 460
    "generator"                       shift, and go to state 461
    "++"                              shift, and go to state 463
    "--"                              shift, and go to state 464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 468
    "$i"                              shift, and go to state 469
    "$v"                              shift, and go to state 470
    "$b"                              shift, and go to state 471
    "$a"                              shift, and go to state 472
    "$c"                              shift, and go to state 473
    "..."                             shift, and go to state 474
    "[["                              shift, and go to state 475
    "[{"                              shift, and go to state 476
    "{{"                              shift, and go to state 477
    "integer constant"                shift, and go to state 478
    "long integer constant"           shift, and go to state 479
    "unsigned integer constant"       shift, and go to state 480
    "unsigned long integer constant"  shift, and go to state 481
    "unsigned int8 constant"          shift, and go to state 482
    "floating point constant"         shift, and go to state 483
    "double constant"                 shift, and go to state 484
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 560
    "type function"                   shift, and go to state 486
    "start of the string"             shift, and go to state 487
    '-'                               shift, and go to state 488
    '+'                               shift, and go to state 489
    '*'                               shift, and go to state 490
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 491
    '!'                               shift, and go to state 492
    '['                               shift, and go to state 493
    '('                               shift, and go to state 494
    '$'                               shift, and go to state 495
    '@'                               shift, and go to state 496
    '{'                               shift, and go to state 498

    string_builder          go to state 500
    expr_reader             go to state 501
    expression_keyword      go to state 561
    name_in_namespace       go to state 517
    expr_new                go to state 519
    expr_cast               go to state 529
    expr_type_decl          go to state 530
    expr_type_info          go to state 531
    block_or_lambda         go to state 532
    expr_full_block         go to state 533
    expr_numeric_const      go to state 534
    expr_named_call         go to state 537
    expr_method_call        go to state 538
    func_addr_expr          go to state 539
    expr_field              go to state 540
    expr_call               go to state 541
    expr                    go to state 1522
    expr_mtag               go to state 543
    basic_type_declaration  go to state 544
    make_decl               go to state 545
    make_struct_decl        go to state 546
    make_tuple_call         go to state 547
    make_dim_decl           go to state 548
    make_table_decl         go to state 549
    array_comprehension     go to state 550


State 1508

  297 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr . ';'
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ';'    shift, and go to state 1523


State 1509

  464 expr: expr '?' "as" "type" '<' $@32 type_declaration '>' $@33 .

    $default  reduce using rule 464 (expr)


State 1510

  512 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@35 function_declaration_header ';' .

    $default  reduce using rule 512 (struct_variable_declaration_list)


State 1511

  514 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header . expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 1524


State 1512

  314 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')' .

    $default  reduce using rule 314 (expr_type_info)


State 1513

  808 make_dim_decl: "array" '<' $@98 type_declaration_no_options '>' $@99 '(' expr_list optional_comma ')' .

    $default  reduce using rule 808 (make_dim_decl)


State 1514

  821 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 821 (make_table_decl)


State 1515

  812 make_dim_decl: "fixed_array" '<' $@100 type_declaration_no_options '>' $@101 '(' expr_list optional_comma ')' .

    $default  reduce using rule 812 (make_dim_decl)


State 1516

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'
  823 array_comprehension_where: ';' "where" expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 823 (array_comprehension_where)


State 1517

  827 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']' .

    $default  reduce using rule 827 (array_comprehension)


State 1518

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'
  756 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 756 (make_struct_fields)


State 1519

  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'
  755 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778

    $default  reduce using rule 755 (make_struct_fields)


State 1520

  828 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']' .

    $default  reduce using rule 828 (array_comprehension)


State 1521

  830 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}' '}' .

    $default  reduce using rule 830 (array_comprehension)


State 1522

  296 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr . ';'
  372 expr_method_call: expr . "->" "name" '(' ')'
  373                 | expr . "->" "name" '(' expr_list ')'
  383 expr_field: expr . '.' "name"
  384           | expr . '.' '.' "name"
  385           | expr . '.' "name" '(' ')'
  386           | expr . '.' "name" '(' expr_list ')'
  389           | expr . '.' $@26 error $@27
  409 expr: expr . "<<" expr
  410     | expr . ">>" expr
  411     | expr . "<<<" expr
  412     | expr . ">>>" expr
  413     | expr . '+' expr
  414     | expr . '-' expr
  415     | expr . '*' expr
  416     | expr . '/' expr
  417     | expr . '%' expr
  418     | expr . '<' expr
  419     | expr . '>' expr
  420     | expr . "==" expr
  421     | expr . "!=" expr
  422     | expr . "<=" expr
  423     | expr . ">=" expr
  424     | expr . '&' expr
  425     | expr . '|' expr
  426     | expr . '^' expr
  427     | expr . "&&" expr
  428     | expr . "||" expr
  429     | expr . "^^" expr
  430     | expr . ".." expr
  433     | expr . "++"
  434     | expr . "--"
  436     | expr . '[' expr ']'
  437     | expr . '.' '[' expr ']'
  438     | expr . "?[" expr ']'
  439     | expr . '.' "?[" expr ']'
  440     | expr . "?." "name"
  441     | expr . '.' "?." "name"
  449     | expr . "??" expr
  450     | expr . '?' expr ':' expr
  453     | expr . "is" "type" '<' $@28 type_declaration_no_options '>' $@29
  454     | expr . "is" basic_type_declaration
  455     | expr . "is" "name"
  456     | expr . "as" "name"
  459     | expr . "as" "type" '<' $@30 type_declaration '>' $@31
  460     | expr . "as" basic_type_declaration
  461     | expr . '?' "as" "name"
  464     | expr . '?' "as" "type" '<' $@32 type_declaration '>' $@33
  465     | expr . '?' "as" basic_type_declaration
  473     | expr . "<|" expr
  474     | expr . "|>" expr
  475     | expr . "|>" basic_type_declaration
  487 expr_mtag: expr . '.' "$f" '(' expr ')'
  488          | expr . "?." "$f" '(' expr ')'
  489          | expr . '.' '.' "$f" '(' expr ')'
  490          | expr . '.' "?." "$f" '(' expr ')'
  491          | expr . "as" "$f" '(' expr ')'
  492          | expr . '?' "as" "$f" '(' expr ')'
  493          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 726
    "as"   shift, and go to state 727
    "<<"   shift, and go to state 736
    ">>"   shift, and go to state 737
    "++"   shift, and go to state 738
    "--"   shift, and go to state 739
    "<="   shift, and go to state 740
    ">="   shift, and go to state 743
    "=="   shift, and go to state 744
    "!="   shift, and go to state 745
    "->"   shift, and go to state 746
    "??"   shift, and go to state 748
    "?."   shift, and go to state 749
    "?["   shift, and go to state 750
    "<|"   shift, and go to state 751
    "|>"   shift, and go to state 752
    "<<<"  shift, and go to state 754
    ">>>"  shift, and go to state 755
    "&&"   shift, and go to state 758
    "||"   shift, and go to state 759
    "^^"   shift, and go to state 760
    ".."   shift, and go to state 764
    '?'    shift, and go to state 766
    '|'    shift, and go to state 767
    '^'    shift, and go to state 768
    '&'    shift, and go to state 769
    '<'    shift, and go to state 770
    '>'    shift, and go to state 771
    '-'    shift, and go to state 772
    '+'    shift, and go to state 773
    '*'    shift, and go to state 774
    '/'    shift, and go to state 775
    '%'    shift, and go to state 776
    '.'    shift, and go to state 777
    '['    shift, and go to state 778
    ';'    shift, and go to state 1525


State 1523

  297 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr ';' .

    $default  reduce using rule 297 (tuple_expansion_variable_declaration)


State 1524

  514 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@36 function_declaration_header expression_block .

    $default  reduce using rule 514 (struct_variable_declaration_list)


State 1525

  296 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';' .

    $default  reduce using rule 296 (tuple_expansion_variable_declaration)

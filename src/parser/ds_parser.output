Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 51 conflicts: 1 shift/reduce
State 148 conflicts: 1 shift/reduce
State 182 conflicts: 1 shift/reduce
State 391 conflicts: 2 shift/reduce
State 468 conflicts: 1 shift/reduce
State 674 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program bitfield_alias_declaration
   13        | program ';'

   14 optional_public_or_private_module: %empty
   15                                  | "public"
   16                                  | "private"

   17 module_name: '$'
   18            | "name"

   19 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   20 character_sequence: STRING_CHARACTER
   21                   | STRING_CHARACTER_ESC
   22                   | character_sequence STRING_CHARACTER
   23                   | character_sequence STRING_CHARACTER_ESC

   24 string_constant: "start of the string" character_sequence "end of the string"

   25 string_builder_body: %empty
   26                    | string_builder_body character_sequence
   27                    | string_builder_body "{" expr "}"

   28 string_builder: "start of the string" string_builder_body "end of the string"

   29 reader_character_sequence: STRING_CHARACTER
   30                          | reader_character_sequence STRING_CHARACTER

   31 $@1: %empty

   32 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   33 options_declaration: "options" annotation_argument_list

   34 require_declaration: "require" require_module

   35 require_module_name: "name"
   36                    | '%' require_module_name
   37                    | require_module_name '.' "name"
   38                    | require_module_name '/' "name"

   39 require_module: require_module_name is_public_module
   40               | require_module_name "as" "name" is_public_module

   41 is_public_module: %empty
   42                 | "public"

   43 expect_declaration: "expect" expect_list

   44 expect_list: expect_error
   45            | expect_list ',' expect_error

   46 expect_error: "integer constant"
   47             | "integer constant" ':' "integer constant"

   48 expression_label: "label" "integer constant" ':'

   49 expression_goto: "goto" "label" "integer constant"
   50                | "goto" expr

   51 elif_or_static_elif: "elif"
   52                    | "static_elif"

   53 expression_else: %empty
   54                | "else" expression_block
   55                | elif_or_static_elif expr expression_block expression_else

   56 if_or_static_if: "if"
   57                | "static_if"

   58 expression_else_one_liner: %empty

   59 $@2: %empty

   60 expression_else_one_liner: "else" $@2 expression_if_one_liner

   61 expression_if_one_liner: expr
   62                        | expression_return_no_pipe
   63                        | expression_yield_no_pipe
   64                        | expression_break
   65                        | expression_continue

   66 expression_if_then_else: if_or_static_if expr expression_block expression_else

   67 $@3: %empty

   68 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner ';'

   69 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' expression_block

   70 expression_unsafe: "unsafe" expression_block

   71 expression_while_loop: "while" expr expression_block

   72 expression_with: "with" expr expression_block

   73 $@4: %empty

   74 expression_with_alias: "assume" "name" '=' $@4 expr

   75 annotation_argument_value: string_constant
   76                          | "name"
   77                          | "integer constant"
   78                          | "floating point constant"
   79                          | "true"
   80                          | "false"

   81 annotation_argument_value_list: annotation_argument_value
   82                               | annotation_argument_value_list ',' annotation_argument_value

   83 annotation_argument_name: "name"
   84                         | "type"
   85                         | "in"

   86 annotation_argument: annotation_argument_name '=' string_constant
   87                    | annotation_argument_name '=' "name"
   88                    | annotation_argument_name '=' "integer constant"
   89                    | annotation_argument_name '=' "floating point constant"
   90                    | annotation_argument_name '=' "true"
   91                    | annotation_argument_name '=' "false"
   92                    | annotation_argument_name
   93                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

   94 annotation_argument_list: annotation_argument
   95                         | annotation_argument_list ',' annotation_argument

   96 annotation_declaration_name: name_in_namespace
   97                            | "require"
   98                            | "private"

   99 annotation_declaration: annotation_declaration_name
  100                       | annotation_declaration_name '(' annotation_argument_list ')'

  101 annotation_list: annotation_declaration
  102                | annotation_list ',' annotation_declaration

  103 optional_annotation_list: %empty
  104                         | '[' annotation_list ']'

  105 optional_function_argument_list: %empty
  106                                | '(' ')'
  107                                | '(' function_argument_list ')'

  108 optional_function_type: %empty
  109                       | ':' type_declaration

  110 function_name: "name"
  111              | "operator" '!'
  112              | "operator" '~'
  113              | "operator" "+="
  114              | "operator" "-="
  115              | "operator" "*="
  116              | "operator" "/="
  117              | "operator" "%="
  118              | "operator" "&="
  119              | "operator" "|="
  120              | "operator" "^="
  121              | "operator" "&&="
  122              | "operator" "||="
  123              | "operator" "^^="
  124              | "operator" "&&"
  125              | "operator" "||"
  126              | "operator" "^^"
  127              | "operator" '+'
  128              | "operator" '-'
  129              | "operator" '*'
  130              | "operator" '/'
  131              | "operator" '%'
  132              | "operator" '<'
  133              | "operator" '>'
  134              | "operator" ".."
  135              | "operator" "=="
  136              | "operator" "!="
  137              | "operator" "<="
  138              | "operator" ">="
  139              | "operator" '&'
  140              | "operator" '|'
  141              | "operator" '^'
  142              | "++" "operator"
  143              | "--" "operator"
  144              | "operator" "++"
  145              | "operator" "--"
  146              | "operator" "<<"
  147              | "operator" ">>"
  148              | "operator" "<<="
  149              | "operator" ">>="
  150              | "operator" "<<<"
  151              | "operator" ">>>"
  152              | "operator" "<<<="
  153              | "operator" ">>>="
  154              | "operator" '[' ']'
  155              | "operator" "?[" ']'
  156              | "operator" '.'
  157              | "operator" "?."
  158              | "operator" ":="
  159              | "operator" "delete"
  160              | "operator" "??"
  161              | "operator" "is"
  162              | "operator" "as"
  163              | "operator" '?' "as"
  164              | "bool"
  165              | "string"
  166              | "int"
  167              | "int2"
  168              | "int3"
  169              | "int4"
  170              | "uint"
  171              | "uint2"
  172              | "uint3"
  173              | "uint4"
  174              | "float"
  175              | "float2"
  176              | "float3"
  177              | "float4"
  178              | "range"
  179              | "urange"
  180              | "int64"
  181              | "uint64"
  182              | "double"
  183              | "int8"
  184              | "uint8"
  185              | "int16"
  186              | "uint16"

  187 global_function_declaration: optional_annotation_list "def" function_declaration

  188 optional_public_or_private_function: %empty
  189                                    | "private"
  190                                    | "public"

  191 function_declaration_header: function_name optional_function_argument_list optional_function_type

  192 $@5: %empty

  193 function_declaration: optional_public_or_private_function $@5 function_declaration_header expression_block

  194 expression_block: '{' expressions '}'
  195                 | '{' expressions '}' "finally" '{' expressions '}'

  196 expression_any: ';'
  197               | expr_pipe
  198               | expr_assign_pipe
  199               | expr_assign ';'
  200               | expression_delete ';'
  201               | expression_let
  202               | expression_while_loop
  203               | expression_unsafe
  204               | expression_with
  205               | expression_with_alias
  206               | expression_for_loop
  207               | expression_break ';'
  208               | expression_continue ';'
  209               | expression_return
  210               | expression_yield
  211               | expression_if_then_else
  212               | expression_try_catch
  213               | expression_label ';'
  214               | expression_goto ';'
  215               | "pass" ';'

  216 expressions: %empty
  217            | expressions expression_any
  218            | expressions error

  219 expr_pipe: expr_assign " <|" expr_block
  220          | "@ <|" expr_block
  221          | "@@ <|" expr_block

  222 name_in_namespace: "name"
  223                  | "name" "::" "name"
  224                  | "::" "name"

  225 expression_delete: "delete" expr
  226                  | "delete" "explicit" expr

  227 $@6: %empty

  228 $@7: %empty

  229 new_type_declaration: '<' $@6 type_declaration '>' $@7
  230                     | structure_type_declaration

  231 expr_new: "new" new_type_declaration
  232         | "new" new_type_declaration '(' ')'
  233         | "new" new_type_declaration '(' expr_list ')'
  234         | "new" make_decl

  235 expression_break: "break"

  236 expression_continue: "continue"

  237 expression_return_no_pipe: "return"
  238                          | "return" expr
  239                          | "return" "<-" expr

  240 expression_return: expression_return_no_pipe ';'
  241                  | "return" expr_pipe
  242                  | "return" "<-" expr_pipe

  243 expression_yield_no_pipe: "yield" expr
  244                         | "yield" "<-" expr

  245 expression_yield: expression_yield_no_pipe ';'
  246                 | "yield" expr_pipe
  247                 | "yield" "<-" expr_pipe

  248 expression_try_catch: "try" expression_block "recover" expression_block

  249 kwd_let: "let"
  250        | "var"

  251 expression_let: kwd_let let_variable_declaration

  252 $@8: %empty

  253 $@9: %empty

  254 expr_cast: "cast" '<' $@8 type_declaration_no_options '>' $@9 expr

  255 $@10: %empty

  256 $@11: %empty

  257 expr_cast: "upcast" '<' $@10 type_declaration_no_options '>' $@11 expr

  258 $@12: %empty

  259 $@13: %empty

  260 expr_cast: "reinterpret" '<' $@12 type_declaration_no_options '>' $@13 expr

  261 $@14: %empty

  262 $@15: %empty

  263 expr_type_decl: "type" '<' $@14 type_declaration '>' $@15

  264 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  265               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  266               | "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

  267 expr_list: expr
  268          | expr_list ',' expr

  269 block_or_simple_block: expression_block
  270                      | "=>" expr
  271                      | "=>" "<-" expr

  272 block_or_lambda: '$'
  273                | '@'
  274                | '@' '@'

  275 capture_entry: '&' "name"
  276              | '=' "name"
  277              | "<-" "name"
  278              | ":=" "name"

  279 capture_list: capture_entry
  280             | capture_list ',' capture_entry

  281 optional_capture_list: %empty
  282                      | "[[" capture_list ']' ']'

  283 expr_block: expression_block
  284           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  285 expr_numeric_const: "integer constant"
  286                   | "unsigned integer constant"
  287                   | "long integer constant"
  288                   | "unsigned long integer constant"
  289                   | "floating point constant"
  290                   | "double constant"

  291 expr_assign: expr
  292            | expr '=' expr
  293            | expr "<-" expr
  294            | expr ":=" expr
  295            | expr "&=" expr
  296            | expr "|=" expr
  297            | expr "^=" expr
  298            | expr "&&=" expr
  299            | expr "||=" expr
  300            | expr "^^=" expr
  301            | expr "+=" expr
  302            | expr "-=" expr
  303            | expr "*=" expr
  304            | expr "/=" expr
  305            | expr "%=" expr
  306            | expr "<<=" expr
  307            | expr ">>=" expr
  308            | expr "<<<=" expr
  309            | expr ">>>=" expr

  310 expr_assign_pipe: expr '=' "@ <|" expr_block
  311                 | expr '=' "@@ <|" expr_block
  312                 | expr "<-" "@ <|" expr_block
  313                 | expr "<-" "@@ <|" expr_block

  314 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'

  315 expr_method_call: expr "->" "name" '(' ')'
  316                 | expr "->" "name" '(' expr_list ')'

  317 func_addr_name: name_in_namespace
  318               | "$i" '(' expr ')'

  319 func_addr_expr: '@' '@' func_addr_name

  320 $@16: %empty

  321 $@17: %empty

  322 func_addr_expr: '@' '@' '<' $@16 type_declaration_no_options '>' $@17 func_addr_name

  323 $@18: %empty

  324 $@19: %empty

  325 func_addr_expr: '@' '@' '<' $@18 optional_function_argument_list optional_function_type '>' $@19 func_addr_name

  326 expr_field: expr '.' "name"
  327           | expr '.' '.' "name"

  328 $@20: %empty

  329 $@21: %empty

  330 expr_field: expr '.' $@20 error $@21

  331 expr: "null"
  332     | name_in_namespace
  333     | expr_numeric_const
  334     | expr_reader
  335     | string_builder
  336     | make_decl
  337     | "true"
  338     | "false"
  339     | expr_field
  340     | expr_mtag
  341     | '!' expr
  342     | '~' expr
  343     | '+' expr
  344     | '-' expr
  345     | expr "<<" expr
  346     | expr ">>" expr
  347     | expr "<<<" expr
  348     | expr ">>>" expr
  349     | expr '+' expr
  350     | expr '-' expr
  351     | expr '*' expr
  352     | expr '/' expr
  353     | expr '%' expr
  354     | expr '<' expr
  355     | expr '>' expr
  356     | expr "==" expr
  357     | expr "!=" expr
  358     | expr "<=" expr
  359     | expr ">=" expr
  360     | expr '&' expr
  361     | expr '|' expr
  362     | expr '^' expr
  363     | expr "&&" expr
  364     | expr "||" expr
  365     | expr "^^" expr
  366     | expr ".." expr
  367     | "++" expr
  368     | "--" expr
  369     | expr "++"
  370     | expr "--"
  371     | '(' expr ')'
  372     | expr '[' expr ']'
  373     | expr '.' '[' expr ']'
  374     | expr "?[" expr ']'
  375     | expr '.' "?[" expr ']'
  376     | expr "?." "name"
  377     | expr '.' "?." "name"
  378     | func_addr_expr
  379     | name_in_namespace '(' ')'
  380     | name_in_namespace '(' expr_list ')'
  381     | basic_type_declaration '(' ')'
  382     | basic_type_declaration '(' expr_list ')'
  383     | '*' expr
  384     | "deref" '(' expr ')'
  385     | "addr" '(' expr ')'
  386     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  387     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  388     | expr "??" expr
  389     | expr '?' expr ':' expr

  390 $@22: %empty

  391 $@23: %empty

  392 expr: expr "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr "is" basic_type_declaration
  394     | expr "is" "name"
  395     | expr "as" "name"

  396 $@24: %empty

  397 $@25: %empty

  398 expr: expr "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr "as" basic_type_declaration
  400     | expr '?' "as" "name"

  401 $@26: %empty

  402 $@27: %empty

  403 expr: expr '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr '?' "as" basic_type_declaration
  405     | expr_type_info
  406     | expr_type_decl
  407     | expr_cast
  408     | expr_new
  409     | expr_method_call
  410     | expr_named_call
  411     | expr_block
  412     | expr "<|" expr
  413     | expr "|>" expr
  414     | name_in_namespace "name"
  415     | "unsafe" '(' expr ')'

  416 expr_mtag: "$$" '(' expr ')'
  417          | "$i" '(' expr ')'
  418          | "$v" '(' expr ')'
  419          | "$b" '(' expr ')'
  420          | "$a" '(' expr ')'
  421          | "$c" '(' expr ')' '(' ')'
  422          | "$c" '(' expr ')' '(' expr_list ')'
  423          | expr '.' "$f" '(' expr ')'
  424          | expr "?." "$f" '(' expr ')'
  425          | expr '.' '.' "$f" '(' expr ')'
  426          | expr '.' "?." "$f" '(' expr ')'
  427          | expr "as" "$f" '(' expr ')'
  428          | expr '?' "as" "$f" '(' expr ')'
  429          | expr "is" "$f" '(' expr ')'
  430          | '@' '@' "$c" '(' expr ')'

  431 optional_field_annotation: %empty
  432                          | "[[" annotation_argument_list ']' ']'

  433 optional_override: %empty
  434                  | "override"
  435                  | "sealed"

  436 optional_constant: %empty
  437                  | "const"

  438 optional_public_or_private_member_variable: %empty
  439                                           | "public"
  440                                           | "private"

  441 structure_variable_declaration: optional_field_annotation optional_override optional_public_or_private_member_variable variable_declaration

  442 struct_variable_declaration_list: %empty

  443 $@28: %empty

  444 struct_variable_declaration_list: struct_variable_declaration_list $@28 structure_variable_declaration ';'

  445 $@29: %empty

  446 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" $@29 function_declaration_header ';'

  447 $@30: %empty

  448 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant $@30 function_declaration_header expression_block
  449                                 | struct_variable_declaration_list '[' annotation_list ']' ';'

  450 function_argument_declaration: optional_field_annotation variable_declaration
  451                              | optional_field_annotation "var" variable_declaration
  452                              | "$a" '(' expr ')'

  453 function_argument_list: function_argument_declaration
  454                       | function_argument_list ';' function_argument_declaration

  455 tuple_type: type_declaration
  456           | "name" ':' type_declaration

  457 tuple_type_list: tuple_type
  458                | tuple_type_list ';' tuple_type

  459 variant_type: "name" ':' type_declaration

  460 variant_type_list: variant_type
  461                  | variant_type_list ';' variant_type

  462 copy_or_move: '='
  463             | "<-"

  464 variable_declaration: variable_name_with_pos_list
  465                     | variable_name_with_pos_list '&'
  466                     | variable_name_with_pos_list ':' type_declaration
  467                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  468                     | variable_name_with_pos_list copy_or_move expr
  469                     | variable_name_with_pos_list copy_or_move expr_pipe

  470 copy_or_move_or_clone: '='
  471                      | "<-"
  472                      | ":="

  473 optional_ref: %empty
  474             | '&'

  475 let_variable_name_with_pos_list: "name"
  476                                | "$i" '(' expr ')'
  477                                | "name" "aka" "name"
  478                                | let_variable_name_with_pos_list ',' "name"
  479                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  480 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options ';'
  481                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  482                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  483                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';'
  484                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  485 global_variable_declaration_list: %empty

  486 $@31: %empty

  487 global_variable_declaration_list: global_variable_declaration_list $@31 optional_field_annotation let_variable_declaration

  488 optional_shared: %empty
  489                | "shared"

  490 optional_public_or_private_variable: %empty
  491                                    | "private"
  492                                    | "public"

  493 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'

  494 $@32: %empty

  495 global_let: kwd_let optional_shared optional_public_or_private_variable $@32 optional_field_annotation let_variable_declaration

  496 enum_list: %empty
  497          | enum_list "name" ';'
  498          | enum_list "name" '=' expr ';'

  499 $@33: %empty

  500 single_alias: "name" $@33 '=' type_declaration

  501 alias_list: single_alias ';'
  502           | alias_list single_alias ';'

  503 alias_declaration: "typedef" '{' alias_list '}'
  504                  | "typedef" single_alias

  505 optional_public_or_private_enum: %empty
  506                                | "private"
  507                                | "public"

  508 enum_name: "name"

  509 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' enum_list '}'
  510                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list '}'

  511 optional_structure_parent: %empty
  512                          | ':' name_in_namespace

  513 optional_sealed: %empty
  514                | "sealed"

  515 structure_name: optional_sealed "name" optional_structure_parent

  516 class_or_struct: "class"
  517                | "struct"

  518 optional_public_or_private_structure: %empty
  519                                     | "private"
  520                                     | "public"

  521 $@34: %empty

  522 $@35: %empty

  523 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@34 structure_name $@35 '{' struct_variable_declaration_list '}'

  524 variable_name_with_pos_list: "name"
  525                            | "$i" '(' expr ')'
  526                            | "name" "aka" "name"
  527                            | variable_name_with_pos_list ',' "name"
  528                            | variable_name_with_pos_list ',' "name" "aka" "name"

  529 basic_type_declaration: "bool"
  530                       | "string"
  531                       | "int"
  532                       | "int8"
  533                       | "int16"
  534                       | "int64"
  535                       | "int2"
  536                       | "int3"
  537                       | "int4"
  538                       | "uint"
  539                       | "uint8"
  540                       | "uint16"
  541                       | "uint64"
  542                       | "uint2"
  543                       | "uint3"
  544                       | "uint4"
  545                       | "float"
  546                       | "float2"
  547                       | "float3"
  548                       | "float4"
  549                       | "void"
  550                       | "range"
  551                       | "urange"
  552                       | "double"
  553                       | "bitfield"

  554 enum_basic_type_declaration: "int"
  555                            | "int8"
  556                            | "int16"
  557                            | "uint"
  558                            | "uint8"
  559                            | "uint16"

  560 structure_type_declaration: name_in_namespace

  561 auto_type_declaration: "auto"
  562                      | "auto" '(' "name" ')'
  563                      | "$t" '(' expr ')'

  564 bitfield_bits: "name"
  565              | bitfield_bits ';' "name"

  566 $@36: %empty

  567 $@37: %empty

  568 bitfield_type_declaration: "bitfield" '<' $@36 bitfield_bits '>' $@37

  569 table_type_pair: type_declaration
  570                | type_declaration ';' type_declaration

  571 type_declaration_no_options: basic_type_declaration
  572                            | auto_type_declaration
  573                            | bitfield_type_declaration
  574                            | structure_type_declaration
  575                            | type_declaration_no_options '[' expr ']'
  576                            | type_declaration_no_options '[' ']'
  577                            | type_declaration_no_options '-' '[' ']'
  578                            | type_declaration_no_options "explicit"
  579                            | type_declaration_no_options "const"
  580                            | type_declaration_no_options '-' "const"
  581                            | type_declaration_no_options '&'
  582                            | type_declaration_no_options '-' '&'
  583                            | type_declaration_no_options '#'
  584                            | type_declaration_no_options "implicit"
  585                            | type_declaration_no_options '-' '#'
  586                            | type_declaration_no_options "==" "const"
  587                            | type_declaration_no_options '?'

  588 $@38: %empty

  589 $@39: %empty

  590 type_declaration_no_options: "smart_ptr" '<' $@38 type_declaration '>' $@39
  591                            | type_declaration_no_options "??"

  592 $@40: %empty

  593 $@41: %empty

  594 type_declaration_no_options: "array" '<' $@40 type_declaration '>' $@41

  595 $@42: %empty

  596 $@43: %empty

  597 type_declaration_no_options: "table" '<' $@42 table_type_pair '>' $@43

  598 $@44: %empty

  599 $@45: %empty

  600 type_declaration_no_options: "iterator" '<' $@44 type_declaration '>' $@45
  601                            | "block"

  602 $@46: %empty

  603 $@47: %empty

  604 type_declaration_no_options: "block" '<' $@46 type_declaration '>' $@47

  605 $@48: %empty

  606 $@49: %empty

  607 type_declaration_no_options: "block" '<' $@48 optional_function_argument_list optional_function_type '>' $@49
  608                            | "function"

  609 $@50: %empty

  610 $@51: %empty

  611 type_declaration_no_options: "function" '<' $@50 type_declaration '>' $@51

  612 $@52: %empty

  613 $@53: %empty

  614 type_declaration_no_options: "function" '<' $@52 optional_function_argument_list optional_function_type '>' $@53
  615                            | "lambda"

  616 $@54: %empty

  617 $@55: %empty

  618 type_declaration_no_options: "lambda" '<' $@54 type_declaration '>' $@55

  619 $@56: %empty

  620 $@57: %empty

  621 type_declaration_no_options: "lambda" '<' $@56 optional_function_argument_list optional_function_type '>' $@57

  622 $@58: %empty

  623 $@59: %empty

  624 type_declaration_no_options: "tuple" '<' $@58 tuple_type_list '>' $@59

  625 $@60: %empty

  626 $@61: %empty

  627 type_declaration_no_options: "variant" '<' $@60 variant_type_list '>' $@61

  628 type_declaration: type_declaration_no_options
  629                 | type_declaration '|' type_declaration_no_options
  630                 | type_declaration '|' '#'

  631 $@62: %empty

  632 $@63: %empty

  633 variant_alias_declaration: "variant" $@62 "name" $@63 '{' variant_type_list ';' '}'

  634 $@64: %empty

  635 bitfield_alias_declaration: "bitfield" $@64 "name" '{' bitfield_bits ';' '}'

  636 make_decl: make_struct_decl
  637          | make_dim_decl
  638          | make_table_decl
  639          | array_comprehension

  640 make_struct_fields: "name" copy_or_move expr
  641                   | "name" ":=" expr
  642                   | make_struct_fields ',' "name" copy_or_move expr
  643                   | make_struct_fields ',' "name" ":=" expr

  644 make_struct_dim: make_struct_fields
  645                | make_struct_dim ';' make_struct_fields

  646 optional_block: %empty
  647               | "where" expr_block

  648 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block ']' ']'
  649                 | "[[" type_declaration_no_options optional_block ']' ']'
  650                 | "[[" type_declaration_no_options '(' ')' optional_block ']' ']'
  651                 | "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block ']' ']'
  652                 | "[{" type_declaration_no_options make_struct_dim optional_block '}' ']'
  653                 | "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block '}' ']'

  654 make_tuple: expr
  655           | expr "=>" expr
  656           | make_tuple ',' expr

  657 make_map_tuple: expr "=>" expr
  658               | expr

  659 make_dim: make_tuple
  660         | make_dim ';' make_tuple

  661 make_dim_decl: "[[" type_declaration_no_options make_dim ']' ']'
  662              | "[{" type_declaration_no_options make_dim '}' ']'

  663 make_table: make_map_tuple
  664           | make_table ';' make_map_tuple

  665 make_table_decl: "{{" make_table '}' '}'

  666 array_comprehension_where: %empty
  667                          | ';' "where" expr

  668 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'
  669                    | "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 111 341
    '#' (35) 583 585 630
    '$' (36) 17 272
    '%' (37) 32 36 131 353
    '&' (38) 139 275 360 465 474 581 582
    '(' (40) 93 100 106 107 232 233 264 265 266 314 315 316 318 371 379 380 381 382 384 385 386 387 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 452 476 525 562 563 650 651 653
    ')' (41) 93 100 106 107 232 233 264 265 266 314 315 316 318 371 379 380 381 382 384 385 386 387 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 452 476 525 562 563 650 651 653
    '*' (42) 129 351 383
    '+' (43) 127 343 349
    ',' (44) 45 82 95 102 268 280 478 479 527 528 642 643 656
    '-' (45) 128 344 350 577 580 582 585
    '.' (46) 37 156 326 327 330 373 375 377 423 425 426
    '/' (47) 38 130 352
    ':' (58) 47 48 109 389 456 459 466 467 480 481 482 510 512
    ';' (59) 13 68 69 196 199 200 207 208 213 214 215 240 245 266 444 446 449 454 458 461 480 481 483 497 498 501 502 565 570 633 635 645 660 664 667 668 669
    '<' (60) 132 229 254 257 260 263 265 266 322 325 354 386 387 392 398 403 568 590 594 597 600 604 607 611 614 618 621 624 627
    '=' (61) 74 86 87 88 89 90 91 93 276 292 310 311 462 470 498 500
    '>' (62) 133 229 254 257 260 263 265 266 322 325 355 386 387 392 398 403 568 590 594 597 600 604 607 611 614 618 621 624 627
    '?' (63) 163 389 400 403 404 428 587
    '@' (64) 273 274 319 322 325 430
    '[' (91) 104 154 314 372 373 449 575 576 577
    ']' (93) 104 154 155 282 314 372 373 374 375 432 449 575 576 577 648 649 650 651 652 653 661 662 668 669
    '^' (94) 141 362
    '{' (123) 194 195 493 503 509 510 523 633 635
    '|' (124) 140 361 629 630
    '}' (125) 194 195 493 503 509 510 523 633 635 652 653 662 665 669
    '~' (126) 112 342
    error (256) 218 330
    "lexer error" (258)
    "struct" (259) 517
    "class" (260) 516
    "let" (261) 249
    "def" (262) 187 446 448
    "while" (263) 71
    "if" (264) 56 68
    "static_if" (265) 57
    "else" (266) 54 60
    "for" (267) 69 668 669
    "recover" (268) 248
    "true" (269) 79 90 337
    "false" (270) 80 91 338
    "new" (271) 231 232 233 234
    "typeinfo" (272) 264 265 266
    "type" (273) 84 263 392 398 403
    "in" (274) 69 85 668 669
    "is" (275) 161 392 393 394 429
    "as" (276) 40 162 163 395 398 399 400 403 404 427 428
    "elif" (277) 51
    "static_elif" (278) 52
    "array" (279) 594
    "return" (280) 237 238 239 241 242
    "null" (281) 331
    "break" (282) 235
    "try" (283) 248
    "options" (284) 33
    "table" (285) 597
    "expect" (286) 43
    "const" (287) 437 579 580 586
    "require" (288) 34 97
    "operator" (289) 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163
    "enum" (290) 509 510
    "finally" (291) 195
    "delete" (292) 159 225 226
    "deref" (293) 384
    "typedef" (294) 503 504
    "with" (295) 72
    "aka" (296) 477 479 526 528
    "assume" (297) 74
    "cast" (298) 254
    "override" (299) 434
    "abstract" (300) 446
    "upcast" (301) 257
    "iterator" (302) 600
    "var" (303) 250 451
    "addr" (304) 385
    "continue" (305) 236
    "where" (306) 647 667
    "pass" (307) 215
    "reinterpret" (308) 260
    "module" (309) 19
    "public" (310) 15 42 190 439 492 507 520
    "label" (311) 48 49
    "goto" (312) 49 50
    "implicit" (313) 584
    "explicit" (314) 226 578
    "shared" (315) 489
    "private" (316) 16 98 189 440 491 506 519
    "smart_ptr" (317) 590
    "unsafe" (318) 70 415
    "bool" (319) 164 529
    "void" (320) 549
    "string" (321) 165 530
    "auto" (322) 561 562
    "int" (323) 166 531 554
    "int2" (324) 167 535
    "int3" (325) 168 536
    "int4" (326) 169 537
    "uint" (327) 170 538 557
    "bitfield" (328) 553 568 635
    "uint2" (329) 171 542
    "uint3" (330) 172 543
    "uint4" (331) 173 544
    "float" (332) 174 545
    "float2" (333) 175 546
    "float3" (334) 176 547
    "float4" (335) 177 548
    "range" (336) 178 550
    "urange" (337) 179 551
    "block" (338) 601 604 607
    "int64" (339) 180 534
    "uint64" (340) 181 541
    "double" (341) 182 552
    "function" (342) 608 611 614
    "lambda" (343) 615 618 621
    "int8" (344) 183 532 555
    "uint8" (345) 184 539 558
    "int16" (346) 185 533 556
    "uint16" (347) 186 540 559
    "tuple" (348) 624
    "variant" (349) 627 633
    "generator" (350) 386 387
    "yield" (351) 243 244 246 247
    "sealed" (352) 435 514
    "+=" (353) 113 301
    "-=" (354) 114 302
    "/=" (355) 116 304
    "*=" (356) 115 303
    "%=" (357) 117 305
    "&=" (358) 118 295
    "|=" (359) 119 296
    "^=" (360) 120 297
    "<<" (361) 146 345
    ">>" (362) 147 346
    "++" (363) 142 144 367 369
    "--" (364) 143 145 368 370
    "<=" (365) 137 358
    "<<=" (366) 148 306
    ">>=" (367) 149 307
    ">=" (368) 138 359
    "==" (369) 135 356 586
    "!=" (370) 136 357
    "->" (371) 315 316
    "<-" (372) 239 242 244 247 271 277 293 312 313 463 471
    "??" (373) 160 388 591
    "?." (374) 157 376 377 424 426
    "?[" (375) 155 374 375
    "<|" (376) 412
    " <|" (377) 219
    "@ <|" (378) 220 310 312
    "@@ <|" (379) 221 311 313
    "|>" (380) 413
    ":=" (381) 158 278 294 472 641 643
    "<<<" (382) 150 347
    ">>>" (383) 151 348
    "<<<=" (384) 152 308
    ">>>=" (385) 153 309
    "=>" (386) 270 271 655 657
    "::" (387) 223 224
    "&&" (388) 124 363
    "||" (389) 125 364
    "^^" (390) 126 365
    "&&=" (391) 121 298
    "||=" (392) 122 299
    "^^=" (393) 123 300
    ".." (394) 134 366
    "$$" (395) 416
    "$i" (396) 318 417 476 525
    "$v" (397) 418
    "$b" (398) 419
    "$a" (399) 420 452
    "$t" (400) 563
    "$c" (401) 421 422 430
    "$f" (402) 423 424 425 426 427 428 429
    "[[" (403) 282 432 648 649 650 651 661 668
    "[{" (404) 652 653 662 669
    "{{" (405) 665
    "integer constant" <i> (406) 46 47 48 49 77 88 285
    "long integer constant" <i64> (407) 287
    "unsigned integer constant" <ui> (408) 286
    "unsigned long integer constant" <ui64> (409) 288
    "floating point constant" <fd> (410) 78 89 289
    "double constant" <d> (411) 290
    "name" <s> (412) 18 35 37 38 40 74 76 83 87 110 222 223 224 265 266 275 276 277 278 315 316 326 327 376 377 394 395 400 414 456 459 475 477 478 479 497 498 500 508 515 524 526 527 528 562 564 565 633 635 640 641 642 643
    "start of the string" (413) 24 28
    STRING_CHARACTER <ch> (414) 20 22 29 30
    STRING_CHARACTER_ESC (415) 21 23
    "end of the string" (416) 24 28
    "{" (417) 27
    "}" (418) 27
    "end of failed eader macro" (419)
    UNARY_MINUS (420)
    UNARY_PLUS (421)
    PRE_INC (422)
    PRE_DEC (423)
    POST_INC (424)
    POST_DEC (425)
    DEREF (426)


Nonterminals, with rules where they appear

    $accept (199)
        on left: 0
    program (200)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13
    optional_public_or_private_module <b> (201)
        on left: 14 15 16
        on right: 19
    module_name <s> (202)
        on left: 17 18
        on right: 19
    module_declaration (203)
        on left: 19
        on right: 2
    character_sequence <s> (204)
        on left: 20 21 22 23
        on right: 22 23 24 26
    string_constant <s> (205)
        on left: 24
        on right: 75 86
    string_builder_body <pExpression> (206)
        on left: 25 26 27
        on right: 26 27 28
    string_builder <pExpression> (207)
        on left: 28
        on right: 335
    reader_character_sequence (208)
        on left: 29 30
        on right: 30 32
    expr_reader <pExpression> (209)
        on left: 32
        on right: 334
    $@1 (210)
        on left: 31
        on right: 32
    options_declaration (211)
        on left: 33
        on right: 9
    require_declaration (212)
        on left: 34
        on right: 8
    require_module_name <s> (213)
        on left: 35 36 37 38
        on right: 36 37 38 39 40
    require_module (214)
        on left: 39 40
        on right: 34
    is_public_module <b> (215)
        on left: 41 42
        on right: 39 40
    expect_declaration (216)
        on left: 43
        on right: 7
    expect_list (217)
        on left: 44 45
        on right: 43 45
    expect_error (218)
        on left: 46 47
        on right: 44 45
    expression_label <pExpression> (219)
        on left: 48
        on right: 213
    expression_goto <pExpression> (220)
        on left: 49 50
        on right: 214
    elif_or_static_elif <b> (221)
        on left: 51 52
        on right: 55
    expression_else <pExpression> (222)
        on left: 53 54 55
        on right: 55 66
    if_or_static_if <b> (223)
        on left: 56 57
        on right: 66
    expression_else_one_liner <pExpression> (224)
        on left: 58 60
        on right: 68
    $@2 (225)
        on left: 59
        on right: 60
    expression_if_one_liner <pExpression> (226)
        on left: 61 62 63 64 65
        on right: 60 68
    expression_if_then_else <pExpression> (227)
        on left: 66 68
        on right: 211
    $@3 (228)
        on left: 67
        on right: 68
    expression_for_loop <pExpression> (229)
        on left: 69
        on right: 206
    expression_unsafe <pExpression> (230)
        on left: 70
        on right: 203
    expression_while_loop <pExpression> (231)
        on left: 71
        on right: 202
    expression_with <pExpression> (232)
        on left: 72
        on right: 204
    expression_with_alias <pExpression> (233)
        on left: 74
        on right: 205
    $@4 (234)
        on left: 73
        on right: 74
    annotation_argument_value <aa> (235)
        on left: 75 76 77 78 79 80
        on right: 81 82
    annotation_argument_value_list <aaList> (236)
        on left: 81 82
        on right: 82 93
    annotation_argument_name <s> (237)
        on left: 83 84 85
        on right: 86 87 88 89 90 91 92 93
    annotation_argument <aa> (238)
        on left: 86 87 88 89 90 91 92 93
        on right: 94 95
    annotation_argument_list <aaList> (239)
        on left: 94 95
        on right: 33 95 100 432
    annotation_declaration_name <s> (240)
        on left: 96 97 98
        on right: 99 100
    annotation_declaration <fa> (241)
        on left: 99 100
        on right: 101 102
    annotation_list <faList> (242)
        on left: 101 102
        on right: 102 104 449
    optional_annotation_list <faList> (243)
        on left: 103 104
        on right: 187 284 446 448 509 510 523
    optional_function_argument_list <pVarDeclList> (244)
        on left: 105 106 107
        on right: 191 284 325 607 614 621
    optional_function_type <pTypeDecl> (245)
        on left: 108 109
        on right: 191 284 325 607 614 621
    function_name <s> (246)
        on left: 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186
        on right: 191
    global_function_declaration (247)
        on left: 187
        on right: 6
    optional_public_or_private_function <b> (248)
        on left: 188 189 190
        on right: 193
    function_declaration_header <pFuncDecl> (249)
        on left: 191
        on right: 193 446 448
    function_declaration <pFuncDecl> (250)
        on left: 193
        on right: 187
    $@5 (251)
        on left: 192
        on right: 193
    expression_block <pExpression> (252)
        on left: 194 195
        on right: 54 55 66 69 70 71 72 193 248 269 283 448
    expression_any <pExpression> (253)
        on left: 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215
        on right: 217
    expressions <pExpression> (254)
        on left: 216 217 218
        on right: 194 195 217 218
    expr_pipe <pExpression> (255)
        on left: 219 220 221
        on right: 197 241 242 246 247 469 482 484
    name_in_namespace <s> (256)
        on left: 222 223 224
        on right: 32 96 264 265 266 314 317 332 379 380 414 512 560
    expression_delete <pExpression> (257)
        on left: 225 226
        on right: 200
    new_type_declaration <pTypeDecl> (258)
        on left: 229 230
        on right: 231 232 233
    $@6 (259)
        on left: 227
        on right: 229
    $@7 (260)
        on left: 228
        on right: 229
    expr_new <pExpression> (261)
        on left: 231 232 233 234
        on right: 408
    expression_break <pExpression> (262)
        on left: 235
        on right: 64 207
    expression_continue <pExpression> (263)
        on left: 236
        on right: 65 208
    expression_return_no_pipe <pExpression> (264)
        on left: 237 238 239
        on right: 62 240
    expression_return <pExpression> (265)
        on left: 240 241 242
        on right: 209
    expression_yield_no_pipe <pExpression> (266)
        on left: 243 244
        on right: 63 245
    expression_yield <pExpression> (267)
        on left: 245 246 247
        on right: 210
    expression_try_catch <pExpression> (268)
        on left: 248
        on right: 212
    kwd_let <b> (269)
        on left: 249 250
        on right: 251 493 495
    expression_let <pExpression> (270)
        on left: 251
        on right: 201
    expr_cast <pExpression> (271)
        on left: 254 257 260
        on right: 407
    $@8 (272)
        on left: 252
        on right: 254
    $@9 (273)
        on left: 253
        on right: 254
    $@10 (274)
        on left: 255
        on right: 257
    $@11 (275)
        on left: 256
        on right: 257
    $@12 (276)
        on left: 258
        on right: 260
    $@13 (277)
        on left: 259
        on right: 260
    expr_type_decl <pExpression> (278)
        on left: 263
        on right: 406
    $@14 (279)
        on left: 261
        on right: 263
    $@15 (280)
        on left: 262
        on right: 263
    expr_type_info <pExpression> (281)
        on left: 264 265 266
        on right: 405
    expr_list <pExpression> (282)
        on left: 267 268
        on right: 69 233 268 316 380 382 422 668 669
    block_or_simple_block <pExpression> (283)
        on left: 269 270 271
        on right: 284
    block_or_lambda <i> (284)
        on left: 272 273 274
        on right: 284
    capture_entry <pCapt> (285)
        on left: 275 276 277 278
        on right: 279 280
    capture_list <pCaptList> (286)
        on left: 279 280
        on right: 280 282
    optional_capture_list <pCaptList> (287)
        on left: 281 282
        on right: 284 386 387
    expr_block <pExpression> (288)
        on left: 283 284
        on right: 219 220 221 310 311 312 313 411 647
    expr_numeric_const <pExpression> (289)
        on left: 285 286 287 288 289 290
        on right: 333
    expr_assign <pExpression> (290)
        on left: 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309
        on right: 199 219
    expr_assign_pipe <pExpression> (291)
        on left: 310 311 312 313
        on right: 198
    expr_named_call <pExpression> (292)
        on left: 314
        on right: 410
    expr_method_call <pExpression> (293)
        on left: 315 316
        on right: 409
    func_addr_name <pExpression> (294)
        on left: 317 318
        on right: 319 322 325
    func_addr_expr <pExpression> (295)
        on left: 319 322 325
        on right: 378
    $@16 (296)
        on left: 320
        on right: 322
    $@17 (297)
        on left: 321
        on right: 322
    $@18 (298)
        on left: 323
        on right: 325
    $@19 (299)
        on left: 324
        on right: 325
    expr_field <pExpression> (300)
        on left: 326 327 330
        on right: 339
    $@20 (301)
        on left: 328
        on right: 330
    $@21 (302)
        on left: 329
        on right: 330
    expr <pExpression> (303)
        on left: 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 392 393 394 395 398 399 400 403 404 405 406 407 408 409 410 411 412 413 414 415
        on right
    $@22 (304)
        on left: 390
        on right: 392
    $@23 (305)
        on left: 391
        on right: 392
    $@24 (306)
        on left: 396
        on right: 398
    $@25 (307)
        on left: 397
        on right: 398
    $@26 (308)
        on left: 401
        on right: 403
    $@27 (309)
        on left: 402
        on right: 403
    expr_mtag <pExpression> (310)
        on left: 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430
        on right: 340
    optional_field_annotation <aaList> (311)
        on left: 431 432
        on right: 441 450 451 487 495
    optional_override <i> (312)
        on left: 433 434 435
        on right: 441 448
    optional_constant <b> (313)
        on left: 436 437
        on right: 448
    optional_public_or_private_member_variable <b> (314)
        on left: 438 439 440
        on right: 441 446 448
    structure_variable_declaration <pVarDecl> (315)
        on left: 441
        on right: 444
    struct_variable_declaration_list <pVarDeclList> (316)
        on left: 442 444 446 448 449
        on right: 444 446 448 449 523
    $@28 (317)
        on left: 443
        on right: 444
    $@29 (318)
        on left: 445
        on right: 446
    $@30 (319)
        on left: 447
        on right: 448
    function_argument_declaration <pVarDecl> (320)
        on left: 450 451 452
        on right: 453 454
    function_argument_list <pVarDeclList> (321)
        on left: 453 454
        on right: 107 454
    tuple_type <pVarDecl> (322)
        on left: 455 456
        on right: 457 458
    tuple_type_list <pVarDeclList> (323)
        on left: 457 458
        on right: 458 624
    variant_type <pVarDecl> (324)
        on left: 459
        on right: 460 461
    variant_type_list <pVarDeclList> (325)
        on left: 460 461
        on right: 461 627 633
    copy_or_move <b> (326)
        on left: 462 463
        on right: 467 468 469 640 642
    variable_declaration <pVarDecl> (327)
        on left: 464 465 466 467 468 469
        on right: 441 450 451
    copy_or_move_or_clone <i> (328)
        on left: 470 471 472
        on right: 481 482 483 484
    optional_ref <b> (329)
        on left: 473 474
        on right: 483 484
    let_variable_name_with_pos_list <pNameWithPosList> (330)
        on left: 475 476 477 478 479
        on right: 478 479 480 481 482 483 484
    let_variable_declaration <pVarDecl> (331)
        on left: 480 481 482 483 484
        on right: 251 487 495
    global_variable_declaration_list <pVarDeclList> (332)
        on left: 485 487
        on right: 487 493
    $@31 (333)
        on left: 486
        on right: 487
    optional_shared <b> (334)
        on left: 488 489
        on right: 19 493 495
    optional_public_or_private_variable <b> (335)
        on left: 490 491 492
        on right: 493 495
    global_let (336)
        on left: 493 495
        on right: 5
    $@32 (337)
        on left: 494
        on right: 495
    enum_list <pEnum> (338)
        on left: 496 497 498
        on right: 497 498 509 510
    single_alias (339)
        on left: 500
        on right: 501 502 504
    $@33 (340)
        on left: 499
        on right: 500
    alias_list (341)
        on left: 501 502
        on right: 502 503
    alias_declaration (342)
        on left: 503 504
        on right: 10
    optional_public_or_private_enum <b> (343)
        on left: 505 506 507
        on right: 509 510
    enum_name <pEnum> (344)
        on left: 508
        on right: 509 510
    enum_declaration (345)
        on left: 509 510
        on right: 4
    optional_structure_parent <s> (346)
        on left: 511 512
        on right: 515
    optional_sealed <b> (347)
        on left: 513 514
        on right: 515
    structure_name <pStructure> (348)
        on left: 515
        on right: 523
    class_or_struct <b> (349)
        on left: 516 517
        on right: 523
    optional_public_or_private_structure <b> (350)
        on left: 518 519 520
        on right: 523
    structure_declaration (351)
        on left: 523
        on right: 3
    $@34 (352)
        on left: 521
        on right: 523
    $@35 (353)
        on left: 522
        on right: 523
    variable_name_with_pos_list <pNameWithPosList> (354)
        on left: 524 525 526 527 528
        on right: 69 464 465 466 467 468 469 527 528 668 669
    basic_type_declaration <type> (355)
        on left: 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553
        on right: 381 382 393 399 404 571
    enum_basic_type_declaration <type> (356)
        on left: 554 555 556 557 558 559
        on right: 510
    structure_type_declaration <pTypeDecl> (357)
        on left: 560
        on right: 230 574
    auto_type_declaration <pTypeDecl> (358)
        on left: 561 562 563
        on right: 572
    bitfield_bits <pNameList> (359)
        on left: 564 565
        on right: 565 568 635
    bitfield_type_declaration <pTypeDecl> (360)
        on left: 568
        on right: 573
    $@36 (361)
        on left: 566
        on right: 568
    $@37 (362)
        on left: 567
        on right: 568
    table_type_pair <aTypePair> (363)
        on left: 569 570
        on right: 597
    type_declaration_no_options <pTypeDecl> (364)
        on left: 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 590 591 594 597 600 601 604 607 608 611 614 615 618 621 624 627
        on right: 254 257 260 322 386 387 392 480 481 482 575 576 577 578 579 580 581 582 583 584 585 586 587 591 628 629 648 649 650 651 652 653 661 662
    $@38 (365)
        on left: 588
        on right: 590
    $@39 (366)
        on left: 589
        on right: 590
    $@40 (367)
        on left: 592
        on right: 594
    $@41 (368)
        on left: 593
        on right: 594
    $@42 (369)
        on left: 595
        on right: 597
    $@43 (370)
        on left: 596
        on right: 597
    $@44 (371)
        on left: 598
        on right: 600
    $@45 (372)
        on left: 599
        on right: 600
    $@46 (373)
        on left: 602
        on right: 604
    $@47 (374)
        on left: 603
        on right: 604
    $@48 (375)
        on left: 605
        on right: 607
    $@49 (376)
        on left: 606
        on right: 607
    $@50 (377)
        on left: 609
        on right: 611
    $@51 (378)
        on left: 610
        on right: 611
    $@52 (379)
        on left: 612
        on right: 614
    $@53 (380)
        on left: 613
        on right: 614
    $@54 (381)
        on left: 616
        on right: 618
    $@55 (382)
        on left: 617
        on right: 618
    $@56 (383)
        on left: 619
        on right: 621
    $@57 (384)
        on left: 620
        on right: 621
    $@58 (385)
        on left: 622
        on right: 624
    $@59 (386)
        on left: 623
        on right: 624
    $@60 (387)
        on left: 625
        on right: 627
    $@61 (388)
        on left: 626
        on right: 627
    type_declaration <pTypeDecl> (389)
        on left: 628 629 630
        on right: 109 229 263 398 403 455 456 459 466 467 500 569 570 590 594 600 604 611 618 629 630
    variant_alias_declaration (390)
        on left: 633
        on right: 11
    $@62 (391)
        on left: 631
        on right: 633
    $@63 (392)
        on left: 632
        on right: 633
    bitfield_alias_declaration (393)
        on left: 635
        on right: 12
    $@64 (394)
        on left: 634
        on right: 635
    make_decl <pExpression> (395)
        on left: 636 637 638 639
        on right: 234 336
    make_struct_fields <pMakeStruct> (396)
        on left: 640 641 642 643
        on right: 314 642 643 644 645
    make_struct_dim <pExpression> (397)
        on left: 644 645
        on right: 645 648 651 652 653
    optional_block <pExpression> (398)
        on left: 646 647
        on right: 648 649 650 651 652 653
    make_struct_decl <pExpression> (399)
        on left: 648 649 650 651 652 653
        on right: 636
    make_tuple <pExpression> (400)
        on left: 654 655 656
        on right: 656 659 660
    make_map_tuple <pExpression> (401)
        on left: 657 658
        on right: 663 664
    make_dim <pExpression> (402)
        on left: 659 660
        on right: 660 661 662
    make_dim_decl <pExpression> (403)
        on left: 661 662
        on right: 637
    make_table <pExpression> (404)
        on left: 663 664
        on right: 664 665
    make_table_decl <pExpression> (405)
        on left: 665
        on right: 638
    array_comprehension_where <pExpression> (406)
        on left: 666 667
        on right: 668 669
    array_comprehension <pExpression> (407)
        on left: 668 669
        on right: 639


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . bitfield_alias_declaration
   13        | program . ';'

    $end        shift, and go to state 2
    "let"       shift, and go to state 3
    "options"   shift, and go to state 4
    "expect"    shift, and go to state 5
    "require"   shift, and go to state 6
    "typedef"   shift, and go to state 7
    "var"       shift, and go to state 8
    "module"    shift, and go to state 9
    "bitfield"  shift, and go to state 10
    "variant"   shift, and go to state 11
    '['         shift, and go to state 12
    ';'         shift, and go to state 13

    $default  reduce using rule 103 (optional_annotation_list)

    module_declaration           go to state 14
    options_declaration          go to state 15
    require_declaration          go to state 16
    expect_declaration           go to state 17
    optional_annotation_list     go to state 18
    global_function_declaration  go to state 19
    kwd_let                      go to state 20
    global_let                   go to state 21
    alias_declaration            go to state 22
    enum_declaration             go to state 23
    structure_declaration        go to state 24
    variant_alias_declaration    go to state 25
    bitfield_alias_declaration   go to state 26


State 2

    0 $accept: program $end .

    $default  accept


State 3

  249 kwd_let: "let" .

    $default  reduce using rule 249 (kwd_let)


State 4

   33 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 27
    "in"    shift, and go to state 28
    "name"  shift, and go to state 29

    annotation_argument_name  go to state 30
    annotation_argument       go to state 31
    annotation_argument_list  go to state 32


State 5

   43 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 33

    expect_list   go to state 34
    expect_error  go to state 35


State 6

   34 require_declaration: "require" . require_module

    "name"  shift, and go to state 36
    '%'     shift, and go to state 37

    require_module_name  go to state 38
    require_module       go to state 39


State 7

  503 alias_declaration: "typedef" . '{' alias_list '}'
  504                  | "typedef" . single_alias

    "name"  shift, and go to state 40
    '{'     shift, and go to state 41

    single_alias  go to state 42


State 8

  250 kwd_let: "var" .

    $default  reduce using rule 250 (kwd_let)


State 9

   19 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 43
    '$'     shift, and go to state 44

    module_name  go to state 45


State 10

  635 bitfield_alias_declaration: "bitfield" . $@64 "name" '{' bitfield_bits ';' '}'

    $default  reduce using rule 634 ($@64)

    $@64  go to state 46


State 11

  633 variant_alias_declaration: "variant" . $@62 "name" $@63 '{' variant_type_list ';' '}'

    $default  reduce using rule 631 ($@62)

    $@62  go to state 47


State 12

  104 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 48
    "private"  shift, and go to state 49
    "::"       shift, and go to state 50
    "name"     shift, and go to state 51

    annotation_declaration_name  go to state 52
    annotation_declaration       go to state 53
    annotation_list              go to state 54
    name_in_namespace            go to state 55


State 13

   13 program: program ';' .

    $default  reduce using rule 13 (program)


State 14

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 15

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 16

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 17

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 18

  187 global_function_declaration: optional_annotation_list . "def" function_declaration
  509 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name '{' enum_list '}'
  510                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list '}'
  523 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@34 structure_name $@35 '{' struct_variable_declaration_list '}'

    "struct"  shift, and go to state 56
    "class"   shift, and go to state 57
    "def"     shift, and go to state 58
    "enum"    shift, and go to state 59

    class_or_struct  go to state 60


State 19

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 20

  493 global_let: kwd_let . optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'
  495           | kwd_let . optional_shared optional_public_or_private_variable $@32 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 61

    $default  reduce using rule 488 (optional_shared)

    optional_shared  go to state 62


State 21

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 22

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 23

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 24

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 25

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 26

   12 program: program bitfield_alias_declaration .

    $default  reduce using rule 12 (program)


State 27

   84 annotation_argument_name: "type" .

    $default  reduce using rule 84 (annotation_argument_name)


State 28

   85 annotation_argument_name: "in" .

    $default  reduce using rule 85 (annotation_argument_name)


State 29

   83 annotation_argument_name: "name" .

    $default  reduce using rule 83 (annotation_argument_name)


State 30

   86 annotation_argument: annotation_argument_name . '=' string_constant
   87                    | annotation_argument_name . '=' "name"
   88                    | annotation_argument_name . '=' "integer constant"
   89                    | annotation_argument_name . '=' "floating point constant"
   90                    | annotation_argument_name . '=' "true"
   91                    | annotation_argument_name . '=' "false"
   92                    | annotation_argument_name .
   93                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 63

    $default  reduce using rule 92 (annotation_argument)


State 31

   94 annotation_argument_list: annotation_argument .

    $default  reduce using rule 94 (annotation_argument_list)


State 32

   33 options_declaration: "options" annotation_argument_list .
   95 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 64

    $default  reduce using rule 33 (options_declaration)


State 33

   46 expect_error: "integer constant" .
   47             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 65

    $default  reduce using rule 46 (expect_error)


State 34

   43 expect_declaration: "expect" expect_list .
   45 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 66

    $default  reduce using rule 43 (expect_declaration)


State 35

   44 expect_list: expect_error .

    $default  reduce using rule 44 (expect_list)


State 36

   35 require_module_name: "name" .

    $default  reduce using rule 35 (require_module_name)


State 37

   36 require_module_name: '%' . require_module_name

    "name"  shift, and go to state 36
    '%'     shift, and go to state 37

    require_module_name  go to state 67


State 38

   37 require_module_name: require_module_name . '.' "name"
   38                    | require_module_name . '/' "name"
   39 require_module: require_module_name . is_public_module
   40               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 68
    "public"  shift, and go to state 69
    '/'       shift, and go to state 70
    '.'       shift, and go to state 71

    $default  reduce using rule 41 (is_public_module)

    is_public_module  go to state 72


State 39

   34 require_declaration: "require" require_module .

    $default  reduce using rule 34 (require_declaration)


State 40

  500 single_alias: "name" . $@33 '=' type_declaration

    $default  reduce using rule 499 ($@33)

    $@33  go to state 73


State 41

  503 alias_declaration: "typedef" '{' . alias_list '}'

    "name"  shift, and go to state 40

    single_alias  go to state 74
    alias_list    go to state 75


State 42

  504 alias_declaration: "typedef" single_alias .

    $default  reduce using rule 504 (alias_declaration)


State 43

   18 module_name: "name" .

    $default  reduce using rule 18 (module_name)


State 44

   17 module_name: '$' .

    $default  reduce using rule 17 (module_name)


State 45

   19 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 61

    $default  reduce using rule 488 (optional_shared)

    optional_shared  go to state 76


State 46

  635 bitfield_alias_declaration: "bitfield" $@64 . "name" '{' bitfield_bits ';' '}'

    "name"  shift, and go to state 77


State 47

  633 variant_alias_declaration: "variant" $@62 . "name" $@63 '{' variant_type_list ';' '}'

    "name"  shift, and go to state 78


State 48

   97 annotation_declaration_name: "require" .

    $default  reduce using rule 97 (annotation_declaration_name)


State 49

   98 annotation_declaration_name: "private" .

    $default  reduce using rule 98 (annotation_declaration_name)


State 50

  224 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 79


State 51

  222 name_in_namespace: "name" .
  223                  | "name" . "::" "name"

    "::"  shift, and go to state 80

    "::"      [reduce using rule 222 (name_in_namespace)]
    $default  reduce using rule 222 (name_in_namespace)


State 52

   99 annotation_declaration: annotation_declaration_name .
  100                       | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 81

    $default  reduce using rule 99 (annotation_declaration)


State 53

  101 annotation_list: annotation_declaration .

    $default  reduce using rule 101 (annotation_list)


State 54

  102 annotation_list: annotation_list . ',' annotation_declaration
  104 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 82
    ']'  shift, and go to state 83


State 55

   96 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 96 (annotation_declaration_name)


State 56

  517 class_or_struct: "struct" .

    $default  reduce using rule 517 (class_or_struct)


State 57

  516 class_or_struct: "class" .

    $default  reduce using rule 516 (class_or_struct)


State 58

  187 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 84
    "private"  shift, and go to state 85

    $default  reduce using rule 188 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 86
    function_declaration                 go to state 87


State 59

  509 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name '{' enum_list '}'
  510                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list '}'

    "public"   shift, and go to state 88
    "private"  shift, and go to state 89

    $default  reduce using rule 505 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 90


State 60

  523 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@34 structure_name $@35 '{' struct_variable_declaration_list '}'

    "public"   shift, and go to state 91
    "private"  shift, and go to state 92

    $default  reduce using rule 518 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 93


State 61

  489 optional_shared: "shared" .

    $default  reduce using rule 489 (optional_shared)


State 62

  493 global_let: kwd_let optional_shared . optional_public_or_private_variable '{' global_variable_declaration_list '}'
  495           | kwd_let optional_shared . optional_public_or_private_variable $@32 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 94
    "private"  shift, and go to state 95

    $default  reduce using rule 490 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 96


State 63

   86 annotation_argument: annotation_argument_name '=' . string_constant
   87                    | annotation_argument_name '=' . "name"
   88                    | annotation_argument_name '=' . "integer constant"
   89                    | annotation_argument_name '=' . "floating point constant"
   90                    | annotation_argument_name '=' . "true"
   91                    | annotation_argument_name '=' . "false"
   93                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 97
    "false"                    shift, and go to state 98
    "integer constant"         shift, and go to state 99
    "floating point constant"  shift, and go to state 100
    "name"                     shift, and go to state 101
    "start of the string"      shift, and go to state 102
    '('                        shift, and go to state 103

    string_constant  go to state 104


State 64

   95 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 27
    "in"    shift, and go to state 28
    "name"  shift, and go to state 29

    annotation_argument_name  go to state 30
    annotation_argument       go to state 105


State 65

   47 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 106


State 66

   45 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 33

    expect_error  go to state 107


State 67

   36 require_module_name: '%' require_module_name .
   37                    | require_module_name . '.' "name"
   38                    | require_module_name . '/' "name"

    '.'  shift, and go to state 71

    $default  reduce using rule 36 (require_module_name)


State 68

   40 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 108


State 69

   42 is_public_module: "public" .

    $default  reduce using rule 42 (is_public_module)


State 70

   38 require_module_name: require_module_name '/' . "name"

    "name"  shift, and go to state 109


State 71

   37 require_module_name: require_module_name '.' . "name"

    "name"  shift, and go to state 110


State 72

   39 require_module: require_module_name is_public_module .

    $default  reduce using rule 39 (require_module)


State 73

  500 single_alias: "name" $@33 . '=' type_declaration

    '='  shift, and go to state 111


State 74

  501 alias_list: single_alias . ';'

    ';'  shift, and go to state 112


State 75

  502 alias_list: alias_list . single_alias ';'
  503 alias_declaration: "typedef" '{' alias_list . '}'

    "name"  shift, and go to state 40
    '}'     shift, and go to state 113

    single_alias  go to state 114


State 76

   19 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 115
    "private"  shift, and go to state 116

    $default  reduce using rule 14 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 117


State 77

  635 bitfield_alias_declaration: "bitfield" $@64 "name" . '{' bitfield_bits ';' '}'

    '{'  shift, and go to state 118


State 78

  633 variant_alias_declaration: "variant" $@62 "name" . $@63 '{' variant_type_list ';' '}'

    $default  reduce using rule 632 ($@63)

    $@63  go to state 119


State 79

  224 name_in_namespace: "::" "name" .

    $default  reduce using rule 224 (name_in_namespace)


State 80

  223 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 120


State 81

  100 annotation_declaration: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 27
    "in"    shift, and go to state 28
    "name"  shift, and go to state 29

    annotation_argument_name  go to state 30
    annotation_argument       go to state 31
    annotation_argument_list  go to state 121


State 82

  102 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 48
    "private"  shift, and go to state 49
    "::"       shift, and go to state 50
    "name"     shift, and go to state 51

    annotation_declaration_name  go to state 52
    annotation_declaration       go to state 122
    name_in_namespace            go to state 55


State 83

  104 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 104 (optional_annotation_list)


State 84

  190 optional_public_or_private_function: "public" .

    $default  reduce using rule 190 (optional_public_or_private_function)


State 85

  189 optional_public_or_private_function: "private" .

    $default  reduce using rule 189 (optional_public_or_private_function)


State 86

  193 function_declaration: optional_public_or_private_function . $@5 function_declaration_header expression_block

    $default  reduce using rule 192 ($@5)

    $@5  go to state 123


State 87

  187 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 187 (global_function_declaration)


State 88

  507 optional_public_or_private_enum: "public" .

    $default  reduce using rule 507 (optional_public_or_private_enum)


State 89

  506 optional_public_or_private_enum: "private" .

    $default  reduce using rule 506 (optional_public_or_private_enum)


State 90

  509 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name '{' enum_list '}'
  510                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration '{' enum_list '}'

    "name"  shift, and go to state 124

    enum_name  go to state 125


State 91

  520 optional_public_or_private_structure: "public" .

    $default  reduce using rule 520 (optional_public_or_private_structure)


State 92

  519 optional_public_or_private_structure: "private" .

    $default  reduce using rule 519 (optional_public_or_private_structure)


State 93

  523 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@34 structure_name $@35 '{' struct_variable_declaration_list '}'

    $default  reduce using rule 521 ($@34)

    $@34  go to state 126


State 94

  492 optional_public_or_private_variable: "public" .

    $default  reduce using rule 492 (optional_public_or_private_variable)


State 95

  491 optional_public_or_private_variable: "private" .

    $default  reduce using rule 491 (optional_public_or_private_variable)


State 96

  493 global_let: kwd_let optional_shared optional_public_or_private_variable . '{' global_variable_declaration_list '}'
  495           | kwd_let optional_shared optional_public_or_private_variable . $@32 optional_field_annotation let_variable_declaration

    '{'  shift, and go to state 127

    $default  reduce using rule 494 ($@32)

    $@32  go to state 128


State 97

   90 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 90 (annotation_argument)


State 98

   91 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 91 (annotation_argument)


State 99

   88 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 88 (annotation_argument)


State 100

   89 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 89 (annotation_argument)


State 101

   87 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 87 (annotation_argument)


State 102

   24 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 129
    STRING_CHARACTER_ESC  shift, and go to state 130

    character_sequence  go to state 131


State 103

   93 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 132
    "false"                    shift, and go to state 133
    "integer constant"         shift, and go to state 134
    "floating point constant"  shift, and go to state 135
    "name"                     shift, and go to state 136
    "start of the string"      shift, and go to state 102

    string_constant                 go to state 137
    annotation_argument_value       go to state 138
    annotation_argument_value_list  go to state 139


State 104

   86 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 86 (annotation_argument)


State 105

   95 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 95 (annotation_argument_list)


State 106

   47 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 47 (expect_error)


State 107

   45 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 45 (expect_list)


State 108

   40 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 69

    $default  reduce using rule 41 (is_public_module)

    is_public_module  go to state 140


State 109

   38 require_module_name: require_module_name '/' "name" .

    $default  reduce using rule 38 (require_module_name)


State 110

   37 require_module_name: require_module_name '.' "name" .

    $default  reduce using rule 37 (require_module_name)


State 111

  500 single_alias: "name" $@33 '=' . type_declaration

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace            go to state 177
    basic_type_declaration       go to state 178
    structure_type_declaration   go to state 179
    auto_type_declaration        go to state 180
    bitfield_type_declaration    go to state 181
    type_declaration_no_options  go to state 182
    type_declaration             go to state 183


State 112

  501 alias_list: single_alias ';' .

    $default  reduce using rule 501 (alias_list)


State 113

  503 alias_declaration: "typedef" '{' alias_list '}' .

    $default  reduce using rule 503 (alias_declaration)


State 114

  502 alias_list: alias_list single_alias . ';'

    ';'  shift, and go to state 184


State 115

   15 optional_public_or_private_module: "public" .

    $default  reduce using rule 15 (optional_public_or_private_module)


State 116

   16 optional_public_or_private_module: "private" .

    $default  reduce using rule 16 (optional_public_or_private_module)


State 117

   19 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 19 (module_declaration)


State 118

  635 bitfield_alias_declaration: "bitfield" $@64 "name" '{' . bitfield_bits ';' '}'

    "name"  shift, and go to state 185

    bitfield_bits  go to state 186


State 119

  633 variant_alias_declaration: "variant" $@62 "name" $@63 . '{' variant_type_list ';' '}'

    '{'  shift, and go to state 187


State 120

  223 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 223 (name_in_namespace)


State 121

   95 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  100 annotation_declaration: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 64
    ')'  shift, and go to state 188


State 122

  102 annotation_list: annotation_list ',' annotation_declaration .

    $default  reduce using rule 102 (annotation_list)


State 123

  193 function_declaration: optional_public_or_private_function $@5 . function_declaration_header expression_block

    "operator"  shift, and go to state 189
    "bool"      shift, and go to state 190
    "string"    shift, and go to state 191
    "int"       shift, and go to state 192
    "int2"      shift, and go to state 193
    "int3"      shift, and go to state 194
    "int4"      shift, and go to state 195
    "uint"      shift, and go to state 196
    "uint2"     shift, and go to state 197
    "uint3"     shift, and go to state 198
    "uint4"     shift, and go to state 199
    "float"     shift, and go to state 200
    "float2"    shift, and go to state 201
    "float3"    shift, and go to state 202
    "float4"    shift, and go to state 203
    "range"     shift, and go to state 204
    "urange"    shift, and go to state 205
    "int64"     shift, and go to state 206
    "uint64"    shift, and go to state 207
    "double"    shift, and go to state 208
    "int8"      shift, and go to state 209
    "uint8"     shift, and go to state 210
    "int16"     shift, and go to state 211
    "uint16"    shift, and go to state 212
    "++"        shift, and go to state 213
    "--"        shift, and go to state 214
    "name"      shift, and go to state 215

    function_name                go to state 216
    function_declaration_header  go to state 217


State 124

  508 enum_name: "name" .

    $default  reduce using rule 508 (enum_name)


State 125

  509 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . '{' enum_list '}'
  510                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration '{' enum_list '}'

    ':'  shift, and go to state 218
    '{'  shift, and go to state 219


State 126

  523 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@34 . structure_name $@35 '{' struct_variable_declaration_list '}'

    "sealed"  shift, and go to state 220

    $default  reduce using rule 513 (optional_sealed)

    optional_sealed  go to state 221
    structure_name   go to state 222


State 127

  493 global_let: kwd_let optional_shared optional_public_or_private_variable '{' . global_variable_declaration_list '}'

    $default  reduce using rule 485 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 223


State 128

  495 global_let: kwd_let optional_shared optional_public_or_private_variable $@32 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 224

    $default  reduce using rule 431 (optional_field_annotation)

    optional_field_annotation  go to state 225


State 129

   20 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 20 (character_sequence)


State 130

   21 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 21 (character_sequence)


State 131

   22 character_sequence: character_sequence . STRING_CHARACTER
   23                   | character_sequence . STRING_CHARACTER_ESC
   24 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 226
    STRING_CHARACTER_ESC  shift, and go to state 227
    "end of the string"   shift, and go to state 228


State 132

   79 annotation_argument_value: "true" .

    $default  reduce using rule 79 (annotation_argument_value)


State 133

   80 annotation_argument_value: "false" .

    $default  reduce using rule 80 (annotation_argument_value)


State 134

   77 annotation_argument_value: "integer constant" .

    $default  reduce using rule 77 (annotation_argument_value)


State 135

   78 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 78 (annotation_argument_value)


State 136

   76 annotation_argument_value: "name" .

    $default  reduce using rule 76 (annotation_argument_value)


State 137

   75 annotation_argument_value: string_constant .

    $default  reduce using rule 75 (annotation_argument_value)


State 138

   81 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 81 (annotation_argument_value_list)


State 139

   82 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
   93 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 229
    ')'  shift, and go to state 230


State 140

   40 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 40 (require_module)


State 141

  594 type_declaration_no_options: "array" . '<' $@40 type_declaration '>' $@41

    '<'  shift, and go to state 231


State 142

  597 type_declaration_no_options: "table" . '<' $@42 table_type_pair '>' $@43

    '<'  shift, and go to state 232


State 143

  600 type_declaration_no_options: "iterator" . '<' $@44 type_declaration '>' $@45

    '<'  shift, and go to state 233


State 144

  590 type_declaration_no_options: "smart_ptr" . '<' $@38 type_declaration '>' $@39

    '<'  shift, and go to state 234


State 145

  529 basic_type_declaration: "bool" .

    $default  reduce using rule 529 (basic_type_declaration)


State 146

  549 basic_type_declaration: "void" .

    $default  reduce using rule 549 (basic_type_declaration)


State 147

  530 basic_type_declaration: "string" .

    $default  reduce using rule 530 (basic_type_declaration)


State 148

  561 auto_type_declaration: "auto" .
  562                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 235

    '('       [reduce using rule 561 (auto_type_declaration)]
    $default  reduce using rule 561 (auto_type_declaration)


State 149

  531 basic_type_declaration: "int" .

    $default  reduce using rule 531 (basic_type_declaration)


State 150

  535 basic_type_declaration: "int2" .

    $default  reduce using rule 535 (basic_type_declaration)


State 151

  536 basic_type_declaration: "int3" .

    $default  reduce using rule 536 (basic_type_declaration)


State 152

  537 basic_type_declaration: "int4" .

    $default  reduce using rule 537 (basic_type_declaration)


State 153

  538 basic_type_declaration: "uint" .

    $default  reduce using rule 538 (basic_type_declaration)


State 154

  553 basic_type_declaration: "bitfield" .
  568 bitfield_type_declaration: "bitfield" . '<' $@36 bitfield_bits '>' $@37

    '<'  shift, and go to state 236

    $default  reduce using rule 553 (basic_type_declaration)


State 155

  542 basic_type_declaration: "uint2" .

    $default  reduce using rule 542 (basic_type_declaration)


State 156

  543 basic_type_declaration: "uint3" .

    $default  reduce using rule 543 (basic_type_declaration)


State 157

  544 basic_type_declaration: "uint4" .

    $default  reduce using rule 544 (basic_type_declaration)


State 158

  545 basic_type_declaration: "float" .

    $default  reduce using rule 545 (basic_type_declaration)


State 159

  546 basic_type_declaration: "float2" .

    $default  reduce using rule 546 (basic_type_declaration)


State 160

  547 basic_type_declaration: "float3" .

    $default  reduce using rule 547 (basic_type_declaration)


State 161

  548 basic_type_declaration: "float4" .

    $default  reduce using rule 548 (basic_type_declaration)


State 162

  550 basic_type_declaration: "range" .

    $default  reduce using rule 550 (basic_type_declaration)


State 163

  551 basic_type_declaration: "urange" .

    $default  reduce using rule 551 (basic_type_declaration)


State 164

  601 type_declaration_no_options: "block" .
  604                            | "block" . '<' $@46 type_declaration '>' $@47
  607                            | "block" . '<' $@48 optional_function_argument_list optional_function_type '>' $@49

    '<'  shift, and go to state 237

    $default  reduce using rule 601 (type_declaration_no_options)


State 165

  534 basic_type_declaration: "int64" .

    $default  reduce using rule 534 (basic_type_declaration)


State 166

  541 basic_type_declaration: "uint64" .

    $default  reduce using rule 541 (basic_type_declaration)


State 167

  552 basic_type_declaration: "double" .

    $default  reduce using rule 552 (basic_type_declaration)


State 168

  608 type_declaration_no_options: "function" .
  611                            | "function" . '<' $@50 type_declaration '>' $@51
  614                            | "function" . '<' $@52 optional_function_argument_list optional_function_type '>' $@53

    '<'  shift, and go to state 238

    $default  reduce using rule 608 (type_declaration_no_options)


State 169

  615 type_declaration_no_options: "lambda" .
  618                            | "lambda" . '<' $@54 type_declaration '>' $@55
  621                            | "lambda" . '<' $@56 optional_function_argument_list optional_function_type '>' $@57

    '<'  shift, and go to state 239

    $default  reduce using rule 615 (type_declaration_no_options)


State 170

  532 basic_type_declaration: "int8" .

    $default  reduce using rule 532 (basic_type_declaration)


State 171

  539 basic_type_declaration: "uint8" .

    $default  reduce using rule 539 (basic_type_declaration)


State 172

  533 basic_type_declaration: "int16" .

    $default  reduce using rule 533 (basic_type_declaration)


State 173

  540 basic_type_declaration: "uint16" .

    $default  reduce using rule 540 (basic_type_declaration)


State 174

  624 type_declaration_no_options: "tuple" . '<' $@58 tuple_type_list '>' $@59

    '<'  shift, and go to state 240


State 175

  627 type_declaration_no_options: "variant" . '<' $@60 variant_type_list '>' $@61

    '<'  shift, and go to state 241


State 176

  563 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 242


State 177

  560 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 560 (structure_type_declaration)


State 178

  571 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 571 (type_declaration_no_options)


State 179

  574 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 574 (type_declaration_no_options)


State 180

  572 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 572 (type_declaration_no_options)


State 181

  573 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 573 (type_declaration_no_options)


State 182

  575 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  576                            | type_declaration_no_options . '[' ']'
  577                            | type_declaration_no_options . '-' '[' ']'
  578                            | type_declaration_no_options . "explicit"
  579                            | type_declaration_no_options . "const"
  580                            | type_declaration_no_options . '-' "const"
  581                            | type_declaration_no_options . '&'
  582                            | type_declaration_no_options . '-' '&'
  583                            | type_declaration_no_options . '#'
  584                            | type_declaration_no_options . "implicit"
  585                            | type_declaration_no_options . '-' '#'
  586                            | type_declaration_no_options . "==" "const"
  587                            | type_declaration_no_options . '?'
  591                            | type_declaration_no_options . "??"
  628 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 243
    "implicit"  shift, and go to state 244
    "explicit"  shift, and go to state 245
    "=="        shift, and go to state 246
    "??"        shift, and go to state 247
    '?'         shift, and go to state 248
    '&'         shift, and go to state 249
    '-'         shift, and go to state 250
    '['         shift, and go to state 251
    '#'         shift, and go to state 252

    '['       [reduce using rule 628 (type_declaration)]
    $default  reduce using rule 628 (type_declaration)


State 183

  500 single_alias: "name" $@33 '=' type_declaration .
  629 type_declaration: type_declaration . '|' type_declaration_no_options
  630                 | type_declaration . '|' '#'

    '|'  shift, and go to state 253

    $default  reduce using rule 500 (single_alias)


State 184

  502 alias_list: alias_list single_alias ';' .

    $default  reduce using rule 502 (alias_list)


State 185

  564 bitfield_bits: "name" .

    $default  reduce using rule 564 (bitfield_bits)


State 186

  565 bitfield_bits: bitfield_bits . ';' "name"
  635 bitfield_alias_declaration: "bitfield" $@64 "name" '{' bitfield_bits . ';' '}'

    ';'  shift, and go to state 254


State 187

  633 variant_alias_declaration: "variant" $@62 "name" $@63 '{' . variant_type_list ';' '}'

    "name"  shift, and go to state 255

    variant_type       go to state 256
    variant_type_list  go to state 257


State 188

  100 annotation_declaration: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 100 (annotation_declaration)


State 189

  111 function_name: "operator" . '!'
  112              | "operator" . '~'
  113              | "operator" . "+="
  114              | "operator" . "-="
  115              | "operator" . "*="
  116              | "operator" . "/="
  117              | "operator" . "%="
  118              | "operator" . "&="
  119              | "operator" . "|="
  120              | "operator" . "^="
  121              | "operator" . "&&="
  122              | "operator" . "||="
  123              | "operator" . "^^="
  124              | "operator" . "&&"
  125              | "operator" . "||"
  126              | "operator" . "^^"
  127              | "operator" . '+'
  128              | "operator" . '-'
  129              | "operator" . '*'
  130              | "operator" . '/'
  131              | "operator" . '%'
  132              | "operator" . '<'
  133              | "operator" . '>'
  134              | "operator" . ".."
  135              | "operator" . "=="
  136              | "operator" . "!="
  137              | "operator" . "<="
  138              | "operator" . ">="
  139              | "operator" . '&'
  140              | "operator" . '|'
  141              | "operator" . '^'
  144              | "operator" . "++"
  145              | "operator" . "--"
  146              | "operator" . "<<"
  147              | "operator" . ">>"
  148              | "operator" . "<<="
  149              | "operator" . ">>="
  150              | "operator" . "<<<"
  151              | "operator" . ">>>"
  152              | "operator" . "<<<="
  153              | "operator" . ">>>="
  154              | "operator" . '[' ']'
  155              | "operator" . "?[" ']'
  156              | "operator" . '.'
  157              | "operator" . "?."
  158              | "operator" . ":="
  159              | "operator" . "delete"
  160              | "operator" . "??"
  161              | "operator" . "is"
  162              | "operator" . "as"
  163              | "operator" . '?' "as"

    "is"      shift, and go to state 258
    "as"      shift, and go to state 259
    "delete"  shift, and go to state 260
    "+="      shift, and go to state 261
    "-="      shift, and go to state 262
    "/="      shift, and go to state 263
    "*="      shift, and go to state 264
    "%="      shift, and go to state 265
    "&="      shift, and go to state 266
    "|="      shift, and go to state 267
    "^="      shift, and go to state 268
    "<<"      shift, and go to state 269
    ">>"      shift, and go to state 270
    "++"      shift, and go to state 271
    "--"      shift, and go to state 272
    "<="      shift, and go to state 273
    "<<="     shift, and go to state 274
    ">>="     shift, and go to state 275
    ">="      shift, and go to state 276
    "=="      shift, and go to state 277
    "!="      shift, and go to state 278
    "??"      shift, and go to state 279
    "?."      shift, and go to state 280
    "?["      shift, and go to state 281
    ":="      shift, and go to state 282
    "<<<"     shift, and go to state 283
    ">>>"     shift, and go to state 284
    "<<<="    shift, and go to state 285
    ">>>="    shift, and go to state 286
    "&&"      shift, and go to state 287
    "||"      shift, and go to state 288
    "^^"      shift, and go to state 289
    "&&="     shift, and go to state 290
    "||="     shift, and go to state 291
    "^^="     shift, and go to state 292
    ".."      shift, and go to state 293
    '?'       shift, and go to state 294
    '|'       shift, and go to state 295
    '^'       shift, and go to state 296
    '&'       shift, and go to state 297
    '<'       shift, and go to state 298
    '>'       shift, and go to state 299
    '-'       shift, and go to state 300
    '+'       shift, and go to state 301
    '*'       shift, and go to state 302
    '/'       shift, and go to state 303
    '%'       shift, and go to state 304
    '~'       shift, and go to state 305
    '!'       shift, and go to state 306
    '.'       shift, and go to state 307
    '['       shift, and go to state 308


State 190

  164 function_name: "bool" .

    $default  reduce using rule 164 (function_name)


State 191

  165 function_name: "string" .

    $default  reduce using rule 165 (function_name)


State 192

  166 function_name: "int" .

    $default  reduce using rule 166 (function_name)


State 193

  167 function_name: "int2" .

    $default  reduce using rule 167 (function_name)


State 194

  168 function_name: "int3" .

    $default  reduce using rule 168 (function_name)


State 195

  169 function_name: "int4" .

    $default  reduce using rule 169 (function_name)


State 196

  170 function_name: "uint" .

    $default  reduce using rule 170 (function_name)


State 197

  171 function_name: "uint2" .

    $default  reduce using rule 171 (function_name)


State 198

  172 function_name: "uint3" .

    $default  reduce using rule 172 (function_name)


State 199

  173 function_name: "uint4" .

    $default  reduce using rule 173 (function_name)


State 200

  174 function_name: "float" .

    $default  reduce using rule 174 (function_name)


State 201

  175 function_name: "float2" .

    $default  reduce using rule 175 (function_name)


State 202

  176 function_name: "float3" .

    $default  reduce using rule 176 (function_name)


State 203

  177 function_name: "float4" .

    $default  reduce using rule 177 (function_name)


State 204

  178 function_name: "range" .

    $default  reduce using rule 178 (function_name)


State 205

  179 function_name: "urange" .

    $default  reduce using rule 179 (function_name)


State 206

  180 function_name: "int64" .

    $default  reduce using rule 180 (function_name)


State 207

  181 function_name: "uint64" .

    $default  reduce using rule 181 (function_name)


State 208

  182 function_name: "double" .

    $default  reduce using rule 182 (function_name)


State 209

  183 function_name: "int8" .

    $default  reduce using rule 183 (function_name)


State 210

  184 function_name: "uint8" .

    $default  reduce using rule 184 (function_name)


State 211

  185 function_name: "int16" .

    $default  reduce using rule 185 (function_name)


State 212

  186 function_name: "uint16" .

    $default  reduce using rule 186 (function_name)


State 213

  142 function_name: "++" . "operator"

    "operator"  shift, and go to state 309


State 214

  143 function_name: "--" . "operator"

    "operator"  shift, and go to state 310


State 215

  110 function_name: "name" .

    $default  reduce using rule 110 (function_name)


State 216

  191 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 311

    $default  reduce using rule 105 (optional_function_argument_list)

    optional_function_argument_list  go to state 312


State 217

  193 function_declaration: optional_public_or_private_function $@5 function_declaration_header . expression_block

    '{'  shift, and go to state 313

    expression_block  go to state 314


State 218

  510 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration '{' enum_list '}'

    "int"     shift, and go to state 315
    "uint"    shift, and go to state 316
    "int8"    shift, and go to state 317
    "uint8"   shift, and go to state 318
    "int16"   shift, and go to state 319
    "uint16"  shift, and go to state 320

    enum_basic_type_declaration  go to state 321


State 219

  509 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' . enum_list '}'

    $default  reduce using rule 496 (enum_list)

    enum_list  go to state 322


State 220

  514 optional_sealed: "sealed" .

    $default  reduce using rule 514 (optional_sealed)


State 221

  515 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 323


State 222

  523 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@34 structure_name . $@35 '{' struct_variable_declaration_list '}'

    $default  reduce using rule 522 ($@35)

    $@35  go to state 324


State 223

  487 global_variable_declaration_list: global_variable_declaration_list . $@31 optional_field_annotation let_variable_declaration
  493 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list . '}'

    '}'  shift, and go to state 325

    $default  reduce using rule 486 ($@31)

    $@31  go to state 326


State 224

  432 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 27
    "in"    shift, and go to state 28
    "name"  shift, and go to state 29

    annotation_argument_name  go to state 30
    annotation_argument       go to state 31
    annotation_argument_list  go to state 327


State 225

  495 global_let: kwd_let optional_shared optional_public_or_private_variable $@32 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 328
    "name"  shift, and go to state 329

    let_variable_name_with_pos_list  go to state 330
    let_variable_declaration         go to state 331


State 226

   22 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 22 (character_sequence)


State 227

   23 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 23 (character_sequence)


State 228

   24 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 24 (string_constant)


State 229

   82 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 132
    "false"                    shift, and go to state 133
    "integer constant"         shift, and go to state 134
    "floating point constant"  shift, and go to state 135
    "name"                     shift, and go to state 136
    "start of the string"      shift, and go to state 102

    string_constant            go to state 137
    annotation_argument_value  go to state 332


State 230

   93 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 93 (annotation_argument)


State 231

  594 type_declaration_no_options: "array" '<' . $@40 type_declaration '>' $@41

    $default  reduce using rule 592 ($@40)

    $@40  go to state 333


State 232

  597 type_declaration_no_options: "table" '<' . $@42 table_type_pair '>' $@43

    $default  reduce using rule 595 ($@42)

    $@42  go to state 334


State 233

  600 type_declaration_no_options: "iterator" '<' . $@44 type_declaration '>' $@45

    $default  reduce using rule 598 ($@44)

    $@44  go to state 335


State 234

  590 type_declaration_no_options: "smart_ptr" '<' . $@38 type_declaration '>' $@39

    $default  reduce using rule 588 ($@38)

    $@38  go to state 336


State 235

  562 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 337


State 236

  568 bitfield_type_declaration: "bitfield" '<' . $@36 bitfield_bits '>' $@37

    $default  reduce using rule 566 ($@36)

    $@36  go to state 338


State 237

  604 type_declaration_no_options: "block" '<' . $@46 type_declaration '>' $@47
  607                            | "block" '<' . $@48 optional_function_argument_list optional_function_type '>' $@49

    ':'       reduce using rule 605 ($@48)
    '>'       reduce using rule 605 ($@48)
    '('       reduce using rule 605 ($@48)
    $default  reduce using rule 602 ($@46)

    $@46  go to state 339
    $@48  go to state 340


State 238

  611 type_declaration_no_options: "function" '<' . $@50 type_declaration '>' $@51
  614                            | "function" '<' . $@52 optional_function_argument_list optional_function_type '>' $@53

    ':'       reduce using rule 612 ($@52)
    '>'       reduce using rule 612 ($@52)
    '('       reduce using rule 612 ($@52)
    $default  reduce using rule 609 ($@50)

    $@50  go to state 341
    $@52  go to state 342


State 239

  618 type_declaration_no_options: "lambda" '<' . $@54 type_declaration '>' $@55
  621                            | "lambda" '<' . $@56 optional_function_argument_list optional_function_type '>' $@57

    ':'       reduce using rule 619 ($@56)
    '>'       reduce using rule 619 ($@56)
    '('       reduce using rule 619 ($@56)
    $default  reduce using rule 616 ($@54)

    $@54  go to state 343
    $@56  go to state 344


State 240

  624 type_declaration_no_options: "tuple" '<' . $@58 tuple_type_list '>' $@59

    $default  reduce using rule 622 ($@58)

    $@58  go to state 345


State 241

  627 type_declaration_no_options: "variant" '<' . $@60 variant_type_list '>' $@61

    $default  reduce using rule 625 ($@60)

    $@60  go to state 346


State 242

  563 auto_type_declaration: "$t" '(' . expr ')'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 403
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 243

  579 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 579 (type_declaration_no_options)


State 244

  584 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 584 (type_declaration_no_options)


State 245

  578 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 578 (type_declaration_no_options)


State 246

  586 type_declaration_no_options: type_declaration_no_options "==" . "const"

    "const"  shift, and go to state 411


State 247

  591 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 591 (type_declaration_no_options)


State 248

  587 type_declaration_no_options: type_declaration_no_options '?' .

    $default  reduce using rule 587 (type_declaration_no_options)


State 249

  581 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 581 (type_declaration_no_options)


State 250

  577 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  580                            | type_declaration_no_options '-' . "const"
  582                            | type_declaration_no_options '-' . '&'
  585                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 412
    '&'      shift, and go to state 413
    '['      shift, and go to state 414
    '#'      shift, and go to state 415


State 251

  575 type_declaration_no_options: type_declaration_no_options '[' . expr ']'
  576                            | type_declaration_no_options '[' . ']'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    ']'                               shift, and go to state 416
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 417
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 252

  583 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 583 (type_declaration_no_options)


State 253

  629 type_declaration: type_declaration '|' . type_declaration_no_options
  630                 | type_declaration '|' . '#'

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51
    '#'          shift, and go to state 418

    name_in_namespace            go to state 177
    basic_type_declaration       go to state 178
    structure_type_declaration   go to state 179
    auto_type_declaration        go to state 180
    bitfield_type_declaration    go to state 181
    type_declaration_no_options  go to state 419


State 254

  565 bitfield_bits: bitfield_bits ';' . "name"
  635 bitfield_alias_declaration: "bitfield" $@64 "name" '{' bitfield_bits ';' . '}'

    "name"  shift, and go to state 420
    '}'     shift, and go to state 421


State 255

  459 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 422


State 256

  460 variant_type_list: variant_type .

    $default  reduce using rule 460 (variant_type_list)


State 257

  461 variant_type_list: variant_type_list . ';' variant_type
  633 variant_alias_declaration: "variant" $@62 "name" $@63 '{' variant_type_list . ';' '}'

    ';'  shift, and go to state 423


State 258

  161 function_name: "operator" "is" .

    $default  reduce using rule 161 (function_name)


State 259

  162 function_name: "operator" "as" .

    $default  reduce using rule 162 (function_name)


State 260

  159 function_name: "operator" "delete" .

    $default  reduce using rule 159 (function_name)


State 261

  113 function_name: "operator" "+=" .

    $default  reduce using rule 113 (function_name)


State 262

  114 function_name: "operator" "-=" .

    $default  reduce using rule 114 (function_name)


State 263

  116 function_name: "operator" "/=" .

    $default  reduce using rule 116 (function_name)


State 264

  115 function_name: "operator" "*=" .

    $default  reduce using rule 115 (function_name)


State 265

  117 function_name: "operator" "%=" .

    $default  reduce using rule 117 (function_name)


State 266

  118 function_name: "operator" "&=" .

    $default  reduce using rule 118 (function_name)


State 267

  119 function_name: "operator" "|=" .

    $default  reduce using rule 119 (function_name)


State 268

  120 function_name: "operator" "^=" .

    $default  reduce using rule 120 (function_name)


State 269

  146 function_name: "operator" "<<" .

    $default  reduce using rule 146 (function_name)


State 270

  147 function_name: "operator" ">>" .

    $default  reduce using rule 147 (function_name)


State 271

  144 function_name: "operator" "++" .

    $default  reduce using rule 144 (function_name)


State 272

  145 function_name: "operator" "--" .

    $default  reduce using rule 145 (function_name)


State 273

  137 function_name: "operator" "<=" .

    $default  reduce using rule 137 (function_name)


State 274

  148 function_name: "operator" "<<=" .

    $default  reduce using rule 148 (function_name)


State 275

  149 function_name: "operator" ">>=" .

    $default  reduce using rule 149 (function_name)


State 276

  138 function_name: "operator" ">=" .

    $default  reduce using rule 138 (function_name)


State 277

  135 function_name: "operator" "==" .

    $default  reduce using rule 135 (function_name)


State 278

  136 function_name: "operator" "!=" .

    $default  reduce using rule 136 (function_name)


State 279

  160 function_name: "operator" "??" .

    $default  reduce using rule 160 (function_name)


State 280

  157 function_name: "operator" "?." .

    $default  reduce using rule 157 (function_name)


State 281

  155 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 424


State 282

  158 function_name: "operator" ":=" .

    $default  reduce using rule 158 (function_name)


State 283

  150 function_name: "operator" "<<<" .

    $default  reduce using rule 150 (function_name)


State 284

  151 function_name: "operator" ">>>" .

    $default  reduce using rule 151 (function_name)


State 285

  152 function_name: "operator" "<<<=" .

    $default  reduce using rule 152 (function_name)


State 286

  153 function_name: "operator" ">>>=" .

    $default  reduce using rule 153 (function_name)


State 287

  124 function_name: "operator" "&&" .

    $default  reduce using rule 124 (function_name)


State 288

  125 function_name: "operator" "||" .

    $default  reduce using rule 125 (function_name)


State 289

  126 function_name: "operator" "^^" .

    $default  reduce using rule 126 (function_name)


State 290

  121 function_name: "operator" "&&=" .

    $default  reduce using rule 121 (function_name)


State 291

  122 function_name: "operator" "||=" .

    $default  reduce using rule 122 (function_name)


State 292

  123 function_name: "operator" "^^=" .

    $default  reduce using rule 123 (function_name)


State 293

  134 function_name: "operator" ".." .

    $default  reduce using rule 134 (function_name)


State 294

  163 function_name: "operator" '?' . "as"

    "as"  shift, and go to state 425


State 295

  140 function_name: "operator" '|' .

    $default  reduce using rule 140 (function_name)


State 296

  141 function_name: "operator" '^' .

    $default  reduce using rule 141 (function_name)


State 297

  139 function_name: "operator" '&' .

    $default  reduce using rule 139 (function_name)


State 298

  132 function_name: "operator" '<' .

    $default  reduce using rule 132 (function_name)


State 299

  133 function_name: "operator" '>' .

    $default  reduce using rule 133 (function_name)


State 300

  128 function_name: "operator" '-' .

    $default  reduce using rule 128 (function_name)


State 301

  127 function_name: "operator" '+' .

    $default  reduce using rule 127 (function_name)


State 302

  129 function_name: "operator" '*' .

    $default  reduce using rule 129 (function_name)


State 303

  130 function_name: "operator" '/' .

    $default  reduce using rule 130 (function_name)


State 304

  131 function_name: "operator" '%' .

    $default  reduce using rule 131 (function_name)


State 305

  112 function_name: "operator" '~' .

    $default  reduce using rule 112 (function_name)


State 306

  111 function_name: "operator" '!' .

    $default  reduce using rule 111 (function_name)


State 307

  156 function_name: "operator" '.' .

    $default  reduce using rule 156 (function_name)


State 308

  154 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 426


State 309

  142 function_name: "++" "operator" .

    $default  reduce using rule 142 (function_name)


State 310

  143 function_name: "--" "operator" .

    $default  reduce using rule 143 (function_name)


State 311

  106 optional_function_argument_list: '(' . ')'
  107                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 427
    "[["  shift, and go to state 224
    ')'   shift, and go to state 428

    $default  reduce using rule 431 (optional_field_annotation)

    optional_field_annotation      go to state 429
    function_argument_declaration  go to state 430
    function_argument_list         go to state 431


State 312

  191 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 432

    $default  reduce using rule 108 (optional_function_type)

    optional_function_type  go to state 433


State 313

  194 expression_block: '{' . expressions '}'
  195                 | '{' . expressions '}' "finally" '{' expressions '}'

    $default  reduce using rule 216 (expressions)

    expressions  go to state 434


State 314

  193 function_declaration: optional_public_or_private_function $@5 function_declaration_header expression_block .

    $default  reduce using rule 193 (function_declaration)


State 315

  554 enum_basic_type_declaration: "int" .

    $default  reduce using rule 554 (enum_basic_type_declaration)


State 316

  557 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 557 (enum_basic_type_declaration)


State 317

  555 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 555 (enum_basic_type_declaration)


State 318

  558 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 558 (enum_basic_type_declaration)


State 319

  556 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 556 (enum_basic_type_declaration)


State 320

  559 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 559 (enum_basic_type_declaration)


State 321

  510 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . '{' enum_list '}'

    '{'  shift, and go to state 435


State 322

  497 enum_list: enum_list . "name" ';'
  498          | enum_list . "name" '=' expr ';'
  509 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' enum_list . '}'

    "name"  shift, and go to state 436
    '}'     shift, and go to state 437


State 323

  515 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 438

    $default  reduce using rule 511 (optional_structure_parent)

    optional_structure_parent  go to state 439


State 324

  523 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@34 structure_name $@35 . '{' struct_variable_declaration_list '}'

    '{'  shift, and go to state 440


State 325

  493 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}' .

    $default  reduce using rule 493 (global_let)


State 326

  487 global_variable_declaration_list: global_variable_declaration_list $@31 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 224

    $default  reduce using rule 431 (optional_field_annotation)

    optional_field_annotation  go to state 441


State 327

   95 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  432 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 64
    ']'  shift, and go to state 442


State 328

  476 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 443


State 329

  475 let_variable_name_with_pos_list: "name" .
  477                                | "name" . "aka" "name"

    "aka"  shift, and go to state 444

    $default  reduce using rule 475 (let_variable_name_with_pos_list)


State 330

  478 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  479                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  480 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options ';'
  481                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  482                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  483                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr ';'
  484                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 445
    ':'  shift, and go to state 446
    '&'  shift, and go to state 447

    $default  reduce using rule 473 (optional_ref)

    optional_ref  go to state 448


State 331

  495 global_let: kwd_let optional_shared optional_public_or_private_variable $@32 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 495 (global_let)


State 332

   82 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 82 (annotation_argument_value_list)


State 333

  594 type_declaration_no_options: "array" '<' $@40 . type_declaration '>' $@41

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace            go to state 177
    basic_type_declaration       go to state 178
    structure_type_declaration   go to state 179
    auto_type_declaration        go to state 180
    bitfield_type_declaration    go to state 181
    type_declaration_no_options  go to state 182
    type_declaration             go to state 449


State 334

  597 type_declaration_no_options: "table" '<' $@42 . table_type_pair '>' $@43

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace            go to state 177
    basic_type_declaration       go to state 178
    structure_type_declaration   go to state 179
    auto_type_declaration        go to state 180
    bitfield_type_declaration    go to state 181
    table_type_pair              go to state 450
    type_declaration_no_options  go to state 182
    type_declaration             go to state 451


State 335

  600 type_declaration_no_options: "iterator" '<' $@44 . type_declaration '>' $@45

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace            go to state 177
    basic_type_declaration       go to state 178
    structure_type_declaration   go to state 179
    auto_type_declaration        go to state 180
    bitfield_type_declaration    go to state 181
    type_declaration_no_options  go to state 182
    type_declaration             go to state 452


State 336

  590 type_declaration_no_options: "smart_ptr" '<' $@38 . type_declaration '>' $@39

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace            go to state 177
    basic_type_declaration       go to state 178
    structure_type_declaration   go to state 179
    auto_type_declaration        go to state 180
    bitfield_type_declaration    go to state 181
    type_declaration_no_options  go to state 182
    type_declaration             go to state 453


State 337

  562 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 454


State 338

  568 bitfield_type_declaration: "bitfield" '<' $@36 . bitfield_bits '>' $@37

    "name"  shift, and go to state 185

    bitfield_bits  go to state 455


State 339

  604 type_declaration_no_options: "block" '<' $@46 . type_declaration '>' $@47

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace            go to state 177
    basic_type_declaration       go to state 178
    structure_type_declaration   go to state 179
    auto_type_declaration        go to state 180
    bitfield_type_declaration    go to state 181
    type_declaration_no_options  go to state 182
    type_declaration             go to state 456


State 340

  607 type_declaration_no_options: "block" '<' $@48 . optional_function_argument_list optional_function_type '>' $@49

    '('  shift, and go to state 311

    $default  reduce using rule 105 (optional_function_argument_list)

    optional_function_argument_list  go to state 457


State 341

  611 type_declaration_no_options: "function" '<' $@50 . type_declaration '>' $@51

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace            go to state 177
    basic_type_declaration       go to state 178
    structure_type_declaration   go to state 179
    auto_type_declaration        go to state 180
    bitfield_type_declaration    go to state 181
    type_declaration_no_options  go to state 182
    type_declaration             go to state 458


State 342

  614 type_declaration_no_options: "function" '<' $@52 . optional_function_argument_list optional_function_type '>' $@53

    '('  shift, and go to state 311

    $default  reduce using rule 105 (optional_function_argument_list)

    optional_function_argument_list  go to state 459


State 343

  618 type_declaration_no_options: "lambda" '<' $@54 . type_declaration '>' $@55

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace            go to state 177
    basic_type_declaration       go to state 178
    structure_type_declaration   go to state 179
    auto_type_declaration        go to state 180
    bitfield_type_declaration    go to state 181
    type_declaration_no_options  go to state 182
    type_declaration             go to state 460


State 344

  621 type_declaration_no_options: "lambda" '<' $@56 . optional_function_argument_list optional_function_type '>' $@57

    '('  shift, and go to state 311

    $default  reduce using rule 105 (optional_function_argument_list)

    optional_function_argument_list  go to state 461


State 345

  624 type_declaration_no_options: "tuple" '<' $@58 . tuple_type_list '>' $@59

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 462

    name_in_namespace            go to state 177
    tuple_type                   go to state 463
    tuple_type_list              go to state 464
    basic_type_declaration       go to state 178
    structure_type_declaration   go to state 179
    auto_type_declaration        go to state 180
    bitfield_type_declaration    go to state 181
    type_declaration_no_options  go to state 182
    type_declaration             go to state 465


State 346

  627 type_declaration_no_options: "variant" '<' $@60 . variant_type_list '>' $@61

    "name"  shift, and go to state 255

    variant_type       go to state 256
    variant_type_list  go to state 466


State 347

  337 expr: "true" .

    $default  reduce using rule 337 (expr)


State 348

  338 expr: "false" .

    $default  reduce using rule 338 (expr)


State 349

  231 expr_new: "new" . new_type_declaration
  232         | "new" . new_type_declaration '(' ')'
  233         | "new" . new_type_declaration '(' expr_list ')'
  234         | "new" . make_decl

    "::"    shift, and go to state 50
    "[["    shift, and go to state 369
    "[{"    shift, and go to state 370
    "{{"    shift, and go to state 371
    "name"  shift, and go to state 51
    '<'     shift, and go to state 467

    name_in_namespace           go to state 177
    new_type_declaration        go to state 468
    structure_type_declaration  go to state 469
    make_decl                   go to state 470
    make_struct_decl            go to state 407
    make_dim_decl               go to state 408
    make_table_decl             go to state 409
    array_comprehension         go to state 410


State 350

  264 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  265               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  266               | "typeinfo" . '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

    '('  shift, and go to state 471


State 351

  263 expr_type_decl: "type" . '<' $@14 type_declaration '>' $@15

    '<'  shift, and go to state 472


State 352

  331 expr: "null" .

    $default  reduce using rule 331 (expr)


State 353

  384 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 473


State 354

  254 expr_cast: "cast" . '<' $@8 type_declaration_no_options '>' $@9 expr

    '<'  shift, and go to state 474


State 355

  257 expr_cast: "upcast" . '<' $@10 type_declaration_no_options '>' $@11 expr

    '<'  shift, and go to state 475


State 356

  385 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 476


State 357

  260 expr_cast: "reinterpret" . '<' $@12 type_declaration_no_options '>' $@13 expr

    '<'  shift, and go to state 477


State 358

  415 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 478


State 359

  553 basic_type_declaration: "bitfield" .

    $default  reduce using rule 553 (basic_type_declaration)


State 360

  386 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  387     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 479


State 361

  367 expr: "++" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 480
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 362

  368 expr: "--" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 481
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 363

  416 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 482


State 364

  417 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 483


State 365

  418 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 484


State 366

  419 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 485


State 367

  420 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 486


State 368

  421 expr_mtag: "$c" . '(' expr ')' '(' ')'
  422          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 487


State 369

  648 make_struct_decl: "[[" . type_declaration_no_options make_struct_dim optional_block ']' ']'
  649                 | "[[" . type_declaration_no_options optional_block ']' ']'
  650                 | "[[" . type_declaration_no_options '(' ')' optional_block ']' ']'
  651                 | "[[" . type_declaration_no_options '(' ')' make_struct_dim optional_block ']' ']'
  661 make_dim_decl: "[[" . type_declaration_no_options make_dim ']' ']'
  668 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 488
    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace            go to state 177
    basic_type_declaration       go to state 178
    structure_type_declaration   go to state 179
    auto_type_declaration        go to state 180
    bitfield_type_declaration    go to state 181
    type_declaration_no_options  go to state 489


State 370

  652 make_struct_decl: "[{" . type_declaration_no_options make_struct_dim optional_block '}' ']'
  653                 | "[{" . type_declaration_no_options '(' ')' make_struct_dim optional_block '}' ']'
  662 make_dim_decl: "[{" . type_declaration_no_options make_dim '}' ']'
  669 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "for"        shift, and go to state 490
    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace            go to state 177
    basic_type_declaration       go to state 178
    structure_type_declaration   go to state 179
    auto_type_declaration        go to state 180
    bitfield_type_declaration    go to state 181
    type_declaration_no_options  go to state 491


State 371

  665 make_table_decl: "{{" . make_table '}' '}'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 492
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_map_tuple          go to state 493
    make_dim_decl           go to state 408
    make_table              go to state 494
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 372

  285 expr_numeric_const: "integer constant" .

    $default  reduce using rule 285 (expr_numeric_const)


State 373

  287 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 287 (expr_numeric_const)


State 374

  286 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 286 (expr_numeric_const)


State 375

  288 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 288 (expr_numeric_const)


State 376

  289 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 289 (expr_numeric_const)


State 377

  290 expr_numeric_const: "double constant" .

    $default  reduce using rule 290 (expr_numeric_const)


State 378

   28 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 25 (string_builder_body)

    string_builder_body  go to state 495


State 379

  344 expr: '-' . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 496
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 380

  343 expr: '+' . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 497
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 381

  383 expr: '*' . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 498
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 382

   32 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 50
    "name"  shift, and go to state 51

    name_in_namespace  go to state 499


State 383

  342 expr: '~' . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 500
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 384

  341 expr: '!' . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 501
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 385

  371 expr: '(' . expr ')'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 502
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 386

  272 block_or_lambda: '$' .

    $default  reduce using rule 272 (block_or_lambda)


State 387

  273 block_or_lambda: '@' .
  274                | '@' . '@'
  319 func_addr_expr: '@' . '@' func_addr_name
  322               | '@' . '@' '<' $@16 type_declaration_no_options '>' $@17 func_addr_name
  325               | '@' . '@' '<' $@18 optional_function_argument_list optional_function_type '>' $@19 func_addr_name
  430 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 503

    $default  reduce using rule 273 (block_or_lambda)


State 388

  335 expr: string_builder .

    $default  reduce using rule 335 (expr)


State 389

  334 expr: expr_reader .

    $default  reduce using rule 334 (expr)


State 390

  283 expr_block: expression_block .

    $default  reduce using rule 283 (expr_block)


State 391

  314 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  332 expr: name_in_namespace .
  379     | name_in_namespace . '(' ')'
  380     | name_in_namespace . '(' expr_list ')'
  414     | name_in_namespace . "name"

    "name"  shift, and go to state 504
    '('     shift, and go to state 505

    "name"    [reduce using rule 332 (expr)]
    '('       [reduce using rule 332 (expr)]
    $default  reduce using rule 332 (expr)


State 392

  408 expr: expr_new .

    $default  reduce using rule 408 (expr)


State 393

  407 expr: expr_cast .

    $default  reduce using rule 407 (expr)


State 394

  406 expr: expr_type_decl .

    $default  reduce using rule 406 (expr)


State 395

  405 expr: expr_type_info .

    $default  reduce using rule 405 (expr)


State 396

  284 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 12

    $default  reduce using rule 103 (optional_annotation_list)

    optional_annotation_list  go to state 506


State 397

  411 expr: expr_block .

    $default  reduce using rule 411 (expr)


State 398

  333 expr: expr_numeric_const .

    $default  reduce using rule 333 (expr)


State 399

  410 expr: expr_named_call .

    $default  reduce using rule 410 (expr)


State 400

  409 expr: expr_method_call .

    $default  reduce using rule 409 (expr)


State 401

  378 expr: func_addr_expr .

    $default  reduce using rule 378 (expr)


State 402

  339 expr: expr_field .

    $default  reduce using rule 339 (expr)


State 403

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'
  563 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    ')'    shift, and go to state 542


State 404

  340 expr: expr_mtag .

    $default  reduce using rule 340 (expr)


State 405

  381 expr: basic_type_declaration . '(' ')'
  382     | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 543


State 406

  336 expr: make_decl .

    $default  reduce using rule 336 (expr)


State 407

  636 make_decl: make_struct_decl .

    $default  reduce using rule 636 (make_decl)


State 408

  637 make_decl: make_dim_decl .

    $default  reduce using rule 637 (make_decl)


State 409

  638 make_decl: make_table_decl .

    $default  reduce using rule 638 (make_decl)


State 410

  639 make_decl: array_comprehension .

    $default  reduce using rule 639 (make_decl)


State 411

  586 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 586 (type_declaration_no_options)


State 412

  580 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 580 (type_declaration_no_options)


State 413

  582 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 582 (type_declaration_no_options)


State 414

  577 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 544


State 415

  585 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 585 (type_declaration_no_options)


State 416

  576 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 576 (type_declaration_no_options)


State 417

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'
  575 type_declaration_no_options: type_declaration_no_options '[' expr . ']'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    ']'    shift, and go to state 545


State 418

  630 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 630 (type_declaration)


State 419

  575 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  576                            | type_declaration_no_options . '[' ']'
  577                            | type_declaration_no_options . '-' '[' ']'
  578                            | type_declaration_no_options . "explicit"
  579                            | type_declaration_no_options . "const"
  580                            | type_declaration_no_options . '-' "const"
  581                            | type_declaration_no_options . '&'
  582                            | type_declaration_no_options . '-' '&'
  583                            | type_declaration_no_options . '#'
  584                            | type_declaration_no_options . "implicit"
  585                            | type_declaration_no_options . '-' '#'
  586                            | type_declaration_no_options . "==" "const"
  587                            | type_declaration_no_options . '?'
  591                            | type_declaration_no_options . "??"
  629 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 243
    "implicit"  shift, and go to state 244
    "explicit"  shift, and go to state 245
    "=="        shift, and go to state 246
    "??"        shift, and go to state 247
    '?'         shift, and go to state 248
    '&'         shift, and go to state 249
    '-'         shift, and go to state 250
    '['         shift, and go to state 251
    '#'         shift, and go to state 252

    $default  reduce using rule 629 (type_declaration)


State 420

  565 bitfield_bits: bitfield_bits ';' "name" .

    $default  reduce using rule 565 (bitfield_bits)


State 421

  635 bitfield_alias_declaration: "bitfield" $@64 "name" '{' bitfield_bits ';' '}' .

    $default  reduce using rule 635 (bitfield_alias_declaration)


State 422

  459 variant_type: "name" ':' . type_declaration

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace            go to state 177
    basic_type_declaration       go to state 178
    structure_type_declaration   go to state 179
    auto_type_declaration        go to state 180
    bitfield_type_declaration    go to state 181
    type_declaration_no_options  go to state 182
    type_declaration             go to state 546


State 423

  461 variant_type_list: variant_type_list ';' . variant_type
  633 variant_alias_declaration: "variant" $@62 "name" $@63 '{' variant_type_list ';' . '}'

    "name"  shift, and go to state 255
    '}'     shift, and go to state 547

    variant_type  go to state 548


State 424

  155 function_name: "operator" "?[" ']' .

    $default  reduce using rule 155 (function_name)


State 425

  163 function_name: "operator" '?' "as" .

    $default  reduce using rule 163 (function_name)


State 426

  154 function_name: "operator" '[' ']' .

    $default  reduce using rule 154 (function_name)


State 427

  452 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 549


State 428

  106 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 106 (optional_function_argument_list)


State 429

  450 function_argument_declaration: optional_field_annotation . variable_declaration
  451                              | optional_field_annotation . "var" variable_declaration

    "var"   shift, and go to state 550
    "$i"    shift, and go to state 551
    "name"  shift, and go to state 552

    variable_declaration         go to state 553
    variable_name_with_pos_list  go to state 554


State 430

  453 function_argument_list: function_argument_declaration .

    $default  reduce using rule 453 (function_argument_list)


State 431

  107 optional_function_argument_list: '(' function_argument_list . ')'
  454 function_argument_list: function_argument_list . ';' function_argument_declaration

    ')'  shift, and go to state 555
    ';'  shift, and go to state 556


State 432

  109 optional_function_type: ':' . type_declaration

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace            go to state 177
    basic_type_declaration       go to state 178
    structure_type_declaration   go to state 179
    auto_type_declaration        go to state 180
    bitfield_type_declaration    go to state 181
    type_declaration_no_options  go to state 182
    type_declaration             go to state 557


State 433

  191 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 191 (function_declaration_header)


State 434

  194 expression_block: '{' expressions . '}'
  195                 | '{' expressions . '}' "finally" '{' expressions '}'
  217 expressions: expressions . expression_any
  218            | expressions . error

    error                             shift, and go to state 558
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 559
    "if"                              shift, and go to state 560
    "static_if"                       shift, and go to state 561
    "for"                             shift, and go to state 562
    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "return"                          shift, and go to state 563
    "null"                            shift, and go to state 352
    "break"                           shift, and go to state 564
    "try"                             shift, and go to state 565
    "delete"                          shift, and go to state 566
    "deref"                           shift, and go to state 353
    "with"                            shift, and go to state 567
    "assume"                          shift, and go to state 568
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 356
    "continue"                        shift, and go to state 569
    "pass"                            shift, and go to state 570
    "reinterpret"                     shift, and go to state 357
    "label"                           shift, and go to state 571
    "goto"                            shift, and go to state 572
    "unsafe"                          shift, and go to state 573
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "yield"                           shift, and go to state 574
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "@ <|"                            shift, and go to state 575
    "@@ <|"                           shift, and go to state 576
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    ';'                               shift, and go to state 577
    '{'                               shift, and go to state 313
    '}'                               shift, and go to state 578

    string_builder             go to state 388
    expr_reader                go to state 389
    expression_label           go to state 579
    expression_goto            go to state 580
    if_or_static_if            go to state 581
    expression_if_one_liner    go to state 582
    expression_if_then_else    go to state 583
    expression_for_loop        go to state 584
    expression_unsafe          go to state 585
    expression_while_loop      go to state 586
    expression_with            go to state 587
    expression_with_alias      go to state 588
    expression_block           go to state 390
    expression_any             go to state 589
    expr_pipe                  go to state 590
    name_in_namespace          go to state 391
    expression_delete          go to state 591
    expr_new                   go to state 392
    expression_break           go to state 592
    expression_continue        go to state 593
    expression_return_no_pipe  go to state 594
    expression_return          go to state 595
    expression_yield_no_pipe   go to state 596
    expression_yield           go to state 597
    expression_try_catch       go to state 598
    kwd_let                    go to state 599
    expression_let             go to state 600
    expr_cast                  go to state 393
    expr_type_decl             go to state 394
    expr_type_info             go to state 395
    block_or_lambda            go to state 396
    expr_block                 go to state 397
    expr_numeric_const         go to state 398
    expr_assign                go to state 601
    expr_assign_pipe           go to state 602
    expr_named_call            go to state 399
    expr_method_call           go to state 400
    func_addr_expr             go to state 401
    expr_field                 go to state 402
    expr                       go to state 603
    expr_mtag                  go to state 404
    basic_type_declaration     go to state 405
    make_decl                  go to state 406
    make_struct_decl           go to state 407
    make_dim_decl              go to state 408
    make_table_decl            go to state 409
    array_comprehension        go to state 410


State 435

  510 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' . enum_list '}'

    $default  reduce using rule 496 (enum_list)

    enum_list  go to state 604


State 436

  497 enum_list: enum_list "name" . ';'
  498          | enum_list "name" . '=' expr ';'

    '='  shift, and go to state 605
    ';'  shift, and go to state 606


State 437

  509 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' enum_list '}' .

    $default  reduce using rule 509 (enum_declaration)


State 438

  512 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 50
    "name"  shift, and go to state 51

    name_in_namespace  go to state 607


State 439

  515 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 515 (structure_name)


State 440

  523 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@34 structure_name $@35 '{' . struct_variable_declaration_list '}'

    $default  reduce using rule 442 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 608


State 441

  487 global_variable_declaration_list: global_variable_declaration_list $@31 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 328
    "name"  shift, and go to state 329

    let_variable_name_with_pos_list  go to state 330
    let_variable_declaration         go to state 609


State 442

  432 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 610


State 443

  476 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 611
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 444

  477 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 612


State 445

  478 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  479                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 613


State 446

  480 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options ';'
  481                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr ';'
  482                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace            go to state 177
    basic_type_declaration       go to state 178
    structure_type_declaration   go to state 179
    auto_type_declaration        go to state 180
    bitfield_type_declaration    go to state 181
    type_declaration_no_options  go to state 614


State 447

  474 optional_ref: '&' .

    $default  reduce using rule 474 (optional_ref)


State 448

  483 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr ';'
  484                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 615
    ":="  shift, and go to state 616
    '='   shift, and go to state 617

    copy_or_move_or_clone  go to state 618


State 449

  594 type_declaration_no_options: "array" '<' $@40 type_declaration . '>' $@41
  629 type_declaration: type_declaration . '|' type_declaration_no_options
  630                 | type_declaration . '|' '#'

    '|'  shift, and go to state 253
    '>'  shift, and go to state 619


State 450

  597 type_declaration_no_options: "table" '<' $@42 table_type_pair . '>' $@43

    '>'  shift, and go to state 620


State 451

  569 table_type_pair: type_declaration .
  570                | type_declaration . ';' type_declaration
  629 type_declaration: type_declaration . '|' type_declaration_no_options
  630                 | type_declaration . '|' '#'

    '|'  shift, and go to state 253
    ';'  shift, and go to state 621

    $default  reduce using rule 569 (table_type_pair)


State 452

  600 type_declaration_no_options: "iterator" '<' $@44 type_declaration . '>' $@45
  629 type_declaration: type_declaration . '|' type_declaration_no_options
  630                 | type_declaration . '|' '#'

    '|'  shift, and go to state 253
    '>'  shift, and go to state 622


State 453

  590 type_declaration_no_options: "smart_ptr" '<' $@38 type_declaration . '>' $@39
  629 type_declaration: type_declaration . '|' type_declaration_no_options
  630                 | type_declaration . '|' '#'

    '|'  shift, and go to state 253
    '>'  shift, and go to state 623


State 454

  562 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 562 (auto_type_declaration)


State 455

  565 bitfield_bits: bitfield_bits . ';' "name"
  568 bitfield_type_declaration: "bitfield" '<' $@36 bitfield_bits . '>' $@37

    '>'  shift, and go to state 624
    ';'  shift, and go to state 625


State 456

  604 type_declaration_no_options: "block" '<' $@46 type_declaration . '>' $@47
  629 type_declaration: type_declaration . '|' type_declaration_no_options
  630                 | type_declaration . '|' '#'

    '|'  shift, and go to state 253
    '>'  shift, and go to state 626


State 457

  607 type_declaration_no_options: "block" '<' $@48 optional_function_argument_list . optional_function_type '>' $@49

    ':'  shift, and go to state 432

    $default  reduce using rule 108 (optional_function_type)

    optional_function_type  go to state 627


State 458

  611 type_declaration_no_options: "function" '<' $@50 type_declaration . '>' $@51
  629 type_declaration: type_declaration . '|' type_declaration_no_options
  630                 | type_declaration . '|' '#'

    '|'  shift, and go to state 253
    '>'  shift, and go to state 628


State 459

  614 type_declaration_no_options: "function" '<' $@52 optional_function_argument_list . optional_function_type '>' $@53

    ':'  shift, and go to state 432

    $default  reduce using rule 108 (optional_function_type)

    optional_function_type  go to state 629


State 460

  618 type_declaration_no_options: "lambda" '<' $@54 type_declaration . '>' $@55
  629 type_declaration: type_declaration . '|' type_declaration_no_options
  630                 | type_declaration . '|' '#'

    '|'  shift, and go to state 253
    '>'  shift, and go to state 630


State 461

  621 type_declaration_no_options: "lambda" '<' $@56 optional_function_argument_list . optional_function_type '>' $@57

    ':'  shift, and go to state 432

    $default  reduce using rule 108 (optional_function_type)

    optional_function_type  go to state 631


State 462

  222 name_in_namespace: "name" .
  223                  | "name" . "::" "name"
  456 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 80
    ':'   shift, and go to state 632

    $default  reduce using rule 222 (name_in_namespace)


State 463

  457 tuple_type_list: tuple_type .

    $default  reduce using rule 457 (tuple_type_list)


State 464

  458 tuple_type_list: tuple_type_list . ';' tuple_type
  624 type_declaration_no_options: "tuple" '<' $@58 tuple_type_list . '>' $@59

    '>'  shift, and go to state 633
    ';'  shift, and go to state 634


State 465

  455 tuple_type: type_declaration .
  629 type_declaration: type_declaration . '|' type_declaration_no_options
  630                 | type_declaration . '|' '#'

    '|'  shift, and go to state 253

    $default  reduce using rule 455 (tuple_type)


State 466

  461 variant_type_list: variant_type_list . ';' variant_type
  627 type_declaration_no_options: "variant" '<' $@60 variant_type_list . '>' $@61

    '>'  shift, and go to state 635
    ';'  shift, and go to state 636


State 467

  229 new_type_declaration: '<' . $@6 type_declaration '>' $@7

    $default  reduce using rule 227 ($@6)

    $@6  go to state 637


State 468

  231 expr_new: "new" new_type_declaration .
  232         | "new" new_type_declaration . '(' ')'
  233         | "new" new_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 638

    '('       [reduce using rule 231 (expr_new)]
    $default  reduce using rule 231 (expr_new)


State 469

  230 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 230 (new_type_declaration)


State 470

  234 expr_new: "new" make_decl .

    $default  reduce using rule 234 (expr_new)


State 471

  264 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  265               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  266               | "typeinfo" '(' . name_in_namespace '<' "name" ';' "name" '>' expr ')'

    "::"    shift, and go to state 50
    "name"  shift, and go to state 51

    name_in_namespace  go to state 639


State 472

  263 expr_type_decl: "type" '<' . $@14 type_declaration '>' $@15

    $default  reduce using rule 261 ($@14)

    $@14  go to state 640


State 473

  384 expr: "deref" '(' . expr ')'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 641
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 474

  254 expr_cast: "cast" '<' . $@8 type_declaration_no_options '>' $@9 expr

    $default  reduce using rule 252 ($@8)

    $@8  go to state 642


State 475

  257 expr_cast: "upcast" '<' . $@10 type_declaration_no_options '>' $@11 expr

    $default  reduce using rule 255 ($@10)

    $@10  go to state 643


State 476

  385 expr: "addr" '(' . expr ')'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 644
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 477

  260 expr_cast: "reinterpret" '<' . $@12 type_declaration_no_options '>' $@13 expr

    $default  reduce using rule 258 ($@12)

    $@12  go to state 645


State 478

  415 expr: "unsafe" '(' . expr ')'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 646
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 479

  386 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  387     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace            go to state 177
    basic_type_declaration       go to state 178
    structure_type_declaration   go to state 179
    auto_type_declaration        go to state 180
    bitfield_type_declaration    go to state 181
    type_declaration_no_options  go to state 647


State 480

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  367     | "++" expr .
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 507
    "as"  shift, and go to state 508
    "++"  shift, and go to state 511
    "--"  shift, and go to state 512
    "->"  shift, and go to state 517
    "?."  shift, and go to state 519
    "?["  shift, and go to state 520
    "<|"  shift, and go to state 521
    "|>"  shift, and go to state 522
    '.'   shift, and go to state 540
    '['   shift, and go to state 541

    $default  reduce using rule 367 (expr)


State 481

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  368     | "--" expr .
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 507
    "as"  shift, and go to state 508
    "++"  shift, and go to state 511
    "--"  shift, and go to state 512
    "->"  shift, and go to state 517
    "?."  shift, and go to state 519
    "?["  shift, and go to state 520
    "<|"  shift, and go to state 521
    "|>"  shift, and go to state 522
    '.'   shift, and go to state 540
    '['   shift, and go to state 541

    $default  reduce using rule 368 (expr)


State 482

  416 expr_mtag: "$$" '(' . expr ')'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 648
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 483

  417 expr_mtag: "$i" '(' . expr ')'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 649
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 484

  418 expr_mtag: "$v" '(' . expr ')'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 650
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 485

  419 expr_mtag: "$b" '(' . expr ')'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 651
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 486

  420 expr_mtag: "$a" '(' . expr ')'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 652
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 487

  421 expr_mtag: "$c" '(' . expr ')' '(' ')'
  422          | "$c" '(' . expr ')' '(' expr_list ')'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 653
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 488

  668 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "$i"    shift, and go to state 551
    "name"  shift, and go to state 552

    variable_name_with_pos_list  go to state 654


State 489

  575 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  576                            | type_declaration_no_options . '[' ']'
  577                            | type_declaration_no_options . '-' '[' ']'
  578                            | type_declaration_no_options . "explicit"
  579                            | type_declaration_no_options . "const"
  580                            | type_declaration_no_options . '-' "const"
  581                            | type_declaration_no_options . '&'
  582                            | type_declaration_no_options . '-' '&'
  583                            | type_declaration_no_options . '#'
  584                            | type_declaration_no_options . "implicit"
  585                            | type_declaration_no_options . '-' '#'
  586                            | type_declaration_no_options . "==" "const"
  587                            | type_declaration_no_options . '?'
  591                            | type_declaration_no_options . "??"
  648 make_struct_decl: "[[" type_declaration_no_options . make_struct_dim optional_block ']' ']'
  649                 | "[[" type_declaration_no_options . optional_block ']' ']'
  650                 | "[[" type_declaration_no_options . '(' ')' optional_block ']' ']'
  651                 | "[[" type_declaration_no_options . '(' ')' make_struct_dim optional_block ']' ']'
  661 make_dim_decl: "[[" type_declaration_no_options . make_dim ']' ']'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "const"                           shift, and go to state 243
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "where"                           shift, and go to state 655
    "reinterpret"                     shift, and go to state 357
    "implicit"                        shift, and go to state 244
    "explicit"                        shift, and go to state 245
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "=="                              shift, and go to state 246
    "??"                              shift, and go to state 247
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 656
    "start of the string"             shift, and go to state 378
    '?'                               shift, and go to state 248
    '&'                               shift, and go to state 249
    '-'                               shift, and go to state 657
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '['                               shift, and go to state 251
    '('                               shift, and go to state 658
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313
    '#'                               shift, and go to state 252

    $default  reduce using rule 646 (optional_block)

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 659
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_fields      go to state 660
    make_struct_dim         go to state 661
    optional_block          go to state 662
    make_struct_decl        go to state 407
    make_tuple              go to state 663
    make_dim                go to state 664
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 490

  669 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "$i"    shift, and go to state 551
    "name"  shift, and go to state 552

    variable_name_with_pos_list  go to state 665


State 491

  575 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  576                            | type_declaration_no_options . '[' ']'
  577                            | type_declaration_no_options . '-' '[' ']'
  578                            | type_declaration_no_options . "explicit"
  579                            | type_declaration_no_options . "const"
  580                            | type_declaration_no_options . '-' "const"
  581                            | type_declaration_no_options . '&'
  582                            | type_declaration_no_options . '-' '&'
  583                            | type_declaration_no_options . '#'
  584                            | type_declaration_no_options . "implicit"
  585                            | type_declaration_no_options . '-' '#'
  586                            | type_declaration_no_options . "==" "const"
  587                            | type_declaration_no_options . '?'
  591                            | type_declaration_no_options . "??"
  652 make_struct_decl: "[{" type_declaration_no_options . make_struct_dim optional_block '}' ']'
  653                 | "[{" type_declaration_no_options . '(' ')' make_struct_dim optional_block '}' ']'
  662 make_dim_decl: "[{" type_declaration_no_options . make_dim '}' ']'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "const"                           shift, and go to state 243
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "implicit"                        shift, and go to state 244
    "explicit"                        shift, and go to state 245
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "=="                              shift, and go to state 246
    "??"                              shift, and go to state 247
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 656
    "start of the string"             shift, and go to state 378
    '?'                               shift, and go to state 248
    '&'                               shift, and go to state 249
    '-'                               shift, and go to state 657
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '['                               shift, and go to state 251
    '('                               shift, and go to state 666
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313
    '#'                               shift, and go to state 252

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 659
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_fields      go to state 660
    make_struct_dim         go to state 667
    make_struct_decl        go to state 407
    make_tuple              go to state 663
    make_dim                go to state 668
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 492

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'
  657 make_map_tuple: expr . "=>" expr
  658               | expr .

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "=>"   shift, and go to state 669
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 658 (make_map_tuple)


State 493

  663 make_table: make_map_tuple .

    $default  reduce using rule 663 (make_table)


State 494

  664 make_table: make_table . ';' make_map_tuple
  665 make_table_decl: "{{" make_table . '}' '}'

    ';'  shift, and go to state 670
    '}'  shift, and go to state 671


State 495

   26 string_builder_body: string_builder_body . character_sequence
   27                    | string_builder_body . "{" expr "}"
   28 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 129
    STRING_CHARACTER_ESC  shift, and go to state 130
    "end of the string"   shift, and go to state 672
    "{"                   shift, and go to state 673

    character_sequence  go to state 674


State 496

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  344 expr: '-' expr .
  345     | expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 507
    "as"  shift, and go to state 508
    "++"  shift, and go to state 511
    "--"  shift, and go to state 512
    "->"  shift, and go to state 517
    "?."  shift, and go to state 519
    "?["  shift, and go to state 520
    "<|"  shift, and go to state 521
    "|>"  shift, and go to state 522
    '.'   shift, and go to state 540
    '['   shift, and go to state 541

    $default  reduce using rule 344 (expr)


State 497

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  343 expr: '+' expr .
  345     | expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 507
    "as"  shift, and go to state 508
    "++"  shift, and go to state 511
    "--"  shift, and go to state 512
    "->"  shift, and go to state 517
    "?."  shift, and go to state 519
    "?["  shift, and go to state 520
    "<|"  shift, and go to state 521
    "|>"  shift, and go to state 522
    '.'   shift, and go to state 540
    '['   shift, and go to state 541

    $default  reduce using rule 343 (expr)


State 498

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  383     | '*' expr .
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 519
    "?["  shift, and go to state 520
    '.'   shift, and go to state 540
    '['   shift, and go to state 541

    $default  reduce using rule 383 (expr)


State 499

   32 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 31 ($@1)

    $@1  go to state 675


State 500

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  342 expr: '~' expr .
  345     | expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 507
    "as"  shift, and go to state 508
    "++"  shift, and go to state 511
    "--"  shift, and go to state 512
    "->"  shift, and go to state 517
    "?."  shift, and go to state 519
    "?["  shift, and go to state 520
    "<|"  shift, and go to state 521
    "|>"  shift, and go to state 522
    '.'   shift, and go to state 540
    '['   shift, and go to state 541

    $default  reduce using rule 342 (expr)


State 501

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  341 expr: '!' expr .
  345     | expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 507
    "as"  shift, and go to state 508
    "++"  shift, and go to state 511
    "--"  shift, and go to state 512
    "->"  shift, and go to state 517
    "?."  shift, and go to state 519
    "?["  shift, and go to state 520
    "<|"  shift, and go to state 521
    "|>"  shift, and go to state 522
    '.'   shift, and go to state 540
    '['   shift, and go to state 541

    $default  reduce using rule 341 (expr)


State 502

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  371     | '(' expr . ')'
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    ')'    shift, and go to state 676


State 503

  274 block_or_lambda: '@' '@' .
  319 func_addr_expr: '@' '@' . func_addr_name
  322               | '@' '@' . '<' $@16 type_declaration_no_options '>' $@17 func_addr_name
  325               | '@' '@' . '<' $@18 optional_function_argument_list optional_function_type '>' $@19 func_addr_name
  430 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 50
    "$i"    shift, and go to state 677
    "$c"    shift, and go to state 678
    "name"  shift, and go to state 51
    '<'     shift, and go to state 679

    $default  reduce using rule 274 (block_or_lambda)

    name_in_namespace  go to state 680
    func_addr_name     go to state 681


State 504

  414 expr: name_in_namespace "name" .

    $default  reduce using rule 414 (expr)


State 505

  314 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  379 expr: name_in_namespace '(' . ')'
  380     | name_in_namespace '(' . expr_list ')'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '['                               shift, and go to state 682
    '('                               shift, and go to state 385
    ')'                               shift, and go to state 683
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    expr_list               go to state 684
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 685
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 506

  284 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 686

    $default  reduce using rule 281 (optional_capture_list)

    optional_capture_list  go to state 687


State 507

  392 expr: expr "is" . "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr "is" . basic_type_declaration
  394     | expr "is" . "name"
  429 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 688
    "bool"      shift, and go to state 145
    "void"      shift, and go to state 146
    "string"    shift, and go to state 147
    "int"       shift, and go to state 149
    "int2"      shift, and go to state 150
    "int3"      shift, and go to state 151
    "int4"      shift, and go to state 152
    "uint"      shift, and go to state 153
    "bitfield"  shift, and go to state 359
    "uint2"     shift, and go to state 155
    "uint3"     shift, and go to state 156
    "uint4"     shift, and go to state 157
    "float"     shift, and go to state 158
    "float2"    shift, and go to state 159
    "float3"    shift, and go to state 160
    "float4"    shift, and go to state 161
    "range"     shift, and go to state 162
    "urange"    shift, and go to state 163
    "int64"     shift, and go to state 165
    "uint64"    shift, and go to state 166
    "double"    shift, and go to state 167
    "int8"      shift, and go to state 170
    "uint8"     shift, and go to state 171
    "int16"     shift, and go to state 172
    "uint16"    shift, and go to state 173
    "$f"        shift, and go to state 689
    "name"      shift, and go to state 690

    basic_type_declaration  go to state 691


State 508

  395 expr: expr "as" . "name"
  398     | expr "as" . "type" '<' $@24 type_declaration '>' $@25
  399     | expr "as" . basic_type_declaration
  427 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 692
    "bool"      shift, and go to state 145
    "void"      shift, and go to state 146
    "string"    shift, and go to state 147
    "int"       shift, and go to state 149
    "int2"      shift, and go to state 150
    "int3"      shift, and go to state 151
    "int4"      shift, and go to state 152
    "uint"      shift, and go to state 153
    "bitfield"  shift, and go to state 359
    "uint2"     shift, and go to state 155
    "uint3"     shift, and go to state 156
    "uint4"     shift, and go to state 157
    "float"     shift, and go to state 158
    "float2"    shift, and go to state 159
    "float3"    shift, and go to state 160
    "float4"    shift, and go to state 161
    "range"     shift, and go to state 162
    "urange"    shift, and go to state 163
    "int64"     shift, and go to state 165
    "uint64"    shift, and go to state 166
    "double"    shift, and go to state 167
    "int8"      shift, and go to state 170
    "uint8"     shift, and go to state 171
    "int16"     shift, and go to state 172
    "uint16"    shift, and go to state 173
    "$f"        shift, and go to state 693
    "name"      shift, and go to state 694

    basic_type_declaration  go to state 695


State 509

  345 expr: expr "<<" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 696
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 510

  346 expr: expr ">>" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 697
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 511

  369 expr: expr "++" .

    $default  reduce using rule 369 (expr)


State 512

  370 expr: expr "--" .

    $default  reduce using rule 370 (expr)


State 513

  358 expr: expr "<=" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 698
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 514

  359 expr: expr ">=" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 699
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 515

  356 expr: expr "==" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 700
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 516

  357 expr: expr "!=" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 701
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 517

  315 expr_method_call: expr "->" . "name" '(' ')'
  316                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 702


State 518

  388 expr: expr "??" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 703
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 519

  376 expr: expr "?." . "name"
  424 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 704
    "name"  shift, and go to state 705


State 520

  374 expr: expr "?[" . expr ']'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 706
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 521

  412 expr: expr "<|" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 707
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 522

  413 expr: expr "|>" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 708
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 523

  347 expr: expr "<<<" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 709
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 524

  348 expr: expr ">>>" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 710
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 525

  363 expr: expr "&&" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 711
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 526

  364 expr: expr "||" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 712
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 527

  365 expr: expr "^^" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 713
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 528

  366 expr: expr ".." . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 714
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 529

  389 expr: expr '?' . expr ':' expr
  400     | expr '?' . "as" "name"
  403     | expr '?' . "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr '?' . "as" basic_type_declaration
  428 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "as"                              shift, and go to state 715
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 716
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 530

  361 expr: expr '|' . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 717
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 531

  362 expr: expr '^' . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 718
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 532

  360 expr: expr '&' . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 719
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 533

  354 expr: expr '<' . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 720
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 534

  355 expr: expr '>' . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 721
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 535

  350 expr: expr '-' . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 722
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 536

  349 expr: expr '+' . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 723
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 537

  351 expr: expr '*' . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 724
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 538

  352 expr: expr '/' . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 725
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 539

  353 expr: expr '%' . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 726
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 540

  326 expr_field: expr '.' . "name"
  327           | expr '.' . '.' "name"
  330           | expr '.' . $@20 error $@21
  373 expr: expr '.' . '[' expr ']'
  375     | expr '.' . "?[" expr ']'
  377     | expr '.' . "?." "name"
  423 expr_mtag: expr '.' . "$f" '(' expr ')'
  425          | expr '.' . '.' "$f" '(' expr ')'
  426          | expr '.' . "?." "$f" '(' expr ')'

    "?."    shift, and go to state 727
    "?["    shift, and go to state 728
    "$f"    shift, and go to state 729
    "name"  shift, and go to state 730
    '.'     shift, and go to state 731
    '['     shift, and go to state 732

    $default  reduce using rule 328 ($@20)

    $@20  go to state 733


State 541

  372 expr: expr '[' . expr ']'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 734
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 542

  563 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 563 (auto_type_declaration)


State 543

  381 expr: basic_type_declaration '(' . ')'
  382     | basic_type_declaration '(' . expr_list ')'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    ')'                               shift, and go to state 735
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    expr_list               go to state 736
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 685
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 544

  577 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 577 (type_declaration_no_options)


State 545

  575 type_declaration_no_options: type_declaration_no_options '[' expr ']' .

    $default  reduce using rule 575 (type_declaration_no_options)


State 546

  459 variant_type: "name" ':' type_declaration .
  629 type_declaration: type_declaration . '|' type_declaration_no_options
  630                 | type_declaration . '|' '#'

    '|'  shift, and go to state 253

    $default  reduce using rule 459 (variant_type)


State 547

  633 variant_alias_declaration: "variant" $@62 "name" $@63 '{' variant_type_list ';' '}' .

    $default  reduce using rule 633 (variant_alias_declaration)


State 548

  461 variant_type_list: variant_type_list ';' variant_type .

    $default  reduce using rule 461 (variant_type_list)


State 549

  452 function_argument_declaration: "$a" '(' . expr ')'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 737
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 550

  451 function_argument_declaration: optional_field_annotation "var" . variable_declaration

    "$i"    shift, and go to state 551
    "name"  shift, and go to state 552

    variable_declaration         go to state 738
    variable_name_with_pos_list  go to state 554


State 551

  525 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 739


State 552

  524 variable_name_with_pos_list: "name" .
  526                            | "name" . "aka" "name"

    "aka"  shift, and go to state 740

    $default  reduce using rule 524 (variable_name_with_pos_list)


State 553

  450 function_argument_declaration: optional_field_annotation variable_declaration .

    $default  reduce using rule 450 (function_argument_declaration)


State 554

  464 variable_declaration: variable_name_with_pos_list .
  465                     | variable_name_with_pos_list . '&'
  466                     | variable_name_with_pos_list . ':' type_declaration
  467                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  468                     | variable_name_with_pos_list . copy_or_move expr
  469                     | variable_name_with_pos_list . copy_or_move expr_pipe
  527 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  528                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 741
    ','   shift, and go to state 742
    '='   shift, and go to state 743
    ':'   shift, and go to state 744
    '&'   shift, and go to state 745

    $default  reduce using rule 464 (variable_declaration)

    copy_or_move  go to state 746


State 555

  107 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 107 (optional_function_argument_list)


State 556

  454 function_argument_list: function_argument_list ';' . function_argument_declaration

    "$a"  shift, and go to state 427
    "[["  shift, and go to state 224

    $default  reduce using rule 431 (optional_field_annotation)

    optional_field_annotation      go to state 429
    function_argument_declaration  go to state 747


State 557

  109 optional_function_type: ':' type_declaration .
  629 type_declaration: type_declaration . '|' type_declaration_no_options
  630                 | type_declaration . '|' '#'

    '|'  shift, and go to state 253

    $default  reduce using rule 109 (optional_function_type)


State 558

  218 expressions: expressions error .

    $default  reduce using rule 218 (expressions)


State 559

   71 expression_while_loop: "while" . expr expression_block

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 748
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 560

   56 if_or_static_if: "if" .

    $default  reduce using rule 56 (if_or_static_if)


State 561

   57 if_or_static_if: "static_if" .

    $default  reduce using rule 57 (if_or_static_if)


State 562

   69 expression_for_loop: "for" . variable_name_with_pos_list "in" expr_list ';' expression_block

    "$i"    shift, and go to state 551
    "name"  shift, and go to state 552

    variable_name_with_pos_list  go to state 749


State 563

  237 expression_return_no_pipe: "return" .
  238                          | "return" . expr
  239                          | "return" . "<-" expr
  241 expression_return: "return" . expr_pipe
  242                  | "return" . "<-" expr_pipe

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "<-"                              shift, and go to state 750
    "@ <|"                            shift, and go to state 575
    "@@ <|"                           shift, and go to state 576
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    $default  reduce using rule 237 (expression_return_no_pipe)

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    expr_pipe               go to state 751
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_assign             go to state 752
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 753
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 564

  235 expression_break: "break" .

    $default  reduce using rule 235 (expression_break)


State 565

  248 expression_try_catch: "try" . expression_block "recover" expression_block

    '{'  shift, and go to state 313

    expression_block  go to state 754


State 566

  225 expression_delete: "delete" . expr
  226                  | "delete" . "explicit" expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "explicit"                        shift, and go to state 755
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 756
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 567

   72 expression_with: "with" . expr expression_block

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 757
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 568

   74 expression_with_alias: "assume" . "name" '=' $@4 expr

    "name"  shift, and go to state 758


State 569

  236 expression_continue: "continue" .

    $default  reduce using rule 236 (expression_continue)


State 570

  215 expression_any: "pass" . ';'

    ';'  shift, and go to state 759


State 571

   48 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 760


State 572

   49 expression_goto: "goto" . "label" "integer constant"
   50                | "goto" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "label"                           shift, and go to state 761
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 762
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 573

   70 expression_unsafe: "unsafe" . expression_block
  415 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 478
    '{'  shift, and go to state 313

    expression_block  go to state 763


State 574

  243 expression_yield_no_pipe: "yield" . expr
  244                         | "yield" . "<-" expr
  246 expression_yield: "yield" . expr_pipe
  247                 | "yield" . "<-" expr_pipe

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "<-"                              shift, and go to state 764
    "@ <|"                            shift, and go to state 575
    "@@ <|"                           shift, and go to state 576
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    expr_pipe               go to state 765
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_assign             go to state 752
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 766
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 575

  220 expr_pipe: "@ <|" . expr_block

    '$'  shift, and go to state 386
    '@'  shift, and go to state 767
    '{'  shift, and go to state 313

    expression_block  go to state 390
    block_or_lambda   go to state 396
    expr_block        go to state 768


State 576

  221 expr_pipe: "@@ <|" . expr_block

    '$'  shift, and go to state 386
    '@'  shift, and go to state 767
    '{'  shift, and go to state 313

    expression_block  go to state 390
    block_or_lambda   go to state 396
    expr_block        go to state 769


State 577

  196 expression_any: ';' .

    $default  reduce using rule 196 (expression_any)


State 578

  194 expression_block: '{' expressions '}' .
  195                 | '{' expressions '}' . "finally" '{' expressions '}'

    "finally"  shift, and go to state 770

    $default  reduce using rule 194 (expression_block)


State 579

  213 expression_any: expression_label . ';'

    ';'  shift, and go to state 771


State 580

  214 expression_any: expression_goto . ';'

    ';'  shift, and go to state 772


State 581

   66 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 773
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 582

   68 expression_if_then_else: expression_if_one_liner . "if" $@3 expr expression_else_one_liner ';'

    "if"  shift, and go to state 774


State 583

  211 expression_any: expression_if_then_else .

    $default  reduce using rule 211 (expression_any)


State 584

  206 expression_any: expression_for_loop .

    $default  reduce using rule 206 (expression_any)


State 585

  203 expression_any: expression_unsafe .

    $default  reduce using rule 203 (expression_any)


State 586

  202 expression_any: expression_while_loop .

    $default  reduce using rule 202 (expression_any)


State 587

  204 expression_any: expression_with .

    $default  reduce using rule 204 (expression_any)


State 588

  205 expression_any: expression_with_alias .

    $default  reduce using rule 205 (expression_any)


State 589

  217 expressions: expressions expression_any .

    $default  reduce using rule 217 (expressions)


State 590

  197 expression_any: expr_pipe .

    $default  reduce using rule 197 (expression_any)


State 591

  200 expression_any: expression_delete . ';'

    ';'  shift, and go to state 775


State 592

   64 expression_if_one_liner: expression_break .
  207 expression_any: expression_break . ';'

    ';'  shift, and go to state 776

    $default  reduce using rule 64 (expression_if_one_liner)


State 593

   65 expression_if_one_liner: expression_continue .
  208 expression_any: expression_continue . ';'

    ';'  shift, and go to state 777

    $default  reduce using rule 65 (expression_if_one_liner)


State 594

   62 expression_if_one_liner: expression_return_no_pipe .
  240 expression_return: expression_return_no_pipe . ';'

    ';'  shift, and go to state 778

    $default  reduce using rule 62 (expression_if_one_liner)


State 595

  209 expression_any: expression_return .

    $default  reduce using rule 209 (expression_any)


State 596

   63 expression_if_one_liner: expression_yield_no_pipe .
  245 expression_yield: expression_yield_no_pipe . ';'

    ';'  shift, and go to state 779

    $default  reduce using rule 63 (expression_if_one_liner)


State 597

  210 expression_any: expression_yield .

    $default  reduce using rule 210 (expression_any)


State 598

  212 expression_any: expression_try_catch .

    $default  reduce using rule 212 (expression_any)


State 599

  251 expression_let: kwd_let . let_variable_declaration

    "$i"    shift, and go to state 328
    "name"  shift, and go to state 329

    let_variable_name_with_pos_list  go to state 330
    let_variable_declaration         go to state 780


State 600

  201 expression_any: expression_let .

    $default  reduce using rule 201 (expression_any)


State 601

  199 expression_any: expr_assign . ';'
  219 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 781
    ';'    shift, and go to state 782


State 602

  198 expression_any: expr_assign_pipe .

    $default  reduce using rule 198 (expression_any)


State 603

   61 expression_if_one_liner: expr .
  291 expr_assign: expr .
  292            | expr . '=' expr
  293            | expr . "<-" expr
  294            | expr . ":=" expr
  295            | expr . "&=" expr
  296            | expr . "|=" expr
  297            | expr . "^=" expr
  298            | expr . "&&=" expr
  299            | expr . "||=" expr
  300            | expr . "^^=" expr
  301            | expr . "+=" expr
  302            | expr . "-=" expr
  303            | expr . "*=" expr
  304            | expr . "/=" expr
  305            | expr . "%=" expr
  306            | expr . "<<=" expr
  307            | expr . ">>=" expr
  308            | expr . "<<<=" expr
  309            | expr . ">>>=" expr
  310 expr_assign_pipe: expr . '=' "@ <|" expr_block
  311                 | expr . '=' "@@ <|" expr_block
  312                 | expr . "<-" "@ <|" expr_block
  313                 | expr . "<-" "@@ <|" expr_block
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 507
    "as"    shift, and go to state 508
    "+="    shift, and go to state 783
    "-="    shift, and go to state 784
    "/="    shift, and go to state 785
    "*="    shift, and go to state 786
    "%="    shift, and go to state 787
    "&="    shift, and go to state 788
    "|="    shift, and go to state 789
    "^="    shift, and go to state 790
    "<<"    shift, and go to state 509
    ">>"    shift, and go to state 510
    "++"    shift, and go to state 511
    "--"    shift, and go to state 512
    "<="    shift, and go to state 513
    "<<="   shift, and go to state 791
    ">>="   shift, and go to state 792
    ">="    shift, and go to state 514
    "=="    shift, and go to state 515
    "!="    shift, and go to state 516
    "->"    shift, and go to state 517
    "<-"    shift, and go to state 793
    "??"    shift, and go to state 518
    "?."    shift, and go to state 519
    "?["    shift, and go to state 520
    "<|"    shift, and go to state 521
    "|>"    shift, and go to state 522
    ":="    shift, and go to state 794
    "<<<"   shift, and go to state 523
    ">>>"   shift, and go to state 524
    "<<<="  shift, and go to state 795
    ">>>="  shift, and go to state 796
    "&&"    shift, and go to state 525
    "||"    shift, and go to state 526
    "^^"    shift, and go to state 527
    "&&="   shift, and go to state 797
    "||="   shift, and go to state 798
    "^^="   shift, and go to state 799
    ".."    shift, and go to state 528
    '='     shift, and go to state 800
    '?'     shift, and go to state 529
    '|'     shift, and go to state 530
    '^'     shift, and go to state 531
    '&'     shift, and go to state 532
    '<'     shift, and go to state 533
    '>'     shift, and go to state 534
    '-'     shift, and go to state 535
    '+'     shift, and go to state 536
    '*'     shift, and go to state 537
    '/'     shift, and go to state 538
    '%'     shift, and go to state 539
    '.'     shift, and go to state 540
    '['     shift, and go to state 541

    "if"      reduce using rule 61 (expression_if_one_liner)
    $default  reduce using rule 291 (expr_assign)


State 604

  497 enum_list: enum_list . "name" ';'
  498          | enum_list . "name" '=' expr ';'
  510 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list . '}'

    "name"  shift, and go to state 436
    '}'     shift, and go to state 801


State 605

  498 enum_list: enum_list "name" '=' . expr ';'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 802
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 606

  497 enum_list: enum_list "name" ';' .

    $default  reduce using rule 497 (enum_list)


State 607

  512 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 512 (optional_structure_parent)


State 608

  444 struct_variable_declaration_list: struct_variable_declaration_list . $@28 structure_variable_declaration ';'
  446                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" $@29 function_declaration_header ';'
  448                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant $@30 function_declaration_header expression_block
  449                                 | struct_variable_declaration_list . '[' annotation_list ']' ';'
  523 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@34 structure_name $@35 '{' struct_variable_declaration_list . '}'

    '['  shift, and go to state 803
    '}'  shift, and go to state 804

    "def"     reduce using rule 103 (optional_annotation_list)
    $default  reduce using rule 443 ($@28)

    optional_annotation_list  go to state 805
    $@28                      go to state 806


State 609

  487 global_variable_declaration_list: global_variable_declaration_list $@31 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 487 (global_variable_declaration_list)


State 610

  432 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 432 (optional_field_annotation)


State 611

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'
  476 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    ')'    shift, and go to state 807


State 612

  477 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 477 (let_variable_name_with_pos_list)


State 613

  478 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  479                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 808

    $default  reduce using rule 478 (let_variable_name_with_pos_list)


State 614

  480 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . ';'
  481                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr ';'
  482                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  575 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  576                            | type_declaration_no_options . '[' ']'
  577                            | type_declaration_no_options . '-' '[' ']'
  578                            | type_declaration_no_options . "explicit"
  579                            | type_declaration_no_options . "const"
  580                            | type_declaration_no_options . '-' "const"
  581                            | type_declaration_no_options . '&'
  582                            | type_declaration_no_options . '-' '&'
  583                            | type_declaration_no_options . '#'
  584                            | type_declaration_no_options . "implicit"
  585                            | type_declaration_no_options . '-' '#'
  586                            | type_declaration_no_options . "==" "const"
  587                            | type_declaration_no_options . '?'
  591                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 243
    "implicit"  shift, and go to state 244
    "explicit"  shift, and go to state 245
    "=="        shift, and go to state 246
    "<-"        shift, and go to state 615
    "??"        shift, and go to state 247
    ":="        shift, and go to state 616
    '='         shift, and go to state 617
    '?'         shift, and go to state 248
    '&'         shift, and go to state 249
    '-'         shift, and go to state 250
    '['         shift, and go to state 251
    ';'         shift, and go to state 809
    '#'         shift, and go to state 252

    copy_or_move_or_clone  go to state 810


State 615

  471 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 471 (copy_or_move_or_clone)


State 616

  472 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 472 (copy_or_move_or_clone)


State 617

  470 copy_or_move_or_clone: '=' .

    $default  reduce using rule 470 (copy_or_move_or_clone)


State 618

  483 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr ';'
  484                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "@ <|"                            shift, and go to state 575
    "@@ <|"                           shift, and go to state 576
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    expr_pipe               go to state 811
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_assign             go to state 752
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 812
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 619

  594 type_declaration_no_options: "array" '<' $@40 type_declaration '>' . $@41

    $default  reduce using rule 593 ($@41)

    $@41  go to state 813


State 620

  597 type_declaration_no_options: "table" '<' $@42 table_type_pair '>' . $@43

    $default  reduce using rule 596 ($@43)

    $@43  go to state 814


State 621

  570 table_type_pair: type_declaration ';' . type_declaration

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace            go to state 177
    basic_type_declaration       go to state 178
    structure_type_declaration   go to state 179
    auto_type_declaration        go to state 180
    bitfield_type_declaration    go to state 181
    type_declaration_no_options  go to state 182
    type_declaration             go to state 815


State 622

  600 type_declaration_no_options: "iterator" '<' $@44 type_declaration '>' . $@45

    $default  reduce using rule 599 ($@45)

    $@45  go to state 816


State 623

  590 type_declaration_no_options: "smart_ptr" '<' $@38 type_declaration '>' . $@39

    $default  reduce using rule 589 ($@39)

    $@39  go to state 817


State 624

  568 bitfield_type_declaration: "bitfield" '<' $@36 bitfield_bits '>' . $@37

    $default  reduce using rule 567 ($@37)

    $@37  go to state 818


State 625

  565 bitfield_bits: bitfield_bits ';' . "name"

    "name"  shift, and go to state 420


State 626

  604 type_declaration_no_options: "block" '<' $@46 type_declaration '>' . $@47

    $default  reduce using rule 603 ($@47)

    $@47  go to state 819


State 627

  607 type_declaration_no_options: "block" '<' $@48 optional_function_argument_list optional_function_type . '>' $@49

    '>'  shift, and go to state 820


State 628

  611 type_declaration_no_options: "function" '<' $@50 type_declaration '>' . $@51

    $default  reduce using rule 610 ($@51)

    $@51  go to state 821


State 629

  614 type_declaration_no_options: "function" '<' $@52 optional_function_argument_list optional_function_type . '>' $@53

    '>'  shift, and go to state 822


State 630

  618 type_declaration_no_options: "lambda" '<' $@54 type_declaration '>' . $@55

    $default  reduce using rule 617 ($@55)

    $@55  go to state 823


State 631

  621 type_declaration_no_options: "lambda" '<' $@56 optional_function_argument_list optional_function_type . '>' $@57

    '>'  shift, and go to state 824


State 632

  456 tuple_type: "name" ':' . type_declaration

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace            go to state 177
    basic_type_declaration       go to state 178
    structure_type_declaration   go to state 179
    auto_type_declaration        go to state 180
    bitfield_type_declaration    go to state 181
    type_declaration_no_options  go to state 182
    type_declaration             go to state 825


State 633

  624 type_declaration_no_options: "tuple" '<' $@58 tuple_type_list '>' . $@59

    $default  reduce using rule 623 ($@59)

    $@59  go to state 826


State 634

  458 tuple_type_list: tuple_type_list ';' . tuple_type

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 462

    name_in_namespace            go to state 177
    tuple_type                   go to state 827
    basic_type_declaration       go to state 178
    structure_type_declaration   go to state 179
    auto_type_declaration        go to state 180
    bitfield_type_declaration    go to state 181
    type_declaration_no_options  go to state 182
    type_declaration             go to state 465


State 635

  627 type_declaration_no_options: "variant" '<' $@60 variant_type_list '>' . $@61

    $default  reduce using rule 626 ($@61)

    $@61  go to state 828


State 636

  461 variant_type_list: variant_type_list ';' . variant_type

    "name"  shift, and go to state 255

    variant_type  go to state 548


State 637

  229 new_type_declaration: '<' $@6 . type_declaration '>' $@7

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace            go to state 177
    basic_type_declaration       go to state 178
    structure_type_declaration   go to state 179
    auto_type_declaration        go to state 180
    bitfield_type_declaration    go to state 181
    type_declaration_no_options  go to state 182
    type_declaration             go to state 829


State 638

  232 expr_new: "new" new_type_declaration '(' . ')'
  233         | "new" new_type_declaration '(' . expr_list ')'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    ')'                               shift, and go to state 830
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    expr_list               go to state 831
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 685
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 639

  264 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  265               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  266               | "typeinfo" '(' name_in_namespace . '<' "name" ';' "name" '>' expr ')'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '<'                               shift, and go to state 832
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 833
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 640

  263 expr_type_decl: "type" '<' $@14 . type_declaration '>' $@15

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace            go to state 177
    basic_type_declaration       go to state 178
    structure_type_declaration   go to state 179
    auto_type_declaration        go to state 180
    bitfield_type_declaration    go to state 181
    type_declaration_no_options  go to state 182
    type_declaration             go to state 834


State 641

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  384     | "deref" '(' expr . ')'
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    ')'    shift, and go to state 835


State 642

  254 expr_cast: "cast" '<' $@8 . type_declaration_no_options '>' $@9 expr

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace            go to state 177
    basic_type_declaration       go to state 178
    structure_type_declaration   go to state 179
    auto_type_declaration        go to state 180
    bitfield_type_declaration    go to state 181
    type_declaration_no_options  go to state 836


State 643

  257 expr_cast: "upcast" '<' $@10 . type_declaration_no_options '>' $@11 expr

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace            go to state 177
    basic_type_declaration       go to state 178
    structure_type_declaration   go to state 179
    auto_type_declaration        go to state 180
    bitfield_type_declaration    go to state 181
    type_declaration_no_options  go to state 837


State 644

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  385     | "addr" '(' expr . ')'
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    ')'    shift, and go to state 838


State 645

  260 expr_cast: "reinterpret" '<' $@12 . type_declaration_no_options '>' $@13 expr

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace            go to state 177
    basic_type_declaration       go to state 178
    structure_type_declaration   go to state 179
    auto_type_declaration        go to state 180
    bitfield_type_declaration    go to state 181
    type_declaration_no_options  go to state 839


State 646

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  415     | "unsafe" '(' expr . ')'
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    ')'    shift, and go to state 840


State 647

  386 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  387     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  575 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  576                            | type_declaration_no_options . '[' ']'
  577                            | type_declaration_no_options . '-' '[' ']'
  578                            | type_declaration_no_options . "explicit"
  579                            | type_declaration_no_options . "const"
  580                            | type_declaration_no_options . '-' "const"
  581                            | type_declaration_no_options . '&'
  582                            | type_declaration_no_options . '-' '&'
  583                            | type_declaration_no_options . '#'
  584                            | type_declaration_no_options . "implicit"
  585                            | type_declaration_no_options . '-' '#'
  586                            | type_declaration_no_options . "==" "const"
  587                            | type_declaration_no_options . '?'
  591                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 243
    "implicit"  shift, and go to state 244
    "explicit"  shift, and go to state 245
    "=="        shift, and go to state 246
    "??"        shift, and go to state 247
    '?'         shift, and go to state 248
    '&'         shift, and go to state 249
    '>'         shift, and go to state 841
    '-'         shift, and go to state 250
    '['         shift, and go to state 251
    '#'         shift, and go to state 252


State 648

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  416 expr_mtag: "$$" '(' expr . ')'
  423          | expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    ')'    shift, and go to state 842


State 649

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  417 expr_mtag: "$i" '(' expr . ')'
  423          | expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    ')'    shift, and go to state 843


State 650

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  418 expr_mtag: "$v" '(' expr . ')'
  423          | expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    ')'    shift, and go to state 844


State 651

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  419 expr_mtag: "$b" '(' expr . ')'
  423          | expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    ')'    shift, and go to state 845


State 652

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  420 expr_mtag: "$a" '(' expr . ')'
  423          | expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    ')'    shift, and go to state 846


State 653

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  421 expr_mtag: "$c" '(' expr . ')' '(' ')'
  422          | "$c" '(' expr . ')' '(' expr_list ')'
  423          | expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    ')'    shift, and go to state 847


State 654

  527 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  528                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  668 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 848
    ','   shift, and go to state 742


State 655

  647 optional_block: "where" . expr_block

    '$'  shift, and go to state 386
    '@'  shift, and go to state 767
    '{'  shift, and go to state 313

    expression_block  go to state 390
    block_or_lambda   go to state 396
    expr_block        go to state 849


State 656

  222 name_in_namespace: "name" .
  223                  | "name" . "::" "name"
  640 make_struct_fields: "name" . copy_or_move expr
  641                   | "name" . ":=" expr

    "<-"  shift, and go to state 741
    ":="  shift, and go to state 850
    "::"  shift, and go to state 80
    '='   shift, and go to state 743

    $default  reduce using rule 222 (name_in_namespace)

    copy_or_move  go to state 851


State 657

  344 expr: '-' . expr
  577 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  580                            | type_declaration_no_options '-' . "const"
  582                            | type_declaration_no_options '-' . '&'
  585                            | type_declaration_no_options '-' . '#'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "const"                           shift, and go to state 412
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '&'                               shift, and go to state 413
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '['                               shift, and go to state 414
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313
    '#'                               shift, and go to state 415

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 496
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 658

  371 expr: '(' . expr ')'
  650 make_struct_decl: "[[" type_declaration_no_options '(' . ')' optional_block ']' ']'
  651                 | "[[" type_declaration_no_options '(' . ')' make_struct_dim optional_block ']' ']'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    ')'                               shift, and go to state 852
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 502
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 659

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'
  654 make_tuple: expr .
  655           | expr . "=>" expr

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "=>"   shift, and go to state 853
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 654 (make_tuple)


State 660

  642 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  643                   | make_struct_fields . ',' "name" ":=" expr
  644 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 854

    $default  reduce using rule 644 (make_struct_dim)


State 661

  645 make_struct_dim: make_struct_dim . ';' make_struct_fields
  648 make_struct_decl: "[[" type_declaration_no_options make_struct_dim . optional_block ']' ']'

    "where"  shift, and go to state 655
    ';'      shift, and go to state 855

    $default  reduce using rule 646 (optional_block)

    optional_block  go to state 856


State 662

  649 make_struct_decl: "[[" type_declaration_no_options optional_block . ']' ']'

    ']'  shift, and go to state 857


State 663

  656 make_tuple: make_tuple . ',' expr
  659 make_dim: make_tuple .

    ','  shift, and go to state 858

    $default  reduce using rule 659 (make_dim)


State 664

  660 make_dim: make_dim . ';' make_tuple
  661 make_dim_decl: "[[" type_declaration_no_options make_dim . ']' ']'

    ']'  shift, and go to state 859
    ';'  shift, and go to state 860


State 665

  527 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  528                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  669 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where '}' ']'

    "in"  shift, and go to state 861
    ','   shift, and go to state 742


State 666

  371 expr: '(' . expr ')'
  653 make_struct_decl: "[{" type_declaration_no_options '(' . ')' make_struct_dim optional_block '}' ']'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    ')'                               shift, and go to state 862
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 502
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 667

  645 make_struct_dim: make_struct_dim . ';' make_struct_fields
  652 make_struct_decl: "[{" type_declaration_no_options make_struct_dim . optional_block '}' ']'

    "where"  shift, and go to state 655
    ';'      shift, and go to state 855

    $default  reduce using rule 646 (optional_block)

    optional_block  go to state 863


State 668

  660 make_dim: make_dim . ';' make_tuple
  662 make_dim_decl: "[{" type_declaration_no_options make_dim . '}' ']'

    ';'  shift, and go to state 860
    '}'  shift, and go to state 864


State 669

  657 make_map_tuple: expr "=>" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 865
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 670

  664 make_table: make_table ';' . make_map_tuple

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 492
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_map_tuple          go to state 866
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 671

  665 make_table_decl: "{{" make_table '}' . '}'

    '}'  shift, and go to state 867


State 672

   28 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 28 (string_builder)


State 673

   27 string_builder_body: string_builder_body "{" . expr "}"

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 868
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 674

   22 character_sequence: character_sequence . STRING_CHARACTER
   23                   | character_sequence . STRING_CHARACTER_ESC
   26 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 226
    STRING_CHARACTER_ESC  shift, and go to state 227

    STRING_CHARACTER      [reduce using rule 26 (string_builder_body)]
    STRING_CHARACTER_ESC  [reduce using rule 26 (string_builder_body)]
    $default              reduce using rule 26 (string_builder_body)


State 675

   32 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 869

    reader_character_sequence  go to state 870


State 676

  371 expr: '(' expr ')' .

    $default  reduce using rule 371 (expr)


State 677

  318 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 871


State 678

  430 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 872


State 679

  322 func_addr_expr: '@' '@' '<' . $@16 type_declaration_no_options '>' $@17 func_addr_name
  325               | '@' '@' '<' . $@18 optional_function_argument_list optional_function_type '>' $@19 func_addr_name

    ':'       reduce using rule 323 ($@18)
    '>'       reduce using rule 323 ($@18)
    '('       reduce using rule 323 ($@18)
    $default  reduce using rule 320 ($@16)

    $@16  go to state 873
    $@18  go to state 874


State 680

  317 func_addr_name: name_in_namespace .

    $default  reduce using rule 317 (func_addr_name)


State 681

  319 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 319 (func_addr_expr)


State 682

  314 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'

    "name"  shift, and go to state 875

    make_struct_fields  go to state 876


State 683

  379 expr: name_in_namespace '(' ')' .

    $default  reduce using rule 379 (expr)


State 684

  268 expr_list: expr_list . ',' expr
  380 expr: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 877
    ')'  shift, and go to state 878


State 685

  267 expr_list: expr .
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 267 (expr_list)


State 686

  282 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"  shift, and go to state 879
    ":="  shift, and go to state 880
    '='   shift, and go to state 881
    '&'   shift, and go to state 882

    capture_entry  go to state 883
    capture_list   go to state 884


State 687

  284 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 311

    $default  reduce using rule 105 (optional_function_argument_list)

    optional_function_argument_list  go to state 885


State 688

  392 expr: expr "is" "type" . '<' $@22 type_declaration_no_options '>' $@23

    '<'  shift, and go to state 886


State 689

  429 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 887


State 690

  394 expr: expr "is" "name" .

    $default  reduce using rule 394 (expr)


State 691

  393 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 393 (expr)


State 692

  398 expr: expr "as" "type" . '<' $@24 type_declaration '>' $@25

    '<'  shift, and go to state 888


State 693

  427 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 889


State 694

  395 expr: expr "as" "name" .

    $default  reduce using rule 395 (expr)


State 695

  399 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 399 (expr)


State 696

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  345     | expr "<<" expr .
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 507
    "as"  shift, and go to state 508
    "++"  shift, and go to state 511
    "--"  shift, and go to state 512
    "->"  shift, and go to state 517
    "??"  shift, and go to state 518
    "?."  shift, and go to state 519
    "?["  shift, and go to state 520
    "<|"  shift, and go to state 521
    "|>"  shift, and go to state 522
    '-'   shift, and go to state 535
    '+'   shift, and go to state 536
    '*'   shift, and go to state 537
    '/'   shift, and go to state 538
    '%'   shift, and go to state 539
    '.'   shift, and go to state 540
    '['   shift, and go to state 541

    $default  reduce using rule 345 (expr)


State 697

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  346     | expr ">>" expr .
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 507
    "as"  shift, and go to state 508
    "++"  shift, and go to state 511
    "--"  shift, and go to state 512
    "->"  shift, and go to state 517
    "??"  shift, and go to state 518
    "?."  shift, and go to state 519
    "?["  shift, and go to state 520
    "<|"  shift, and go to state 521
    "|>"  shift, and go to state 522
    '-'   shift, and go to state 535
    '+'   shift, and go to state 536
    '*'   shift, and go to state 537
    '/'   shift, and go to state 538
    '%'   shift, and go to state 539
    '.'   shift, and go to state 540
    '['   shift, and go to state 541

    $default  reduce using rule 346 (expr)


State 698

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  358     | expr "<=" expr .
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 358 (expr)


State 699

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  359     | expr ">=" expr .
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 359 (expr)


State 700

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  356     | expr "==" expr .
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 356 (expr)


State 701

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  357     | expr "!=" expr .
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 357 (expr)


State 702

  315 expr_method_call: expr "->" "name" . '(' ')'
  316                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 890


State 703

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  388     | expr "??" expr .
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 507
    "as"  shift, and go to state 508
    "++"  shift, and go to state 511
    "--"  shift, and go to state 512
    "->"  shift, and go to state 517
    "??"  shift, and go to state 518
    "?."  shift, and go to state 519
    "?["  shift, and go to state 520
    "<|"  shift, and go to state 521
    "|>"  shift, and go to state 522
    '.'   shift, and go to state 540
    '['   shift, and go to state 541

    $default  reduce using rule 388 (expr)


State 704

  424 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 891


State 705

  376 expr: expr "?." "name" .

    $default  reduce using rule 376 (expr)


State 706

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  374     | expr "?[" expr . ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    ']'    shift, and go to state 892


State 707

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  412     | expr "<|" expr .
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 517
    "?."  shift, and go to state 519
    "?["  shift, and go to state 520
    '.'   shift, and go to state 540
    '['   shift, and go to state 541

    $default  reduce using rule 412 (expr)


State 708

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  413     | expr "|>" expr .
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 517
    "?."  shift, and go to state 519
    "?["  shift, and go to state 520
    '.'   shift, and go to state 540
    '['   shift, and go to state 541

    $default  reduce using rule 413 (expr)


State 709

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  347     | expr "<<<" expr .
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 507
    "as"  shift, and go to state 508
    "++"  shift, and go to state 511
    "--"  shift, and go to state 512
    "->"  shift, and go to state 517
    "??"  shift, and go to state 518
    "?."  shift, and go to state 519
    "?["  shift, and go to state 520
    "<|"  shift, and go to state 521
    "|>"  shift, and go to state 522
    '-'   shift, and go to state 535
    '+'   shift, and go to state 536
    '*'   shift, and go to state 537
    '/'   shift, and go to state 538
    '%'   shift, and go to state 539
    '.'   shift, and go to state 540
    '['   shift, and go to state 541

    $default  reduce using rule 347 (expr)


State 710

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  348     | expr ">>>" expr .
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 507
    "as"  shift, and go to state 508
    "++"  shift, and go to state 511
    "--"  shift, and go to state 512
    "->"  shift, and go to state 517
    "??"  shift, and go to state 518
    "?."  shift, and go to state 519
    "?["  shift, and go to state 520
    "<|"  shift, and go to state 521
    "|>"  shift, and go to state 522
    '-'   shift, and go to state 535
    '+'   shift, and go to state 536
    '*'   shift, and go to state 537
    '/'   shift, and go to state 538
    '%'   shift, and go to state 539
    '.'   shift, and go to state 540
    '['   shift, and go to state 541

    $default  reduce using rule 348 (expr)


State 711

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  363     | expr "&&" expr .
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 363 (expr)


State 712

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  364     | expr "||" expr .
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "^^"   shift, and go to state 527
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 364 (expr)


State 713

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  365     | expr "^^" expr .
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 365 (expr)


State 714

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  366     | expr ".." expr .
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    ".."  error (nonassociative)

    $default  reduce using rule 366 (expr)


State 715

  400 expr: expr '?' "as" . "name"
  403     | expr '?' "as" . "type" '<' $@26 type_declaration '>' $@27
  404     | expr '?' "as" . basic_type_declaration
  428 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 893
    "bool"      shift, and go to state 145
    "void"      shift, and go to state 146
    "string"    shift, and go to state 147
    "int"       shift, and go to state 149
    "int2"      shift, and go to state 150
    "int3"      shift, and go to state 151
    "int4"      shift, and go to state 152
    "uint"      shift, and go to state 153
    "bitfield"  shift, and go to state 359
    "uint2"     shift, and go to state 155
    "uint3"     shift, and go to state 156
    "uint4"     shift, and go to state 157
    "float"     shift, and go to state 158
    "float2"    shift, and go to state 159
    "float3"    shift, and go to state 160
    "float4"    shift, and go to state 161
    "range"     shift, and go to state 162
    "urange"    shift, and go to state 163
    "int64"     shift, and go to state 165
    "uint64"    shift, and go to state 166
    "double"    shift, and go to state 167
    "int8"      shift, and go to state 170
    "uint8"     shift, and go to state 171
    "int16"     shift, and go to state 172
    "uint16"    shift, and go to state 173
    "$f"        shift, and go to state 894
    "name"      shift, and go to state 895

    basic_type_declaration  go to state 896


State 716

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  389     | expr '?' expr . ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    ':'    shift, and go to state 897
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541


State 717

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  361     | expr '|' expr .
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 361 (expr)


State 718

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  362     | expr '^' expr .
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 362 (expr)


State 719

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  360     | expr '&' expr .
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 360 (expr)


State 720

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  354     | expr '<' expr .
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 354 (expr)


State 721

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  355     | expr '>' expr .
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 355 (expr)


State 722

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  350     | expr '-' expr .
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 507
    "as"  shift, and go to state 508
    "++"  shift, and go to state 511
    "--"  shift, and go to state 512
    "->"  shift, and go to state 517
    "??"  shift, and go to state 518
    "?."  shift, and go to state 519
    "?["  shift, and go to state 520
    "<|"  shift, and go to state 521
    "|>"  shift, and go to state 522
    '*'   shift, and go to state 537
    '/'   shift, and go to state 538
    '%'   shift, and go to state 539
    '.'   shift, and go to state 540
    '['   shift, and go to state 541

    $default  reduce using rule 350 (expr)


State 723

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  349     | expr '+' expr .
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 507
    "as"  shift, and go to state 508
    "++"  shift, and go to state 511
    "--"  shift, and go to state 512
    "->"  shift, and go to state 517
    "??"  shift, and go to state 518
    "?."  shift, and go to state 519
    "?["  shift, and go to state 520
    "<|"  shift, and go to state 521
    "|>"  shift, and go to state 522
    '*'   shift, and go to state 537
    '/'   shift, and go to state 538
    '%'   shift, and go to state 539
    '.'   shift, and go to state 540
    '['   shift, and go to state 541

    $default  reduce using rule 349 (expr)


State 724

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  351     | expr '*' expr .
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 507
    "as"  shift, and go to state 508
    "++"  shift, and go to state 511
    "--"  shift, and go to state 512
    "->"  shift, and go to state 517
    "??"  shift, and go to state 518
    "?."  shift, and go to state 519
    "?["  shift, and go to state 520
    "<|"  shift, and go to state 521
    "|>"  shift, and go to state 522
    '.'   shift, and go to state 540
    '['   shift, and go to state 541

    $default  reduce using rule 351 (expr)


State 725

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  352     | expr '/' expr .
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 507
    "as"  shift, and go to state 508
    "++"  shift, and go to state 511
    "--"  shift, and go to state 512
    "->"  shift, and go to state 517
    "??"  shift, and go to state 518
    "?."  shift, and go to state 519
    "?["  shift, and go to state 520
    "<|"  shift, and go to state 521
    "|>"  shift, and go to state 522
    '.'   shift, and go to state 540
    '['   shift, and go to state 541

    $default  reduce using rule 352 (expr)


State 726

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  353     | expr '%' expr .
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 507
    "as"  shift, and go to state 508
    "++"  shift, and go to state 511
    "--"  shift, and go to state 512
    "->"  shift, and go to state 517
    "??"  shift, and go to state 518
    "?."  shift, and go to state 519
    "?["  shift, and go to state 520
    "<|"  shift, and go to state 521
    "|>"  shift, and go to state 522
    '.'   shift, and go to state 540
    '['   shift, and go to state 541

    $default  reduce using rule 353 (expr)


State 727

  377 expr: expr '.' "?." . "name"
  426 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 898
    "name"  shift, and go to state 899


State 728

  375 expr: expr '.' "?[" . expr ']'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 900
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 729

  423 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 901


State 730

  326 expr_field: expr '.' "name" .

    $default  reduce using rule 326 (expr_field)


State 731

  327 expr_field: expr '.' '.' . "name"
  425 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 902
    "name"  shift, and go to state 903


State 732

  373 expr: expr '.' '[' . expr ']'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 904
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 733

  330 expr_field: expr '.' $@20 . error $@21

    error  shift, and go to state 905


State 734

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  372     | expr '[' expr . ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    ']'    shift, and go to state 906


State 735

  381 expr: basic_type_declaration '(' ')' .

    $default  reduce using rule 381 (expr)


State 736

  268 expr_list: expr_list . ',' expr
  382 expr: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 877
    ')'  shift, and go to state 907


State 737

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'
  452 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    ')'    shift, and go to state 908


State 738

  451 function_argument_declaration: optional_field_annotation "var" variable_declaration .

    $default  reduce using rule 451 (function_argument_declaration)


State 739

  525 variable_name_with_pos_list: "$i" '(' . expr ')'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 909
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 740

  526 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 910


State 741

  463 copy_or_move: "<-" .

    $default  reduce using rule 463 (copy_or_move)


State 742

  527 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  528                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 911


State 743

  462 copy_or_move: '=' .

    $default  reduce using rule 462 (copy_or_move)


State 744

  466 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  467                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace            go to state 177
    basic_type_declaration       go to state 178
    structure_type_declaration   go to state 179
    auto_type_declaration        go to state 180
    bitfield_type_declaration    go to state 181
    type_declaration_no_options  go to state 182
    type_declaration             go to state 912


State 745

  465 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 465 (variable_declaration)


State 746

  468 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  469                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "@ <|"                            shift, and go to state 575
    "@@ <|"                           shift, and go to state 576
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    expr_pipe               go to state 913
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_assign             go to state 752
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 914
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 747

  454 function_argument_list: function_argument_list ';' function_argument_declaration .

    $default  reduce using rule 454 (function_argument_list)


State 748

   71 expression_while_loop: "while" expr . expression_block
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    '{'    shift, and go to state 313

    expression_block  go to state 915


State 749

   69 expression_for_loop: "for" variable_name_with_pos_list . "in" expr_list ';' expression_block
  527 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  528                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 916
    ','   shift, and go to state 742


State 750

  239 expression_return_no_pipe: "return" "<-" . expr
  242 expression_return: "return" "<-" . expr_pipe

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "@ <|"                            shift, and go to state 575
    "@@ <|"                           shift, and go to state 576
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    expr_pipe               go to state 917
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_assign             go to state 752
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 918
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 751

  241 expression_return: "return" expr_pipe .

    $default  reduce using rule 241 (expression_return)


State 752

  219 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 781


State 753

  238 expression_return_no_pipe: "return" expr .
  291 expr_assign: expr .
  292            | expr . '=' expr
  293            | expr . "<-" expr
  294            | expr . ":=" expr
  295            | expr . "&=" expr
  296            | expr . "|=" expr
  297            | expr . "^=" expr
  298            | expr . "&&=" expr
  299            | expr . "||=" expr
  300            | expr . "^^=" expr
  301            | expr . "+=" expr
  302            | expr . "-=" expr
  303            | expr . "*=" expr
  304            | expr . "/=" expr
  305            | expr . "%=" expr
  306            | expr . "<<=" expr
  307            | expr . ">>=" expr
  308            | expr . "<<<=" expr
  309            | expr . ">>>=" expr
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 507
    "as"    shift, and go to state 508
    "+="    shift, and go to state 783
    "-="    shift, and go to state 784
    "/="    shift, and go to state 785
    "*="    shift, and go to state 786
    "%="    shift, and go to state 787
    "&="    shift, and go to state 788
    "|="    shift, and go to state 789
    "^="    shift, and go to state 790
    "<<"    shift, and go to state 509
    ">>"    shift, and go to state 510
    "++"    shift, and go to state 511
    "--"    shift, and go to state 512
    "<="    shift, and go to state 513
    "<<="   shift, and go to state 791
    ">>="   shift, and go to state 792
    ">="    shift, and go to state 514
    "=="    shift, and go to state 515
    "!="    shift, and go to state 516
    "->"    shift, and go to state 517
    "<-"    shift, and go to state 919
    "??"    shift, and go to state 518
    "?."    shift, and go to state 519
    "?["    shift, and go to state 520
    "<|"    shift, and go to state 521
    "|>"    shift, and go to state 522
    ":="    shift, and go to state 794
    "<<<"   shift, and go to state 523
    ">>>"   shift, and go to state 524
    "<<<="  shift, and go to state 795
    ">>>="  shift, and go to state 796
    "&&"    shift, and go to state 525
    "||"    shift, and go to state 526
    "^^"    shift, and go to state 527
    "&&="   shift, and go to state 797
    "||="   shift, and go to state 798
    "^^="   shift, and go to state 799
    ".."    shift, and go to state 528
    '='     shift, and go to state 920
    '?'     shift, and go to state 529
    '|'     shift, and go to state 530
    '^'     shift, and go to state 531
    '&'     shift, and go to state 532
    '<'     shift, and go to state 533
    '>'     shift, and go to state 534
    '-'     shift, and go to state 535
    '+'     shift, and go to state 536
    '*'     shift, and go to state 537
    '/'     shift, and go to state 538
    '%'     shift, and go to state 539
    '.'     shift, and go to state 540
    '['     shift, and go to state 541

    " <|"     reduce using rule 291 (expr_assign)
    $default  reduce using rule 238 (expression_return_no_pipe)


State 754

  248 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 921


State 755

  226 expression_delete: "delete" "explicit" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 922
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 756

  225 expression_delete: "delete" expr .
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 225 (expression_delete)


State 757

   72 expression_with: "with" expr . expression_block
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    '{'    shift, and go to state 313

    expression_block  go to state 923


State 758

   74 expression_with_alias: "assume" "name" . '=' $@4 expr

    '='  shift, and go to state 924


State 759

  215 expression_any: "pass" ';' .

    $default  reduce using rule 215 (expression_any)


State 760

   48 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 925


State 761

   49 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 926


State 762

   50 expression_goto: "goto" expr .
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 50 (expression_goto)


State 763

   70 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 70 (expression_unsafe)


State 764

  244 expression_yield_no_pipe: "yield" "<-" . expr
  247 expression_yield: "yield" "<-" . expr_pipe

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "@ <|"                            shift, and go to state 575
    "@@ <|"                           shift, and go to state 576
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    expr_pipe               go to state 927
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_assign             go to state 752
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 928
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 765

  246 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 246 (expression_yield)


State 766

  243 expression_yield_no_pipe: "yield" expr .
  291 expr_assign: expr .
  292            | expr . '=' expr
  293            | expr . "<-" expr
  294            | expr . ":=" expr
  295            | expr . "&=" expr
  296            | expr . "|=" expr
  297            | expr . "^=" expr
  298            | expr . "&&=" expr
  299            | expr . "||=" expr
  300            | expr . "^^=" expr
  301            | expr . "+=" expr
  302            | expr . "-=" expr
  303            | expr . "*=" expr
  304            | expr . "/=" expr
  305            | expr . "%=" expr
  306            | expr . "<<=" expr
  307            | expr . ">>=" expr
  308            | expr . "<<<=" expr
  309            | expr . ">>>=" expr
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 507
    "as"    shift, and go to state 508
    "+="    shift, and go to state 783
    "-="    shift, and go to state 784
    "/="    shift, and go to state 785
    "*="    shift, and go to state 786
    "%="    shift, and go to state 787
    "&="    shift, and go to state 788
    "|="    shift, and go to state 789
    "^="    shift, and go to state 790
    "<<"    shift, and go to state 509
    ">>"    shift, and go to state 510
    "++"    shift, and go to state 511
    "--"    shift, and go to state 512
    "<="    shift, and go to state 513
    "<<="   shift, and go to state 791
    ">>="   shift, and go to state 792
    ">="    shift, and go to state 514
    "=="    shift, and go to state 515
    "!="    shift, and go to state 516
    "->"    shift, and go to state 517
    "<-"    shift, and go to state 919
    "??"    shift, and go to state 518
    "?."    shift, and go to state 519
    "?["    shift, and go to state 520
    "<|"    shift, and go to state 521
    "|>"    shift, and go to state 522
    ":="    shift, and go to state 794
    "<<<"   shift, and go to state 523
    ">>>"   shift, and go to state 524
    "<<<="  shift, and go to state 795
    ">>>="  shift, and go to state 796
    "&&"    shift, and go to state 525
    "||"    shift, and go to state 526
    "^^"    shift, and go to state 527
    "&&="   shift, and go to state 797
    "||="   shift, and go to state 798
    "^^="   shift, and go to state 799
    ".."    shift, and go to state 528
    '='     shift, and go to state 920
    '?'     shift, and go to state 529
    '|'     shift, and go to state 530
    '^'     shift, and go to state 531
    '&'     shift, and go to state 532
    '<'     shift, and go to state 533
    '>'     shift, and go to state 534
    '-'     shift, and go to state 535
    '+'     shift, and go to state 536
    '*'     shift, and go to state 537
    '/'     shift, and go to state 538
    '%'     shift, and go to state 539
    '.'     shift, and go to state 540
    '['     shift, and go to state 541

    " <|"     reduce using rule 291 (expr_assign)
    $default  reduce using rule 243 (expression_yield_no_pipe)


State 767

  273 block_or_lambda: '@' .
  274                | '@' . '@'

    '@'  shift, and go to state 929

    $default  reduce using rule 273 (block_or_lambda)


State 768

  220 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 220 (expr_pipe)


State 769

  221 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 221 (expr_pipe)


State 770

  195 expression_block: '{' expressions '}' "finally" . '{' expressions '}'

    '{'  shift, and go to state 930


State 771

  213 expression_any: expression_label ';' .

    $default  reduce using rule 213 (expression_any)


State 772

  214 expression_any: expression_goto ';' .

    $default  reduce using rule 214 (expression_any)


State 773

   66 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    '{'    shift, and go to state 313

    expression_block  go to state 931


State 774

   68 expression_if_then_else: expression_if_one_liner "if" . $@3 expr expression_else_one_liner ';'

    $default  reduce using rule 67 ($@3)

    $@3  go to state 932


State 775

  200 expression_any: expression_delete ';' .

    $default  reduce using rule 200 (expression_any)


State 776

  207 expression_any: expression_break ';' .

    $default  reduce using rule 207 (expression_any)


State 777

  208 expression_any: expression_continue ';' .

    $default  reduce using rule 208 (expression_any)


State 778

  240 expression_return: expression_return_no_pipe ';' .

    $default  reduce using rule 240 (expression_return)


State 779

  245 expression_yield: expression_yield_no_pipe ';' .

    $default  reduce using rule 245 (expression_yield)


State 780

  251 expression_let: kwd_let let_variable_declaration .

    $default  reduce using rule 251 (expression_let)


State 781

  219 expr_pipe: expr_assign " <|" . expr_block

    '$'  shift, and go to state 386
    '@'  shift, and go to state 767
    '{'  shift, and go to state 313

    expression_block  go to state 390
    block_or_lambda   go to state 396
    expr_block        go to state 933


State 782

  199 expression_any: expr_assign ';' .

    $default  reduce using rule 199 (expression_any)


State 783

  301 expr_assign: expr "+=" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 934
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 784

  302 expr_assign: expr "-=" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 935
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 785

  304 expr_assign: expr "/=" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 936
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 786

  303 expr_assign: expr "*=" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 937
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 787

  305 expr_assign: expr "%=" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 938
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 788

  295 expr_assign: expr "&=" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 939
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 789

  296 expr_assign: expr "|=" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 940
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 790

  297 expr_assign: expr "^=" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 941
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 791

  306 expr_assign: expr "<<=" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 942
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 792

  307 expr_assign: expr ">>=" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 943
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 793

  293 expr_assign: expr "<-" . expr
  312 expr_assign_pipe: expr "<-" . "@ <|" expr_block
  313                 | expr "<-" . "@@ <|" expr_block

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "@ <|"                            shift, and go to state 944
    "@@ <|"                           shift, and go to state 945
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 946
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 794

  294 expr_assign: expr ":=" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 947
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 795

  308 expr_assign: expr "<<<=" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 948
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 796

  309 expr_assign: expr ">>>=" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 949
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 797

  298 expr_assign: expr "&&=" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 950
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 798

  299 expr_assign: expr "||=" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 951
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 799

  300 expr_assign: expr "^^=" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 952
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 800

  292 expr_assign: expr '=' . expr
  310 expr_assign_pipe: expr '=' . "@ <|" expr_block
  311                 | expr '=' . "@@ <|" expr_block

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "@ <|"                            shift, and go to state 953
    "@@ <|"                           shift, and go to state 954
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 955
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 801

  510 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list '}' .

    $default  reduce using rule 510 (enum_declaration)


State 802

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'
  498 enum_list: enum_list "name" '=' expr . ';'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    ';'    shift, and go to state 956


State 803

  104 optional_annotation_list: '[' . annotation_list ']'
  449 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' ';'

    "require"  shift, and go to state 48
    "private"  shift, and go to state 49
    "::"       shift, and go to state 50
    "name"     shift, and go to state 51

    annotation_declaration_name  go to state 52
    annotation_declaration       go to state 53
    annotation_list              go to state 957
    name_in_namespace            go to state 55


State 804

  523 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@34 structure_name $@35 '{' struct_variable_declaration_list '}' .

    $default  reduce using rule 523 (structure_declaration)


State 805

  446 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" $@29 function_declaration_header ';'
  448                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_override optional_constant $@30 function_declaration_header expression_block

    "def"  shift, and go to state 958


State 806

  444 struct_variable_declaration_list: struct_variable_declaration_list $@28 . structure_variable_declaration ';'

    "[["  shift, and go to state 224

    $default  reduce using rule 431 (optional_field_annotation)

    optional_field_annotation       go to state 959
    structure_variable_declaration  go to state 960


State 807

  476 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 476 (let_variable_name_with_pos_list)


State 808

  479 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 961


State 809

  480 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options ';' .

    $default  reduce using rule 480 (let_variable_declaration)


State 810

  481 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr ';'
  482                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "@ <|"                            shift, and go to state 575
    "@@ <|"                           shift, and go to state 576
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    expr_pipe               go to state 962
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_assign             go to state 752
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 963
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 811

  484 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 484 (let_variable_declaration)


State 812

  291 expr_assign: expr .
  292            | expr . '=' expr
  293            | expr . "<-" expr
  294            | expr . ":=" expr
  295            | expr . "&=" expr
  296            | expr . "|=" expr
  297            | expr . "^=" expr
  298            | expr . "&&=" expr
  299            | expr . "||=" expr
  300            | expr . "^^=" expr
  301            | expr . "+=" expr
  302            | expr . "-=" expr
  303            | expr . "*=" expr
  304            | expr . "/=" expr
  305            | expr . "%=" expr
  306            | expr . "<<=" expr
  307            | expr . ">>=" expr
  308            | expr . "<<<=" expr
  309            | expr . ">>>=" expr
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'
  483 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 507
    "as"    shift, and go to state 508
    "+="    shift, and go to state 783
    "-="    shift, and go to state 784
    "/="    shift, and go to state 785
    "*="    shift, and go to state 786
    "%="    shift, and go to state 787
    "&="    shift, and go to state 788
    "|="    shift, and go to state 789
    "^="    shift, and go to state 790
    "<<"    shift, and go to state 509
    ">>"    shift, and go to state 510
    "++"    shift, and go to state 511
    "--"    shift, and go to state 512
    "<="    shift, and go to state 513
    "<<="   shift, and go to state 791
    ">>="   shift, and go to state 792
    ">="    shift, and go to state 514
    "=="    shift, and go to state 515
    "!="    shift, and go to state 516
    "->"    shift, and go to state 517
    "<-"    shift, and go to state 919
    "??"    shift, and go to state 518
    "?."    shift, and go to state 519
    "?["    shift, and go to state 520
    "<|"    shift, and go to state 521
    "|>"    shift, and go to state 522
    ":="    shift, and go to state 794
    "<<<"   shift, and go to state 523
    ">>>"   shift, and go to state 524
    "<<<="  shift, and go to state 795
    ">>>="  shift, and go to state 796
    "&&"    shift, and go to state 525
    "||"    shift, and go to state 526
    "^^"    shift, and go to state 527
    "&&="   shift, and go to state 797
    "||="   shift, and go to state 798
    "^^="   shift, and go to state 799
    ".."    shift, and go to state 528
    '='     shift, and go to state 920
    '?'     shift, and go to state 529
    '|'     shift, and go to state 530
    '^'     shift, and go to state 531
    '&'     shift, and go to state 532
    '<'     shift, and go to state 533
    '>'     shift, and go to state 534
    '-'     shift, and go to state 535
    '+'     shift, and go to state 536
    '*'     shift, and go to state 537
    '/'     shift, and go to state 538
    '%'     shift, and go to state 539
    '.'     shift, and go to state 540
    '['     shift, and go to state 541
    ';'     shift, and go to state 964

    $default  reduce using rule 291 (expr_assign)


State 813

  594 type_declaration_no_options: "array" '<' $@40 type_declaration '>' $@41 .

    $default  reduce using rule 594 (type_declaration_no_options)


State 814

  597 type_declaration_no_options: "table" '<' $@42 table_type_pair '>' $@43 .

    $default  reduce using rule 597 (type_declaration_no_options)


State 815

  570 table_type_pair: type_declaration ';' type_declaration .
  629 type_declaration: type_declaration . '|' type_declaration_no_options
  630                 | type_declaration . '|' '#'

    '|'  shift, and go to state 253

    $default  reduce using rule 570 (table_type_pair)


State 816

  600 type_declaration_no_options: "iterator" '<' $@44 type_declaration '>' $@45 .

    $default  reduce using rule 600 (type_declaration_no_options)


State 817

  590 type_declaration_no_options: "smart_ptr" '<' $@38 type_declaration '>' $@39 .

    $default  reduce using rule 590 (type_declaration_no_options)


State 818

  568 bitfield_type_declaration: "bitfield" '<' $@36 bitfield_bits '>' $@37 .

    $default  reduce using rule 568 (bitfield_type_declaration)


State 819

  604 type_declaration_no_options: "block" '<' $@46 type_declaration '>' $@47 .

    $default  reduce using rule 604 (type_declaration_no_options)


State 820

  607 type_declaration_no_options: "block" '<' $@48 optional_function_argument_list optional_function_type '>' . $@49

    $default  reduce using rule 606 ($@49)

    $@49  go to state 965


State 821

  611 type_declaration_no_options: "function" '<' $@50 type_declaration '>' $@51 .

    $default  reduce using rule 611 (type_declaration_no_options)


State 822

  614 type_declaration_no_options: "function" '<' $@52 optional_function_argument_list optional_function_type '>' . $@53

    $default  reduce using rule 613 ($@53)

    $@53  go to state 966


State 823

  618 type_declaration_no_options: "lambda" '<' $@54 type_declaration '>' $@55 .

    $default  reduce using rule 618 (type_declaration_no_options)


State 824

  621 type_declaration_no_options: "lambda" '<' $@56 optional_function_argument_list optional_function_type '>' . $@57

    $default  reduce using rule 620 ($@57)

    $@57  go to state 967


State 825

  456 tuple_type: "name" ':' type_declaration .
  629 type_declaration: type_declaration . '|' type_declaration_no_options
  630                 | type_declaration . '|' '#'

    '|'  shift, and go to state 253

    $default  reduce using rule 456 (tuple_type)


State 826

  624 type_declaration_no_options: "tuple" '<' $@58 tuple_type_list '>' $@59 .

    $default  reduce using rule 624 (type_declaration_no_options)


State 827

  458 tuple_type_list: tuple_type_list ';' tuple_type .

    $default  reduce using rule 458 (tuple_type_list)


State 828

  627 type_declaration_no_options: "variant" '<' $@60 variant_type_list '>' $@61 .

    $default  reduce using rule 627 (type_declaration_no_options)


State 829

  229 new_type_declaration: '<' $@6 type_declaration . '>' $@7
  629 type_declaration: type_declaration . '|' type_declaration_no_options
  630                 | type_declaration . '|' '#'

    '|'  shift, and go to state 253
    '>'  shift, and go to state 968


State 830

  232 expr_new: "new" new_type_declaration '(' ')' .

    $default  reduce using rule 232 (expr_new)


State 831

  233 expr_new: "new" new_type_declaration '(' expr_list . ')'
  268 expr_list: expr_list . ',' expr

    ','  shift, and go to state 877
    ')'  shift, and go to state 969


State 832

  265 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  266               | "typeinfo" '(' name_in_namespace '<' . "name" ';' "name" '>' expr ')'

    "name"  shift, and go to state 970


State 833

  264 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    ')'    shift, and go to state 971


State 834

  263 expr_type_decl: "type" '<' $@14 type_declaration . '>' $@15
  629 type_declaration: type_declaration . '|' type_declaration_no_options
  630                 | type_declaration . '|' '#'

    '|'  shift, and go to state 253
    '>'  shift, and go to state 972


State 835

  384 expr: "deref" '(' expr ')' .

    $default  reduce using rule 384 (expr)


State 836

  254 expr_cast: "cast" '<' $@8 type_declaration_no_options . '>' $@9 expr
  575 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  576                            | type_declaration_no_options . '[' ']'
  577                            | type_declaration_no_options . '-' '[' ']'
  578                            | type_declaration_no_options . "explicit"
  579                            | type_declaration_no_options . "const"
  580                            | type_declaration_no_options . '-' "const"
  581                            | type_declaration_no_options . '&'
  582                            | type_declaration_no_options . '-' '&'
  583                            | type_declaration_no_options . '#'
  584                            | type_declaration_no_options . "implicit"
  585                            | type_declaration_no_options . '-' '#'
  586                            | type_declaration_no_options . "==" "const"
  587                            | type_declaration_no_options . '?'
  591                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 243
    "implicit"  shift, and go to state 244
    "explicit"  shift, and go to state 245
    "=="        shift, and go to state 246
    "??"        shift, and go to state 247
    '?'         shift, and go to state 248
    '&'         shift, and go to state 249
    '>'         shift, and go to state 973
    '-'         shift, and go to state 250
    '['         shift, and go to state 251
    '#'         shift, and go to state 252


State 837

  257 expr_cast: "upcast" '<' $@10 type_declaration_no_options . '>' $@11 expr
  575 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  576                            | type_declaration_no_options . '[' ']'
  577                            | type_declaration_no_options . '-' '[' ']'
  578                            | type_declaration_no_options . "explicit"
  579                            | type_declaration_no_options . "const"
  580                            | type_declaration_no_options . '-' "const"
  581                            | type_declaration_no_options . '&'
  582                            | type_declaration_no_options . '-' '&'
  583                            | type_declaration_no_options . '#'
  584                            | type_declaration_no_options . "implicit"
  585                            | type_declaration_no_options . '-' '#'
  586                            | type_declaration_no_options . "==" "const"
  587                            | type_declaration_no_options . '?'
  591                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 243
    "implicit"  shift, and go to state 244
    "explicit"  shift, and go to state 245
    "=="        shift, and go to state 246
    "??"        shift, and go to state 247
    '?'         shift, and go to state 248
    '&'         shift, and go to state 249
    '>'         shift, and go to state 974
    '-'         shift, and go to state 250
    '['         shift, and go to state 251
    '#'         shift, and go to state 252


State 838

  385 expr: "addr" '(' expr ')' .

    $default  reduce using rule 385 (expr)


State 839

  260 expr_cast: "reinterpret" '<' $@12 type_declaration_no_options . '>' $@13 expr
  575 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  576                            | type_declaration_no_options . '[' ']'
  577                            | type_declaration_no_options . '-' '[' ']'
  578                            | type_declaration_no_options . "explicit"
  579                            | type_declaration_no_options . "const"
  580                            | type_declaration_no_options . '-' "const"
  581                            | type_declaration_no_options . '&'
  582                            | type_declaration_no_options . '-' '&'
  583                            | type_declaration_no_options . '#'
  584                            | type_declaration_no_options . "implicit"
  585                            | type_declaration_no_options . '-' '#'
  586                            | type_declaration_no_options . "==" "const"
  587                            | type_declaration_no_options . '?'
  591                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 243
    "implicit"  shift, and go to state 244
    "explicit"  shift, and go to state 245
    "=="        shift, and go to state 246
    "??"        shift, and go to state 247
    '?'         shift, and go to state 248
    '&'         shift, and go to state 249
    '>'         shift, and go to state 975
    '-'         shift, and go to state 250
    '['         shift, and go to state 251
    '#'         shift, and go to state 252


State 840

  415 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 415 (expr)


State 841

  386 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  387     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "[["  shift, and go to state 686

    $default  reduce using rule 281 (optional_capture_list)

    optional_capture_list  go to state 976


State 842

  416 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 416 (expr_mtag)


State 843

  417 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 417 (expr_mtag)


State 844

  418 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 418 (expr_mtag)


State 845

  419 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 419 (expr_mtag)


State 846

  420 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 420 (expr_mtag)


State 847

  421 expr_mtag: "$c" '(' expr ')' . '(' ')'
  422          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 977


State 848

  668 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where ']' ']'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    expr_list               go to state 978
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 685
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 849

  647 optional_block: "where" expr_block .

    $default  reduce using rule 647 (optional_block)


State 850

  641 make_struct_fields: "name" ":=" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 979
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 851

  640 make_struct_fields: "name" copy_or_move . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 980
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 852

  650 make_struct_decl: "[[" type_declaration_no_options '(' ')' . optional_block ']' ']'
  651                 | "[[" type_declaration_no_options '(' ')' . make_struct_dim optional_block ']' ']'

    "where"  shift, and go to state 655
    "name"   shift, and go to state 875

    $default  reduce using rule 646 (optional_block)

    make_struct_fields  go to state 660
    make_struct_dim     go to state 981
    optional_block      go to state 982


State 853

  655 make_tuple: expr "=>" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 983
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 854

  642 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  643                   | make_struct_fields ',' . "name" ":=" expr

    "name"  shift, and go to state 984


State 855

  645 make_struct_dim: make_struct_dim ';' . make_struct_fields

    "name"  shift, and go to state 875

    make_struct_fields  go to state 985


State 856

  648 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block . ']' ']'

    ']'  shift, and go to state 986


State 857

  649 make_struct_decl: "[[" type_declaration_no_options optional_block ']' . ']'

    ']'  shift, and go to state 987


State 858

  656 make_tuple: make_tuple ',' . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 988
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 859

  661 make_dim_decl: "[[" type_declaration_no_options make_dim ']' . ']'

    ']'  shift, and go to state 989


State 860

  660 make_dim: make_dim ';' . make_tuple

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 659
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_tuple              go to state 990
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 861

  669 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where '}' ']'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    expr_list               go to state 991
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 685
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 862

  653 make_struct_decl: "[{" type_declaration_no_options '(' ')' . make_struct_dim optional_block '}' ']'

    "name"  shift, and go to state 875

    make_struct_fields  go to state 660
    make_struct_dim     go to state 992


State 863

  652 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block . '}' ']'

    '}'  shift, and go to state 993


State 864

  662 make_dim_decl: "[{" type_declaration_no_options make_dim '}' . ']'

    ']'  shift, and go to state 994


State 865

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'
  657 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 657 (make_map_tuple)


State 866

  664 make_table: make_table ';' make_map_tuple .

    $default  reduce using rule 664 (make_table)


State 867

  665 make_table_decl: "{{" make_table '}' '}' .

    $default  reduce using rule 665 (make_table_decl)


State 868

   27 string_builder_body: string_builder_body "{" expr . "}"
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    "}"    shift, and go to state 995
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541


State 869

   29 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 29 (reader_character_sequence)


State 870

   30 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   32 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 996

    $default  reduce using rule 32 (expr_reader)


State 871

  318 func_addr_name: "$i" '(' . expr ')'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 997
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 872

  430 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 998
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 873

  322 func_addr_expr: '@' '@' '<' $@16 . type_declaration_no_options '>' $@17 func_addr_name

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace            go to state 177
    basic_type_declaration       go to state 178
    structure_type_declaration   go to state 179
    auto_type_declaration        go to state 180
    bitfield_type_declaration    go to state 181
    type_declaration_no_options  go to state 999


State 874

  325 func_addr_expr: '@' '@' '<' $@18 . optional_function_argument_list optional_function_type '>' $@19 func_addr_name

    '('  shift, and go to state 311

    $default  reduce using rule 105 (optional_function_argument_list)

    optional_function_argument_list  go to state 1000


State 875

  640 make_struct_fields: "name" . copy_or_move expr
  641                   | "name" . ":=" expr

    "<-"  shift, and go to state 741
    ":="  shift, and go to state 850
    '='   shift, and go to state 743

    copy_or_move  go to state 851


State 876

  314 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  642 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  643                   | make_struct_fields . ',' "name" ":=" expr

    ','  shift, and go to state 854
    ']'  shift, and go to state 1001


State 877

  268 expr_list: expr_list ',' . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 1002
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 878

  380 expr: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 380 (expr)


State 879

  277 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1003


State 880

  278 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1004


State 881

  276 capture_entry: '=' . "name"

    "name"  shift, and go to state 1005


State 882

  275 capture_entry: '&' . "name"

    "name"  shift, and go to state 1006


State 883

  279 capture_list: capture_entry .

    $default  reduce using rule 279 (capture_list)


State 884

  280 capture_list: capture_list . ',' capture_entry
  282 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 1007
    ']'  shift, and go to state 1008


State 885

  284 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 432

    $default  reduce using rule 108 (optional_function_type)

    optional_function_type  go to state 1009


State 886

  392 expr: expr "is" "type" '<' . $@22 type_declaration_no_options '>' $@23

    $default  reduce using rule 390 ($@22)

    $@22  go to state 1010


State 887

  429 expr_mtag: expr "is" "$f" '(' . expr ')'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 1011
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 888

  398 expr: expr "as" "type" '<' . $@24 type_declaration '>' $@25

    $default  reduce using rule 396 ($@24)

    $@24  go to state 1012


State 889

  427 expr_mtag: expr "as" "$f" '(' . expr ')'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 1013
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 890

  315 expr_method_call: expr "->" "name" '(' . ')'
  316                 | expr "->" "name" '(' . expr_list ')'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    ')'                               shift, and go to state 1014
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    expr_list               go to state 1015
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 685
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 891

  424 expr_mtag: expr "?." "$f" '(' . expr ')'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 1016
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 892

  374 expr: expr "?[" expr ']' .

    $default  reduce using rule 374 (expr)


State 893

  403 expr: expr '?' "as" "type" . '<' $@26 type_declaration '>' $@27

    '<'  shift, and go to state 1017


State 894

  428 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1018


State 895

  400 expr: expr '?' "as" "name" .

    $default  reduce using rule 400 (expr)


State 896

  404 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 404 (expr)


State 897

  389 expr: expr '?' expr ':' . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 1019
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 898

  426 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1020


State 899

  377 expr: expr '.' "?." "name" .

    $default  reduce using rule 377 (expr)


State 900

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  375     | expr '.' "?[" expr . ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    ']'    shift, and go to state 1021


State 901

  423 expr_mtag: expr '.' "$f" '(' . expr ')'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 1022
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 902

  425 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1023


State 903

  327 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 327 (expr_field)


State 904

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  373     | expr '.' '[' expr . ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    ']'    shift, and go to state 1024


State 905

  330 expr_field: expr '.' $@20 error . $@21

    $default  reduce using rule 329 ($@21)

    $@21  go to state 1025


State 906

  372 expr: expr '[' expr ']' .

    $default  reduce using rule 372 (expr)


State 907

  382 expr: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 382 (expr)


State 908

  452 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 452 (function_argument_declaration)


State 909

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'
  525 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    ')'    shift, and go to state 1026


State 910

  526 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 526 (variable_name_with_pos_list)


State 911

  527 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  528                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1027

    $default  reduce using rule 527 (variable_name_with_pos_list)


State 912

  466 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  467                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  629 type_declaration: type_declaration . '|' type_declaration_no_options
  630                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 741
    '='   shift, and go to state 743
    '|'   shift, and go to state 253

    $default  reduce using rule 466 (variable_declaration)

    copy_or_move  go to state 1028


State 913

  469 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 469 (variable_declaration)


State 914

  291 expr_assign: expr .
  292            | expr . '=' expr
  293            | expr . "<-" expr
  294            | expr . ":=" expr
  295            | expr . "&=" expr
  296            | expr . "|=" expr
  297            | expr . "^=" expr
  298            | expr . "&&=" expr
  299            | expr . "||=" expr
  300            | expr . "^^=" expr
  301            | expr . "+=" expr
  302            | expr . "-=" expr
  303            | expr . "*=" expr
  304            | expr . "/=" expr
  305            | expr . "%=" expr
  306            | expr . "<<=" expr
  307            | expr . ">>=" expr
  308            | expr . "<<<=" expr
  309            | expr . ">>>=" expr
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'
  468 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 507
    "as"    shift, and go to state 508
    "+="    shift, and go to state 783
    "-="    shift, and go to state 784
    "/="    shift, and go to state 785
    "*="    shift, and go to state 786
    "%="    shift, and go to state 787
    "&="    shift, and go to state 788
    "|="    shift, and go to state 789
    "^="    shift, and go to state 790
    "<<"    shift, and go to state 509
    ">>"    shift, and go to state 510
    "++"    shift, and go to state 511
    "--"    shift, and go to state 512
    "<="    shift, and go to state 513
    "<<="   shift, and go to state 791
    ">>="   shift, and go to state 792
    ">="    shift, and go to state 514
    "=="    shift, and go to state 515
    "!="    shift, and go to state 516
    "->"    shift, and go to state 517
    "<-"    shift, and go to state 919
    "??"    shift, and go to state 518
    "?."    shift, and go to state 519
    "?["    shift, and go to state 520
    "<|"    shift, and go to state 521
    "|>"    shift, and go to state 522
    ":="    shift, and go to state 794
    "<<<"   shift, and go to state 523
    ">>>"   shift, and go to state 524
    "<<<="  shift, and go to state 795
    ">>>="  shift, and go to state 796
    "&&"    shift, and go to state 525
    "||"    shift, and go to state 526
    "^^"    shift, and go to state 527
    "&&="   shift, and go to state 797
    "||="   shift, and go to state 798
    "^^="   shift, and go to state 799
    ".."    shift, and go to state 528
    '='     shift, and go to state 920
    '?'     shift, and go to state 529
    '|'     shift, and go to state 530
    '^'     shift, and go to state 531
    '&'     shift, and go to state 532
    '<'     shift, and go to state 533
    '>'     shift, and go to state 534
    '-'     shift, and go to state 535
    '+'     shift, and go to state 536
    '*'     shift, and go to state 537
    '/'     shift, and go to state 538
    '%'     shift, and go to state 539
    '.'     shift, and go to state 540
    '['     shift, and go to state 541

    " <|"     reduce using rule 291 (expr_assign)
    $default  reduce using rule 468 (variable_declaration)


State 915

   71 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 71 (expression_while_loop)


State 916

   69 expression_for_loop: "for" variable_name_with_pos_list "in" . expr_list ';' expression_block

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    expr_list               go to state 1029
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 685
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 917

  242 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 242 (expression_return)


State 918

  239 expression_return_no_pipe: "return" "<-" expr .
  291 expr_assign: expr .
  292            | expr . '=' expr
  293            | expr . "<-" expr
  294            | expr . ":=" expr
  295            | expr . "&=" expr
  296            | expr . "|=" expr
  297            | expr . "^=" expr
  298            | expr . "&&=" expr
  299            | expr . "||=" expr
  300            | expr . "^^=" expr
  301            | expr . "+=" expr
  302            | expr . "-=" expr
  303            | expr . "*=" expr
  304            | expr . "/=" expr
  305            | expr . "%=" expr
  306            | expr . "<<=" expr
  307            | expr . ">>=" expr
  308            | expr . "<<<=" expr
  309            | expr . ">>>=" expr
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 507
    "as"    shift, and go to state 508
    "+="    shift, and go to state 783
    "-="    shift, and go to state 784
    "/="    shift, and go to state 785
    "*="    shift, and go to state 786
    "%="    shift, and go to state 787
    "&="    shift, and go to state 788
    "|="    shift, and go to state 789
    "^="    shift, and go to state 790
    "<<"    shift, and go to state 509
    ">>"    shift, and go to state 510
    "++"    shift, and go to state 511
    "--"    shift, and go to state 512
    "<="    shift, and go to state 513
    "<<="   shift, and go to state 791
    ">>="   shift, and go to state 792
    ">="    shift, and go to state 514
    "=="    shift, and go to state 515
    "!="    shift, and go to state 516
    "->"    shift, and go to state 517
    "<-"    shift, and go to state 919
    "??"    shift, and go to state 518
    "?."    shift, and go to state 519
    "?["    shift, and go to state 520
    "<|"    shift, and go to state 521
    "|>"    shift, and go to state 522
    ":="    shift, and go to state 794
    "<<<"   shift, and go to state 523
    ">>>"   shift, and go to state 524
    "<<<="  shift, and go to state 795
    ">>>="  shift, and go to state 796
    "&&"    shift, and go to state 525
    "||"    shift, and go to state 526
    "^^"    shift, and go to state 527
    "&&="   shift, and go to state 797
    "||="   shift, and go to state 798
    "^^="   shift, and go to state 799
    ".."    shift, and go to state 528
    '='     shift, and go to state 920
    '?'     shift, and go to state 529
    '|'     shift, and go to state 530
    '^'     shift, and go to state 531
    '&'     shift, and go to state 532
    '<'     shift, and go to state 533
    '>'     shift, and go to state 534
    '-'     shift, and go to state 535
    '+'     shift, and go to state 536
    '*'     shift, and go to state 537
    '/'     shift, and go to state 538
    '%'     shift, and go to state 539
    '.'     shift, and go to state 540
    '['     shift, and go to state 541

    " <|"     reduce using rule 291 (expr_assign)
    $default  reduce using rule 239 (expression_return_no_pipe)


State 919

  293 expr_assign: expr "<-" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 946
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 920

  292 expr_assign: expr '=' . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 955
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 921

  248 expression_try_catch: "try" expression_block "recover" . expression_block

    '{'  shift, and go to state 313

    expression_block  go to state 1030


State 922

  226 expression_delete: "delete" "explicit" expr .
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 226 (expression_delete)


State 923

   72 expression_with: "with" expr expression_block .

    $default  reduce using rule 72 (expression_with)


State 924

   74 expression_with_alias: "assume" "name" '=' . $@4 expr

    $default  reduce using rule 73 ($@4)

    $@4  go to state 1031


State 925

   48 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 48 (expression_label)


State 926

   49 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 49 (expression_goto)


State 927

  247 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 247 (expression_yield)


State 928

  244 expression_yield_no_pipe: "yield" "<-" expr .
  291 expr_assign: expr .
  292            | expr . '=' expr
  293            | expr . "<-" expr
  294            | expr . ":=" expr
  295            | expr . "&=" expr
  296            | expr . "|=" expr
  297            | expr . "^=" expr
  298            | expr . "&&=" expr
  299            | expr . "||=" expr
  300            | expr . "^^=" expr
  301            | expr . "+=" expr
  302            | expr . "-=" expr
  303            | expr . "*=" expr
  304            | expr . "/=" expr
  305            | expr . "%=" expr
  306            | expr . "<<=" expr
  307            | expr . ">>=" expr
  308            | expr . "<<<=" expr
  309            | expr . ">>>=" expr
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 507
    "as"    shift, and go to state 508
    "+="    shift, and go to state 783
    "-="    shift, and go to state 784
    "/="    shift, and go to state 785
    "*="    shift, and go to state 786
    "%="    shift, and go to state 787
    "&="    shift, and go to state 788
    "|="    shift, and go to state 789
    "^="    shift, and go to state 790
    "<<"    shift, and go to state 509
    ">>"    shift, and go to state 510
    "++"    shift, and go to state 511
    "--"    shift, and go to state 512
    "<="    shift, and go to state 513
    "<<="   shift, and go to state 791
    ">>="   shift, and go to state 792
    ">="    shift, and go to state 514
    "=="    shift, and go to state 515
    "!="    shift, and go to state 516
    "->"    shift, and go to state 517
    "<-"    shift, and go to state 919
    "??"    shift, and go to state 518
    "?."    shift, and go to state 519
    "?["    shift, and go to state 520
    "<|"    shift, and go to state 521
    "|>"    shift, and go to state 522
    ":="    shift, and go to state 794
    "<<<"   shift, and go to state 523
    ">>>"   shift, and go to state 524
    "<<<="  shift, and go to state 795
    ">>>="  shift, and go to state 796
    "&&"    shift, and go to state 525
    "||"    shift, and go to state 526
    "^^"    shift, and go to state 527
    "&&="   shift, and go to state 797
    "||="   shift, and go to state 798
    "^^="   shift, and go to state 799
    ".."    shift, and go to state 528
    '='     shift, and go to state 920
    '?'     shift, and go to state 529
    '|'     shift, and go to state 530
    '^'     shift, and go to state 531
    '&'     shift, and go to state 532
    '<'     shift, and go to state 533
    '>'     shift, and go to state 534
    '-'     shift, and go to state 535
    '+'     shift, and go to state 536
    '*'     shift, and go to state 537
    '/'     shift, and go to state 538
    '%'     shift, and go to state 539
    '.'     shift, and go to state 540
    '['     shift, and go to state 541

    " <|"     reduce using rule 291 (expr_assign)
    $default  reduce using rule 244 (expression_yield_no_pipe)


State 929

  274 block_or_lambda: '@' '@' .

    $default  reduce using rule 274 (block_or_lambda)


State 930

  195 expression_block: '{' expressions '}' "finally" '{' . expressions '}'

    $default  reduce using rule 216 (expressions)

    expressions  go to state 1032


State 931

   66 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1033
    "elif"         shift, and go to state 1034
    "static_elif"  shift, and go to state 1035

    $default  reduce using rule 53 (expression_else)

    elif_or_static_elif  go to state 1036
    expression_else      go to state 1037


State 932

   68 expression_if_then_else: expression_if_one_liner "if" $@3 . expr expression_else_one_liner ';'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 1038
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 933

  219 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 219 (expr_pipe)


State 934

  301 expr_assign: expr "+=" expr .
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 301 (expr_assign)


State 935

  302 expr_assign: expr "-=" expr .
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 302 (expr_assign)


State 936

  304 expr_assign: expr "/=" expr .
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 304 (expr_assign)


State 937

  303 expr_assign: expr "*=" expr .
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 303 (expr_assign)


State 938

  305 expr_assign: expr "%=" expr .
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 305 (expr_assign)


State 939

  295 expr_assign: expr "&=" expr .
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 295 (expr_assign)


State 940

  296 expr_assign: expr "|=" expr .
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 296 (expr_assign)


State 941

  297 expr_assign: expr "^=" expr .
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 297 (expr_assign)


State 942

  306 expr_assign: expr "<<=" expr .
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 306 (expr_assign)


State 943

  307 expr_assign: expr ">>=" expr .
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 307 (expr_assign)


State 944

  312 expr_assign_pipe: expr "<-" "@ <|" . expr_block

    '$'  shift, and go to state 386
    '@'  shift, and go to state 767
    '{'  shift, and go to state 313

    expression_block  go to state 390
    block_or_lambda   go to state 396
    expr_block        go to state 1039


State 945

  313 expr_assign_pipe: expr "<-" "@@ <|" . expr_block

    '$'  shift, and go to state 386
    '@'  shift, and go to state 767
    '{'  shift, and go to state 313

    expression_block  go to state 390
    block_or_lambda   go to state 396
    expr_block        go to state 1040


State 946

  293 expr_assign: expr "<-" expr .
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 293 (expr_assign)


State 947

  294 expr_assign: expr ":=" expr .
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 294 (expr_assign)


State 948

  308 expr_assign: expr "<<<=" expr .
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 308 (expr_assign)


State 949

  309 expr_assign: expr ">>>=" expr .
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 309 (expr_assign)


State 950

  298 expr_assign: expr "&&=" expr .
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 298 (expr_assign)


State 951

  299 expr_assign: expr "||=" expr .
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 299 (expr_assign)


State 952

  300 expr_assign: expr "^^=" expr .
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 300 (expr_assign)


State 953

  310 expr_assign_pipe: expr '=' "@ <|" . expr_block

    '$'  shift, and go to state 386
    '@'  shift, and go to state 767
    '{'  shift, and go to state 313

    expression_block  go to state 390
    block_or_lambda   go to state 396
    expr_block        go to state 1041


State 954

  311 expr_assign_pipe: expr '=' "@@ <|" . expr_block

    '$'  shift, and go to state 386
    '@'  shift, and go to state 767
    '{'  shift, and go to state 313

    expression_block  go to state 390
    block_or_lambda   go to state 396
    expr_block        go to state 1042


State 955

  292 expr_assign: expr '=' expr .
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 292 (expr_assign)


State 956

  498 enum_list: enum_list "name" '=' expr ';' .

    $default  reduce using rule 498 (enum_list)


State 957

  102 annotation_list: annotation_list . ',' annotation_declaration
  104 optional_annotation_list: '[' annotation_list . ']'
  449 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' ';'

    ','  shift, and go to state 82
    ']'  shift, and go to state 1043


State 958

  446 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" $@29 function_declaration_header ';'
  448                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_override optional_constant $@30 function_declaration_header expression_block

    "public"   shift, and go to state 1044
    "private"  shift, and go to state 1045

    $default  reduce using rule 438 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1046


State 959

  441 structure_variable_declaration: optional_field_annotation . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1047
    "sealed"    shift, and go to state 1048

    $default  reduce using rule 433 (optional_override)

    optional_override  go to state 1049


State 960

  444 struct_variable_declaration_list: struct_variable_declaration_list $@28 structure_variable_declaration . ';'

    ';'  shift, and go to state 1050


State 961

  479 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 479 (let_variable_name_with_pos_list)


State 962

  482 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 482 (let_variable_declaration)


State 963

  291 expr_assign: expr .
  292            | expr . '=' expr
  293            | expr . "<-" expr
  294            | expr . ":=" expr
  295            | expr . "&=" expr
  296            | expr . "|=" expr
  297            | expr . "^=" expr
  298            | expr . "&&=" expr
  299            | expr . "||=" expr
  300            | expr . "^^=" expr
  301            | expr . "+=" expr
  302            | expr . "-=" expr
  303            | expr . "*=" expr
  304            | expr . "/=" expr
  305            | expr . "%=" expr
  306            | expr . "<<=" expr
  307            | expr . ">>=" expr
  308            | expr . "<<<=" expr
  309            | expr . ">>>=" expr
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'
  481 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 507
    "as"    shift, and go to state 508
    "+="    shift, and go to state 783
    "-="    shift, and go to state 784
    "/="    shift, and go to state 785
    "*="    shift, and go to state 786
    "%="    shift, and go to state 787
    "&="    shift, and go to state 788
    "|="    shift, and go to state 789
    "^="    shift, and go to state 790
    "<<"    shift, and go to state 509
    ">>"    shift, and go to state 510
    "++"    shift, and go to state 511
    "--"    shift, and go to state 512
    "<="    shift, and go to state 513
    "<<="   shift, and go to state 791
    ">>="   shift, and go to state 792
    ">="    shift, and go to state 514
    "=="    shift, and go to state 515
    "!="    shift, and go to state 516
    "->"    shift, and go to state 517
    "<-"    shift, and go to state 919
    "??"    shift, and go to state 518
    "?."    shift, and go to state 519
    "?["    shift, and go to state 520
    "<|"    shift, and go to state 521
    "|>"    shift, and go to state 522
    ":="    shift, and go to state 794
    "<<<"   shift, and go to state 523
    ">>>"   shift, and go to state 524
    "<<<="  shift, and go to state 795
    ">>>="  shift, and go to state 796
    "&&"    shift, and go to state 525
    "||"    shift, and go to state 526
    "^^"    shift, and go to state 527
    "&&="   shift, and go to state 797
    "||="   shift, and go to state 798
    "^^="   shift, and go to state 799
    ".."    shift, and go to state 528
    '='     shift, and go to state 920
    '?'     shift, and go to state 529
    '|'     shift, and go to state 530
    '^'     shift, and go to state 531
    '&'     shift, and go to state 532
    '<'     shift, and go to state 533
    '>'     shift, and go to state 534
    '-'     shift, and go to state 535
    '+'     shift, and go to state 536
    '*'     shift, and go to state 537
    '/'     shift, and go to state 538
    '%'     shift, and go to state 539
    '.'     shift, and go to state 540
    '['     shift, and go to state 541
    ';'     shift, and go to state 1051

    $default  reduce using rule 291 (expr_assign)


State 964

  483 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';' .

    $default  reduce using rule 483 (let_variable_declaration)


State 965

  607 type_declaration_no_options: "block" '<' $@48 optional_function_argument_list optional_function_type '>' $@49 .

    $default  reduce using rule 607 (type_declaration_no_options)


State 966

  614 type_declaration_no_options: "function" '<' $@52 optional_function_argument_list optional_function_type '>' $@53 .

    $default  reduce using rule 614 (type_declaration_no_options)


State 967

  621 type_declaration_no_options: "lambda" '<' $@56 optional_function_argument_list optional_function_type '>' $@57 .

    $default  reduce using rule 621 (type_declaration_no_options)


State 968

  229 new_type_declaration: '<' $@6 type_declaration '>' . $@7

    $default  reduce using rule 228 ($@7)

    $@7  go to state 1052


State 969

  233 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 233 (expr_new)


State 970

  265 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  266               | "typeinfo" '(' name_in_namespace '<' "name" . ';' "name" '>' expr ')'

    '>'  shift, and go to state 1053
    ';'  shift, and go to state 1054


State 971

  264 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 264 (expr_type_info)


State 972

  263 expr_type_decl: "type" '<' $@14 type_declaration '>' . $@15

    $default  reduce using rule 262 ($@15)

    $@15  go to state 1055


State 973

  254 expr_cast: "cast" '<' $@8 type_declaration_no_options '>' . $@9 expr

    $default  reduce using rule 253 ($@9)

    $@9  go to state 1056


State 974

  257 expr_cast: "upcast" '<' $@10 type_declaration_no_options '>' . $@11 expr

    $default  reduce using rule 256 ($@11)

    $@11  go to state 1057


State 975

  260 expr_cast: "reinterpret" '<' $@12 type_declaration_no_options '>' . $@13 expr

    $default  reduce using rule 259 ($@13)

    $@13  go to state 1058


State 976

  386 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  387     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1059


State 977

  421 expr_mtag: "$c" '(' expr ')' '(' . ')'
  422          | "$c" '(' expr ')' '(' . expr_list ')'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    ')'                               shift, and go to state 1060
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    expr_list               go to state 1061
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 685
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 978

  268 expr_list: expr_list . ',' expr
  668 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where ']' ']'

    ','  shift, and go to state 877
    ';'  shift, and go to state 1062


State 979

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'
  641 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 641 (make_struct_fields)


State 980

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'
  640 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 640 (make_struct_fields)


State 981

  645 make_struct_dim: make_struct_dim . ';' make_struct_fields
  651 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim . optional_block ']' ']'

    "where"  shift, and go to state 655
    ';'      shift, and go to state 855

    $default  reduce using rule 646 (optional_block)

    optional_block  go to state 1063


State 982

  650 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block . ']' ']'

    ']'  shift, and go to state 1064


State 983

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'
  655 make_tuple: expr "=>" expr .

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 655 (make_tuple)


State 984

  642 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  643                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 741
    ":="  shift, and go to state 1065
    '='   shift, and go to state 743

    copy_or_move  go to state 1066


State 985

  642 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  643                   | make_struct_fields . ',' "name" ":=" expr
  645 make_struct_dim: make_struct_dim ';' make_struct_fields .

    ','  shift, and go to state 854

    $default  reduce using rule 645 (make_struct_dim)


State 986

  648 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block ']' . ']'

    ']'  shift, and go to state 1067


State 987

  649 make_struct_decl: "[[" type_declaration_no_options optional_block ']' ']' .

    $default  reduce using rule 649 (make_struct_decl)


State 988

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'
  656 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 656 (make_tuple)


State 989

  661 make_dim_decl: "[[" type_declaration_no_options make_dim ']' ']' .

    $default  reduce using rule 661 (make_dim_decl)


State 990

  656 make_tuple: make_tuple . ',' expr
  660 make_dim: make_dim ';' make_tuple .

    ','  shift, and go to state 858

    $default  reduce using rule 660 (make_dim)


State 991

  268 expr_list: expr_list . ',' expr
  669 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where '}' ']'

    ','  shift, and go to state 877
    ';'  shift, and go to state 1068


State 992

  645 make_struct_dim: make_struct_dim . ';' make_struct_fields
  653 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim . optional_block '}' ']'

    "where"  shift, and go to state 655
    ';'      shift, and go to state 855

    $default  reduce using rule 646 (optional_block)

    optional_block  go to state 1069


State 993

  652 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block '}' . ']'

    ']'  shift, and go to state 1070


State 994

  662 make_dim_decl: "[{" type_declaration_no_options make_dim '}' ']' .

    $default  reduce using rule 662 (make_dim_decl)


State 995

   27 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 27 (string_builder_body)


State 996

   30 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 30 (reader_character_sequence)


State 997

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  318 func_addr_name: "$i" '(' expr . ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    ')'    shift, and go to state 1071


State 998

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'
  430          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    ')'    shift, and go to state 1072


State 999

  322 func_addr_expr: '@' '@' '<' $@16 type_declaration_no_options . '>' $@17 func_addr_name
  575 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  576                            | type_declaration_no_options . '[' ']'
  577                            | type_declaration_no_options . '-' '[' ']'
  578                            | type_declaration_no_options . "explicit"
  579                            | type_declaration_no_options . "const"
  580                            | type_declaration_no_options . '-' "const"
  581                            | type_declaration_no_options . '&'
  582                            | type_declaration_no_options . '-' '&'
  583                            | type_declaration_no_options . '#'
  584                            | type_declaration_no_options . "implicit"
  585                            | type_declaration_no_options . '-' '#'
  586                            | type_declaration_no_options . "==" "const"
  587                            | type_declaration_no_options . '?'
  591                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 243
    "implicit"  shift, and go to state 244
    "explicit"  shift, and go to state 245
    "=="        shift, and go to state 246
    "??"        shift, and go to state 247
    '?'         shift, and go to state 248
    '&'         shift, and go to state 249
    '>'         shift, and go to state 1073
    '-'         shift, and go to state 250
    '['         shift, and go to state 251
    '#'         shift, and go to state 252


State 1000

  325 func_addr_expr: '@' '@' '<' $@18 optional_function_argument_list . optional_function_type '>' $@19 func_addr_name

    ':'  shift, and go to state 432

    $default  reduce using rule 108 (optional_function_type)

    optional_function_type  go to state 1074


State 1001

  314 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1075


State 1002

  268 expr_list: expr_list ',' expr .
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 268 (expr_list)


State 1003

  277 capture_entry: "<-" "name" .

    $default  reduce using rule 277 (capture_entry)


State 1004

  278 capture_entry: ":=" "name" .

    $default  reduce using rule 278 (capture_entry)


State 1005

  276 capture_entry: '=' "name" .

    $default  reduce using rule 276 (capture_entry)


State 1006

  275 capture_entry: '&' "name" .

    $default  reduce using rule 275 (capture_entry)


State 1007

  280 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 879
    ":="  shift, and go to state 880
    '='   shift, and go to state 881
    '&'   shift, and go to state 882

    capture_entry  go to state 1076


State 1008

  282 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 1077


State 1009

  284 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"  shift, and go to state 1078
    '{'   shift, and go to state 313

    expression_block       go to state 1079
    block_or_simple_block  go to state 1080


State 1010

  392 expr: expr "is" "type" '<' $@22 . type_declaration_no_options '>' $@23

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace            go to state 177
    basic_type_declaration       go to state 178
    structure_type_declaration   go to state 179
    auto_type_declaration        go to state 180
    bitfield_type_declaration    go to state 181
    type_declaration_no_options  go to state 1081


State 1011

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'
  429          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    ')'    shift, and go to state 1082


State 1012

  398 expr: expr "as" "type" '<' $@24 . type_declaration '>' $@25

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace            go to state 177
    basic_type_declaration       go to state 178
    structure_type_declaration   go to state 179
    auto_type_declaration        go to state 180
    bitfield_type_declaration    go to state 181
    type_declaration_no_options  go to state 182
    type_declaration             go to state 1083


State 1013

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  427          | expr "as" "$f" '(' expr . ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    ')'    shift, and go to state 1084


State 1014

  315 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 315 (expr_method_call)


State 1015

  268 expr_list: expr_list . ',' expr
  316 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 877
    ')'  shift, and go to state 1085


State 1016

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  424          | expr "?." "$f" '(' expr . ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    ')'    shift, and go to state 1086


State 1017

  403 expr: expr '?' "as" "type" '<' . $@26 type_declaration '>' $@27

    $default  reduce using rule 401 ($@26)

    $@26  go to state 1087


State 1018

  428 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 1088
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 1019

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  389     | expr '?' expr ':' expr .
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 389 (expr)


State 1020

  426 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 1089
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 1021

  375 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 375 (expr)


State 1022

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  423          | expr '.' "$f" '(' expr . ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    ')'    shift, and go to state 1090


State 1023

  425 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 1091
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 1024

  373 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 373 (expr)


State 1025

  330 expr_field: expr '.' $@20 error $@21 .

    $default  reduce using rule 330 (expr_field)


State 1026

  525 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 525 (variable_name_with_pos_list)


State 1027

  528 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1092


State 1028

  467 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 1093
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 1029

   69 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list . ';' expression_block
  268 expr_list: expr_list . ',' expr

    ','  shift, and go to state 877
    ';'  shift, and go to state 1094


State 1030

  248 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 248 (expression_try_catch)


State 1031

   74 expression_with_alias: "assume" "name" '=' $@4 . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 1095
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 1032

  195 expression_block: '{' expressions '}' "finally" '{' expressions . '}'
  217 expressions: expressions . expression_any
  218            | expressions . error

    error                             shift, and go to state 558
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 559
    "if"                              shift, and go to state 560
    "static_if"                       shift, and go to state 561
    "for"                             shift, and go to state 562
    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "return"                          shift, and go to state 563
    "null"                            shift, and go to state 352
    "break"                           shift, and go to state 564
    "try"                             shift, and go to state 565
    "delete"                          shift, and go to state 566
    "deref"                           shift, and go to state 353
    "with"                            shift, and go to state 567
    "assume"                          shift, and go to state 568
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 356
    "continue"                        shift, and go to state 569
    "pass"                            shift, and go to state 570
    "reinterpret"                     shift, and go to state 357
    "label"                           shift, and go to state 571
    "goto"                            shift, and go to state 572
    "unsafe"                          shift, and go to state 573
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "yield"                           shift, and go to state 574
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "@ <|"                            shift, and go to state 575
    "@@ <|"                           shift, and go to state 576
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    ';'                               shift, and go to state 577
    '{'                               shift, and go to state 313
    '}'                               shift, and go to state 1096

    string_builder             go to state 388
    expr_reader                go to state 389
    expression_label           go to state 579
    expression_goto            go to state 580
    if_or_static_if            go to state 581
    expression_if_one_liner    go to state 582
    expression_if_then_else    go to state 583
    expression_for_loop        go to state 584
    expression_unsafe          go to state 585
    expression_while_loop      go to state 586
    expression_with            go to state 587
    expression_with_alias      go to state 588
    expression_block           go to state 390
    expression_any             go to state 589
    expr_pipe                  go to state 590
    name_in_namespace          go to state 391
    expression_delete          go to state 591
    expr_new                   go to state 392
    expression_break           go to state 592
    expression_continue        go to state 593
    expression_return_no_pipe  go to state 594
    expression_return          go to state 595
    expression_yield_no_pipe   go to state 596
    expression_yield           go to state 597
    expression_try_catch       go to state 598
    kwd_let                    go to state 599
    expression_let             go to state 600
    expr_cast                  go to state 393
    expr_type_decl             go to state 394
    expr_type_info             go to state 395
    block_or_lambda            go to state 396
    expr_block                 go to state 397
    expr_numeric_const         go to state 398
    expr_assign                go to state 601
    expr_assign_pipe           go to state 602
    expr_named_call            go to state 399
    expr_method_call           go to state 400
    func_addr_expr             go to state 401
    expr_field                 go to state 402
    expr                       go to state 603
    expr_mtag                  go to state 404
    basic_type_declaration     go to state 405
    make_decl                  go to state 406
    make_struct_decl           go to state 407
    make_dim_decl              go to state 408
    make_table_decl            go to state 409
    array_comprehension        go to state 410


State 1033

   54 expression_else: "else" . expression_block

    '{'  shift, and go to state 313

    expression_block  go to state 1097


State 1034

   51 elif_or_static_elif: "elif" .

    $default  reduce using rule 51 (elif_or_static_elif)


State 1035

   52 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 52 (elif_or_static_elif)


State 1036

   55 expression_else: elif_or_static_elif . expr expression_block expression_else

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 1098
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 1037

   66 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 66 (expression_if_then_else)


State 1038

   68 expression_if_then_else: expression_if_one_liner "if" $@3 expr . expression_else_one_liner ';'
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1099
    "is"    shift, and go to state 507
    "as"    shift, and go to state 508
    "<<"    shift, and go to state 509
    ">>"    shift, and go to state 510
    "++"    shift, and go to state 511
    "--"    shift, and go to state 512
    "<="    shift, and go to state 513
    ">="    shift, and go to state 514
    "=="    shift, and go to state 515
    "!="    shift, and go to state 516
    "->"    shift, and go to state 517
    "??"    shift, and go to state 518
    "?."    shift, and go to state 519
    "?["    shift, and go to state 520
    "<|"    shift, and go to state 521
    "|>"    shift, and go to state 522
    "<<<"   shift, and go to state 523
    ">>>"   shift, and go to state 524
    "&&"    shift, and go to state 525
    "||"    shift, and go to state 526
    "^^"    shift, and go to state 527
    ".."    shift, and go to state 528
    '?'     shift, and go to state 529
    '|'     shift, and go to state 530
    '^'     shift, and go to state 531
    '&'     shift, and go to state 532
    '<'     shift, and go to state 533
    '>'     shift, and go to state 534
    '-'     shift, and go to state 535
    '+'     shift, and go to state 536
    '*'     shift, and go to state 537
    '/'     shift, and go to state 538
    '%'     shift, and go to state 539
    '.'     shift, and go to state 540
    '['     shift, and go to state 541

    $default  reduce using rule 58 (expression_else_one_liner)

    expression_else_one_liner  go to state 1100


State 1039

  312 expr_assign_pipe: expr "<-" "@ <|" expr_block .

    $default  reduce using rule 312 (expr_assign_pipe)


State 1040

  313 expr_assign_pipe: expr "<-" "@@ <|" expr_block .

    $default  reduce using rule 313 (expr_assign_pipe)


State 1041

  310 expr_assign_pipe: expr '=' "@ <|" expr_block .

    $default  reduce using rule 310 (expr_assign_pipe)


State 1042

  311 expr_assign_pipe: expr '=' "@@ <|" expr_block .

    $default  reduce using rule 311 (expr_assign_pipe)


State 1043

  104 optional_annotation_list: '[' annotation_list ']' .
  449 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . ';'

    ';'  shift, and go to state 1101

    $default  reduce using rule 104 (optional_annotation_list)


State 1044

  439 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 439 (optional_public_or_private_member_variable)


State 1045

  440 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 440 (optional_public_or_private_member_variable)


State 1046

  446 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" $@29 function_declaration_header ';'
  448                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_override optional_constant $@30 function_declaration_header expression_block

    "override"  shift, and go to state 1047
    "abstract"  shift, and go to state 1102
    "sealed"    shift, and go to state 1048

    $default  reduce using rule 433 (optional_override)

    optional_override  go to state 1103


State 1047

  434 optional_override: "override" .

    $default  reduce using rule 434 (optional_override)


State 1048

  435 optional_override: "sealed" .

    $default  reduce using rule 435 (optional_override)


State 1049

  441 structure_variable_declaration: optional_field_annotation optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1044
    "private"  shift, and go to state 1045

    $default  reduce using rule 438 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1104


State 1050

  444 struct_variable_declaration_list: struct_variable_declaration_list $@28 structure_variable_declaration ';' .

    $default  reduce using rule 444 (struct_variable_declaration_list)


State 1051

  481 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr ';' .

    $default  reduce using rule 481 (let_variable_declaration)


State 1052

  229 new_type_declaration: '<' $@6 type_declaration '>' $@7 .

    $default  reduce using rule 229 (new_type_declaration)


State 1053

  265 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 1105
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 1054

  266 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' . "name" '>' expr ')'

    "name"  shift, and go to state 1106


State 1055

  263 expr_type_decl: "type" '<' $@14 type_declaration '>' $@15 .

    $default  reduce using rule 263 (expr_type_decl)


State 1056

  254 expr_cast: "cast" '<' $@8 type_declaration_no_options '>' $@9 . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 1107
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 1057

  257 expr_cast: "upcast" '<' $@10 type_declaration_no_options '>' $@11 . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 1108
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 1058

  260 expr_cast: "reinterpret" '<' $@12 type_declaration_no_options '>' $@13 . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 1109
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 1059

  386 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  387     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    ')'                               shift, and go to state 1110
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 1111
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 1060

  421 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 421 (expr_mtag)


State 1061

  268 expr_list: expr_list . ',' expr
  422 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 877
    ')'  shift, and go to state 1112


State 1062

  668 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where ']' ']'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 1113
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 1063

  651 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block . ']' ']'

    ']'  shift, and go to state 1114


State 1064

  650 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block ']' . ']'

    ']'  shift, and go to state 1115


State 1065

  643 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 1116
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 1066

  642 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 1117
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 1067

  648 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block ']' ']' .

    $default  reduce using rule 648 (make_struct_decl)


State 1068

  669 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where '}' ']'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 1118
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 1069

  653 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block . '}' ']'

    '}'  shift, and go to state 1119


State 1070

  652 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block '}' ']' .

    $default  reduce using rule 652 (make_struct_decl)


State 1071

  318 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 318 (func_addr_name)


State 1072

  430 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 430 (expr_mtag)


State 1073

  322 func_addr_expr: '@' '@' '<' $@16 type_declaration_no_options '>' . $@17 func_addr_name

    $default  reduce using rule 321 ($@17)

    $@17  go to state 1120


State 1074

  325 func_addr_expr: '@' '@' '<' $@18 optional_function_argument_list optional_function_type . '>' $@19 func_addr_name

    '>'  shift, and go to state 1121


State 1075

  314 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 314 (expr_named_call)


State 1076

  280 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 280 (capture_list)


State 1077

  282 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 282 (optional_capture_list)


State 1078

  270 block_or_simple_block: "=>" . expr
  271                      | "=>" . "<-" expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "<-"                              shift, and go to state 1122
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 1123
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 1079

  269 block_or_simple_block: expression_block .

    $default  reduce using rule 269 (block_or_simple_block)


State 1080

  284 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 284 (expr_block)


State 1081

  392 expr: expr "is" "type" '<' $@22 type_declaration_no_options . '>' $@23
  575 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  576                            | type_declaration_no_options . '[' ']'
  577                            | type_declaration_no_options . '-' '[' ']'
  578                            | type_declaration_no_options . "explicit"
  579                            | type_declaration_no_options . "const"
  580                            | type_declaration_no_options . '-' "const"
  581                            | type_declaration_no_options . '&'
  582                            | type_declaration_no_options . '-' '&'
  583                            | type_declaration_no_options . '#'
  584                            | type_declaration_no_options . "implicit"
  585                            | type_declaration_no_options . '-' '#'
  586                            | type_declaration_no_options . "==" "const"
  587                            | type_declaration_no_options . '?'
  591                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 243
    "implicit"  shift, and go to state 244
    "explicit"  shift, and go to state 245
    "=="        shift, and go to state 246
    "??"        shift, and go to state 247
    '?'         shift, and go to state 248
    '&'         shift, and go to state 249
    '>'         shift, and go to state 1124
    '-'         shift, and go to state 250
    '['         shift, and go to state 251
    '#'         shift, and go to state 252


State 1082

  429 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 429 (expr_mtag)


State 1083

  398 expr: expr "as" "type" '<' $@24 type_declaration . '>' $@25
  629 type_declaration: type_declaration . '|' type_declaration_no_options
  630                 | type_declaration . '|' '#'

    '|'  shift, and go to state 253
    '>'  shift, and go to state 1125


State 1084

  427 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 427 (expr_mtag)


State 1085

  316 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 316 (expr_method_call)


State 1086

  424 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 424 (expr_mtag)


State 1087

  403 expr: expr '?' "as" "type" '<' $@26 . type_declaration '>' $@27

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "$t"         shift, and go to state 176
    "name"       shift, and go to state 51

    name_in_namespace            go to state 177
    basic_type_declaration       go to state 178
    structure_type_declaration   go to state 179
    auto_type_declaration        go to state 180
    bitfield_type_declaration    go to state 181
    type_declaration_no_options  go to state 182
    type_declaration             go to state 1126


State 1088

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  428          | expr '?' "as" "$f" '(' expr . ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    ')'    shift, and go to state 1127


State 1089

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  426          | expr '.' "?." "$f" '(' expr . ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    ')'    shift, and go to state 1128


State 1090

  423 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 423 (expr_mtag)


State 1091

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  425          | expr '.' '.' "$f" '(' expr . ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    ')'    shift, and go to state 1129


State 1092

  528 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 528 (variable_name_with_pos_list)


State 1093

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'
  467 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 467 (variable_declaration)


State 1094

   69 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' . expression_block

    '{'  shift, and go to state 313

    expression_block  go to state 1130


State 1095

   74 expression_with_alias: "assume" "name" '=' $@4 expr .
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 74 (expression_with_alias)


State 1096

  195 expression_block: '{' expressions '}' "finally" '{' expressions '}' .

    $default  reduce using rule 195 (expression_block)


State 1097

   54 expression_else: "else" expression_block .

    $default  reduce using rule 54 (expression_else)


State 1098

   55 expression_else: elif_or_static_elif expr . expression_block expression_else
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    '{'    shift, and go to state 313

    expression_block  go to state 1131


State 1099

   60 expression_else_one_liner: "else" . $@2 expression_if_one_liner

    $default  reduce using rule 59 ($@2)

    $@2  go to state 1132


State 1100

   68 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner . ';'

    ';'  shift, and go to state 1133


State 1101

  449 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' ';' .

    $default  reduce using rule 449 (struct_variable_declaration_list)


State 1102

  446 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . $@29 function_declaration_header ';'

    $default  reduce using rule 445 ($@29)

    $@29  go to state 1134


State 1103

  448 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override . optional_constant $@30 function_declaration_header expression_block

    "const"  shift, and go to state 1135

    $default  reduce using rule 436 (optional_constant)

    optional_constant  go to state 1136


State 1104

  441 structure_variable_declaration: optional_field_annotation optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 551
    "name"  shift, and go to state 552

    variable_declaration         go to state 1137
    variable_name_with_pos_list  go to state 554


State 1105

  265 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    ')'    shift, and go to state 1138


State 1106

  266 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" . '>' expr ')'

    '>'  shift, and go to state 1139


State 1107

  254 expr_cast: "cast" '<' $@8 type_declaration_no_options '>' $@9 expr .
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 254 (expr_cast)


State 1108

  257 expr_cast: "upcast" '<' $@10 type_declaration_no_options '>' $@11 expr .
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 257 (expr_cast)


State 1109

  260 expr_cast: "reinterpret" '<' $@12 type_declaration_no_options '>' $@13 expr .
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 260 (expr_cast)


State 1110

  386 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 386 (expr)


State 1111

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  387     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    ')'    shift, and go to state 1140


State 1112

  422 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 422 (expr_mtag)


State 1113

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'
  668 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where ']' ']'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    ';'    shift, and go to state 1141

    $default  reduce using rule 666 (array_comprehension_where)

    array_comprehension_where  go to state 1142


State 1114

  651 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block ']' . ']'

    ']'  shift, and go to state 1143


State 1115

  650 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block ']' ']' .

    $default  reduce using rule 650 (make_struct_decl)


State 1116

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'
  643 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 643 (make_struct_fields)


State 1117

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'
  642 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 642 (make_struct_fields)


State 1118

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'
  669 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where '}' ']'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    ';'    shift, and go to state 1141

    $default  reduce using rule 666 (array_comprehension_where)

    array_comprehension_where  go to state 1144


State 1119

  653 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block '}' . ']'

    ']'  shift, and go to state 1145


State 1120

  322 func_addr_expr: '@' '@' '<' $@16 type_declaration_no_options '>' $@17 . func_addr_name

    "::"    shift, and go to state 50
    "$i"    shift, and go to state 677
    "name"  shift, and go to state 51

    name_in_namespace  go to state 680
    func_addr_name     go to state 1146


State 1121

  325 func_addr_expr: '@' '@' '<' $@18 optional_function_argument_list optional_function_type '>' . $@19 func_addr_name

    $default  reduce using rule 324 ($@19)

    $@19  go to state 1147


State 1122

  271 block_or_simple_block: "=>" "<-" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 1148
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 1123

  270 block_or_simple_block: "=>" expr .
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    ".."  error (nonassociative)

    $default  reduce using rule 270 (block_or_simple_block)


State 1124

  392 expr: expr "is" "type" '<' $@22 type_declaration_no_options '>' . $@23

    $default  reduce using rule 391 ($@23)

    $@23  go to state 1149


State 1125

  398 expr: expr "as" "type" '<' $@24 type_declaration '>' . $@25

    $default  reduce using rule 397 ($@25)

    $@25  go to state 1150


State 1126

  403 expr: expr '?' "as" "type" '<' $@26 type_declaration . '>' $@27
  629 type_declaration: type_declaration . '|' type_declaration_no_options
  630                 | type_declaration . '|' '#'

    '|'  shift, and go to state 253
    '>'  shift, and go to state 1151


State 1127

  428 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 428 (expr_mtag)


State 1128

  426 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 426 (expr_mtag)


State 1129

  425 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 425 (expr_mtag)


State 1130

   69 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' expression_block .

    $default  reduce using rule 69 (expression_for_loop)


State 1131

   55 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1033
    "elif"         shift, and go to state 1034
    "static_elif"  shift, and go to state 1035

    $default  reduce using rule 53 (expression_else)

    elif_or_static_elif  go to state 1036
    expression_else      go to state 1152


State 1132

   60 expression_else_one_liner: "else" $@2 . expression_if_one_liner

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "return"                          shift, and go to state 1153
    "null"                            shift, and go to state 352
    "break"                           shift, and go to state 564
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "continue"                        shift, and go to state 569
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "yield"                           shift, and go to state 1154
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder             go to state 388
    expr_reader                go to state 389
    expression_if_one_liner    go to state 1155
    expression_block           go to state 390
    name_in_namespace          go to state 391
    expr_new                   go to state 392
    expression_break           go to state 1156
    expression_continue        go to state 1157
    expression_return_no_pipe  go to state 1158
    expression_yield_no_pipe   go to state 1159
    expr_cast                  go to state 393
    expr_type_decl             go to state 394
    expr_type_info             go to state 395
    block_or_lambda            go to state 396
    expr_block                 go to state 397
    expr_numeric_const         go to state 398
    expr_named_call            go to state 399
    expr_method_call           go to state 400
    func_addr_expr             go to state 401
    expr_field                 go to state 402
    expr                       go to state 1160
    expr_mtag                  go to state 404
    basic_type_declaration     go to state 405
    make_decl                  go to state 406
    make_struct_decl           go to state 407
    make_dim_decl              go to state 408
    make_table_decl            go to state 409
    array_comprehension        go to state 410


State 1133

   68 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner ';' .

    $default  reduce using rule 68 (expression_if_then_else)


State 1134

  446 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" $@29 . function_declaration_header ';'

    "operator"  shift, and go to state 189
    "bool"      shift, and go to state 190
    "string"    shift, and go to state 191
    "int"       shift, and go to state 192
    "int2"      shift, and go to state 193
    "int3"      shift, and go to state 194
    "int4"      shift, and go to state 195
    "uint"      shift, and go to state 196
    "uint2"     shift, and go to state 197
    "uint3"     shift, and go to state 198
    "uint4"     shift, and go to state 199
    "float"     shift, and go to state 200
    "float2"    shift, and go to state 201
    "float3"    shift, and go to state 202
    "float4"    shift, and go to state 203
    "range"     shift, and go to state 204
    "urange"    shift, and go to state 205
    "int64"     shift, and go to state 206
    "uint64"    shift, and go to state 207
    "double"    shift, and go to state 208
    "int8"      shift, and go to state 209
    "uint8"     shift, and go to state 210
    "int16"     shift, and go to state 211
    "uint16"    shift, and go to state 212
    "++"        shift, and go to state 213
    "--"        shift, and go to state 214
    "name"      shift, and go to state 215

    function_name                go to state 216
    function_declaration_header  go to state 1161


State 1135

  437 optional_constant: "const" .

    $default  reduce using rule 437 (optional_constant)


State 1136

  448 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant . $@30 function_declaration_header expression_block

    $default  reduce using rule 447 ($@30)

    $@30  go to state 1162


State 1137

  441 structure_variable_declaration: optional_field_annotation optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 441 (structure_variable_declaration)


State 1138

  265 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 265 (expr_type_info)


State 1139

  266 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' . expr ')'

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 1163
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 1140

  387 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 387 (expr)


State 1141

  667 array_comprehension_where: ';' . "where" expr

    "where"  shift, and go to state 1164


State 1142

  668 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1165


State 1143

  651 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block ']' ']' .

    $default  reduce using rule 651 (make_struct_decl)


State 1144

  669 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . '}' ']'

    '}'  shift, and go to state 1166


State 1145

  653 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block '}' ']' .

    $default  reduce using rule 653 (make_struct_decl)


State 1146

  322 func_addr_expr: '@' '@' '<' $@16 type_declaration_no_options '>' $@17 func_addr_name .

    $default  reduce using rule 322 (func_addr_expr)


State 1147

  325 func_addr_expr: '@' '@' '<' $@18 optional_function_argument_list optional_function_type '>' $@19 . func_addr_name

    "::"    shift, and go to state 50
    "$i"    shift, and go to state 677
    "name"  shift, and go to state 51

    name_in_namespace  go to state 680
    func_addr_name     go to state 1167


State 1148

  271 block_or_simple_block: "=>" "<-" expr .
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 271 (block_or_simple_block)


State 1149

  392 expr: expr "is" "type" '<' $@22 type_declaration_no_options '>' $@23 .

    $default  reduce using rule 392 (expr)


State 1150

  398 expr: expr "as" "type" '<' $@24 type_declaration '>' $@25 .

    $default  reduce using rule 398 (expr)


State 1151

  403 expr: expr '?' "as" "type" '<' $@26 type_declaration '>' . $@27

    $default  reduce using rule 402 ($@27)

    $@27  go to state 1168


State 1152

   55 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 55 (expression_else)


State 1153

  237 expression_return_no_pipe: "return" .
  238                          | "return" . expr
  239                          | "return" . "<-" expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "<-"                              shift, and go to state 1169
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    $default  reduce using rule 237 (expression_return_no_pipe)

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 1170
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 1154

  243 expression_yield_no_pipe: "yield" . expr
  244                         | "yield" . "<-" expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "<-"                              shift, and go to state 1171
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 1172
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 1155

   60 expression_else_one_liner: "else" $@2 expression_if_one_liner .

    $default  reduce using rule 60 (expression_else_one_liner)


State 1156

   64 expression_if_one_liner: expression_break .

    $default  reduce using rule 64 (expression_if_one_liner)


State 1157

   65 expression_if_one_liner: expression_continue .

    $default  reduce using rule 65 (expression_if_one_liner)


State 1158

   62 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 62 (expression_if_one_liner)


State 1159

   63 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 63 (expression_if_one_liner)


State 1160

   61 expression_if_one_liner: expr .
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 61 (expression_if_one_liner)


State 1161

  446 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" $@29 function_declaration_header . ';'

    ';'  shift, and go to state 1173


State 1162

  448 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant $@30 . function_declaration_header expression_block

    "operator"  shift, and go to state 189
    "bool"      shift, and go to state 190
    "string"    shift, and go to state 191
    "int"       shift, and go to state 192
    "int2"      shift, and go to state 193
    "int3"      shift, and go to state 194
    "int4"      shift, and go to state 195
    "uint"      shift, and go to state 196
    "uint2"     shift, and go to state 197
    "uint3"     shift, and go to state 198
    "uint4"     shift, and go to state 199
    "float"     shift, and go to state 200
    "float2"    shift, and go to state 201
    "float3"    shift, and go to state 202
    "float4"    shift, and go to state 203
    "range"     shift, and go to state 204
    "urange"    shift, and go to state 205
    "int64"     shift, and go to state 206
    "uint64"    shift, and go to state 207
    "double"    shift, and go to state 208
    "int8"      shift, and go to state 209
    "uint8"     shift, and go to state 210
    "int16"     shift, and go to state 211
    "uint16"    shift, and go to state 212
    "++"        shift, and go to state 213
    "--"        shift, and go to state 214
    "name"      shift, and go to state 215

    function_name                go to state 216
    function_declaration_header  go to state 1174


State 1163

  266 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr . ')'
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541
    ')'    shift, and go to state 1175


State 1164

  667 array_comprehension_where: ';' "where" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 1176
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 1165

  668 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1177


State 1166

  669 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' . ']'

    ']'  shift, and go to state 1178


State 1167

  325 func_addr_expr: '@' '@' '<' $@18 optional_function_argument_list optional_function_type '>' $@19 func_addr_name .

    $default  reduce using rule 325 (func_addr_expr)


State 1168

  403 expr: expr '?' "as" "type" '<' $@26 type_declaration '>' $@27 .

    $default  reduce using rule 403 (expr)


State 1169

  239 expression_return_no_pipe: "return" "<-" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 1179
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 1170

  238 expression_return_no_pipe: "return" expr .
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 238 (expression_return_no_pipe)


State 1171

  244 expression_yield_no_pipe: "yield" "<-" . expr

    "true"                            shift, and go to state 347
    "false"                           shift, and go to state 348
    "new"                             shift, and go to state 349
    "typeinfo"                        shift, and go to state 350
    "type"                            shift, and go to state 351
    "null"                            shift, and go to state 352
    "deref"                           shift, and go to state 353
    "cast"                            shift, and go to state 354
    "upcast"                          shift, and go to state 355
    "addr"                            shift, and go to state 356
    "reinterpret"                     shift, and go to state 357
    "unsafe"                          shift, and go to state 358
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 359
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 360
    "++"                              shift, and go to state 361
    "--"                              shift, and go to state 362
    "::"                              shift, and go to state 50
    "$$"                              shift, and go to state 363
    "$i"                              shift, and go to state 364
    "$v"                              shift, and go to state 365
    "$b"                              shift, and go to state 366
    "$a"                              shift, and go to state 367
    "$c"                              shift, and go to state 368
    "[["                              shift, and go to state 369
    "[{"                              shift, and go to state 370
    "{{"                              shift, and go to state 371
    "integer constant"                shift, and go to state 372
    "long integer constant"           shift, and go to state 373
    "unsigned integer constant"       shift, and go to state 374
    "unsigned long integer constant"  shift, and go to state 375
    "floating point constant"         shift, and go to state 376
    "double constant"                 shift, and go to state 377
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 378
    '-'                               shift, and go to state 379
    '+'                               shift, and go to state 380
    '*'                               shift, and go to state 381
    '%'                               shift, and go to state 382
    '~'                               shift, and go to state 383
    '!'                               shift, and go to state 384
    '('                               shift, and go to state 385
    '$'                               shift, and go to state 386
    '@'                               shift, and go to state 387
    '{'                               shift, and go to state 313

    string_builder          go to state 388
    expr_reader             go to state 389
    expression_block        go to state 390
    name_in_namespace       go to state 391
    expr_new                go to state 392
    expr_cast               go to state 393
    expr_type_decl          go to state 394
    expr_type_info          go to state 395
    block_or_lambda         go to state 396
    expr_block              go to state 397
    expr_numeric_const      go to state 398
    expr_named_call         go to state 399
    expr_method_call        go to state 400
    func_addr_expr          go to state 401
    expr_field              go to state 402
    expr                    go to state 1180
    expr_mtag               go to state 404
    basic_type_declaration  go to state 405
    make_decl               go to state 406
    make_struct_decl        go to state 407
    make_dim_decl           go to state 408
    make_table_decl         go to state 409
    array_comprehension     go to state 410


State 1172

  243 expression_yield_no_pipe: "yield" expr .
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 243 (expression_yield_no_pipe)


State 1173

  446 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" $@29 function_declaration_header ';' .

    $default  reduce using rule 446 (struct_variable_declaration_list)


State 1174

  448 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant $@30 function_declaration_header . expression_block

    '{'  shift, and go to state 313

    expression_block  go to state 1181


State 1175

  266 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')' .

    $default  reduce using rule 266 (expr_type_info)


State 1176

  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'
  667 array_comprehension_where: ';' "where" expr .

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 667 (array_comprehension_where)


State 1177

  668 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']' .

    $default  reduce using rule 668 (array_comprehension)


State 1178

  669 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']' .

    $default  reduce using rule 669 (array_comprehension)


State 1179

  239 expression_return_no_pipe: "return" "<-" expr .
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 239 (expression_return_no_pipe)


State 1180

  244 expression_yield_no_pipe: "yield" "<-" expr .
  315 expr_method_call: expr . "->" "name" '(' ')'
  316                 | expr . "->" "name" '(' expr_list ')'
  326 expr_field: expr . '.' "name"
  327           | expr . '.' '.' "name"
  330           | expr . '.' $@20 error $@21
  345 expr: expr . "<<" expr
  346     | expr . ">>" expr
  347     | expr . "<<<" expr
  348     | expr . ">>>" expr
  349     | expr . '+' expr
  350     | expr . '-' expr
  351     | expr . '*' expr
  352     | expr . '/' expr
  353     | expr . '%' expr
  354     | expr . '<' expr
  355     | expr . '>' expr
  356     | expr . "==" expr
  357     | expr . "!=" expr
  358     | expr . "<=" expr
  359     | expr . ">=" expr
  360     | expr . '&' expr
  361     | expr . '|' expr
  362     | expr . '^' expr
  363     | expr . "&&" expr
  364     | expr . "||" expr
  365     | expr . "^^" expr
  366     | expr . ".." expr
  369     | expr . "++"
  370     | expr . "--"
  372     | expr . '[' expr ']'
  373     | expr . '.' '[' expr ']'
  374     | expr . "?[" expr ']'
  375     | expr . '.' "?[" expr ']'
  376     | expr . "?." "name"
  377     | expr . '.' "?." "name"
  388     | expr . "??" expr
  389     | expr . '?' expr ':' expr
  392     | expr . "is" "type" '<' $@22 type_declaration_no_options '>' $@23
  393     | expr . "is" basic_type_declaration
  394     | expr . "is" "name"
  395     | expr . "as" "name"
  398     | expr . "as" "type" '<' $@24 type_declaration '>' $@25
  399     | expr . "as" basic_type_declaration
  400     | expr . '?' "as" "name"
  403     | expr . '?' "as" "type" '<' $@26 type_declaration '>' $@27
  404     | expr . '?' "as" basic_type_declaration
  412     | expr . "<|" expr
  413     | expr . "|>" expr
  423 expr_mtag: expr . '.' "$f" '(' expr ')'
  424          | expr . "?." "$f" '(' expr ')'
  425          | expr . '.' '.' "$f" '(' expr ')'
  426          | expr . '.' "?." "$f" '(' expr ')'
  427          | expr . "as" "$f" '(' expr ')'
  428          | expr . '?' "as" "$f" '(' expr ')'
  429          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 507
    "as"   shift, and go to state 508
    "<<"   shift, and go to state 509
    ">>"   shift, and go to state 510
    "++"   shift, and go to state 511
    "--"   shift, and go to state 512
    "<="   shift, and go to state 513
    ">="   shift, and go to state 514
    "=="   shift, and go to state 515
    "!="   shift, and go to state 516
    "->"   shift, and go to state 517
    "??"   shift, and go to state 518
    "?."   shift, and go to state 519
    "?["   shift, and go to state 520
    "<|"   shift, and go to state 521
    "|>"   shift, and go to state 522
    "<<<"  shift, and go to state 523
    ">>>"  shift, and go to state 524
    "&&"   shift, and go to state 525
    "||"   shift, and go to state 526
    "^^"   shift, and go to state 527
    ".."   shift, and go to state 528
    '?'    shift, and go to state 529
    '|'    shift, and go to state 530
    '^'    shift, and go to state 531
    '&'    shift, and go to state 532
    '<'    shift, and go to state 533
    '>'    shift, and go to state 534
    '-'    shift, and go to state 535
    '+'    shift, and go to state 536
    '*'    shift, and go to state 537
    '/'    shift, and go to state 538
    '%'    shift, and go to state 539
    '.'    shift, and go to state 540
    '['    shift, and go to state 541

    $default  reduce using rule 244 (expression_yield_no_pipe)


State 1181

  448 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant $@30 function_declaration_header expression_block .

    $default  reduce using rule 448 (struct_variable_declaration_list)

Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 59 conflicts: 1 shift/reduce
State 313 conflicts: 1 shift/reduce
State 515 conflicts: 2 shift/reduce
State 622 conflicts: 1 shift/reduce
State 900 conflicts: 2 shift/reduce
State 993 conflicts: 1 shift/reduce
State 1078 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program ';'

   16 top_level_reader_macro: expr_reader ';'

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"

   28 string_builder_body: %empty
   29                    | string_builder_body character_sequence
   30                    | string_builder_body "{" expr "}"

   31 string_builder: "start of the string" string_builder_body "end of the string"

   32 reader_character_sequence: STRING_CHARACTER
   33                          | reader_character_sequence STRING_CHARACTER

   34 $@1: %empty

   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   36 options_declaration: "options" annotation_argument_list

   37 require_declaration: "require" require_module

   38 keyword_or_name: "name"
   39                | "keyword"
   40                | "type function"

   41 require_module_name: keyword_or_name
   42                    | '%' require_module_name
   43                    | require_module_name '.' keyword_or_name
   44                    | require_module_name '/' keyword_or_name

   45 require_module: require_module_name is_public_module
   46               | require_module_name "as" "name" is_public_module

   47 is_public_module: %empty
   48                 | "public"

   49 expect_declaration: "expect" expect_list

   50 expect_list: expect_error
   51            | expect_list ',' expect_error

   52 expect_error: "integer constant"
   53             | "integer constant" ':' "integer constant"

   54 expression_label: "label" "integer constant" ':'

   55 expression_goto: "goto" "label" "integer constant"
   56                | "goto" expr

   57 elif_or_static_elif: "elif"
   58                    | "static_elif"

   59 expression_else: %empty
   60                | "else" expression_block
   61                | elif_or_static_elif expr expression_block expression_else

   62 if_or_static_if: "if"
   63                | "static_if"

   64 expression_else_one_liner: %empty

   65 $@2: %empty

   66 expression_else_one_liner: "else" $@2 expression_if_one_liner

   67 expression_if_one_liner: expr
   68                        | expression_return_no_pipe
   69                        | expression_yield_no_pipe
   70                        | expression_break
   71                        | expression_continue

   72 expression_if_then_else: if_or_static_if expr expression_block expression_else

   73 $@3: %empty

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner ';'

   75 $@4: %empty

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list expression_block

   77 expression_unsafe: "unsafe" expression_block

   78 expression_while_loop: "while" expr expression_block

   79 expression_with: "with" expr expression_block

   80 $@5: %empty

   81 expression_with_alias: "assume" "name" '=' $@5 expr

   82 annotation_argument_value: string_constant
   83                          | "name"
   84                          | "integer constant"
   85                          | "floating point constant"
   86                          | "true"
   87                          | "false"

   88 annotation_argument_value_list: annotation_argument_value
   89                               | annotation_argument_value_list ',' annotation_argument_value

   90 annotation_argument_name: "name"
   91                         | "type"
   92                         | "in"

   93 annotation_argument: annotation_argument_name '=' string_constant
   94                    | annotation_argument_name '=' "name"
   95                    | annotation_argument_name '=' "integer constant"
   96                    | annotation_argument_name '=' "floating point constant"
   97                    | annotation_argument_name '=' "true"
   98                    | annotation_argument_name '=' "false"
   99                    | annotation_argument_name
  100                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  101 annotation_argument_list: annotation_argument
  102                         | annotation_argument_list ',' annotation_argument

  103 annotation_declaration_name: name_in_namespace
  104                            | "require"
  105                            | "private"

  106 annotation_declaration_basic: annotation_declaration_name
  107                             | annotation_declaration_name '(' annotation_argument_list ')'

  108 annotation_declaration: annotation_declaration_basic
  109                       | '!' annotation_declaration
  110                       | annotation_declaration "&&" annotation_declaration
  111                       | annotation_declaration "||" annotation_declaration
  112                       | annotation_declaration "^^" annotation_declaration
  113                       | '(' annotation_declaration ')'
  114                       | "|>" annotation_declaration

  115 annotation_list: annotation_declaration
  116                | annotation_list ',' annotation_declaration

  117 optional_annotation_list: %empty
  118                         | '[' annotation_list ']'

  119 optional_function_argument_list: %empty
  120                                | '(' ')'
  121                                | '(' function_argument_list ')'

  122 optional_function_type: %empty
  123                       | ':' type_declaration

  124 function_name: "name"
  125              | "operator" '!'
  126              | "operator" '~'
  127              | "operator" "+="
  128              | "operator" "-="
  129              | "operator" "*="
  130              | "operator" "/="
  131              | "operator" "%="
  132              | "operator" "&="
  133              | "operator" "|="
  134              | "operator" "^="
  135              | "operator" "&&="
  136              | "operator" "||="
  137              | "operator" "^^="
  138              | "operator" "&&"
  139              | "operator" "||"
  140              | "operator" "^^"
  141              | "operator" '+'
  142              | "operator" '-'
  143              | "operator" '*'
  144              | "operator" '/'
  145              | "operator" '%'
  146              | "operator" '<'
  147              | "operator" '>'
  148              | "operator" ".."
  149              | "operator" "=="
  150              | "operator" "!="
  151              | "operator" "<="
  152              | "operator" ">="
  153              | "operator" '&'
  154              | "operator" '|'
  155              | "operator" '^'
  156              | "++" "operator"
  157              | "--" "operator"
  158              | "operator" "++"
  159              | "operator" "--"
  160              | "operator" "<<"
  161              | "operator" ">>"
  162              | "operator" "<<="
  163              | "operator" ">>="
  164              | "operator" "<<<"
  165              | "operator" ">>>"
  166              | "operator" "<<<="
  167              | "operator" ">>>="
  168              | "operator" '[' ']'
  169              | "operator" "?[" ']'
  170              | "operator" '.'
  171              | "operator" "?."
  172              | "operator" '.' "name"
  173              | "operator" '.' "name" ":="
  174              | "operator" "?." "name"
  175              | "operator" ":="
  176              | "operator" "delete"
  177              | "operator" "??"
  178              | "operator" "is"
  179              | "operator" "as"
  180              | "operator" "is" "name"
  181              | "operator" "as" "name"
  182              | "operator" '?' "as"
  183              | "operator" '?' "as" "name"
  184              | "bool"
  185              | "string"
  186              | "int"
  187              | "int2"
  188              | "int3"
  189              | "int4"
  190              | "uint"
  191              | "uint2"
  192              | "uint3"
  193              | "uint4"
  194              | "float"
  195              | "float2"
  196              | "float3"
  197              | "float4"
  198              | "range"
  199              | "urange"
  200              | "range64"
  201              | "urange64"
  202              | "int64"
  203              | "uint64"
  204              | "double"
  205              | "int8"
  206              | "uint8"
  207              | "int16"
  208              | "uint16"

  209 global_function_declaration: optional_annotation_list "def" function_declaration

  210 optional_public_or_private_function: %empty
  211                                    | "private"
  212                                    | "public"

  213 function_declaration_header: function_name optional_function_argument_list optional_function_type

  214 $@6: %empty

  215 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block

  216 expression_block: '{' expressions '}'
  217                 | '{' expressions '}' "finally" '{' expressions '}'

  218 expression_any: ';'
  219               | expr_pipe
  220               | expr_keyword
  221               | expr_assign_pipe
  222               | expr_assign ';'
  223               | expression_delete ';'
  224               | expression_let
  225               | expression_while_loop
  226               | expression_unsafe
  227               | expression_with
  228               | expression_with_alias
  229               | expression_for_loop
  230               | expression_break ';'
  231               | expression_continue ';'
  232               | expression_return
  233               | expression_yield
  234               | expression_if_then_else
  235               | expression_try_catch
  236               | expression_label ';'
  237               | expression_goto ';'
  238               | "pass" ';'

  239 expressions: %empty
  240            | expressions expression_any
  241            | expressions error

  242 expr_keyword: "keyword" expr expression_block

  243 optional_expr_list: %empty
  244                   | expr_list

  245 $@7: %empty

  246 $@8: %empty

  247 expression_keyword: "keyword" '<' $@7 type_declaration_no_options '>' $@8 expr

  248 $@9: %empty

  249 $@10: %empty

  250 expression_keyword: "type function" '<' $@9 type_declaration_no_options '>' $@10 '(' optional_expr_list ')'

  251 expr_pipe: expr_assign " <|" expr_block
  252          | "@ <|" expr_block
  253          | "@@ <|" expr_block
  254          | "$ <|" expr_block

  255 name_in_namespace: "name"
  256                  | "name" "::" "name"
  257                  | "::" "name"

  258 expression_delete: "delete" expr
  259                  | "delete" "explicit" expr

  260 $@11: %empty

  261 $@12: %empty

  262 new_type_declaration: '<' $@11 type_declaration '>' $@12
  263                     | structure_type_declaration

  264 expr_new: "new" new_type_declaration
  265         | "new" new_type_declaration '(' ')'
  266         | "new" new_type_declaration '(' expr_list ')'
  267         | "new" new_type_declaration '(' make_struct_dim ')'
  268         | "new" make_decl

  269 expression_break: "break"

  270 expression_continue: "continue"

  271 expression_return_no_pipe: "return"
  272                          | "return" expr_list
  273                          | "return" "<-" expr_list

  274 expression_return: expression_return_no_pipe ';'
  275                  | "return" expr_pipe
  276                  | "return" "<-" expr_pipe

  277 expression_yield_no_pipe: "yield" expr
  278                         | "yield" "<-" expr

  279 expression_yield: expression_yield_no_pipe ';'
  280                 | "yield" expr_pipe
  281                 | "yield" "<-" expr_pipe

  282 expression_try_catch: "try" expression_block "recover" expression_block

  283 kwd_let: "let"
  284        | "var"

  285 optional_in_scope: "inscope"
  286                  | %empty

  287 tuple_expansion: "name"
  288                | tuple_expansion ',' "name"

  289 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  290                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr ';'

  291 expression_let: kwd_let optional_in_scope let_variable_declaration
  292               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  293 $@13: %empty

  294 $@14: %empty

  295 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr

  296 $@15: %empty

  297 $@16: %empty

  298 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr

  299 $@17: %empty

  300 $@18: %empty

  301 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr

  302 $@19: %empty

  303 $@20: %empty

  304 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20

  305 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  306               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  307               | "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

  308 expr_list: expr
  309          | expr_list ',' expr

  310 block_or_simple_block: expression_block
  311                      | "=>" expr
  312                      | "=>" "<-" expr

  313 block_or_lambda: '$'
  314                | '@'
  315                | '@' '@'

  316 capture_entry: '&' "name"
  317              | '=' "name"
  318              | "<-" "name"
  319              | ":=" "name"

  320 capture_list: capture_entry
  321             | capture_list ',' capture_entry

  322 optional_capture_list: %empty
  323                      | "[[" capture_list ']' ']'

  324 expr_block: expression_block
  325           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  326 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  327 expr_numeric_const: "integer constant"
  328                   | "unsigned integer constant"
  329                   | "long integer constant"
  330                   | "unsigned long integer constant"
  331                   | "unsigned int8 constant"
  332                   | "floating point constant"
  333                   | "double constant"

  334 expr_assign: expr
  335            | expr '=' expr
  336            | expr "<-" expr
  337            | expr ":=" expr
  338            | expr "&=" expr
  339            | expr "|=" expr
  340            | expr "^=" expr
  341            | expr "&&=" expr
  342            | expr "||=" expr
  343            | expr "^^=" expr
  344            | expr "+=" expr
  345            | expr "-=" expr
  346            | expr "*=" expr
  347            | expr "/=" expr
  348            | expr "%=" expr
  349            | expr "<<=" expr
  350            | expr ">>=" expr
  351            | expr "<<<=" expr
  352            | expr ">>>=" expr

  353 expr_assign_pipe: expr '=' "@ <|" expr_block
  354                 | expr '=' "@@ <|" expr_block
  355                 | expr '=' "$ <|" expr_block
  356                 | expr "<-" "@ <|" expr_block
  357                 | expr "<-" "@@ <|" expr_block
  358                 | expr "<-" "$ <|" expr_block

  359 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  360                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  361 expr_method_call: expr "->" "name" '(' ')'
  362                 | expr "->" "name" '(' expr_list ')'

  363 func_addr_name: name_in_namespace
  364               | "$i" '(' expr ')'

  365 func_addr_expr: '@' '@' func_addr_name

  366 $@21: %empty

  367 $@22: %empty

  368 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options '>' $@22 func_addr_name

  369 $@23: %empty

  370 $@24: %empty

  371 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name

  372 expr_field: expr '.' "name"
  373           | expr '.' '.' "name"
  374           | expr '.' "name" '(' ')'
  375           | expr '.' "name" '(' expr_list ')'

  376 $@25: %empty

  377 $@26: %empty

  378 expr_field: expr '.' $@25 error $@26

  379 expr: "null"
  380     | name_in_namespace
  381     | expr_numeric_const
  382     | expr_reader
  383     | string_builder
  384     | make_decl
  385     | "true"
  386     | "false"
  387     | expr_field
  388     | expr_mtag
  389     | '!' expr
  390     | '~' expr
  391     | '+' expr
  392     | '-' expr
  393     | expr "<<" expr
  394     | expr ">>" expr
  395     | expr "<<<" expr
  396     | expr ">>>" expr
  397     | expr '+' expr
  398     | expr '-' expr
  399     | expr '*' expr
  400     | expr '/' expr
  401     | expr '%' expr
  402     | expr '<' expr
  403     | expr '>' expr
  404     | expr "==" expr
  405     | expr "!=" expr
  406     | expr "<=" expr
  407     | expr ">=" expr
  408     | expr '&' expr
  409     | expr '|' expr
  410     | expr '^' expr
  411     | expr "&&" expr
  412     | expr "||" expr
  413     | expr "^^" expr
  414     | expr ".." expr
  415     | "++" expr
  416     | "--" expr
  417     | expr "++"
  418     | expr "--"
  419     | '(' expr_list optional_comma ')'
  420     | expr '[' expr ']'
  421     | expr '.' '[' expr ']'
  422     | expr "?[" expr ']'
  423     | expr '.' "?[" expr ']'
  424     | expr "?." "name"
  425     | expr '.' "?." "name"
  426     | func_addr_expr
  427     | name_in_namespace '(' ')'
  428     | name_in_namespace '(' make_struct_dim ')'
  429     | name_in_namespace '(' expr_list ')'
  430     | basic_type_declaration '(' ')'
  431     | basic_type_declaration '(' expr_list ')'
  432     | '*' expr
  433     | "deref" '(' expr ')'
  434     | "addr" '(' expr ')'
  435     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  436     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  437     | expr "??" expr
  438     | expr '?' expr ':' expr

  439 $@27: %empty

  440 $@28: %empty

  441 expr: expr "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr "is" basic_type_declaration
  443     | expr "is" "name"
  444     | expr "as" "name"

  445 $@29: %empty

  446 $@30: %empty

  447 expr: expr "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr "as" basic_type_declaration
  449     | expr '?' "as" "name"

  450 $@31: %empty

  451 $@32: %empty

  452 expr: expr '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr '?' "as" basic_type_declaration
  454     | expr_type_info
  455     | expr_type_decl
  456     | expr_cast
  457     | expr_new
  458     | expr_method_call
  459     | expr_named_call
  460     | expr_full_block
  461     | expr "<|" expr
  462     | expr "|>" expr
  463     | expr "|>" basic_type_declaration
  464     | name_in_namespace "name"
  465     | "unsafe" '(' expr ')'
  466     | expression_keyword

  467 expr_mtag: "$$" '(' expr ')'
  468          | "$i" '(' expr ')'
  469          | "$v" '(' expr ')'
  470          | "$b" '(' expr ')'
  471          | "$a" '(' expr ')'
  472          | "..."
  473          | "$c" '(' expr ')' '(' ')'
  474          | "$c" '(' expr ')' '(' expr_list ')'
  475          | expr '.' "$f" '(' expr ')'
  476          | expr "?." "$f" '(' expr ')'
  477          | expr '.' '.' "$f" '(' expr ')'
  478          | expr '.' "?." "$f" '(' expr ')'
  479          | expr "as" "$f" '(' expr ')'
  480          | expr '?' "as" "$f" '(' expr ')'
  481          | expr "is" "$f" '(' expr ')'
  482          | '@' '@' "$c" '(' expr ')'

  483 optional_field_annotation: %empty
  484                          | "[[" annotation_argument_list ']' ']'

  485 optional_override: %empty
  486                  | "override"
  487                  | "sealed"

  488 optional_constant: %empty
  489                  | "const"

  490 optional_public_or_private_member_variable: %empty
  491                                           | "public"
  492                                           | "private"

  493 optional_static_member_variable: %empty
  494                                | "static"

  495 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  496 struct_variable_declaration_list: %empty

  497 $@33: %empty

  498 struct_variable_declaration_list: struct_variable_declaration_list $@33 structure_variable_declaration ';'

  499 $@34: %empty

  500 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header ';'

  501 $@35: %empty

  502 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block
  503                                 | struct_variable_declaration_list '[' annotation_list ']' ';'

  504 function_argument_declaration: optional_field_annotation variable_declaration
  505                              | optional_field_annotation "var" variable_declaration
  506                              | "$a" '(' expr ')'

  507 function_argument_list: function_argument_declaration
  508                       | function_argument_list ';' function_argument_declaration

  509 tuple_type: type_declaration
  510           | "name" ':' type_declaration

  511 tuple_type_list: tuple_type
  512                | tuple_type_list ';' tuple_type

  513 tuple_alias_type_list: %empty
  514                      | tuple_alias_type_list ';'
  515                      | tuple_alias_type_list tuple_type ';'

  516 variant_type: "name" ':' type_declaration

  517 variant_type_list: variant_type
  518                  | variant_type_list ';' variant_type

  519 variant_alias_type_list: %empty
  520                        | variant_alias_type_list ';'
  521                        | variant_alias_type_list variant_type ';'

  522 copy_or_move: '='
  523             | "<-"

  524 variable_declaration: variable_name_with_pos_list
  525                     | variable_name_with_pos_list '&'
  526                     | variable_name_with_pos_list ':' type_declaration
  527                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  528                     | variable_name_with_pos_list copy_or_move expr
  529                     | variable_name_with_pos_list copy_or_move expr_pipe

  530 copy_or_move_or_clone: '='
  531                      | "<-"
  532                      | ":="

  533 optional_ref: %empty
  534             | '&'

  535 let_variable_name_with_pos_list: "name"
  536                                | "$i" '(' expr ')'
  537                                | "name" "aka" "name"
  538                                | let_variable_name_with_pos_list ',' "name"
  539                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  540 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options ';'
  541                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  542                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  543                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';'
  544                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  545 global_variable_declaration_list: %empty

  546 $@36: %empty

  547 global_variable_declaration_list: global_variable_declaration_list $@36 optional_field_annotation let_variable_declaration

  548 optional_shared: %empty
  549                | "shared"

  550 optional_public_or_private_variable: %empty
  551                                    | "private"
  552                                    | "public"

  553 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'

  554 $@37: %empty

  555 global_let: kwd_let optional_shared optional_public_or_private_variable $@37 optional_field_annotation let_variable_declaration

  556 enum_list: %empty
  557          | enum_list ';'
  558          | enum_list "name" ';'
  559          | enum_list "name" '=' expr ';'

  560 optional_public_or_private_alias: %empty
  561                                 | "private"
  562                                 | "public"

  563 $@38: %empty

  564 single_alias: optional_public_or_private_alias "name" $@38 '=' type_declaration

  565 alias_list: single_alias ';'
  566           | alias_list single_alias ';'

  567 alias_declaration: "typedef" '{' alias_list '}'

  568 $@39: %empty

  569 alias_declaration: "typedef" $@39 single_alias ';'

  570 optional_public_or_private_enum: %empty
  571                                | "private"
  572                                | "public"

  573 enum_name: "name"

  574 $@40: %empty

  575 $@41: %empty

  576 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@40 enum_list $@41 '}'

  577 $@42: %empty

  578 $@43: %empty

  579 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@42 enum_list $@43 '}'

  580 optional_structure_parent: %empty
  581                          | ':' name_in_namespace

  582 optional_sealed: %empty
  583                | "sealed"

  584 structure_name: optional_sealed "name" optional_structure_parent

  585 class_or_struct: "class"
  586                | "struct"

  587 optional_public_or_private_structure: %empty
  588                                     | "private"
  589                                     | "public"

  590 optional_struct_variable_declaration_list: %empty
  591                                          | '{' struct_variable_declaration_list '}'

  592 $@44: %empty

  593 $@45: %empty

  594 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@44 structure_name $@45 optional_struct_variable_declaration_list

  595 variable_name_with_pos_list: "name"
  596                            | "$i" '(' expr ')'
  597                            | "name" "aka" "name"
  598                            | variable_name_with_pos_list ',' "name"
  599                            | variable_name_with_pos_list ',' "name" "aka" "name"

  600 basic_type_declaration: "bool"
  601                       | "string"
  602                       | "int"
  603                       | "int8"
  604                       | "int16"
  605                       | "int64"
  606                       | "int2"
  607                       | "int3"
  608                       | "int4"
  609                       | "uint"
  610                       | "uint8"
  611                       | "uint16"
  612                       | "uint64"
  613                       | "uint2"
  614                       | "uint3"
  615                       | "uint4"
  616                       | "float"
  617                       | "float2"
  618                       | "float3"
  619                       | "float4"
  620                       | "void"
  621                       | "range"
  622                       | "urange"
  623                       | "range64"
  624                       | "urange64"
  625                       | "double"
  626                       | "bitfield"

  627 enum_basic_type_declaration: "int"
  628                            | "int8"
  629                            | "int16"
  630                            | "uint"
  631                            | "uint8"
  632                            | "uint16"

  633 structure_type_declaration: name_in_namespace

  634 auto_type_declaration: "auto"
  635                      | "auto" '(' "name" ')'
  636                      | "$t" '(' expr ')'

  637 bitfield_bits: "name"
  638              | bitfield_bits ';' "name"

  639 bitfield_alias_bits: %empty
  640                    | bitfield_alias_bits ';'
  641                    | bitfield_alias_bits "name" ';'

  642 $@46: %empty

  643 $@47: %empty

  644 bitfield_type_declaration: "bitfield" '<' $@46 bitfield_bits '>' $@47

  645 table_type_pair: type_declaration
  646                | type_declaration ';' type_declaration

  647 type_declaration_no_options: basic_type_declaration
  648                            | auto_type_declaration
  649                            | bitfield_type_declaration
  650                            | structure_type_declaration
  651                            | type_declaration_no_options '[' expr ']'
  652                            | type_declaration_no_options '[' ']'

  653 $@48: %empty

  654 $@49: %empty

  655 type_declaration_no_options: "type" '<' $@48 type_declaration '>' $@49
  656                            | "typedecl" '(' expr ')'
  657                            | '$' name_in_namespace '(' optional_expr_list ')'
  658                            | type_declaration_no_options '-' '[' ']'
  659                            | type_declaration_no_options "explicit"
  660                            | type_declaration_no_options "const"
  661                            | type_declaration_no_options '-' "const"
  662                            | type_declaration_no_options '&'
  663                            | type_declaration_no_options '-' '&'
  664                            | type_declaration_no_options '#'
  665                            | type_declaration_no_options "implicit"
  666                            | type_declaration_no_options '-' '#'
  667                            | type_declaration_no_options "==" "const"
  668                            | type_declaration_no_options "==" '&'
  669                            | type_declaration_no_options '?'

  670 $@50: %empty

  671 $@51: %empty

  672 type_declaration_no_options: "smart_ptr" '<' $@50 type_declaration '>' $@51
  673                            | type_declaration_no_options "??"

  674 $@52: %empty

  675 $@53: %empty

  676 type_declaration_no_options: "array" '<' $@52 type_declaration '>' $@53

  677 $@54: %empty

  678 $@55: %empty

  679 type_declaration_no_options: "table" '<' $@54 table_type_pair '>' $@55

  680 $@56: %empty

  681 $@57: %empty

  682 type_declaration_no_options: "iterator" '<' $@56 type_declaration '>' $@57
  683                            | "block"

  684 $@58: %empty

  685 $@59: %empty

  686 type_declaration_no_options: "block" '<' $@58 type_declaration '>' $@59

  687 $@60: %empty

  688 $@61: %empty

  689 type_declaration_no_options: "block" '<' $@60 optional_function_argument_list optional_function_type '>' $@61
  690                            | "function"

  691 $@62: %empty

  692 $@63: %empty

  693 type_declaration_no_options: "function" '<' $@62 type_declaration '>' $@63

  694 $@64: %empty

  695 $@65: %empty

  696 type_declaration_no_options: "function" '<' $@64 optional_function_argument_list optional_function_type '>' $@65
  697                            | "lambda"

  698 $@66: %empty

  699 $@67: %empty

  700 type_declaration_no_options: "lambda" '<' $@66 type_declaration '>' $@67

  701 $@68: %empty

  702 $@69: %empty

  703 type_declaration_no_options: "lambda" '<' $@68 optional_function_argument_list optional_function_type '>' $@69

  704 $@70: %empty

  705 $@71: %empty

  706 type_declaration_no_options: "tuple" '<' $@70 tuple_type_list '>' $@71

  707 $@72: %empty

  708 $@73: %empty

  709 type_declaration_no_options: "variant" '<' $@72 variant_type_list '>' $@73

  710 type_declaration: type_declaration_no_options
  711                 | type_declaration '|' type_declaration_no_options
  712                 | type_declaration '|' '#'

  713 $@74: %empty

  714 $@75: %empty

  715 $@76: %empty

  716 $@77: %empty

  717 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@74 "name" $@75 '{' $@76 tuple_alias_type_list $@77 '}'

  718 $@78: %empty

  719 $@79: %empty

  720 $@80: %empty

  721 $@81: %empty

  722 variant_alias_declaration: "variant" optional_public_or_private_alias $@78 "name" $@79 '{' $@80 variant_alias_type_list $@81 '}'

  723 $@82: %empty

  724 $@83: %empty

  725 $@84: %empty

  726 $@85: %empty

  727 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@82 "name" $@83 '{' $@84 bitfield_alias_bits $@85 '}'

  728 make_decl: make_struct_decl
  729          | make_dim_decl
  730          | make_table_decl
  731          | array_comprehension
  732          | make_tuple_call

  733 make_struct_fields: "name" copy_or_move expr
  734                   | "name" ":=" expr
  735                   | make_struct_fields ',' "name" copy_or_move expr
  736                   | make_struct_fields ',' "name" ":=" expr
  737                   | "$f" '(' expr ')' copy_or_move expr
  738                   | "$f" '(' expr ')' ":=" expr
  739                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  740                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  741 make_struct_dim: make_struct_fields
  742                | make_struct_dim ';' make_struct_fields

  743 optional_block: %empty
  744               | "where" expr_block

  745 optional_trailing_semicolon_cur_cur: '}' '}'
  746                                    | ";}}"

  747 optional_trailing_semicolon_cur_sqr: '}' ']'
  748                                    | ";}]"

  749 optional_trailing_semicolon_sqr_sqr: ']' ']'
  750                                    | ";]]"

  751 optional_trailing_delim_sqr_sqr: ']' ']'
  752                                | ";]]"
  753                                | ",]]"

  754 optional_trailing_delim_cur_sqr: '}' ']'
  755                                | ";}]"
  756                                | ",}]"

  757 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  758                 | "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  759                 | "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  760                 | "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  761                 | "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  762                 | "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

  763 $@86: %empty

  764 $@87: %empty

  765 make_struct_decl: "struct" '<' $@86 type_declaration_no_options '>' $@87 '(' make_struct_dim ')'

  766 $@88: %empty

  767 $@89: %empty

  768 make_struct_decl: "class" '<' $@88 type_declaration_no_options '>' $@89 '(' make_struct_dim ')'

  769 $@90: %empty

  770 $@91: %empty

  771 make_struct_decl: "variant" '<' $@90 type_declaration_no_options '>' $@91 '(' make_struct_dim ')'

  772 $@92: %empty

  773 $@93: %empty

  774 make_struct_decl: "default" '<' $@92 type_declaration_no_options '>' $@93

  775 make_tuple: expr
  776           | expr "=>" expr
  777           | make_tuple ',' expr

  778 make_map_tuple: expr "=>" expr
  779               | expr

  780 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  781 $@94: %empty

  782 $@95: %empty

  783 make_tuple_call: "tuple" '<' $@94 type_declaration_no_options '>' $@95 '(' make_struct_dim ')'

  784 make_dim: make_tuple
  785         | make_dim ';' make_tuple

  786 make_dim_decl: '[' expr_list optional_comma ']'
  787              | "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  788              | "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  789              | "array" '(' expr_list optional_comma ')'

  790 $@96: %empty

  791 $@97: %empty

  792 make_dim_decl: "array" '<' $@96 type_declaration_no_options '>' $@97 '(' expr_list optional_comma ')'
  793              | "fixed_array" '(' expr_list optional_comma ')'

  794 $@98: %empty

  795 $@99: %empty

  796 make_dim_decl: "fixed_array" '<' $@98 type_declaration_no_options '>' $@99 '(' expr_list optional_comma ')'

  797 make_table: make_map_tuple
  798           | make_table ';' make_map_tuple

  799 expr_map_tuple_list: make_map_tuple
  800                    | expr_map_tuple_list ',' make_map_tuple

  801 make_table_decl: '{' expr_map_tuple_list optional_comma '}'
  802                | "{{" make_table optional_trailing_semicolon_cur_cur
  803                | "table" '(' expr_map_tuple_list optional_comma ')'
  804                | "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  805                | "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

  806 array_comprehension_where: %empty
  807                          | ';' "where" expr

  808 optional_comma: %empty
  809               | ','

  810 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'
  811                    | "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'
  812                    | "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'
  813                    | '{' "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}'
  814                    | "{{" "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}' '}'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 109 125 389
    '#' (35) 664 666 712
    '$' (36) 20 313 657
    '%' (37) 35 42 145 401
    '&' (38) 153 316 408 525 534 662 663 668
    '(' (40) 100 107 113 120 121 250 265 266 267 305 306 307 359 360 361 362 364 374 375 419 427 428 429 430 431 433 434 435 436 465 467 468 469 470 471 473 474 475 476 477 478 479 480 481 482 506 536 596 635 636 656 657 737 738 739 740 759 760 762 765 768 771 780 783 789 792 793 796 803 804 805
    ')' (41) 100 107 113 120 121 250 265 266 267 305 306 307 359 360 361 362 364 374 375 419 427 428 429 430 431 433 434 435 436 465 467 468 469 470 471 473 474 475 476 477 478 479 480 481 482 506 536 596 635 636 656 657 737 738 739 740 759 760 762 765 768 771 780 783 789 792 793 796 803 804 805
    '*' (42) 143 399 432
    '+' (43) 141 391 397
    ',' (44) 51 89 102 116 288 309 321 360 538 539 598 599 735 736 739 740 777 800 809
    '-' (45) 142 392 398 658 661 663 666
    '.' (46) 43 170 172 173 372 373 374 375 378 421 423 425 475 477 478
    '/' (47) 44 144 400
    ':' (58) 53 54 123 289 438 510 516 526 527 540 541 542 579 581
    ';' (59) 15 16 74 218 222 223 230 231 236 237 238 274 279 289 290 307 498 500 503 508 512 514 515 518 520 521 540 541 543 557 558 559 565 566 569 638 640 641 646 742 785 798 805 807 810 811 812 813 814
    '<' (60) 146 247 250 262 295 298 301 304 306 307 368 371 402 435 436 441 447 452 644 655 672 676 679 682 686 689 693 696 700 703 706 709 765 768 771 774 783 792 796 804 805
    '=' (61) 81 93 94 95 96 97 98 100 317 335 353 354 355 522 530 559 564
    '>' (62) 147 247 250 262 295 298 301 304 306 307 368 371 403 435 436 441 447 452 644 655 672 676 679 682 686 689 693 696 700 703 706 709 765 768 771 774 783 792 796 804 805
    '?' (63) 182 183 438 449 452 453 480 669
    '@' (64) 314 315 365 368 371 482
    '[' (91) 118 168 359 360 420 421 503 651 652 658 786 810
    ']' (93) 118 168 169 289 290 323 359 360 420 421 422 423 484 503 651 652 658 747 749 751 754 786 810 811 812
    '^' (94) 155 410
    '{' (123) 216 217 553 567 576 579 591 717 722 727 801 813
    '|' (124) 154 409 711 712
    '}' (125) 216 217 553 567 576 579 591 717 722 727 745 747 754 801 812 813 814
    '~' (126) 126 390
    error (256) 241 378
    "lexer error" (258)
    "struct" (259) 586 765
    "class" (260) 585 768
    "let" (261) 283
    "def" (262) 209 500 502
    "while" (263) 78
    "if" (264) 62 74
    "static_if" (265) 63
    "else" (266) 60 66
    "for" (267) 76 810 811 812 813 814
    "recover" (268) 282
    "true" (269) 86 97 385
    "false" (270) 87 98 386
    "new" (271) 264 265 266 267 268
    "typeinfo" (272) 305 306 307
    "type" (273) 91 304 441 447 452 655
    "in" (274) 76 92 810 811 812 813 814
    "is" (275) 178 180 441 442 443 481
    "as" (276) 46 179 181 182 183 444 447 448 449 452 453 479 480
    "elif" (277) 57
    "static_elif" (278) 58
    "array" (279) 676 789 792
    "return" (280) 271 272 273 275 276
    "null" (281) 379
    "break" (282) 269
    "try" (283) 282
    "options" (284) 36
    "table" (285) 679 803 804 805
    "expect" (286) 49
    "const" (287) 489 660 661 667
    "require" (288) 37 104
    "operator" (289) 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183
    "enum" (290) 576 579
    "finally" (291) 217
    "delete" (292) 176 258 259
    "deref" (293) 433
    "typedef" (294) 567 569
    "typedecl" (295) 656
    "with" (296) 79
    "aka" (297) 537 539 597 599
    "assume" (298) 81
    "cast" (299) 295
    "override" (300) 486
    "abstract" (301) 500
    "upcast" (302) 298
    "iterator" (303) 682
    "var" (304) 284 505
    "addr" (305) 434
    "continue" (306) 270
    "where" (307) 744 807
    "pass" (308) 238
    "reinterpret" (309) 301
    "module" (310) 22
    "public" (311) 18 48 212 491 552 562 572 589
    "label" (312) 54 55
    "goto" (313) 55 56
    "implicit" (314) 665
    "explicit" (315) 259 659
    "shared" (316) 549
    "private" (317) 19 105 211 492 551 561 571 588
    "smart_ptr" (318) 672
    "unsafe" (319) 77 465
    "inscope" (320) 285
    "static" (321) 494
    "fixed_array" (322) 793 796
    "default" (323) 774
    "bool" (324) 184 600
    "void" (325) 620
    "string" (326) 185 601
    "auto" (327) 634 635
    "int" (328) 186 602 627
    "int2" (329) 187 606
    "int3" (330) 188 607
    "int4" (331) 189 608
    "uint" (332) 190 609 630
    "bitfield" (333) 626 644 727
    "uint2" (334) 191 613
    "uint3" (335) 192 614
    "uint4" (336) 193 615
    "float" (337) 194 616
    "float2" (338) 195 617
    "float3" (339) 196 618
    "float4" (340) 197 619
    "range" (341) 198 621
    "urange" (342) 199 622
    "range64" (343) 200 623
    "urange64" (344) 201 624
    "block" (345) 683 686 689
    "int64" (346) 202 605
    "uint64" (347) 203 612
    "double" (348) 204 625
    "function" (349) 690 693 696
    "lambda" (350) 697 700 703
    "int8" (351) 205 603 628
    "uint8" (352) 206 610 631
    "int16" (353) 207 604 629
    "uint16" (354) 208 611 632
    "tuple" (355) 706 717 780 783
    "variant" (356) 709 722 771
    "generator" (357) 435 436
    "yield" (358) 277 278 280 281
    "sealed" (359) 487 583
    "+=" (360) 127 344
    "-=" (361) 128 345
    "/=" (362) 130 347
    "*=" (363) 129 346
    "%=" (364) 131 348
    "&=" (365) 132 338
    "|=" (366) 133 339
    "^=" (367) 134 340
    "<<" (368) 160 393
    ">>" (369) 161 394
    "++" (370) 156 158 415 417
    "--" (371) 157 159 416 418
    "<=" (372) 151 406
    "<<=" (373) 162 349
    ">>=" (374) 163 350
    ">=" (375) 152 407
    "==" (376) 149 404 667 668
    "!=" (377) 150 405
    "->" (378) 361 362
    "<-" (379) 273 276 278 281 312 318 336 356 357 358 523 531
    "??" (380) 177 437 673
    "?." (381) 171 174 424 425 476 478
    "?[" (382) 169 422 423
    "<|" (383) 461
    " <|" (384) 251
    "$ <|" (385) 254 355 358
    "@ <|" (386) 252 353 356
    "@@ <|" (387) 253 354 357
    "|>" (388) 114 462 463
    ":=" (389) 173 175 319 337 532 734 736 738 740
    "<<<" (390) 164 395
    ">>>" (391) 165 396
    "<<<=" (392) 166 351
    ">>>=" (393) 167 352
    "=>" (394) 311 312 776 778
    "::" (395) 256 257
    "&&" (396) 110 138 411
    "||" (397) 111 139 412
    "^^" (398) 112 140 413
    "&&=" (399) 135 341
    "||=" (400) 136 342
    "^^=" (401) 137 343
    ".." (402) 148 414
    "$$" (403) 467
    "$i" (404) 364 468 536 596
    "$v" (405) 469
    "$b" (406) 470
    "$a" (407) 471 506
    "$t" (408) 636
    "$c" (409) 473 474 482
    "$f" (410) 475 476 477 478 479 480 481 737 738 739 740
    "..." (411) 472
    "[[" (412) 289 290 323 484 757 758 759 760 787 811
    "[{" (413) 761 762 788 812
    "{{" (414) 802 814
    "integer constant" <i> (415) 52 53 54 55 84 95 327
    "long integer constant" <i64> (416) 329
    "unsigned integer constant" <ui> (417) 328
    "unsigned long integer constant" <ui64> (418) 330
    "unsigned int8 constant" <ui> (419) 331
    "floating point constant" <fd> (420) 85 96 332
    "double constant" <d> (421) 333
    "name" <s> (422) 21 38 46 81 83 90 94 124 172 173 174 180 181 183 255 256 257 287 288 306 307 316 317 318 319 361 362 372 373 374 375 424 425 443 444 449 464 510 516 535 537 538 539 558 559 564 573 584 595 597 598 599 635 637 638 641 717 722 727 733 734 735 736
    "keyword" <s> (423) 39 242 247
    "type function" <s> (424) 40 250
    "start of the string" (425) 27 31
    STRING_CHARACTER <ch> (426) 23 25 32 33
    STRING_CHARACTER_ESC (427) 24 26
    "end of the string" (428) 27 31
    "{" (429) 30
    "}" (430) 30
    "end of failed eader macro" (431)
    ";}}" (432) 746
    ";}]" (433) 748 755
    ";]]" (434) 750 752
    ",]]" (435) 753
    ",}]" (436) 756
    UNARY_MINUS (437)
    UNARY_PLUS (438)
    PRE_INC (439)
    PRE_DEC (440)
    POST_INC (441)
    POST_DEC (442)
    DEREF (443)


Nonterminals, with rules where they appear

    $accept (216)
        on left: 0
    program (217)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (218)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (219)
        on left: 17 18 19
        on right: 22
    module_name <s> (220)
        on left: 20 21
        on right: 22
    module_declaration (221)
        on left: 22
        on right: 2
    character_sequence <s> (222)
        on left: 23 24 25 26
        on right: 25 26 27 29
    string_constant <s> (223)
        on left: 27
        on right: 82 93
    string_builder_body <pExpression> (224)
        on left: 28 29 30
        on right: 29 30 31
    string_builder <pExpression> (225)
        on left: 31
        on right: 383
    reader_character_sequence (226)
        on left: 32 33
        on right: 33 35
    expr_reader <pExpression> (227)
        on left: 35
        on right: 16 382
    $@1 (228)
        on left: 34
        on right: 35
    options_declaration (229)
        on left: 36
        on right: 9
    require_declaration (230)
        on left: 37
        on right: 8
    keyword_or_name <s> (231)
        on left: 38 39 40
        on right: 41 43 44
    require_module_name <s> (232)
        on left: 41 42 43 44
        on right: 42 43 44 45 46
    require_module (233)
        on left: 45 46
        on right: 37
    is_public_module <b> (234)
        on left: 47 48
        on right: 45 46
    expect_declaration (235)
        on left: 49
        on right: 7
    expect_list (236)
        on left: 50 51
        on right: 49 51
    expect_error (237)
        on left: 52 53
        on right: 50 51
    expression_label <pExpression> (238)
        on left: 54
        on right: 236
    expression_goto <pExpression> (239)
        on left: 55 56
        on right: 237
    elif_or_static_elif <b> (240)
        on left: 57 58
        on right: 61
    expression_else <pExpression> (241)
        on left: 59 60 61
        on right: 61 72
    if_or_static_if <b> (242)
        on left: 62 63
        on right: 72
    expression_else_one_liner <pExpression> (243)
        on left: 64 66
        on right: 74
    $@2 (244)
        on left: 65
        on right: 66
    expression_if_one_liner <pExpression> (245)
        on left: 67 68 69 70 71
        on right: 66 74
    expression_if_then_else <pExpression> (246)
        on left: 72 74
        on right: 234
    $@3 (247)
        on left: 73
        on right: 74
    expression_for_loop <pExpression> (248)
        on left: 76
        on right: 229
    $@4 (249)
        on left: 75
        on right: 76
    expression_unsafe <pExpression> (250)
        on left: 77
        on right: 226
    expression_while_loop <pExpression> (251)
        on left: 78
        on right: 225
    expression_with <pExpression> (252)
        on left: 79
        on right: 227
    expression_with_alias <pExpression> (253)
        on left: 81
        on right: 228
    $@5 (254)
        on left: 80
        on right: 81
    annotation_argument_value <aa> (255)
        on left: 82 83 84 85 86 87
        on right: 88 89
    annotation_argument_value_list <aaList> (256)
        on left: 88 89
        on right: 89 100
    annotation_argument_name <s> (257)
        on left: 90 91 92
        on right: 93 94 95 96 97 98 99 100
    annotation_argument <aa> (258)
        on left: 93 94 95 96 97 98 99 100
        on right: 101 102
    annotation_argument_list <aaList> (259)
        on left: 101 102
        on right: 36 102 107 484
    annotation_declaration_name <s> (260)
        on left: 103 104 105
        on right: 106 107
    annotation_declaration_basic <fa> (261)
        on left: 106 107
        on right: 108
    annotation_declaration <fa> (262)
        on left: 108 109 110 111 112 113 114
        on right: 109 110 111 112 113 114 115 116
    annotation_list <faList> (263)
        on left: 115 116
        on right: 116 118 503
    optional_annotation_list <faList> (264)
        on left: 117 118
        on right: 209 325 326 500 502 576 579 594
    optional_function_argument_list <pVarDeclList> (265)
        on left: 119 120 121
        on right: 213 325 326 371 689 696 703
    optional_function_type <pTypeDecl> (266)
        on left: 122 123
        on right: 213 325 326 371 689 696 703
    function_name <s> (267)
        on left: 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208
        on right: 213
    global_function_declaration (268)
        on left: 209
        on right: 6
    optional_public_or_private_function <b> (269)
        on left: 210 211 212
        on right: 215
    function_declaration_header <pFuncDecl> (270)
        on left: 213
        on right: 215 500 502
    function_declaration <pFuncDecl> (271)
        on left: 215
        on right: 209
    $@6 (272)
        on left: 214
        on right: 215
    expression_block <pExpression> (273)
        on left: 216 217
        on right: 60 61 72 76 77 78 79 215 242 282 310 324 502
    expression_any <pExpression> (274)
        on left: 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238
        on right: 240
    expressions <pExpression> (275)
        on left: 239 240 241
        on right: 216 217 240 241
    expr_keyword <pExpression> (276)
        on left: 242
        on right: 220
    optional_expr_list <pExpression> (277)
        on left: 243 244
        on right: 250 657
    expression_keyword <pExpression> (278)
        on left: 247 250
        on right: 466
    $@7 (279)
        on left: 245
        on right: 247
    $@8 (280)
        on left: 246
        on right: 247
    $@9 (281)
        on left: 248
        on right: 250
    $@10 (282)
        on left: 249
        on right: 250
    expr_pipe <pExpression> (283)
        on left: 251 252 253 254
        on right: 219 275 276 280 281 529 542 544
    name_in_namespace <s> (284)
        on left: 255 256 257
        on right: 35 103 305 306 307 359 360 363 380 427 428 429 464 581 633 657
    expression_delete <pExpression> (285)
        on left: 258 259
        on right: 223
    new_type_declaration <pTypeDecl> (286)
        on left: 262 263
        on right: 264 265 266 267
    $@11 (287)
        on left: 260
        on right: 262
    $@12 (288)
        on left: 261
        on right: 262
    expr_new <pExpression> (289)
        on left: 264 265 266 267 268
        on right: 457
    expression_break <pExpression> (290)
        on left: 269
        on right: 70 230
    expression_continue <pExpression> (291)
        on left: 270
        on right: 71 231
    expression_return_no_pipe <pExpression> (292)
        on left: 271 272 273
        on right: 68 274
    expression_return <pExpression> (293)
        on left: 274 275 276
        on right: 232
    expression_yield_no_pipe <pExpression> (294)
        on left: 277 278
        on right: 69 279
    expression_yield <pExpression> (295)
        on left: 279 280 281
        on right: 233
    expression_try_catch <pExpression> (296)
        on left: 282
        on right: 235
    kwd_let <b> (297)
        on left: 283 284
        on right: 291 292 553 555
    optional_in_scope <b> (298)
        on left: 285 286
        on right: 291 292
    tuple_expansion <pNameList> (299)
        on left: 287 288
        on right: 288 289 290
    tuple_expansion_variable_declaration <pVarDecl> (300)
        on left: 289 290
        on right: 292
    expression_let <pExpression> (301)
        on left: 291 292
        on right: 224
    expr_cast <pExpression> (302)
        on left: 295 298 301
        on right: 456
    $@13 (303)
        on left: 293
        on right: 295
    $@14 (304)
        on left: 294
        on right: 295
    $@15 (305)
        on left: 296
        on right: 298
    $@16 (306)
        on left: 297
        on right: 298
    $@17 (307)
        on left: 299
        on right: 301
    $@18 (308)
        on left: 300
        on right: 301
    expr_type_decl <pExpression> (309)
        on left: 304
        on right: 455
    $@19 (310)
        on left: 302
        on right: 304
    $@20 (311)
        on left: 303
        on right: 304
    expr_type_info <pExpression> (312)
        on left: 305 306 307
        on right: 454
    expr_list <pExpression> (313)
        on left: 308 309
        on right: 76 244 266 272 273 309 360 362 375 419 429 431 474 780 786 789 792 793 796 810 811 812 813 814
    block_or_simple_block <pExpression> (314)
        on left: 310 311 312
        on right: 325 326
    block_or_lambda <i> (315)
        on left: 313 314 315
        on right: 325 326
    capture_entry <pCapt> (316)
        on left: 316 317 318 319
        on right: 320 321
    capture_list <pCaptList> (317)
        on left: 320 321
        on right: 321 323
    optional_capture_list <pCaptList> (318)
        on left: 322 323
        on right: 325 326 435 436
    expr_block <pExpression> (319)
        on left: 324 325
        on right: 251 252 253 254 353 354 355 356 357 358 744
    expr_full_block <pExpression> (320)
        on left: 326
        on right: 460
    expr_numeric_const <pExpression> (321)
        on left: 327 328 329 330 331 332 333
        on right: 381
    expr_assign <pExpression> (322)
        on left: 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352
        on right: 222 251
    expr_assign_pipe <pExpression> (323)
        on left: 353 354 355 356 357 358
        on right: 221
    expr_named_call <pExpression> (324)
        on left: 359 360
        on right: 459
    expr_method_call <pExpression> (325)
        on left: 361 362
        on right: 458
    func_addr_name <pExpression> (326)
        on left: 363 364
        on right: 365 368 371
    func_addr_expr <pExpression> (327)
        on left: 365 368 371
        on right: 426
    $@21 (328)
        on left: 366
        on right: 368
    $@22 (329)
        on left: 367
        on right: 368
    $@23 (330)
        on left: 369
        on right: 371
    $@24 (331)
        on left: 370
        on right: 371
    expr_field <pExpression> (332)
        on left: 372 373 374 375 378
        on right: 387
    $@25 (333)
        on left: 376
        on right: 378
    $@26 (334)
        on left: 377
        on right: 378
    expr <pExpression> (335)
        on left: 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 441 442 443 444 447 448 449 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466
        on right
    $@27 (336)
        on left: 439
        on right: 441
    $@28 (337)
        on left: 440
        on right: 441
    $@29 (338)
        on left: 445
        on right: 447
    $@30 (339)
        on left: 446
        on right: 447
    $@31 (340)
        on left: 450
        on right: 452
    $@32 (341)
        on left: 451
        on right: 452
    expr_mtag <pExpression> (342)
        on left: 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482
        on right: 388
    optional_field_annotation <aaList> (343)
        on left: 483 484
        on right: 495 504 505 547 555
    optional_override <i> (344)
        on left: 485 486 487
        on right: 495 502
    optional_constant <b> (345)
        on left: 488 489
        on right: 500 502
    optional_public_or_private_member_variable <b> (346)
        on left: 490 491 492
        on right: 495 500 502
    optional_static_member_variable <b> (347)
        on left: 493 494
        on right: 495 502
    structure_variable_declaration <pVarDecl> (348)
        on left: 495
        on right: 498
    struct_variable_declaration_list <pVarDeclList> (349)
        on left: 496 498 500 502 503
        on right: 498 500 502 503 591
    $@33 (350)
        on left: 497
        on right: 498
    $@34 (351)
        on left: 499
        on right: 500
    $@35 (352)
        on left: 501
        on right: 502
    function_argument_declaration <pVarDecl> (353)
        on left: 504 505 506
        on right: 507 508
    function_argument_list <pVarDeclList> (354)
        on left: 507 508
        on right: 121 508
    tuple_type <pVarDecl> (355)
        on left: 509 510
        on right: 511 512 515
    tuple_type_list <pVarDeclList> (356)
        on left: 511 512
        on right: 512 706
    tuple_alias_type_list <pVarDeclList> (357)
        on left: 513 514 515
        on right: 514 515 717
    variant_type <pVarDecl> (358)
        on left: 516
        on right: 517 518 521
    variant_type_list <pVarDeclList> (359)
        on left: 517 518
        on right: 518 709
    variant_alias_type_list <pVarDeclList> (360)
        on left: 519 520 521
        on right: 520 521 722
    copy_or_move <b> (361)
        on left: 522 523
        on right: 527 528 529 733 735 737 739
    variable_declaration <pVarDecl> (362)
        on left: 524 525 526 527 528 529
        on right: 495 504 505
    copy_or_move_or_clone <i> (363)
        on left: 530 531 532
        on right: 289 290 541 542 543 544
    optional_ref <b> (364)
        on left: 533 534
        on right: 290 543 544
    let_variable_name_with_pos_list <pNameWithPosList> (365)
        on left: 535 536 537 538 539
        on right: 538 539 540 541 542 543 544
    let_variable_declaration <pVarDecl> (366)
        on left: 540 541 542 543 544
        on right: 291 547 555
    global_variable_declaration_list <pVarDeclList> (367)
        on left: 545 547
        on right: 547 553
    $@36 (368)
        on left: 546
        on right: 547
    optional_shared <b> (369)
        on left: 548 549
        on right: 22 553 555
    optional_public_or_private_variable <b> (370)
        on left: 550 551 552
        on right: 553 555
    global_let (371)
        on left: 553 555
        on right: 5
    $@37 (372)
        on left: 554
        on right: 555
    enum_list <pEnum> (373)
        on left: 556 557 558 559
        on right: 557 558 559 576 579
    optional_public_or_private_alias <b> (374)
        on left: 560 561 562
        on right: 564 717 722 727
    single_alias (375)
        on left: 564
        on right: 565 566 569
    $@38 (376)
        on left: 563
        on right: 564
    alias_list (377)
        on left: 565 566
        on right: 566 567
    alias_declaration (378)
        on left: 567 569
        on right: 10
    $@39 (379)
        on left: 568
        on right: 569
    optional_public_or_private_enum <b> (380)
        on left: 570 571 572
        on right: 576 579
    enum_name <pEnum> (381)
        on left: 573
        on right: 576 579
    enum_declaration (382)
        on left: 576 579
        on right: 4
    $@40 (383)
        on left: 574
        on right: 576
    $@41 (384)
        on left: 575
        on right: 576
    $@42 (385)
        on left: 577
        on right: 579
    $@43 (386)
        on left: 578
        on right: 579
    optional_structure_parent <s> (387)
        on left: 580 581
        on right: 584
    optional_sealed <b> (388)
        on left: 582 583
        on right: 584
    structure_name <pStructure> (389)
        on left: 584
        on right: 594
    class_or_struct <b> (390)
        on left: 585 586
        on right: 594
    optional_public_or_private_structure <b> (391)
        on left: 587 588 589
        on right: 594
    optional_struct_variable_declaration_list <pVarDeclList> (392)
        on left: 590 591
        on right: 594
    structure_declaration (393)
        on left: 594
        on right: 3
    $@44 (394)
        on left: 592
        on right: 594
    $@45 (395)
        on left: 593
        on right: 594
    variable_name_with_pos_list <pNameWithPosList> (396)
        on left: 595 596 597 598 599
        on right: 76 524 525 526 527 528 529 598 599 810 811 812 813 814
    basic_type_declaration <type> (397)
        on left: 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626
        on right: 430 431 442 448 453 463 647
    enum_basic_type_declaration <type> (398)
        on left: 627 628 629 630 631 632
        on right: 579
    structure_type_declaration <pTypeDecl> (399)
        on left: 633
        on right: 263 650
    auto_type_declaration <pTypeDecl> (400)
        on left: 634 635 636
        on right: 648
    bitfield_bits <pNameList> (401)
        on left: 637 638
        on right: 638 644
    bitfield_alias_bits <pNameList> (402)
        on left: 639 640 641
        on right: 640 641 727
    bitfield_type_declaration <pTypeDecl> (403)
        on left: 644
        on right: 649
    $@46 (404)
        on left: 642
        on right: 644
    $@47 (405)
        on left: 643
        on right: 644
    table_type_pair <aTypePair> (406)
        on left: 645 646
        on right: 679
    type_declaration_no_options <pTypeDecl> (407)
        on left: 647 648 649 650 651 652 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 672 673 676 679 682 683 686 689 690 693 696 697 700 703 706 709
        on right: 247 250 289 295 298 301 368 435 436 441 540 541 542 651 652 658 659 660 661 662 663 664 665 666 667 668 669 673 710 711 757 758 759 760 761 762 765 768 771 774 783 787 788 792 796 804 805
    $@48 (408)
        on left: 653
        on right: 655
    $@49 (409)
        on left: 654
        on right: 655
    $@50 (410)
        on left: 670
        on right: 672
    $@51 (411)
        on left: 671
        on right: 672
    $@52 (412)
        on left: 674
        on right: 676
    $@53 (413)
        on left: 675
        on right: 676
    $@54 (414)
        on left: 677
        on right: 679
    $@55 (415)
        on left: 678
        on right: 679
    $@56 (416)
        on left: 680
        on right: 682
    $@57 (417)
        on left: 681
        on right: 682
    $@58 (418)
        on left: 684
        on right: 686
    $@59 (419)
        on left: 685
        on right: 686
    $@60 (420)
        on left: 687
        on right: 689
    $@61 (421)
        on left: 688
        on right: 689
    $@62 (422)
        on left: 691
        on right: 693
    $@63 (423)
        on left: 692
        on right: 693
    $@64 (424)
        on left: 694
        on right: 696
    $@65 (425)
        on left: 695
        on right: 696
    $@66 (426)
        on left: 698
        on right: 700
    $@67 (427)
        on left: 699
        on right: 700
    $@68 (428)
        on left: 701
        on right: 703
    $@69 (429)
        on left: 702
        on right: 703
    $@70 (430)
        on left: 704
        on right: 706
    $@71 (431)
        on left: 705
        on right: 706
    $@72 (432)
        on left: 707
        on right: 709
    $@73 (433)
        on left: 708
        on right: 709
    type_declaration <pTypeDecl> (434)
        on left: 710 711 712
        on right: 123 262 304 447 452 509 510 516 526 527 564 645 646 655 672 676 682 686 693 700 711 712
    tuple_alias_declaration (435)
        on left: 717
        on right: 12
    $@74 (436)
        on left: 713
        on right: 717
    $@75 (437)
        on left: 714
        on right: 717
    $@76 (438)
        on left: 715
        on right: 717
    $@77 (439)
        on left: 716
        on right: 717
    variant_alias_declaration (440)
        on left: 722
        on right: 11
    $@78 (441)
        on left: 718
        on right: 722
    $@79 (442)
        on left: 719
        on right: 722
    $@80 (443)
        on left: 720
        on right: 722
    $@81 (444)
        on left: 721
        on right: 722
    bitfield_alias_declaration (445)
        on left: 727
        on right: 13
    $@82 (446)
        on left: 723
        on right: 727
    $@83 (447)
        on left: 724
        on right: 727
    $@84 (448)
        on left: 725
        on right: 727
    $@85 (449)
        on left: 726
        on right: 727
    make_decl <pExpression> (450)
        on left: 728 729 730 731 732
        on right: 268 384
    make_struct_fields <pMakeStruct> (451)
        on left: 733 734 735 736 737 738 739 740
        on right: 359 360 735 736 739 740 741 742
    make_struct_dim <pExpression> (452)
        on left: 741 742
        on right: 267 428 742 757 760 761 762 765 768 771 783
    optional_block <pExpression> (453)
        on left: 743 744
        on right: 757 758 759 760 761 762
    optional_trailing_semicolon_cur_cur (454)
        on left: 745 746
        on right: 802
    optional_trailing_semicolon_cur_sqr (455)
        on left: 747 748
        on right: 788
    optional_trailing_semicolon_sqr_sqr (456)
        on left: 749 750
        on right: 787
    optional_trailing_delim_sqr_sqr (457)
        on left: 751 752 753
        on right: 757 758 759 760
    optional_trailing_delim_cur_sqr (458)
        on left: 754 755 756
        on right: 761 762
    make_struct_decl <pExpression> (459)
        on left: 757 758 759 760 761 762 765 768 771 774
        on right: 728
    $@86 (460)
        on left: 763
        on right: 765
    $@87 (461)
        on left: 764
        on right: 765
    $@88 (462)
        on left: 766
        on right: 768
    $@89 (463)
        on left: 767
        on right: 768
    $@90 (464)
        on left: 769
        on right: 771
    $@91 (465)
        on left: 770
        on right: 771
    $@92 (466)
        on left: 772
        on right: 774
    $@93 (467)
        on left: 773
        on right: 774
    make_tuple <pExpression> (468)
        on left: 775 776 777
        on right: 777 784 785
    make_map_tuple <pExpression> (469)
        on left: 778 779
        on right: 797 798 799 800 813 814
    make_tuple_call <pExpression> (470)
        on left: 780 783
        on right: 732
    $@94 (471)
        on left: 781
        on right: 783
    $@95 (472)
        on left: 782
        on right: 783
    make_dim <pExpression> (473)
        on left: 784 785
        on right: 785 787 788
    make_dim_decl <pExpression> (474)
        on left: 786 787 788 789 792 793 796
        on right: 729
    $@96 (475)
        on left: 790
        on right: 792
    $@97 (476)
        on left: 791
        on right: 792
    $@98 (477)
        on left: 794
        on right: 796
    $@99 (478)
        on left: 795
        on right: 796
    make_table <pExpression> (479)
        on left: 797 798
        on right: 798 802
    expr_map_tuple_list <pExpression> (480)
        on left: 799 800
        on right: 800 801 803 804 805
    make_table_decl <pExpression> (481)
        on left: 801 802 803 804 805
        on right: 730
    array_comprehension_where <pExpression> (482)
        on left: 806 807
        on right: 810 811 812 813 814
    optional_comma <b> (483)
        on left: 808 809
        on right: 419 780 786 789 792 793 796 801 803 804 805
    array_comprehension <pExpression> (484)
        on left: 810 811 812 813 814
        on right: 731


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . ';'

    $end        shift, and go to state 2
    "let"       shift, and go to state 3
    "options"   shift, and go to state 4
    "expect"    shift, and go to state 5
    "require"   shift, and go to state 6
    "typedef"   shift, and go to state 7
    "var"       shift, and go to state 8
    "module"    shift, and go to state 9
    "bitfield"  shift, and go to state 10
    "tuple"     shift, and go to state 11
    "variant"   shift, and go to state 12
    '%'         shift, and go to state 13
    '['         shift, and go to state 14
    ';'         shift, and go to state 15

    $default  reduce using rule 117 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  283 kwd_let: "let" .

    $default  reduce using rule 283 (kwd_let)


State 4

   36 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   49 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   37 require_declaration: "require" . require_module

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 46
    require_module       go to state 47


State 7

  567 alias_declaration: "typedef" . '{' alias_list '}'
  569                  | "typedef" . $@39 single_alias ';'

    '{'  shift, and go to state 48

    $default  reduce using rule 568 ($@39)

    $@39  go to state 49


State 8

  284 kwd_let: "var" .

    $default  reduce using rule 284 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 50
    '$'     shift, and go to state 51

    module_name  go to state 52


State 10

  727 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias $@82 "name" $@83 '{' $@84 bitfield_alias_bits $@85 '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 560 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 55


State 11

  717 tuple_alias_declaration: "tuple" . optional_public_or_private_alias $@74 "name" $@75 '{' $@76 tuple_alias_type_list $@77 '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 560 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 56


State 12

  722 variant_alias_declaration: "variant" . optional_public_or_private_alias $@78 "name" $@79 '{' $@80 variant_alias_type_list $@81 '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 560 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 57


State 13

   35 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 60


State 14

  118 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 69
    name_in_namespace             go to state 70


State 15

   15 program: program ';' .

    $default  reduce using rule 15 (program)


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   16 top_level_reader_macro: expr_reader . ';'

    ';'  shift, and go to state 71


State 19

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 20

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  209 global_function_declaration: optional_annotation_list . "def" function_declaration
  576 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name '{' $@40 enum_list $@41 '}'
  579                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@42 enum_list $@43 '}'
  594 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@44 structure_name $@45 optional_struct_variable_declaration_list

    "struct"  shift, and go to state 72
    "class"   shift, and go to state 73
    "def"     shift, and go to state 74
    "enum"    shift, and go to state 75

    class_or_struct  go to state 76


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  553 global_let: kwd_let . optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'
  555           | kwd_let . optional_shared optional_public_or_private_variable $@37 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 77

    $default  reduce using rule 548 (optional_shared)

    optional_shared  go to state 78


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

   91 annotation_argument_name: "type" .

    $default  reduce using rule 91 (annotation_argument_name)


State 33

   92 annotation_argument_name: "in" .

    $default  reduce using rule 92 (annotation_argument_name)


State 34

   90 annotation_argument_name: "name" .

    $default  reduce using rule 90 (annotation_argument_name)


State 35

   93 annotation_argument: annotation_argument_name . '=' string_constant
   94                    | annotation_argument_name . '=' "name"
   95                    | annotation_argument_name . '=' "integer constant"
   96                    | annotation_argument_name . '=' "floating point constant"
   97                    | annotation_argument_name . '=' "true"
   98                    | annotation_argument_name . '=' "false"
   99                    | annotation_argument_name .
  100                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 79

    $default  reduce using rule 99 (annotation_argument)


State 36

  101 annotation_argument_list: annotation_argument .

    $default  reduce using rule 101 (annotation_argument_list)


State 37

   36 options_declaration: "options" annotation_argument_list .
  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 80

    $default  reduce using rule 36 (options_declaration)


State 38

   52 expect_error: "integer constant" .
   53             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 81

    $default  reduce using rule 52 (expect_error)


State 39

   49 expect_declaration: "expect" expect_list .
   51 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 82

    $default  reduce using rule 49 (expect_declaration)


State 40

   50 expect_list: expect_error .

    $default  reduce using rule 50 (expect_list)


State 41

   38 keyword_or_name: "name" .

    $default  reduce using rule 38 (keyword_or_name)


State 42

   39 keyword_or_name: "keyword" .

    $default  reduce using rule 39 (keyword_or_name)


State 43

   40 keyword_or_name: "type function" .

    $default  reduce using rule 40 (keyword_or_name)


State 44

   42 require_module_name: '%' . require_module_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 83


State 45

   41 require_module_name: keyword_or_name .

    $default  reduce using rule 41 (require_module_name)


State 46

   43 require_module_name: require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name
   45 require_module: require_module_name . is_public_module
   46               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 84
    "public"  shift, and go to state 85
    '/'       shift, and go to state 86
    '.'       shift, and go to state 87

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 88


State 47

   37 require_declaration: "require" require_module .

    $default  reduce using rule 37 (require_declaration)


State 48

  567 alias_declaration: "typedef" '{' . alias_list '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 560 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 90
    alias_list                        go to state 91


State 49

  569 alias_declaration: "typedef" $@39 . single_alias ';'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 560 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 92


State 50

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 51

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 52

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 77

    $default  reduce using rule 548 (optional_shared)

    optional_shared  go to state 93


State 53

  562 optional_public_or_private_alias: "public" .

    $default  reduce using rule 562 (optional_public_or_private_alias)


State 54

  561 optional_public_or_private_alias: "private" .

    $default  reduce using rule 561 (optional_public_or_private_alias)


State 55

  727 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . $@82 "name" $@83 '{' $@84 bitfield_alias_bits $@85 '}'

    $default  reduce using rule 723 ($@82)

    $@82  go to state 94


State 56

  717 tuple_alias_declaration: "tuple" optional_public_or_private_alias . $@74 "name" $@75 '{' $@76 tuple_alias_type_list $@77 '}'

    $default  reduce using rule 713 ($@74)

    $@74  go to state 95


State 57

  722 variant_alias_declaration: "variant" optional_public_or_private_alias . $@78 "name" $@79 '{' $@80 variant_alias_type_list $@81 '}'

    $default  reduce using rule 718 ($@78)

    $@78  go to state 96


State 58

  257 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 97


State 59

  255 name_in_namespace: "name" .
  256                  | "name" . "::" "name"

    "::"  shift, and go to state 98

    "::"      [reduce using rule 255 (name_in_namespace)]
    $default  reduce using rule 255 (name_in_namespace)


State 60

   35 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 34 ($@1)

    $@1  go to state 99


State 61

  104 annotation_declaration_name: "require" .

    $default  reduce using rule 104 (annotation_declaration_name)


State 62

  105 annotation_declaration_name: "private" .

    $default  reduce using rule 105 (annotation_declaration_name)


State 63

  114 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 100
    name_in_namespace             go to state 70


State 64

  109 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 101
    name_in_namespace             go to state 70


State 65

  113 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 102
    name_in_namespace             go to state 70


State 66

  106 annotation_declaration_basic: annotation_declaration_name .
  107                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 103

    $default  reduce using rule 106 (annotation_declaration_basic)


State 67

  108 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 108 (annotation_declaration)


State 68

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  115 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106

    $default  reduce using rule 115 (annotation_list)


State 69

  116 annotation_list: annotation_list . ',' annotation_declaration
  118 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 107
    ']'  shift, and go to state 108


State 70

  103 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 103 (annotation_declaration_name)


State 71

   16 top_level_reader_macro: expr_reader ';' .

    $default  reduce using rule 16 (top_level_reader_macro)


State 72

  586 class_or_struct: "struct" .

    $default  reduce using rule 586 (class_or_struct)


State 73

  585 class_or_struct: "class" .

    $default  reduce using rule 585 (class_or_struct)


State 74

  209 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 109
    "private"  shift, and go to state 110

    $default  reduce using rule 210 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 111
    function_declaration                 go to state 112


State 75

  576 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name '{' $@40 enum_list $@41 '}'
  579                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@42 enum_list $@43 '}'

    "public"   shift, and go to state 113
    "private"  shift, and go to state 114

    $default  reduce using rule 570 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 115


State 76

  594 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@44 structure_name $@45 optional_struct_variable_declaration_list

    "public"   shift, and go to state 116
    "private"  shift, and go to state 117

    $default  reduce using rule 587 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 118


State 77

  549 optional_shared: "shared" .

    $default  reduce using rule 549 (optional_shared)


State 78

  553 global_let: kwd_let optional_shared . optional_public_or_private_variable '{' global_variable_declaration_list '}'
  555           | kwd_let optional_shared . optional_public_or_private_variable $@37 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 119
    "private"  shift, and go to state 120

    $default  reduce using rule 550 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 121


State 79

   93 annotation_argument: annotation_argument_name '=' . string_constant
   94                    | annotation_argument_name '=' . "name"
   95                    | annotation_argument_name '=' . "integer constant"
   96                    | annotation_argument_name '=' . "floating point constant"
   97                    | annotation_argument_name '=' . "true"
   98                    | annotation_argument_name '=' . "false"
  100                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 122
    "false"                    shift, and go to state 123
    "integer constant"         shift, and go to state 124
    "floating point constant"  shift, and go to state 125
    "name"                     shift, and go to state 126
    "start of the string"      shift, and go to state 127
    '('                        shift, and go to state 128

    string_constant  go to state 129


State 80

  102 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 130


State 81

   53 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 131


State 82

   51 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 132


State 83

   42 require_module_name: '%' require_module_name .
   43                    | require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name

    '.'  shift, and go to state 87

    $default  reduce using rule 42 (require_module_name)


State 84

   46 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 133


State 85

   48 is_public_module: "public" .

    $default  reduce using rule 48 (is_public_module)


State 86

   44 require_module_name: require_module_name '/' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 134


State 87

   43 require_module_name: require_module_name '.' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 135


State 88

   45 require_module: require_module_name is_public_module .

    $default  reduce using rule 45 (require_module)


State 89

  564 single_alias: optional_public_or_private_alias . "name" $@38 '=' type_declaration

    "name"  shift, and go to state 136


State 90

  565 alias_list: single_alias . ';'

    ';'  shift, and go to state 137


State 91

  566 alias_list: alias_list . single_alias ';'
  567 alias_declaration: "typedef" '{' alias_list . '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54
    '}'        shift, and go to state 138

    $default  reduce using rule 560 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 139


State 92

  569 alias_declaration: "typedef" $@39 single_alias . ';'

    ';'  shift, and go to state 140


State 93

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 141
    "private"  shift, and go to state 142

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 143


State 94

  727 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@82 . "name" $@83 '{' $@84 bitfield_alias_bits $@85 '}'

    "name"  shift, and go to state 144


State 95

  717 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@74 . "name" $@75 '{' $@76 tuple_alias_type_list $@77 '}'

    "name"  shift, and go to state 145


State 96

  722 variant_alias_declaration: "variant" optional_public_or_private_alias $@78 . "name" $@79 '{' $@80 variant_alias_type_list $@81 '}'

    "name"  shift, and go to state 146


State 97

  257 name_in_namespace: "::" "name" .

    $default  reduce using rule 257 (name_in_namespace)


State 98

  256 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 147


State 99

   35 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 148

    reader_character_sequence  go to state 149


State 100

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  114                       | "|>" annotation_declaration .

    $default  reduce using rule 114 (annotation_declaration)


State 101

  109 annotation_declaration: '!' annotation_declaration .
  110                       | annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 109 (annotation_declaration)


State 102

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  113                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106
    ')'   shift, and go to state 150


State 103

  107 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 151


State 104

  110 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 152
    name_in_namespace             go to state 70


State 105

  111 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 153
    name_in_namespace             go to state 70


State 106

  112 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 154
    name_in_namespace             go to state 70


State 107

  116 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 155
    name_in_namespace             go to state 70


State 108

  118 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 118 (optional_annotation_list)


State 109

  212 optional_public_or_private_function: "public" .

    $default  reduce using rule 212 (optional_public_or_private_function)


State 110

  211 optional_public_or_private_function: "private" .

    $default  reduce using rule 211 (optional_public_or_private_function)


State 111

  215 function_declaration: optional_public_or_private_function . $@6 function_declaration_header expression_block

    $default  reduce using rule 214 ($@6)

    $@6  go to state 156


State 112

  209 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 209 (global_function_declaration)


State 113

  572 optional_public_or_private_enum: "public" .

    $default  reduce using rule 572 (optional_public_or_private_enum)


State 114

  571 optional_public_or_private_enum: "private" .

    $default  reduce using rule 571 (optional_public_or_private_enum)


State 115

  576 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name '{' $@40 enum_list $@41 '}'
  579                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration '{' $@42 enum_list $@43 '}'

    "name"  shift, and go to state 157

    enum_name  go to state 158


State 116

  589 optional_public_or_private_structure: "public" .

    $default  reduce using rule 589 (optional_public_or_private_structure)


State 117

  588 optional_public_or_private_structure: "private" .

    $default  reduce using rule 588 (optional_public_or_private_structure)


State 118

  594 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@44 structure_name $@45 optional_struct_variable_declaration_list

    $default  reduce using rule 592 ($@44)

    $@44  go to state 159


State 119

  552 optional_public_or_private_variable: "public" .

    $default  reduce using rule 552 (optional_public_or_private_variable)


State 120

  551 optional_public_or_private_variable: "private" .

    $default  reduce using rule 551 (optional_public_or_private_variable)


State 121

  553 global_let: kwd_let optional_shared optional_public_or_private_variable . '{' global_variable_declaration_list '}'
  555           | kwd_let optional_shared optional_public_or_private_variable . $@37 optional_field_annotation let_variable_declaration

    '{'  shift, and go to state 160

    $default  reduce using rule 554 ($@37)

    $@37  go to state 161


State 122

   97 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 97 (annotation_argument)


State 123

   98 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 98 (annotation_argument)


State 124

   95 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 95 (annotation_argument)


State 125

   96 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 96 (annotation_argument)


State 126

   94 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 94 (annotation_argument)


State 127

   27 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163

    character_sequence  go to state 164


State 128

  100 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 127

    string_constant                 go to state 170
    annotation_argument_value       go to state 171
    annotation_argument_value_list  go to state 172


State 129

   93 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 93 (annotation_argument)


State 130

  102 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 102 (annotation_argument_list)


State 131

   53 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 53 (expect_error)


State 132

   51 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 51 (expect_list)


State 133

   46 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 85

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 173


State 134

   44 require_module_name: require_module_name '/' keyword_or_name .

    $default  reduce using rule 44 (require_module_name)


State 135

   43 require_module_name: require_module_name '.' keyword_or_name .

    $default  reduce using rule 43 (require_module_name)


State 136

  564 single_alias: optional_public_or_private_alias "name" . $@38 '=' type_declaration

    $default  reduce using rule 563 ($@38)

    $@38  go to state 174


State 137

  565 alias_list: single_alias ';' .

    $default  reduce using rule 565 (alias_list)


State 138

  567 alias_declaration: "typedef" '{' alias_list '}' .

    $default  reduce using rule 567 (alias_declaration)


State 139

  566 alias_list: alias_list single_alias . ';'

    ';'  shift, and go to state 175


State 140

  569 alias_declaration: "typedef" $@39 single_alias ';' .

    $default  reduce using rule 569 (alias_declaration)


State 141

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 142

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 143

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 144

  727 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@82 "name" . $@83 '{' $@84 bitfield_alias_bits $@85 '}'

    $default  reduce using rule 724 ($@83)

    $@83  go to state 176


State 145

  717 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@74 "name" . $@75 '{' $@76 tuple_alias_type_list $@77 '}'

    $default  reduce using rule 714 ($@75)

    $@75  go to state 177


State 146

  722 variant_alias_declaration: "variant" optional_public_or_private_alias $@78 "name" . $@79 '{' $@80 variant_alias_type_list $@81 '}'

    $default  reduce using rule 719 ($@79)

    $@79  go to state 178


State 147

  256 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 256 (name_in_namespace)


State 148

   32 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 32 (reader_character_sequence)


State 149

   33 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 179

    $default  reduce using rule 35 (expr_reader)


State 150

  113 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 113 (annotation_declaration)


State 151

  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  107 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 80
    ')'  shift, and go to state 180


State 152

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  110                       | annotation_declaration "&&" annotation_declaration .
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 110 (annotation_declaration)


State 153

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  111                       | annotation_declaration "||" annotation_declaration .
  112                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 104
    "^^"  shift, and go to state 106

    $default  reduce using rule 111 (annotation_declaration)


State 154

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  112                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 104

    $default  reduce using rule 112 (annotation_declaration)


State 155

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  116 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106

    $default  reduce using rule 116 (annotation_list)


State 156

  215 function_declaration: optional_public_or_private_function $@6 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 211


State 157

  573 enum_name: "name" .

    $default  reduce using rule 573 (enum_name)


State 158

  576 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . '{' $@40 enum_list $@41 '}'
  579                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration '{' $@42 enum_list $@43 '}'

    ':'  shift, and go to state 212
    '{'  shift, and go to state 213


State 159

  594 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@44 . structure_name $@45 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 214

    $default  reduce using rule 582 (optional_sealed)

    optional_sealed  go to state 215
    structure_name   go to state 216


State 160

  553 global_let: kwd_let optional_shared optional_public_or_private_variable '{' . global_variable_declaration_list '}'

    $default  reduce using rule 545 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 217


State 161

  555 global_let: kwd_let optional_shared optional_public_or_private_variable $@37 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 218

    $default  reduce using rule 483 (optional_field_annotation)

    optional_field_annotation  go to state 219


State 162

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 163

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 164

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 220
    STRING_CHARACTER_ESC  shift, and go to state 221
    "end of the string"   shift, and go to state 222


State 165

   86 annotation_argument_value: "true" .

    $default  reduce using rule 86 (annotation_argument_value)


State 166

   87 annotation_argument_value: "false" .

    $default  reduce using rule 87 (annotation_argument_value)


State 167

   84 annotation_argument_value: "integer constant" .

    $default  reduce using rule 84 (annotation_argument_value)


State 168

   85 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 85 (annotation_argument_value)


State 169

   83 annotation_argument_value: "name" .

    $default  reduce using rule 83 (annotation_argument_value)


State 170

   82 annotation_argument_value: string_constant .

    $default  reduce using rule 82 (annotation_argument_value)


State 171

   88 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 88 (annotation_argument_value_list)


State 172

   89 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  100 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 223
    ')'  shift, and go to state 224


State 173

   46 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 46 (require_module)


State 174

  564 single_alias: optional_public_or_private_alias "name" $@38 . '=' type_declaration

    '='  shift, and go to state 225


State 175

  566 alias_list: alias_list single_alias ';' .

    $default  reduce using rule 566 (alias_list)


State 176

  727 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@82 "name" $@83 . '{' $@84 bitfield_alias_bits $@85 '}'

    '{'  shift, and go to state 226


State 177

  717 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@74 "name" $@75 . '{' $@76 tuple_alias_type_list $@77 '}'

    '{'  shift, and go to state 227


State 178

  722 variant_alias_declaration: "variant" optional_public_or_private_alias $@78 "name" $@79 . '{' $@80 variant_alias_type_list $@81 '}'

    '{'  shift, and go to state 228


State 179

   33 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 33 (reader_character_sequence)


State 180

  107 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 107 (annotation_declaration_basic)


State 181

  125 function_name: "operator" . '!'
  126              | "operator" . '~'
  127              | "operator" . "+="
  128              | "operator" . "-="
  129              | "operator" . "*="
  130              | "operator" . "/="
  131              | "operator" . "%="
  132              | "operator" . "&="
  133              | "operator" . "|="
  134              | "operator" . "^="
  135              | "operator" . "&&="
  136              | "operator" . "||="
  137              | "operator" . "^^="
  138              | "operator" . "&&"
  139              | "operator" . "||"
  140              | "operator" . "^^"
  141              | "operator" . '+'
  142              | "operator" . '-'
  143              | "operator" . '*'
  144              | "operator" . '/'
  145              | "operator" . '%'
  146              | "operator" . '<'
  147              | "operator" . '>'
  148              | "operator" . ".."
  149              | "operator" . "=="
  150              | "operator" . "!="
  151              | "operator" . "<="
  152              | "operator" . ">="
  153              | "operator" . '&'
  154              | "operator" . '|'
  155              | "operator" . '^'
  158              | "operator" . "++"
  159              | "operator" . "--"
  160              | "operator" . "<<"
  161              | "operator" . ">>"
  162              | "operator" . "<<="
  163              | "operator" . ">>="
  164              | "operator" . "<<<"
  165              | "operator" . ">>>"
  166              | "operator" . "<<<="
  167              | "operator" . ">>>="
  168              | "operator" . '[' ']'
  169              | "operator" . "?[" ']'
  170              | "operator" . '.'
  171              | "operator" . "?."
  172              | "operator" . '.' "name"
  173              | "operator" . '.' "name" ":="
  174              | "operator" . "?." "name"
  175              | "operator" . ":="
  176              | "operator" . "delete"
  177              | "operator" . "??"
  178              | "operator" . "is"
  179              | "operator" . "as"
  180              | "operator" . "is" "name"
  181              | "operator" . "as" "name"
  182              | "operator" . '?' "as"
  183              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 229
    "as"      shift, and go to state 230
    "delete"  shift, and go to state 231
    "+="      shift, and go to state 232
    "-="      shift, and go to state 233
    "/="      shift, and go to state 234
    "*="      shift, and go to state 235
    "%="      shift, and go to state 236
    "&="      shift, and go to state 237
    "|="      shift, and go to state 238
    "^="      shift, and go to state 239
    "<<"      shift, and go to state 240
    ">>"      shift, and go to state 241
    "++"      shift, and go to state 242
    "--"      shift, and go to state 243
    "<="      shift, and go to state 244
    "<<="     shift, and go to state 245
    ">>="     shift, and go to state 246
    ">="      shift, and go to state 247
    "=="      shift, and go to state 248
    "!="      shift, and go to state 249
    "??"      shift, and go to state 250
    "?."      shift, and go to state 251
    "?["      shift, and go to state 252
    ":="      shift, and go to state 253
    "<<<"     shift, and go to state 254
    ">>>"     shift, and go to state 255
    "<<<="    shift, and go to state 256
    ">>>="    shift, and go to state 257
    "&&"      shift, and go to state 258
    "||"      shift, and go to state 259
    "^^"      shift, and go to state 260
    "&&="     shift, and go to state 261
    "||="     shift, and go to state 262
    "^^="     shift, and go to state 263
    ".."      shift, and go to state 264
    '?'       shift, and go to state 265
    '|'       shift, and go to state 266
    '^'       shift, and go to state 267
    '&'       shift, and go to state 268
    '<'       shift, and go to state 269
    '>'       shift, and go to state 270
    '-'       shift, and go to state 271
    '+'       shift, and go to state 272
    '*'       shift, and go to state 273
    '/'       shift, and go to state 274
    '%'       shift, and go to state 275
    '~'       shift, and go to state 276
    '!'       shift, and go to state 277
    '.'       shift, and go to state 278
    '['       shift, and go to state 279


State 182

  184 function_name: "bool" .

    $default  reduce using rule 184 (function_name)


State 183

  185 function_name: "string" .

    $default  reduce using rule 185 (function_name)


State 184

  186 function_name: "int" .

    $default  reduce using rule 186 (function_name)


State 185

  187 function_name: "int2" .

    $default  reduce using rule 187 (function_name)


State 186

  188 function_name: "int3" .

    $default  reduce using rule 188 (function_name)


State 187

  189 function_name: "int4" .

    $default  reduce using rule 189 (function_name)


State 188

  190 function_name: "uint" .

    $default  reduce using rule 190 (function_name)


State 189

  191 function_name: "uint2" .

    $default  reduce using rule 191 (function_name)


State 190

  192 function_name: "uint3" .

    $default  reduce using rule 192 (function_name)


State 191

  193 function_name: "uint4" .

    $default  reduce using rule 193 (function_name)


State 192

  194 function_name: "float" .

    $default  reduce using rule 194 (function_name)


State 193

  195 function_name: "float2" .

    $default  reduce using rule 195 (function_name)


State 194

  196 function_name: "float3" .

    $default  reduce using rule 196 (function_name)


State 195

  197 function_name: "float4" .

    $default  reduce using rule 197 (function_name)


State 196

  198 function_name: "range" .

    $default  reduce using rule 198 (function_name)


State 197

  199 function_name: "urange" .

    $default  reduce using rule 199 (function_name)


State 198

  200 function_name: "range64" .

    $default  reduce using rule 200 (function_name)


State 199

  201 function_name: "urange64" .

    $default  reduce using rule 201 (function_name)


State 200

  202 function_name: "int64" .

    $default  reduce using rule 202 (function_name)


State 201

  203 function_name: "uint64" .

    $default  reduce using rule 203 (function_name)


State 202

  204 function_name: "double" .

    $default  reduce using rule 204 (function_name)


State 203

  205 function_name: "int8" .

    $default  reduce using rule 205 (function_name)


State 204

  206 function_name: "uint8" .

    $default  reduce using rule 206 (function_name)


State 205

  207 function_name: "int16" .

    $default  reduce using rule 207 (function_name)


State 206

  208 function_name: "uint16" .

    $default  reduce using rule 208 (function_name)


State 207

  156 function_name: "++" . "operator"

    "operator"  shift, and go to state 280


State 208

  157 function_name: "--" . "operator"

    "operator"  shift, and go to state 281


State 209

  124 function_name: "name" .

    $default  reduce using rule 124 (function_name)


State 210

  213 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 283


State 211

  215 function_declaration: optional_public_or_private_function $@6 function_declaration_header . expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 285


State 212

  579 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration '{' $@42 enum_list $@43 '}'

    "int"     shift, and go to state 286
    "uint"    shift, and go to state 287
    "int8"    shift, and go to state 288
    "uint8"   shift, and go to state 289
    "int16"   shift, and go to state 290
    "uint16"  shift, and go to state 291

    enum_basic_type_declaration  go to state 292


State 213

  576 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' . $@40 enum_list $@41 '}'

    $default  reduce using rule 574 ($@40)

    $@40  go to state 293


State 214

  583 optional_sealed: "sealed" .

    $default  reduce using rule 583 (optional_sealed)


State 215

  584 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 294


State 216

  594 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@44 structure_name . $@45 optional_struct_variable_declaration_list

    $default  reduce using rule 593 ($@45)

    $@45  go to state 295


State 217

  547 global_variable_declaration_list: global_variable_declaration_list . $@36 optional_field_annotation let_variable_declaration
  553 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list . '}'

    '}'  shift, and go to state 296

    $default  reduce using rule 546 ($@36)

    $@36  go to state 297


State 218

  484 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 298


State 219

  555 global_let: kwd_let optional_shared optional_public_or_private_variable $@37 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 299
    "name"  shift, and go to state 300

    let_variable_name_with_pos_list  go to state 301
    let_variable_declaration         go to state 302


State 220

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 221

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 222

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 223

   89 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 127

    string_constant            go to state 170
    annotation_argument_value  go to state 303


State 224

  100 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 100 (annotation_argument)


State 225

  564 single_alias: optional_public_or_private_alias "name" $@38 '=' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 351


State 226

  727 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@82 "name" $@83 '{' . $@84 bitfield_alias_bits $@85 '}'

    $default  reduce using rule 725 ($@84)

    $@84  go to state 352


State 227

  717 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@74 "name" $@75 '{' . $@76 tuple_alias_type_list $@77 '}'

    $default  reduce using rule 715 ($@76)

    $@76  go to state 353


State 228

  722 variant_alias_declaration: "variant" optional_public_or_private_alias $@78 "name" $@79 '{' . $@80 variant_alias_type_list $@81 '}'

    $default  reduce using rule 720 ($@80)

    $@80  go to state 354


State 229

  178 function_name: "operator" "is" .
  180              | "operator" "is" . "name"

    "name"  shift, and go to state 355

    $default  reduce using rule 178 (function_name)


State 230

  179 function_name: "operator" "as" .
  181              | "operator" "as" . "name"

    "name"  shift, and go to state 356

    $default  reduce using rule 179 (function_name)


State 231

  176 function_name: "operator" "delete" .

    $default  reduce using rule 176 (function_name)


State 232

  127 function_name: "operator" "+=" .

    $default  reduce using rule 127 (function_name)


State 233

  128 function_name: "operator" "-=" .

    $default  reduce using rule 128 (function_name)


State 234

  130 function_name: "operator" "/=" .

    $default  reduce using rule 130 (function_name)


State 235

  129 function_name: "operator" "*=" .

    $default  reduce using rule 129 (function_name)


State 236

  131 function_name: "operator" "%=" .

    $default  reduce using rule 131 (function_name)


State 237

  132 function_name: "operator" "&=" .

    $default  reduce using rule 132 (function_name)


State 238

  133 function_name: "operator" "|=" .

    $default  reduce using rule 133 (function_name)


State 239

  134 function_name: "operator" "^=" .

    $default  reduce using rule 134 (function_name)


State 240

  160 function_name: "operator" "<<" .

    $default  reduce using rule 160 (function_name)


State 241

  161 function_name: "operator" ">>" .

    $default  reduce using rule 161 (function_name)


State 242

  158 function_name: "operator" "++" .

    $default  reduce using rule 158 (function_name)


State 243

  159 function_name: "operator" "--" .

    $default  reduce using rule 159 (function_name)


State 244

  151 function_name: "operator" "<=" .

    $default  reduce using rule 151 (function_name)


State 245

  162 function_name: "operator" "<<=" .

    $default  reduce using rule 162 (function_name)


State 246

  163 function_name: "operator" ">>=" .

    $default  reduce using rule 163 (function_name)


State 247

  152 function_name: "operator" ">=" .

    $default  reduce using rule 152 (function_name)


State 248

  149 function_name: "operator" "==" .

    $default  reduce using rule 149 (function_name)


State 249

  150 function_name: "operator" "!=" .

    $default  reduce using rule 150 (function_name)


State 250

  177 function_name: "operator" "??" .

    $default  reduce using rule 177 (function_name)


State 251

  171 function_name: "operator" "?." .
  174              | "operator" "?." . "name"

    "name"  shift, and go to state 357

    $default  reduce using rule 171 (function_name)


State 252

  169 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 358


State 253

  175 function_name: "operator" ":=" .

    $default  reduce using rule 175 (function_name)


State 254

  164 function_name: "operator" "<<<" .

    $default  reduce using rule 164 (function_name)


State 255

  165 function_name: "operator" ">>>" .

    $default  reduce using rule 165 (function_name)


State 256

  166 function_name: "operator" "<<<=" .

    $default  reduce using rule 166 (function_name)


State 257

  167 function_name: "operator" ">>>=" .

    $default  reduce using rule 167 (function_name)


State 258

  138 function_name: "operator" "&&" .

    $default  reduce using rule 138 (function_name)


State 259

  139 function_name: "operator" "||" .

    $default  reduce using rule 139 (function_name)


State 260

  140 function_name: "operator" "^^" .

    $default  reduce using rule 140 (function_name)


State 261

  135 function_name: "operator" "&&=" .

    $default  reduce using rule 135 (function_name)


State 262

  136 function_name: "operator" "||=" .

    $default  reduce using rule 136 (function_name)


State 263

  137 function_name: "operator" "^^=" .

    $default  reduce using rule 137 (function_name)


State 264

  148 function_name: "operator" ".." .

    $default  reduce using rule 148 (function_name)


State 265

  182 function_name: "operator" '?' . "as"
  183              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 359


State 266

  154 function_name: "operator" '|' .

    $default  reduce using rule 154 (function_name)


State 267

  155 function_name: "operator" '^' .

    $default  reduce using rule 155 (function_name)


State 268

  153 function_name: "operator" '&' .

    $default  reduce using rule 153 (function_name)


State 269

  146 function_name: "operator" '<' .

    $default  reduce using rule 146 (function_name)


State 270

  147 function_name: "operator" '>' .

    $default  reduce using rule 147 (function_name)


State 271

  142 function_name: "operator" '-' .

    $default  reduce using rule 142 (function_name)


State 272

  141 function_name: "operator" '+' .

    $default  reduce using rule 141 (function_name)


State 273

  143 function_name: "operator" '*' .

    $default  reduce using rule 143 (function_name)


State 274

  144 function_name: "operator" '/' .

    $default  reduce using rule 144 (function_name)


State 275

  145 function_name: "operator" '%' .

    $default  reduce using rule 145 (function_name)


State 276

  126 function_name: "operator" '~' .

    $default  reduce using rule 126 (function_name)


State 277

  125 function_name: "operator" '!' .

    $default  reduce using rule 125 (function_name)


State 278

  170 function_name: "operator" '.' .
  172              | "operator" '.' . "name"
  173              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 360

    $default  reduce using rule 170 (function_name)


State 279

  168 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 361


State 280

  156 function_name: "++" "operator" .

    $default  reduce using rule 156 (function_name)


State 281

  157 function_name: "--" "operator" .

    $default  reduce using rule 157 (function_name)


State 282

  120 optional_function_argument_list: '(' . ')'
  121                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 362
    "[["  shift, and go to state 218
    ')'   shift, and go to state 363

    $default  reduce using rule 483 (optional_field_annotation)

    optional_field_annotation      go to state 364
    function_argument_declaration  go to state 365
    function_argument_list         go to state 366


State 283

  213 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 368


State 284

  216 expression_block: '{' . expressions '}'
  217                 | '{' . expressions '}' "finally" '{' expressions '}'

    $default  reduce using rule 239 (expressions)

    expressions  go to state 369


State 285

  215 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block .

    $default  reduce using rule 215 (function_declaration)


State 286

  627 enum_basic_type_declaration: "int" .

    $default  reduce using rule 627 (enum_basic_type_declaration)


State 287

  630 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 630 (enum_basic_type_declaration)


State 288

  628 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 628 (enum_basic_type_declaration)


State 289

  631 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 631 (enum_basic_type_declaration)


State 290

  629 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 629 (enum_basic_type_declaration)


State 291

  632 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 632 (enum_basic_type_declaration)


State 292

  579 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . '{' $@42 enum_list $@43 '}'

    '{'  shift, and go to state 370


State 293

  576 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@40 . enum_list $@41 '}'

    $default  reduce using rule 556 (enum_list)

    enum_list  go to state 371


State 294

  584 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 372

    $default  reduce using rule 580 (optional_structure_parent)

    optional_structure_parent  go to state 373


State 295

  594 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@44 structure_name $@45 . optional_struct_variable_declaration_list

    '{'  shift, and go to state 374

    $default  reduce using rule 590 (optional_struct_variable_declaration_list)

    optional_struct_variable_declaration_list  go to state 375


State 296

  553 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}' .

    $default  reduce using rule 553 (global_let)


State 297

  547 global_variable_declaration_list: global_variable_declaration_list $@36 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 218

    $default  reduce using rule 483 (optional_field_annotation)

    optional_field_annotation  go to state 376


State 298

  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  484 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 80
    ']'  shift, and go to state 377


State 299

  536 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 378


State 300

  535 let_variable_name_with_pos_list: "name" .
  537                                | "name" . "aka" "name"

    "aka"  shift, and go to state 379

    $default  reduce using rule 535 (let_variable_name_with_pos_list)


State 301

  538 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  539                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  540 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options ';'
  541                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  542                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  543                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr ';'
  544                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 380
    ':'  shift, and go to state 381
    '&'  shift, and go to state 382

    $default  reduce using rule 533 (optional_ref)

    optional_ref  go to state 383


State 302

  555 global_let: kwd_let optional_shared optional_public_or_private_variable $@37 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 555 (global_let)


State 303

   89 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 89 (annotation_argument_value_list)


State 304

  655 type_declaration_no_options: "type" . '<' $@48 type_declaration '>' $@49

    '<'  shift, and go to state 384


State 305

  676 type_declaration_no_options: "array" . '<' $@52 type_declaration '>' $@53

    '<'  shift, and go to state 385


State 306

  679 type_declaration_no_options: "table" . '<' $@54 table_type_pair '>' $@55

    '<'  shift, and go to state 386


State 307

  656 type_declaration_no_options: "typedecl" . '(' expr ')'

    '('  shift, and go to state 387


State 308

  682 type_declaration_no_options: "iterator" . '<' $@56 type_declaration '>' $@57

    '<'  shift, and go to state 388


State 309

  672 type_declaration_no_options: "smart_ptr" . '<' $@50 type_declaration '>' $@51

    '<'  shift, and go to state 389


State 310

  600 basic_type_declaration: "bool" .

    $default  reduce using rule 600 (basic_type_declaration)


State 311

  620 basic_type_declaration: "void" .

    $default  reduce using rule 620 (basic_type_declaration)


State 312

  601 basic_type_declaration: "string" .

    $default  reduce using rule 601 (basic_type_declaration)


State 313

  634 auto_type_declaration: "auto" .
  635                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 390

    '('       [reduce using rule 634 (auto_type_declaration)]
    $default  reduce using rule 634 (auto_type_declaration)


State 314

  602 basic_type_declaration: "int" .

    $default  reduce using rule 602 (basic_type_declaration)


State 315

  606 basic_type_declaration: "int2" .

    $default  reduce using rule 606 (basic_type_declaration)


State 316

  607 basic_type_declaration: "int3" .

    $default  reduce using rule 607 (basic_type_declaration)


State 317

  608 basic_type_declaration: "int4" .

    $default  reduce using rule 608 (basic_type_declaration)


State 318

  609 basic_type_declaration: "uint" .

    $default  reduce using rule 609 (basic_type_declaration)


State 319

  626 basic_type_declaration: "bitfield" .
  644 bitfield_type_declaration: "bitfield" . '<' $@46 bitfield_bits '>' $@47

    '<'  shift, and go to state 391

    $default  reduce using rule 626 (basic_type_declaration)


State 320

  613 basic_type_declaration: "uint2" .

    $default  reduce using rule 613 (basic_type_declaration)


State 321

  614 basic_type_declaration: "uint3" .

    $default  reduce using rule 614 (basic_type_declaration)


State 322

  615 basic_type_declaration: "uint4" .

    $default  reduce using rule 615 (basic_type_declaration)


State 323

  616 basic_type_declaration: "float" .

    $default  reduce using rule 616 (basic_type_declaration)


State 324

  617 basic_type_declaration: "float2" .

    $default  reduce using rule 617 (basic_type_declaration)


State 325

  618 basic_type_declaration: "float3" .

    $default  reduce using rule 618 (basic_type_declaration)


State 326

  619 basic_type_declaration: "float4" .

    $default  reduce using rule 619 (basic_type_declaration)


State 327

  621 basic_type_declaration: "range" .

    $default  reduce using rule 621 (basic_type_declaration)


State 328

  622 basic_type_declaration: "urange" .

    $default  reduce using rule 622 (basic_type_declaration)


State 329

  623 basic_type_declaration: "range64" .

    $default  reduce using rule 623 (basic_type_declaration)


State 330

  624 basic_type_declaration: "urange64" .

    $default  reduce using rule 624 (basic_type_declaration)


State 331

  683 type_declaration_no_options: "block" .
  686                            | "block" . '<' $@58 type_declaration '>' $@59
  689                            | "block" . '<' $@60 optional_function_argument_list optional_function_type '>' $@61

    '<'  shift, and go to state 392

    $default  reduce using rule 683 (type_declaration_no_options)


State 332

  605 basic_type_declaration: "int64" .

    $default  reduce using rule 605 (basic_type_declaration)


State 333

  612 basic_type_declaration: "uint64" .

    $default  reduce using rule 612 (basic_type_declaration)


State 334

  625 basic_type_declaration: "double" .

    $default  reduce using rule 625 (basic_type_declaration)


State 335

  690 type_declaration_no_options: "function" .
  693                            | "function" . '<' $@62 type_declaration '>' $@63
  696                            | "function" . '<' $@64 optional_function_argument_list optional_function_type '>' $@65

    '<'  shift, and go to state 393

    $default  reduce using rule 690 (type_declaration_no_options)


State 336

  697 type_declaration_no_options: "lambda" .
  700                            | "lambda" . '<' $@66 type_declaration '>' $@67
  703                            | "lambda" . '<' $@68 optional_function_argument_list optional_function_type '>' $@69

    '<'  shift, and go to state 394

    $default  reduce using rule 697 (type_declaration_no_options)


State 337

  603 basic_type_declaration: "int8" .

    $default  reduce using rule 603 (basic_type_declaration)


State 338

  610 basic_type_declaration: "uint8" .

    $default  reduce using rule 610 (basic_type_declaration)


State 339

  604 basic_type_declaration: "int16" .

    $default  reduce using rule 604 (basic_type_declaration)


State 340

  611 basic_type_declaration: "uint16" .

    $default  reduce using rule 611 (basic_type_declaration)


State 341

  706 type_declaration_no_options: "tuple" . '<' $@70 tuple_type_list '>' $@71

    '<'  shift, and go to state 395


State 342

  709 type_declaration_no_options: "variant" . '<' $@72 variant_type_list '>' $@73

    '<'  shift, and go to state 396


State 343

  636 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 397


State 344

  657 type_declaration_no_options: '$' . name_in_namespace '(' optional_expr_list ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 398


State 345

  633 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 633 (structure_type_declaration)


State 346

  647 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 647 (type_declaration_no_options)


State 347

  650 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 650 (type_declaration_no_options)


State 348

  648 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 648 (type_declaration_no_options)


State 349

  649 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 649 (type_declaration_no_options)


State 350

  651 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  652                            | type_declaration_no_options . '[' ']'
  658                            | type_declaration_no_options . '-' '[' ']'
  659                            | type_declaration_no_options . "explicit"
  660                            | type_declaration_no_options . "const"
  661                            | type_declaration_no_options . '-' "const"
  662                            | type_declaration_no_options . '&'
  663                            | type_declaration_no_options . '-' '&'
  664                            | type_declaration_no_options . '#'
  665                            | type_declaration_no_options . "implicit"
  666                            | type_declaration_no_options . '-' '#'
  667                            | type_declaration_no_options . "==" "const"
  668                            | type_declaration_no_options . "==" '&'
  669                            | type_declaration_no_options . '?'
  673                            | type_declaration_no_options . "??"
  710 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    $default  reduce using rule 710 (type_declaration)


State 351

  564 single_alias: optional_public_or_private_alias "name" $@38 '=' type_declaration .
  711 type_declaration: type_declaration . '|' type_declaration_no_options
  712                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409

    $default  reduce using rule 564 (single_alias)


State 352

  727 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@82 "name" $@83 '{' $@84 . bitfield_alias_bits $@85 '}'

    $default  reduce using rule 639 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 410


State 353

  717 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@74 "name" $@75 '{' $@76 . tuple_alias_type_list $@77 '}'

    $default  reduce using rule 513 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 411


State 354

  722 variant_alias_declaration: "variant" optional_public_or_private_alias $@78 "name" $@79 '{' $@80 . variant_alias_type_list $@81 '}'

    $default  reduce using rule 519 (variant_alias_type_list)

    variant_alias_type_list  go to state 412


State 355

  180 function_name: "operator" "is" "name" .

    $default  reduce using rule 180 (function_name)


State 356

  181 function_name: "operator" "as" "name" .

    $default  reduce using rule 181 (function_name)


State 357

  174 function_name: "operator" "?." "name" .

    $default  reduce using rule 174 (function_name)


State 358

  169 function_name: "operator" "?[" ']' .

    $default  reduce using rule 169 (function_name)


State 359

  182 function_name: "operator" '?' "as" .
  183              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 413

    $default  reduce using rule 182 (function_name)


State 360

  172 function_name: "operator" '.' "name" .
  173              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 414

    $default  reduce using rule 172 (function_name)


State 361

  168 function_name: "operator" '[' ']' .

    $default  reduce using rule 168 (function_name)


State 362

  506 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 415


State 363

  120 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 120 (optional_function_argument_list)


State 364

  504 function_argument_declaration: optional_field_annotation . variable_declaration
  505                              | optional_field_annotation . "var" variable_declaration

    "var"   shift, and go to state 416
    "$i"    shift, and go to state 417
    "name"  shift, and go to state 418

    variable_declaration         go to state 419
    variable_name_with_pos_list  go to state 420


State 365

  507 function_argument_list: function_argument_declaration .

    $default  reduce using rule 507 (function_argument_list)


State 366

  121 optional_function_argument_list: '(' function_argument_list . ')'
  508 function_argument_list: function_argument_list . ';' function_argument_declaration

    ')'  shift, and go to state 421
    ';'  shift, and go to state 422


State 367

  123 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 423


State 368

  213 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 213 (function_declaration_header)


State 369

  216 expression_block: '{' expressions . '}'
  217                 | '{' expressions . '}' "finally" '{' expressions '}'
  240 expressions: expressions . expression_any
  241            | expressions . error

    error                             shift, and go to state 424
    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 427
    "if"                              shift, and go to state 428
    "static_if"                       shift, and go to state 429
    "for"                             shift, and go to state 430
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "return"                          shift, and go to state 437
    "null"                            shift, and go to state 438
    "break"                           shift, and go to state 439
    "try"                             shift, and go to state 440
    "table"                           shift, and go to state 441
    "delete"                          shift, and go to state 442
    "deref"                           shift, and go to state 443
    "with"                            shift, and go to state 444
    "assume"                          shift, and go to state 445
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 448
    "continue"                        shift, and go to state 449
    "pass"                            shift, and go to state 450
    "reinterpret"                     shift, and go to state 451
    "label"                           shift, and go to state 452
    "goto"                            shift, and go to state 453
    "unsafe"                          shift, and go to state 454
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "yield"                           shift, and go to state 461
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "$ <|"                            shift, and go to state 464
    "@ <|"                            shift, and go to state 465
    "@@ <|"                           shift, and go to state 466
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 484
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    ';'                               shift, and go to state 496
    '{'                               shift, and go to state 497
    '}'                               shift, and go to state 498

    string_builder             go to state 499
    expr_reader                go to state 500
    expression_label           go to state 501
    expression_goto            go to state 502
    if_or_static_if            go to state 503
    expression_if_one_liner    go to state 504
    expression_if_then_else    go to state 505
    expression_for_loop        go to state 506
    expression_unsafe          go to state 507
    expression_while_loop      go to state 508
    expression_with            go to state 509
    expression_with_alias      go to state 510
    expression_any             go to state 511
    expr_keyword               go to state 512
    expression_keyword         go to state 513
    expr_pipe                  go to state 514
    name_in_namespace          go to state 515
    expression_delete          go to state 516
    expr_new                   go to state 517
    expression_break           go to state 518
    expression_continue        go to state 519
    expression_return_no_pipe  go to state 520
    expression_return          go to state 521
    expression_yield_no_pipe   go to state 522
    expression_yield           go to state 523
    expression_try_catch       go to state 524
    kwd_let                    go to state 525
    expression_let             go to state 526
    expr_cast                  go to state 527
    expr_type_decl             go to state 528
    expr_type_info             go to state 529
    block_or_lambda            go to state 530
    expr_full_block            go to state 531
    expr_numeric_const         go to state 532
    expr_assign                go to state 533
    expr_assign_pipe           go to state 534
    expr_named_call            go to state 535
    expr_method_call           go to state 536
    func_addr_expr             go to state 537
    expr_field                 go to state 538
    expr                       go to state 539
    expr_mtag                  go to state 540
    basic_type_declaration     go to state 541
    make_decl                  go to state 542
    make_struct_decl           go to state 543
    make_tuple_call            go to state 544
    make_dim_decl              go to state 545
    make_table_decl            go to state 546
    array_comprehension        go to state 547


State 370

  579 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' . $@42 enum_list $@43 '}'

    $default  reduce using rule 577 ($@42)

    $@42  go to state 548


State 371

  557 enum_list: enum_list . ';'
  558          | enum_list . "name" ';'
  559          | enum_list . "name" '=' expr ';'
  576 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@40 enum_list . $@41 '}'

    "name"  shift, and go to state 549
    ';'     shift, and go to state 550

    $default  reduce using rule 575 ($@41)

    $@41  go to state 551


State 372

  581 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 552


State 373

  584 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 584 (structure_name)


State 374

  591 optional_struct_variable_declaration_list: '{' . struct_variable_declaration_list '}'

    $default  reduce using rule 496 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 553


State 375

  594 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@44 structure_name $@45 optional_struct_variable_declaration_list .

    $default  reduce using rule 594 (structure_declaration)


State 376

  547 global_variable_declaration_list: global_variable_declaration_list $@36 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 299
    "name"  shift, and go to state 300

    let_variable_name_with_pos_list  go to state 301
    let_variable_declaration         go to state 554


State 377

  484 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 555


State 378

  536 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 558
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 379

  537 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 559


State 380

  538 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  539                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 560


State 381

  540 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options ';'
  541                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr ';'
  542                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 561


State 382

  534 optional_ref: '&' .

    $default  reduce using rule 534 (optional_ref)


State 383

  543 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr ';'
  544                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 562
    ":="  shift, and go to state 563
    '='   shift, and go to state 564

    copy_or_move_or_clone  go to state 565


State 384

  655 type_declaration_no_options: "type" '<' . $@48 type_declaration '>' $@49

    $default  reduce using rule 653 ($@48)

    $@48  go to state 566


State 385

  676 type_declaration_no_options: "array" '<' . $@52 type_declaration '>' $@53

    $default  reduce using rule 674 ($@52)

    $@52  go to state 567


State 386

  679 type_declaration_no_options: "table" '<' . $@54 table_type_pair '>' $@55

    $default  reduce using rule 677 ($@54)

    $@54  go to state 568


State 387

  656 type_declaration_no_options: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 569
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 388

  682 type_declaration_no_options: "iterator" '<' . $@56 type_declaration '>' $@57

    $default  reduce using rule 680 ($@56)

    $@56  go to state 570


State 389

  672 type_declaration_no_options: "smart_ptr" '<' . $@50 type_declaration '>' $@51

    $default  reduce using rule 670 ($@50)

    $@50  go to state 571


State 390

  635 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 572


State 391

  644 bitfield_type_declaration: "bitfield" '<' . $@46 bitfield_bits '>' $@47

    $default  reduce using rule 642 ($@46)

    $@46  go to state 573


State 392

  686 type_declaration_no_options: "block" '<' . $@58 type_declaration '>' $@59
  689                            | "block" '<' . $@60 optional_function_argument_list optional_function_type '>' $@61

    ':'       reduce using rule 687 ($@60)
    '>'       reduce using rule 687 ($@60)
    '('       reduce using rule 687 ($@60)
    $default  reduce using rule 684 ($@58)

    $@58  go to state 574
    $@60  go to state 575


State 393

  693 type_declaration_no_options: "function" '<' . $@62 type_declaration '>' $@63
  696                            | "function" '<' . $@64 optional_function_argument_list optional_function_type '>' $@65

    ':'       reduce using rule 694 ($@64)
    '>'       reduce using rule 694 ($@64)
    '('       reduce using rule 694 ($@64)
    $default  reduce using rule 691 ($@62)

    $@62  go to state 576
    $@64  go to state 577


State 394

  700 type_declaration_no_options: "lambda" '<' . $@66 type_declaration '>' $@67
  703                            | "lambda" '<' . $@68 optional_function_argument_list optional_function_type '>' $@69

    ':'       reduce using rule 701 ($@68)
    '>'       reduce using rule 701 ($@68)
    '('       reduce using rule 701 ($@68)
    $default  reduce using rule 698 ($@66)

    $@66  go to state 578
    $@68  go to state 579


State 395

  706 type_declaration_no_options: "tuple" '<' . $@70 tuple_type_list '>' $@71

    $default  reduce using rule 704 ($@70)

    $@70  go to state 580


State 396

  709 type_declaration_no_options: "variant" '<' . $@72 variant_type_list '>' $@73

    $default  reduce using rule 707 ($@72)

    $@72  go to state 581


State 397

  636 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 582
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 398

  657 type_declaration_no_options: '$' name_in_namespace . '(' optional_expr_list ')'

    '('  shift, and go to state 583


State 399

  660 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 660 (type_declaration_no_options)


State 400

  665 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 665 (type_declaration_no_options)


State 401

  659 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 659 (type_declaration_no_options)


State 402

  667 type_declaration_no_options: type_declaration_no_options "==" . "const"
  668                            | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 584
    '&'      shift, and go to state 585


State 403

  673 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 673 (type_declaration_no_options)


State 404

  669 type_declaration_no_options: type_declaration_no_options '?' .

    $default  reduce using rule 669 (type_declaration_no_options)


State 405

  662 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 662 (type_declaration_no_options)


State 406

  658 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  661                            | type_declaration_no_options '-' . "const"
  663                            | type_declaration_no_options '-' . '&'
  666                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 586
    '&'      shift, and go to state 587
    '['      shift, and go to state 588
    '#'      shift, and go to state 589


State 407

  651 type_declaration_no_options: type_declaration_no_options '[' . expr ']'
  652                            | type_declaration_no_options '[' . ']'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    ']'                               shift, and go to state 590
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 591
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 408

  664 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 664 (type_declaration_no_options)


State 409

  711 type_declaration: type_declaration '|' . type_declaration_no_options
  712                 | type_declaration '|' . '#'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344
    '#'          shift, and go to state 592

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 593


State 410

  640 bitfield_alias_bits: bitfield_alias_bits . ';'
  641                    | bitfield_alias_bits . "name" ';'
  727 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@82 "name" $@83 '{' $@84 bitfield_alias_bits . $@85 '}'

    "name"  shift, and go to state 594
    ';'     shift, and go to state 595

    $default  reduce using rule 726 ($@85)

    $@85  go to state 596


State 411

  514 tuple_alias_type_list: tuple_alias_type_list . ';'
  515                      | tuple_alias_type_list . tuple_type ';'
  717 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@74 "name" $@75 '{' $@76 tuple_alias_type_list . $@77 '}'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 597
    '$'          shift, and go to state 344
    ';'          shift, and go to state 598

    $default  reduce using rule 716 ($@77)

    name_in_namespace            go to state 345
    tuple_type                   go to state 599
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 600
    $@77                         go to state 601


State 412

  520 variant_alias_type_list: variant_alias_type_list . ';'
  521                        | variant_alias_type_list . variant_type ';'
  722 variant_alias_declaration: "variant" optional_public_or_private_alias $@78 "name" $@79 '{' $@80 variant_alias_type_list . $@81 '}'

    "name"  shift, and go to state 602
    ';'     shift, and go to state 603

    $default  reduce using rule 721 ($@81)

    variant_type  go to state 604
    $@81          go to state 605


State 413

  183 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 183 (function_name)


State 414

  173 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 173 (function_name)


State 415

  506 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 606
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 416

  505 function_argument_declaration: optional_field_annotation "var" . variable_declaration

    "$i"    shift, and go to state 417
    "name"  shift, and go to state 418

    variable_declaration         go to state 607
    variable_name_with_pos_list  go to state 420


State 417

  596 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 608


State 418

  595 variable_name_with_pos_list: "name" .
  597                            | "name" . "aka" "name"

    "aka"  shift, and go to state 609

    $default  reduce using rule 595 (variable_name_with_pos_list)


State 419

  504 function_argument_declaration: optional_field_annotation variable_declaration .

    $default  reduce using rule 504 (function_argument_declaration)


State 420

  524 variable_declaration: variable_name_with_pos_list .
  525                     | variable_name_with_pos_list . '&'
  526                     | variable_name_with_pos_list . ':' type_declaration
  527                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  528                     | variable_name_with_pos_list . copy_or_move expr
  529                     | variable_name_with_pos_list . copy_or_move expr_pipe
  598 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  599                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 610
    ','   shift, and go to state 611
    '='   shift, and go to state 612
    ':'   shift, and go to state 613
    '&'   shift, and go to state 614

    $default  reduce using rule 524 (variable_declaration)

    copy_or_move  go to state 615


State 421

  121 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 121 (optional_function_argument_list)


State 422

  508 function_argument_list: function_argument_list ';' . function_argument_declaration

    "$a"  shift, and go to state 362
    "[["  shift, and go to state 218

    $default  reduce using rule 483 (optional_field_annotation)

    optional_field_annotation      go to state 364
    function_argument_declaration  go to state 616


State 423

  123 optional_function_type: ':' type_declaration .
  711 type_declaration: type_declaration . '|' type_declaration_no_options
  712                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409

    $default  reduce using rule 123 (optional_function_type)


State 424

  241 expressions: expressions error .

    $default  reduce using rule 241 (expressions)


State 425

  765 make_struct_decl: "struct" . '<' $@86 type_declaration_no_options '>' $@87 '(' make_struct_dim ')'

    '<'  shift, and go to state 617


State 426

  768 make_struct_decl: "class" . '<' $@88 type_declaration_no_options '>' $@89 '(' make_struct_dim ')'

    '<'  shift, and go to state 618


State 427

   78 expression_while_loop: "while" . expr expression_block

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 619
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 428

   62 if_or_static_if: "if" .

    $default  reduce using rule 62 (if_or_static_if)


State 429

   63 if_or_static_if: "static_if" .

    $default  reduce using rule 63 (if_or_static_if)


State 430

   76 expression_for_loop: "for" . $@4 variable_name_with_pos_list "in" expr_list expression_block

    $default  reduce using rule 75 ($@4)

    $@4  go to state 620


State 431

  385 expr: "true" .

    $default  reduce using rule 385 (expr)


State 432

  386 expr: "false" .

    $default  reduce using rule 386 (expr)


State 433

  264 expr_new: "new" . new_type_declaration
  265         | "new" . new_type_declaration '(' ')'
  266         | "new" . new_type_declaration '(' expr_list ')'
  267         | "new" . new_type_declaration '(' make_struct_dim ')'
  268         | "new" . make_decl

    "struct"       shift, and go to state 425
    "class"        shift, and go to state 426
    "array"        shift, and go to state 436
    "table"        shift, and go to state 441
    "fixed_array"  shift, and go to state 455
    "default"      shift, and go to state 456
    "tuple"        shift, and go to state 458
    "variant"      shift, and go to state 459
    "::"           shift, and go to state 58
    "[["           shift, and go to state 474
    "[{"           shift, and go to state 475
    "{{"           shift, and go to state 476
    "name"         shift, and go to state 59
    '<'            shift, and go to state 621
    '['            shift, and go to state 492
    '{'            shift, and go to state 497

    name_in_namespace           go to state 345
    new_type_declaration        go to state 622
    structure_type_declaration  go to state 623
    make_decl                   go to state 624
    make_struct_decl            go to state 543
    make_tuple_call             go to state 544
    make_dim_decl               go to state 545
    make_table_decl             go to state 546
    array_comprehension         go to state 547


State 434

  305 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  306               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  307               | "typeinfo" . '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

    '('  shift, and go to state 625


State 435

  304 expr_type_decl: "type" . '<' $@19 type_declaration '>' $@20

    '<'  shift, and go to state 626


State 436

  789 make_dim_decl: "array" . '(' expr_list optional_comma ')'
  792              | "array" . '<' $@96 type_declaration_no_options '>' $@97 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 627
    '('  shift, and go to state 628


State 437

  271 expression_return_no_pipe: "return" .
  272                          | "return" . expr_list
  273                          | "return" . "<-" expr_list
  275 expression_return: "return" . expr_pipe
  276                  | "return" . "<-" expr_pipe

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "<-"                              shift, and go to state 629
    "$ <|"                            shift, and go to state 464
    "@ <|"                            shift, and go to state 465
    "@@ <|"                           shift, and go to state 466
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    $default  reduce using rule 271 (expression_return_no_pipe)

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    expr_pipe               go to state 630
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 631
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_assign             go to state 632
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 633
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 438

  379 expr: "null" .

    $default  reduce using rule 379 (expr)


State 439

  269 expression_break: "break" .

    $default  reduce using rule 269 (expression_break)


State 440

  282 expression_try_catch: "try" . expression_block "recover" expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 634


State 441

  803 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  804                | "table" . '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  805                | "table" . '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    '<'  shift, and go to state 635
    '('  shift, and go to state 636


State 442

  258 expression_delete: "delete" . expr
  259                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "explicit"                        shift, and go to state 637
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 638
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 443

  433 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 639


State 444

   79 expression_with: "with" . expr expression_block

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 640
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 445

   81 expression_with_alias: "assume" . "name" '=' $@5 expr

    "name"  shift, and go to state 641


State 446

  295 expr_cast: "cast" . '<' $@13 type_declaration_no_options '>' $@14 expr

    '<'  shift, and go to state 642


State 447

  298 expr_cast: "upcast" . '<' $@15 type_declaration_no_options '>' $@16 expr

    '<'  shift, and go to state 643


State 448

  434 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 644


State 449

  270 expression_continue: "continue" .

    $default  reduce using rule 270 (expression_continue)


State 450

  238 expression_any: "pass" . ';'

    ';'  shift, and go to state 645


State 451

  301 expr_cast: "reinterpret" . '<' $@17 type_declaration_no_options '>' $@18 expr

    '<'  shift, and go to state 646


State 452

   54 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 647


State 453

   55 expression_goto: "goto" . "label" "integer constant"
   56                | "goto" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "label"                           shift, and go to state 648
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 649
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 454

   77 expression_unsafe: "unsafe" . expression_block
  465 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 650
    '{'  shift, and go to state 284

    expression_block  go to state 651


State 455

  793 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  796              | "fixed_array" . '<' $@98 type_declaration_no_options '>' $@99 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 652
    '('  shift, and go to state 653


State 456

  774 make_struct_decl: "default" . '<' $@92 type_declaration_no_options '>' $@93

    '<'  shift, and go to state 654


State 457

  626 basic_type_declaration: "bitfield" .

    $default  reduce using rule 626 (basic_type_declaration)


State 458

  780 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  783                | "tuple" . '<' $@94 type_declaration_no_options '>' $@95 '(' make_struct_dim ')'

    '<'  shift, and go to state 655
    '('  shift, and go to state 656


State 459

  771 make_struct_decl: "variant" . '<' $@90 type_declaration_no_options '>' $@91 '(' make_struct_dim ')'

    '<'  shift, and go to state 657


State 460

  435 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  436     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 658


State 461

  277 expression_yield_no_pipe: "yield" . expr
  278                         | "yield" . "<-" expr
  280 expression_yield: "yield" . expr_pipe
  281                 | "yield" . "<-" expr_pipe

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "<-"                              shift, and go to state 659
    "$ <|"                            shift, and go to state 464
    "@ <|"                            shift, and go to state 465
    "@@ <|"                           shift, and go to state 466
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    expr_pipe               go to state 660
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_assign             go to state 632
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 661
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 462

  415 expr: "++" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 662
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 463

  416 expr: "--" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 663
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 464

  254 expr_pipe: "$ <|" . expr_block

    '$'  shift, and go to state 494
    '@'  shift, and go to state 664
    '{'  shift, and go to state 284

    expression_block  go to state 665
    block_or_lambda   go to state 666
    expr_block        go to state 667


State 465

  252 expr_pipe: "@ <|" . expr_block

    '$'  shift, and go to state 494
    '@'  shift, and go to state 664
    '{'  shift, and go to state 284

    expression_block  go to state 665
    block_or_lambda   go to state 666
    expr_block        go to state 668


State 466

  253 expr_pipe: "@@ <|" . expr_block

    '$'  shift, and go to state 494
    '@'  shift, and go to state 664
    '{'  shift, and go to state 284

    expression_block  go to state 665
    block_or_lambda   go to state 666
    expr_block        go to state 669


State 467

  467 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 670


State 468

  468 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 671


State 469

  469 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 672


State 470

  470 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 673


State 471

  471 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 674


State 472

  473 expr_mtag: "$c" . '(' expr ')' '(' ')'
  474          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 675


State 473

  472 expr_mtag: "..." .

    $default  reduce using rule 472 (expr_mtag)


State 474

  757 make_struct_decl: "[[" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  758                 | "[[" . type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  759                 | "[[" . type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  760                 | "[[" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  787 make_dim_decl: "[[" . type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  811 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 676
    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 677


State 475

  761 make_struct_decl: "[{" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  762                 | "[{" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  788 make_dim_decl: "[{" . type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  812 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "for"        shift, and go to state 678
    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 679


State 476

  802 make_table_decl: "{{" . make_table optional_trailing_semicolon_cur_cur
  814 array_comprehension: "{{" . "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}' '}'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "for"                             shift, and go to state 680
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 681
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_map_tuple          go to state 682
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table              go to state 683
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 477

  327 expr_numeric_const: "integer constant" .

    $default  reduce using rule 327 (expr_numeric_const)


State 478

  329 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 329 (expr_numeric_const)


State 479

  328 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 328 (expr_numeric_const)


State 480

  330 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 330 (expr_numeric_const)


State 481

  331 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 331 (expr_numeric_const)


State 482

  332 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 332 (expr_numeric_const)


State 483

  333 expr_numeric_const: "double constant" .

    $default  reduce using rule 333 (expr_numeric_const)


State 484

  242 expr_keyword: "keyword" . expr expression_block
  247 expression_keyword: "keyword" . '<' $@7 type_declaration_no_options '>' $@8 expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '<'                               shift, and go to state 684
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 685
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 485

  250 expression_keyword: "type function" . '<' $@9 type_declaration_no_options '>' $@10 '(' optional_expr_list ')'

    '<'  shift, and go to state 686


State 486

   31 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 28 (string_builder_body)

    string_builder_body  go to state 687


State 487

  392 expr: '-' . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 688
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 488

  391 expr: '+' . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 689
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 489

  432 expr: '*' . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 690
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 490

  390 expr: '~' . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 691
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 491

  389 expr: '!' . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 692
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 492

  786 make_dim_decl: '[' . expr_list optional_comma ']'
  810 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "for"                             shift, and go to state 693
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 694
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 695
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 493

  419 expr: '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 696
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 695
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 494

  313 block_or_lambda: '$' .

    $default  reduce using rule 313 (block_or_lambda)


State 495

  314 block_or_lambda: '@' .
  315                | '@' . '@'
  365 func_addr_expr: '@' . '@' func_addr_name
  368               | '@' . '@' '<' $@21 type_declaration_no_options '>' $@22 func_addr_name
  371               | '@' . '@' '<' $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name
  482 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 697

    $default  reduce using rule 314 (block_or_lambda)


State 496

  218 expression_any: ';' .

    $default  reduce using rule 218 (expression_any)


State 497

  801 make_table_decl: '{' . expr_map_tuple_list optional_comma '}'
  813 array_comprehension: '{' . "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "for"                             shift, and go to state 698
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 681
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_map_tuple          go to state 699
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    expr_map_tuple_list     go to state 700
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 498

  216 expression_block: '{' expressions '}' .
  217                 | '{' expressions '}' . "finally" '{' expressions '}'

    "finally"  shift, and go to state 701

    $default  reduce using rule 216 (expression_block)


State 499

  383 expr: string_builder .

    $default  reduce using rule 383 (expr)


State 500

  382 expr: expr_reader .

    $default  reduce using rule 382 (expr)


State 501

  236 expression_any: expression_label . ';'

    ';'  shift, and go to state 702


State 502

  237 expression_any: expression_goto . ';'

    ';'  shift, and go to state 703


State 503

   72 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 704
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 504

   74 expression_if_then_else: expression_if_one_liner . "if" $@3 expr expression_else_one_liner ';'

    "if"  shift, and go to state 705


State 505

  234 expression_any: expression_if_then_else .

    $default  reduce using rule 234 (expression_any)


State 506

  229 expression_any: expression_for_loop .

    $default  reduce using rule 229 (expression_any)


State 507

  226 expression_any: expression_unsafe .

    $default  reduce using rule 226 (expression_any)


State 508

  225 expression_any: expression_while_loop .

    $default  reduce using rule 225 (expression_any)


State 509

  227 expression_any: expression_with .

    $default  reduce using rule 227 (expression_any)


State 510

  228 expression_any: expression_with_alias .

    $default  reduce using rule 228 (expression_any)


State 511

  240 expressions: expressions expression_any .

    $default  reduce using rule 240 (expressions)


State 512

  220 expression_any: expr_keyword .

    $default  reduce using rule 220 (expression_any)


State 513

  466 expr: expression_keyword .

    $default  reduce using rule 466 (expr)


State 514

  219 expression_any: expr_pipe .

    $default  reduce using rule 219 (expression_any)


State 515

  359 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  360                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  380 expr: name_in_namespace .
  427     | name_in_namespace . '(' ')'
  428     | name_in_namespace . '(' make_struct_dim ')'
  429     | name_in_namespace . '(' expr_list ')'
  464     | name_in_namespace . "name"

    "name"  shift, and go to state 706
    '('     shift, and go to state 707

    "name"    [reduce using rule 380 (expr)]
    '('       [reduce using rule 380 (expr)]
    $default  reduce using rule 380 (expr)


State 516

  223 expression_any: expression_delete . ';'

    ';'  shift, and go to state 708


State 517

  457 expr: expr_new .

    $default  reduce using rule 457 (expr)


State 518

   70 expression_if_one_liner: expression_break .
  230 expression_any: expression_break . ';'

    ';'  shift, and go to state 709

    $default  reduce using rule 70 (expression_if_one_liner)


State 519

   71 expression_if_one_liner: expression_continue .
  231 expression_any: expression_continue . ';'

    ';'  shift, and go to state 710

    $default  reduce using rule 71 (expression_if_one_liner)


State 520

   68 expression_if_one_liner: expression_return_no_pipe .
  274 expression_return: expression_return_no_pipe . ';'

    ';'  shift, and go to state 711

    $default  reduce using rule 68 (expression_if_one_liner)


State 521

  232 expression_any: expression_return .

    $default  reduce using rule 232 (expression_any)


State 522

   69 expression_if_one_liner: expression_yield_no_pipe .
  279 expression_yield: expression_yield_no_pipe . ';'

    ';'  shift, and go to state 712

    $default  reduce using rule 69 (expression_if_one_liner)


State 523

  233 expression_any: expression_yield .

    $default  reduce using rule 233 (expression_any)


State 524

  235 expression_any: expression_try_catch .

    $default  reduce using rule 235 (expression_any)


State 525

  291 expression_let: kwd_let . optional_in_scope let_variable_declaration
  292               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 713

    $default  reduce using rule 286 (optional_in_scope)

    optional_in_scope  go to state 714


State 526

  224 expression_any: expression_let .

    $default  reduce using rule 224 (expression_any)


State 527

  456 expr: expr_cast .

    $default  reduce using rule 456 (expr)


State 528

  455 expr: expr_type_decl .

    $default  reduce using rule 455 (expr)


State 529

  454 expr: expr_type_info .

    $default  reduce using rule 454 (expr)


State 530

  326 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 14

    $default  reduce using rule 117 (optional_annotation_list)

    optional_annotation_list  go to state 715


State 531

  460 expr: expr_full_block .

    $default  reduce using rule 460 (expr)


State 532

  381 expr: expr_numeric_const .

    $default  reduce using rule 381 (expr)


State 533

  222 expression_any: expr_assign . ';'
  251 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 716
    ';'    shift, and go to state 717


State 534

  221 expression_any: expr_assign_pipe .

    $default  reduce using rule 221 (expression_any)


State 535

  459 expr: expr_named_call .

    $default  reduce using rule 459 (expr)


State 536

  458 expr: expr_method_call .

    $default  reduce using rule 458 (expr)


State 537

  426 expr: func_addr_expr .

    $default  reduce using rule 426 (expr)


State 538

  387 expr: expr_field .

    $default  reduce using rule 387 (expr)


State 539

   67 expression_if_one_liner: expr .
  334 expr_assign: expr .
  335            | expr . '=' expr
  336            | expr . "<-" expr
  337            | expr . ":=" expr
  338            | expr . "&=" expr
  339            | expr . "|=" expr
  340            | expr . "^=" expr
  341            | expr . "&&=" expr
  342            | expr . "||=" expr
  343            | expr . "^^=" expr
  344            | expr . "+=" expr
  345            | expr . "-=" expr
  346            | expr . "*=" expr
  347            | expr . "/=" expr
  348            | expr . "%=" expr
  349            | expr . "<<=" expr
  350            | expr . ">>=" expr
  351            | expr . "<<<=" expr
  352            | expr . ">>>=" expr
  353 expr_assign_pipe: expr . '=' "@ <|" expr_block
  354                 | expr . '=' "@@ <|" expr_block
  355                 | expr . '=' "$ <|" expr_block
  356                 | expr . "<-" "@ <|" expr_block
  357                 | expr . "<-" "@@ <|" expr_block
  358                 | expr . "<-" "$ <|" expr_block
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 718
    "as"    shift, and go to state 719
    "+="    shift, and go to state 720
    "-="    shift, and go to state 721
    "/="    shift, and go to state 722
    "*="    shift, and go to state 723
    "%="    shift, and go to state 724
    "&="    shift, and go to state 725
    "|="    shift, and go to state 726
    "^="    shift, and go to state 727
    "<<"    shift, and go to state 728
    ">>"    shift, and go to state 729
    "++"    shift, and go to state 730
    "--"    shift, and go to state 731
    "<="    shift, and go to state 732
    "<<="   shift, and go to state 733
    ">>="   shift, and go to state 734
    ">="    shift, and go to state 735
    "=="    shift, and go to state 736
    "!="    shift, and go to state 737
    "->"    shift, and go to state 738
    "<-"    shift, and go to state 739
    "??"    shift, and go to state 740
    "?."    shift, and go to state 741
    "?["    shift, and go to state 742
    "<|"    shift, and go to state 743
    "|>"    shift, and go to state 744
    ":="    shift, and go to state 745
    "<<<"   shift, and go to state 746
    ">>>"   shift, and go to state 747
    "<<<="  shift, and go to state 748
    ">>>="  shift, and go to state 749
    "&&"    shift, and go to state 750
    "||"    shift, and go to state 751
    "^^"    shift, and go to state 752
    "&&="   shift, and go to state 753
    "||="   shift, and go to state 754
    "^^="   shift, and go to state 755
    ".."    shift, and go to state 756
    '='     shift, and go to state 757
    '?'     shift, and go to state 758
    '|'     shift, and go to state 759
    '^'     shift, and go to state 760
    '&'     shift, and go to state 761
    '<'     shift, and go to state 762
    '>'     shift, and go to state 763
    '-'     shift, and go to state 764
    '+'     shift, and go to state 765
    '*'     shift, and go to state 766
    '/'     shift, and go to state 767
    '%'     shift, and go to state 768
    '.'     shift, and go to state 769
    '['     shift, and go to state 770

    "if"      reduce using rule 67 (expression_if_one_liner)
    $default  reduce using rule 334 (expr_assign)


State 540

  388 expr: expr_mtag .

    $default  reduce using rule 388 (expr)


State 541

  430 expr: basic_type_declaration . '(' ')'
  431     | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 771


State 542

  384 expr: make_decl .

    $default  reduce using rule 384 (expr)


State 543

  728 make_decl: make_struct_decl .

    $default  reduce using rule 728 (make_decl)


State 544

  732 make_decl: make_tuple_call .

    $default  reduce using rule 732 (make_decl)


State 545

  729 make_decl: make_dim_decl .

    $default  reduce using rule 729 (make_decl)


State 546

  730 make_decl: make_table_decl .

    $default  reduce using rule 730 (make_decl)


State 547

  731 make_decl: array_comprehension .

    $default  reduce using rule 731 (make_decl)


State 548

  579 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@42 . enum_list $@43 '}'

    $default  reduce using rule 556 (enum_list)

    enum_list  go to state 772


State 549

  558 enum_list: enum_list "name" . ';'
  559          | enum_list "name" . '=' expr ';'

    '='  shift, and go to state 773
    ';'  shift, and go to state 774


State 550

  557 enum_list: enum_list ';' .

    $default  reduce using rule 557 (enum_list)


State 551

  576 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@40 enum_list $@41 . '}'

    '}'  shift, and go to state 775


State 552

  581 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 581 (optional_structure_parent)


State 553

  498 struct_variable_declaration_list: struct_variable_declaration_list . $@33 structure_variable_declaration ';'
  500                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header ';'
  502                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block
  503                                 | struct_variable_declaration_list . '[' annotation_list ']' ';'
  591 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list . '}'

    '['  shift, and go to state 776
    '}'  shift, and go to state 777

    "def"     reduce using rule 117 (optional_annotation_list)
    $default  reduce using rule 497 ($@33)

    optional_annotation_list  go to state 778
    $@33                      go to state 779


State 554

  547 global_variable_declaration_list: global_variable_declaration_list $@36 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 547 (global_variable_declaration_list)


State 555

  484 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 484 (optional_field_annotation)


State 556

  465 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 650


State 557

  247 expression_keyword: "keyword" . '<' $@7 type_declaration_no_options '>' $@8 expr

    '<'  shift, and go to state 684


State 558

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'
  536 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ')'    shift, and go to state 780


State 559

  537 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 537 (let_variable_name_with_pos_list)


State 560

  538 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  539                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 781

    $default  reduce using rule 538 (let_variable_name_with_pos_list)


State 561

  540 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . ';'
  541                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr ';'
  542                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  651 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  652                            | type_declaration_no_options . '[' ']'
  658                            | type_declaration_no_options . '-' '[' ']'
  659                            | type_declaration_no_options . "explicit"
  660                            | type_declaration_no_options . "const"
  661                            | type_declaration_no_options . '-' "const"
  662                            | type_declaration_no_options . '&'
  663                            | type_declaration_no_options . '-' '&'
  664                            | type_declaration_no_options . '#'
  665                            | type_declaration_no_options . "implicit"
  666                            | type_declaration_no_options . '-' '#'
  667                            | type_declaration_no_options . "==" "const"
  668                            | type_declaration_no_options . "==" '&'
  669                            | type_declaration_no_options . '?'
  673                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "<-"        shift, and go to state 562
    "??"        shift, and go to state 403
    ":="        shift, and go to state 563
    '='         shift, and go to state 564
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    ';'         shift, and go to state 782
    '#'         shift, and go to state 408

    copy_or_move_or_clone  go to state 783


State 562

  531 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 531 (copy_or_move_or_clone)


State 563

  532 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 532 (copy_or_move_or_clone)


State 564

  530 copy_or_move_or_clone: '=' .

    $default  reduce using rule 530 (copy_or_move_or_clone)


State 565

  543 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr ';'
  544                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "$ <|"                            shift, and go to state 464
    "@ <|"                            shift, and go to state 465
    "@@ <|"                           shift, and go to state 466
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    expr_pipe               go to state 784
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_assign             go to state 632
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 785
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 566

  655 type_declaration_no_options: "type" '<' $@48 . type_declaration '>' $@49

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 786


State 567

  676 type_declaration_no_options: "array" '<' $@52 . type_declaration '>' $@53

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 787


State 568

  679 type_declaration_no_options: "table" '<' $@54 . table_type_pair '>' $@55

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    table_type_pair              go to state 788
    type_declaration_no_options  go to state 350
    type_declaration             go to state 789


State 569

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'
  656 type_declaration_no_options: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ')'    shift, and go to state 790


State 570

  682 type_declaration_no_options: "iterator" '<' $@56 . type_declaration '>' $@57

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 791


State 571

  672 type_declaration_no_options: "smart_ptr" '<' $@50 . type_declaration '>' $@51

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 792


State 572

  635 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 793


State 573

  644 bitfield_type_declaration: "bitfield" '<' $@46 . bitfield_bits '>' $@47

    "name"  shift, and go to state 794

    bitfield_bits  go to state 795


State 574

  686 type_declaration_no_options: "block" '<' $@58 . type_declaration '>' $@59

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 796


State 575

  689 type_declaration_no_options: "block" '<' $@60 . optional_function_argument_list optional_function_type '>' $@61

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 797


State 576

  693 type_declaration_no_options: "function" '<' $@62 . type_declaration '>' $@63

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 798


State 577

  696 type_declaration_no_options: "function" '<' $@64 . optional_function_argument_list optional_function_type '>' $@65

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 799


State 578

  700 type_declaration_no_options: "lambda" '<' $@66 . type_declaration '>' $@67

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 800


State 579

  703 type_declaration_no_options: "lambda" '<' $@68 . optional_function_argument_list optional_function_type '>' $@69

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 801


State 580

  706 type_declaration_no_options: "tuple" '<' $@70 . tuple_type_list '>' $@71

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 597
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    tuple_type                   go to state 802
    tuple_type_list              go to state 803
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 600


State 581

  709 type_declaration_no_options: "variant" '<' $@72 . variant_type_list '>' $@73

    "name"  shift, and go to state 602

    variant_type       go to state 804
    variant_type_list  go to state 805


State 582

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'
  636 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ')'    shift, and go to state 806


State 583

  657 type_declaration_no_options: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    $default  reduce using rule 243 (optional_expr_list)

    string_builder          go to state 499
    expr_reader             go to state 500
    optional_expr_list      go to state 807
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 808
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 695
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 584

  667 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 667 (type_declaration_no_options)


State 585

  668 type_declaration_no_options: type_declaration_no_options "==" '&' .

    $default  reduce using rule 668 (type_declaration_no_options)


State 586

  661 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 661 (type_declaration_no_options)


State 587

  663 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 663 (type_declaration_no_options)


State 588

  658 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 809


State 589

  666 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 666 (type_declaration_no_options)


State 590

  652 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 652 (type_declaration_no_options)


State 591

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'
  651 type_declaration_no_options: type_declaration_no_options '[' expr . ']'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ']'    shift, and go to state 810


State 592

  712 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 712 (type_declaration)


State 593

  651 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  652                            | type_declaration_no_options . '[' ']'
  658                            | type_declaration_no_options . '-' '[' ']'
  659                            | type_declaration_no_options . "explicit"
  660                            | type_declaration_no_options . "const"
  661                            | type_declaration_no_options . '-' "const"
  662                            | type_declaration_no_options . '&'
  663                            | type_declaration_no_options . '-' '&'
  664                            | type_declaration_no_options . '#'
  665                            | type_declaration_no_options . "implicit"
  666                            | type_declaration_no_options . '-' '#'
  667                            | type_declaration_no_options . "==" "const"
  668                            | type_declaration_no_options . "==" '&'
  669                            | type_declaration_no_options . '?'
  673                            | type_declaration_no_options . "??"
  711 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    $default  reduce using rule 711 (type_declaration)


State 594

  641 bitfield_alias_bits: bitfield_alias_bits "name" . ';'

    ';'  shift, and go to state 811


State 595

  640 bitfield_alias_bits: bitfield_alias_bits ';' .

    $default  reduce using rule 640 (bitfield_alias_bits)


State 596

  727 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@82 "name" $@83 '{' $@84 bitfield_alias_bits $@85 . '}'

    '}'  shift, and go to state 812


State 597

  255 name_in_namespace: "name" .
  256                  | "name" . "::" "name"
  510 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 98
    ':'   shift, and go to state 813

    $default  reduce using rule 255 (name_in_namespace)


State 598

  514 tuple_alias_type_list: tuple_alias_type_list ';' .

    $default  reduce using rule 514 (tuple_alias_type_list)


State 599

  515 tuple_alias_type_list: tuple_alias_type_list tuple_type . ';'

    ';'  shift, and go to state 814


State 600

  509 tuple_type: type_declaration .
  711 type_declaration: type_declaration . '|' type_declaration_no_options
  712                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409

    $default  reduce using rule 509 (tuple_type)


State 601

  717 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@74 "name" $@75 '{' $@76 tuple_alias_type_list $@77 . '}'

    '}'  shift, and go to state 815


State 602

  516 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 816


State 603

  520 variant_alias_type_list: variant_alias_type_list ';' .

    $default  reduce using rule 520 (variant_alias_type_list)


State 604

  521 variant_alias_type_list: variant_alias_type_list variant_type . ';'

    ';'  shift, and go to state 817


State 605

  722 variant_alias_declaration: "variant" optional_public_or_private_alias $@78 "name" $@79 '{' $@80 variant_alias_type_list $@81 . '}'

    '}'  shift, and go to state 818


State 606

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'
  506 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ')'    shift, and go to state 819


State 607

  505 function_argument_declaration: optional_field_annotation "var" variable_declaration .

    $default  reduce using rule 505 (function_argument_declaration)


State 608

  596 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 820
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 609

  597 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 821


State 610

  523 copy_or_move: "<-" .

    $default  reduce using rule 523 (copy_or_move)


State 611

  598 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  599                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 822


State 612

  522 copy_or_move: '=' .

    $default  reduce using rule 522 (copy_or_move)


State 613

  526 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  527                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 823


State 614

  525 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 525 (variable_declaration)


State 615

  528 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  529                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "$ <|"                            shift, and go to state 464
    "@ <|"                            shift, and go to state 465
    "@@ <|"                           shift, and go to state 466
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    expr_pipe               go to state 824
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_assign             go to state 632
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 825
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 616

  508 function_argument_list: function_argument_list ';' function_argument_declaration .

    $default  reduce using rule 508 (function_argument_list)


State 617

  765 make_struct_decl: "struct" '<' . $@86 type_declaration_no_options '>' $@87 '(' make_struct_dim ')'

    $default  reduce using rule 763 ($@86)

    $@86  go to state 826


State 618

  768 make_struct_decl: "class" '<' . $@88 type_declaration_no_options '>' $@89 '(' make_struct_dim ')'

    $default  reduce using rule 766 ($@88)

    $@88  go to state 827


State 619

   78 expression_while_loop: "while" expr . expression_block
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    '{'    shift, and go to state 284

    expression_block  go to state 828


State 620

   76 expression_for_loop: "for" $@4 . variable_name_with_pos_list "in" expr_list expression_block

    "$i"    shift, and go to state 417
    "name"  shift, and go to state 418

    variable_name_with_pos_list  go to state 829


State 621

  262 new_type_declaration: '<' . $@11 type_declaration '>' $@12

    $default  reduce using rule 260 ($@11)

    $@11  go to state 830


State 622

  264 expr_new: "new" new_type_declaration .
  265         | "new" new_type_declaration . '(' ')'
  266         | "new" new_type_declaration . '(' expr_list ')'
  267         | "new" new_type_declaration . '(' make_struct_dim ')'

    '('  shift, and go to state 831

    '('       [reduce using rule 264 (expr_new)]
    $default  reduce using rule 264 (expr_new)


State 623

  263 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 263 (new_type_declaration)


State 624

  268 expr_new: "new" make_decl .

    $default  reduce using rule 268 (expr_new)


State 625

  305 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  306               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  307               | "typeinfo" '(' . name_in_namespace '<' "name" ';' "name" '>' expr ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 832


State 626

  304 expr_type_decl: "type" '<' . $@19 type_declaration '>' $@20

    $default  reduce using rule 302 ($@19)

    $@19  go to state 833


State 627

  792 make_dim_decl: "array" '<' . $@96 type_declaration_no_options '>' $@97 '(' expr_list optional_comma ')'

    $default  reduce using rule 790 ($@96)

    $@96  go to state 834


State 628

  789 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 835
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 695
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 629

  273 expression_return_no_pipe: "return" "<-" . expr_list
  276 expression_return: "return" "<-" . expr_pipe

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "$ <|"                            shift, and go to state 464
    "@ <|"                            shift, and go to state 465
    "@@ <|"                           shift, and go to state 466
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    expr_pipe               go to state 836
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 837
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_assign             go to state 632
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 633
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 630

  275 expression_return: "return" expr_pipe .

    $default  reduce using rule 275 (expression_return)


State 631

  272 expression_return_no_pipe: "return" expr_list .
  309 expr_list: expr_list . ',' expr

    ','  shift, and go to state 838

    $default  reduce using rule 272 (expression_return_no_pipe)


State 632

  251 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 716


State 633

  308 expr_list: expr .
  334 expr_assign: expr .
  335            | expr . '=' expr
  336            | expr . "<-" expr
  337            | expr . ":=" expr
  338            | expr . "&=" expr
  339            | expr . "|=" expr
  340            | expr . "^=" expr
  341            | expr . "&&=" expr
  342            | expr . "||=" expr
  343            | expr . "^^=" expr
  344            | expr . "+=" expr
  345            | expr . "-=" expr
  346            | expr . "*=" expr
  347            | expr . "/=" expr
  348            | expr . "%=" expr
  349            | expr . "<<=" expr
  350            | expr . ">>=" expr
  351            | expr . "<<<=" expr
  352            | expr . ">>>=" expr
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 718
    "as"    shift, and go to state 719
    "+="    shift, and go to state 720
    "-="    shift, and go to state 721
    "/="    shift, and go to state 722
    "*="    shift, and go to state 723
    "%="    shift, and go to state 724
    "&="    shift, and go to state 725
    "|="    shift, and go to state 726
    "^="    shift, and go to state 727
    "<<"    shift, and go to state 728
    ">>"    shift, and go to state 729
    "++"    shift, and go to state 730
    "--"    shift, and go to state 731
    "<="    shift, and go to state 732
    "<<="   shift, and go to state 733
    ">>="   shift, and go to state 734
    ">="    shift, and go to state 735
    "=="    shift, and go to state 736
    "!="    shift, and go to state 737
    "->"    shift, and go to state 738
    "<-"    shift, and go to state 839
    "??"    shift, and go to state 740
    "?."    shift, and go to state 741
    "?["    shift, and go to state 742
    "<|"    shift, and go to state 743
    "|>"    shift, and go to state 744
    ":="    shift, and go to state 745
    "<<<"   shift, and go to state 746
    ">>>"   shift, and go to state 747
    "<<<="  shift, and go to state 748
    ">>>="  shift, and go to state 749
    "&&"    shift, and go to state 750
    "||"    shift, and go to state 751
    "^^"    shift, and go to state 752
    "&&="   shift, and go to state 753
    "||="   shift, and go to state 754
    "^^="   shift, and go to state 755
    ".."    shift, and go to state 756
    '='     shift, and go to state 840
    '?'     shift, and go to state 758
    '|'     shift, and go to state 759
    '^'     shift, and go to state 760
    '&'     shift, and go to state 761
    '<'     shift, and go to state 762
    '>'     shift, and go to state 763
    '-'     shift, and go to state 764
    '+'     shift, and go to state 765
    '*'     shift, and go to state 766
    '/'     shift, and go to state 767
    '%'     shift, and go to state 768
    '.'     shift, and go to state 769
    '['     shift, and go to state 770

    " <|"     reduce using rule 334 (expr_assign)
    $default  reduce using rule 308 (expr_list)


State 634

  282 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 841


State 635

  804 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  805                | "table" '<' . type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 842


State 636

  803 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 681
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_map_tuple          go to state 699
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    expr_map_tuple_list     go to state 843
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 637

  259 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 844
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 638

  258 expression_delete: "delete" expr .
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 258 (expression_delete)


State 639

  433 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 845
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 640

   79 expression_with: "with" expr . expression_block
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    '{'    shift, and go to state 284

    expression_block  go to state 846


State 641

   81 expression_with_alias: "assume" "name" . '=' $@5 expr

    '='  shift, and go to state 847


State 642

  295 expr_cast: "cast" '<' . $@13 type_declaration_no_options '>' $@14 expr

    $default  reduce using rule 293 ($@13)

    $@13  go to state 848


State 643

  298 expr_cast: "upcast" '<' . $@15 type_declaration_no_options '>' $@16 expr

    $default  reduce using rule 296 ($@15)

    $@15  go to state 849


State 644

  434 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 850
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 645

  238 expression_any: "pass" ';' .

    $default  reduce using rule 238 (expression_any)


State 646

  301 expr_cast: "reinterpret" '<' . $@17 type_declaration_no_options '>' $@18 expr

    $default  reduce using rule 299 ($@17)

    $@17  go to state 851


State 647

   54 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 852


State 648

   55 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 853


State 649

   56 expression_goto: "goto" expr .
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 56 (expression_goto)


State 650

  465 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 854
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 651

   77 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 77 (expression_unsafe)


State 652

  796 make_dim_decl: "fixed_array" '<' . $@98 type_declaration_no_options '>' $@99 '(' expr_list optional_comma ')'

    $default  reduce using rule 794 ($@98)

    $@98  go to state 855


State 653

  793 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 856
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 695
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 654

  774 make_struct_decl: "default" '<' . $@92 type_declaration_no_options '>' $@93

    $default  reduce using rule 772 ($@92)

    $@92  go to state 857


State 655

  783 make_tuple_call: "tuple" '<' . $@94 type_declaration_no_options '>' $@95 '(' make_struct_dim ')'

    $default  reduce using rule 781 ($@94)

    $@94  go to state 858


State 656

  780 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 859
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 695
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 657

  771 make_struct_decl: "variant" '<' . $@90 type_declaration_no_options '>' $@91 '(' make_struct_dim ')'

    $default  reduce using rule 769 ($@90)

    $@90  go to state 860


State 658

  435 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  436     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 861


State 659

  278 expression_yield_no_pipe: "yield" "<-" . expr
  281 expression_yield: "yield" "<-" . expr_pipe

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "$ <|"                            shift, and go to state 464
    "@ <|"                            shift, and go to state 465
    "@@ <|"                           shift, and go to state 466
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    expr_pipe               go to state 862
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_assign             go to state 632
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 863
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 660

  280 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 280 (expression_yield)


State 661

  277 expression_yield_no_pipe: "yield" expr .
  334 expr_assign: expr .
  335            | expr . '=' expr
  336            | expr . "<-" expr
  337            | expr . ":=" expr
  338            | expr . "&=" expr
  339            | expr . "|=" expr
  340            | expr . "^=" expr
  341            | expr . "&&=" expr
  342            | expr . "||=" expr
  343            | expr . "^^=" expr
  344            | expr . "+=" expr
  345            | expr . "-=" expr
  346            | expr . "*=" expr
  347            | expr . "/=" expr
  348            | expr . "%=" expr
  349            | expr . "<<=" expr
  350            | expr . ">>=" expr
  351            | expr . "<<<=" expr
  352            | expr . ">>>=" expr
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 718
    "as"    shift, and go to state 719
    "+="    shift, and go to state 720
    "-="    shift, and go to state 721
    "/="    shift, and go to state 722
    "*="    shift, and go to state 723
    "%="    shift, and go to state 724
    "&="    shift, and go to state 725
    "|="    shift, and go to state 726
    "^="    shift, and go to state 727
    "<<"    shift, and go to state 728
    ">>"    shift, and go to state 729
    "++"    shift, and go to state 730
    "--"    shift, and go to state 731
    "<="    shift, and go to state 732
    "<<="   shift, and go to state 733
    ">>="   shift, and go to state 734
    ">="    shift, and go to state 735
    "=="    shift, and go to state 736
    "!="    shift, and go to state 737
    "->"    shift, and go to state 738
    "<-"    shift, and go to state 839
    "??"    shift, and go to state 740
    "?."    shift, and go to state 741
    "?["    shift, and go to state 742
    "<|"    shift, and go to state 743
    "|>"    shift, and go to state 744
    ":="    shift, and go to state 745
    "<<<"   shift, and go to state 746
    ">>>"   shift, and go to state 747
    "<<<="  shift, and go to state 748
    ">>>="  shift, and go to state 749
    "&&"    shift, and go to state 750
    "||"    shift, and go to state 751
    "^^"    shift, and go to state 752
    "&&="   shift, and go to state 753
    "||="   shift, and go to state 754
    "^^="   shift, and go to state 755
    ".."    shift, and go to state 756
    '='     shift, and go to state 840
    '?'     shift, and go to state 758
    '|'     shift, and go to state 759
    '^'     shift, and go to state 760
    '&'     shift, and go to state 761
    '<'     shift, and go to state 762
    '>'     shift, and go to state 763
    '-'     shift, and go to state 764
    '+'     shift, and go to state 765
    '*'     shift, and go to state 766
    '/'     shift, and go to state 767
    '%'     shift, and go to state 768
    '.'     shift, and go to state 769
    '['     shift, and go to state 770

    " <|"     reduce using rule 334 (expr_assign)
    $default  reduce using rule 277 (expression_yield_no_pipe)


State 662

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  415     | "++" expr .
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 718
    "as"  shift, and go to state 719
    "++"  shift, and go to state 730
    "--"  shift, and go to state 731
    "->"  shift, and go to state 738
    "?."  shift, and go to state 741
    "?["  shift, and go to state 742
    "<|"  shift, and go to state 743
    "|>"  shift, and go to state 744
    '.'   shift, and go to state 769
    '['   shift, and go to state 770

    $default  reduce using rule 415 (expr)


State 663

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  416     | "--" expr .
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 718
    "as"  shift, and go to state 719
    "++"  shift, and go to state 730
    "--"  shift, and go to state 731
    "->"  shift, and go to state 738
    "?."  shift, and go to state 741
    "?["  shift, and go to state 742
    "<|"  shift, and go to state 743
    "|>"  shift, and go to state 744
    '.'   shift, and go to state 769
    '['   shift, and go to state 770

    $default  reduce using rule 416 (expr)


State 664

  314 block_or_lambda: '@' .
  315                | '@' . '@'

    '@'  shift, and go to state 864

    $default  reduce using rule 314 (block_or_lambda)


State 665

  324 expr_block: expression_block .

    $default  reduce using rule 324 (expr_block)


State 666

  325 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 14

    $default  reduce using rule 117 (optional_annotation_list)

    optional_annotation_list  go to state 865


State 667

  254 expr_pipe: "$ <|" expr_block .

    $default  reduce using rule 254 (expr_pipe)


State 668

  252 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 252 (expr_pipe)


State 669

  253 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 253 (expr_pipe)


State 670

  467 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 866
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 671

  468 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 867
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 672

  469 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 868
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 673

  470 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 869
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 674

  471 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 870
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 675

  473 expr_mtag: "$c" '(' . expr ')' '(' ')'
  474          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 871
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 676

  811 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "$i"    shift, and go to state 417
    "name"  shift, and go to state 418

    variable_name_with_pos_list  go to state 872


State 677

  651 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  652                            | type_declaration_no_options . '[' ']'
  658                            | type_declaration_no_options . '-' '[' ']'
  659                            | type_declaration_no_options . "explicit"
  660                            | type_declaration_no_options . "const"
  661                            | type_declaration_no_options . '-' "const"
  662                            | type_declaration_no_options . '&'
  663                            | type_declaration_no_options . '-' '&'
  664                            | type_declaration_no_options . '#'
  665                            | type_declaration_no_options . "implicit"
  666                            | type_declaration_no_options . '-' '#'
  667                            | type_declaration_no_options . "==" "const"
  668                            | type_declaration_no_options . "==" '&'
  669                            | type_declaration_no_options . '?'
  673                            | type_declaration_no_options . "??"
  757 make_struct_decl: "[[" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  758                 | "[[" type_declaration_no_options . optional_block optional_trailing_delim_sqr_sqr
  759                 | "[[" type_declaration_no_options . '(' ')' optional_block optional_trailing_delim_sqr_sqr
  760                 | "[[" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  787 make_dim_decl: "[[" type_declaration_no_options . make_dim optional_trailing_semicolon_sqr_sqr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "const"                           shift, and go to state 399
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "where"                           shift, and go to state 873
    "reinterpret"                     shift, and go to state 451
    "implicit"                        shift, and go to state 400
    "explicit"                        shift, and go to state 401
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "=="                              shift, and go to state 402
    "??"                              shift, and go to state 403
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "$f"                              shift, and go to state 874
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 875
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '?'                               shift, and go to state 404
    '&'                               shift, and go to state 405
    '-'                               shift, and go to state 876
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 877
    '('                               shift, and go to state 878
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497
    '#'                               shift, and go to state 408

    $default  reduce using rule 743 (optional_block)

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 879
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_fields      go to state 880
    make_struct_dim         go to state 881
    optional_block          go to state 882
    make_struct_decl        go to state 543
    make_tuple              go to state 883
    make_tuple_call         go to state 544
    make_dim                go to state 884
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 678

  812 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "$i"    shift, and go to state 417
    "name"  shift, and go to state 418

    variable_name_with_pos_list  go to state 885


State 679

  651 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  652                            | type_declaration_no_options . '[' ']'
  658                            | type_declaration_no_options . '-' '[' ']'
  659                            | type_declaration_no_options . "explicit"
  660                            | type_declaration_no_options . "const"
  661                            | type_declaration_no_options . '-' "const"
  662                            | type_declaration_no_options . '&'
  663                            | type_declaration_no_options . '-' '&'
  664                            | type_declaration_no_options . '#'
  665                            | type_declaration_no_options . "implicit"
  666                            | type_declaration_no_options . '-' '#'
  667                            | type_declaration_no_options . "==" "const"
  668                            | type_declaration_no_options . "==" '&'
  669                            | type_declaration_no_options . '?'
  673                            | type_declaration_no_options . "??"
  761 make_struct_decl: "[{" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_cur_sqr
  762                 | "[{" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  788 make_dim_decl: "[{" type_declaration_no_options . make_dim optional_trailing_semicolon_cur_sqr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "const"                           shift, and go to state 399
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "implicit"                        shift, and go to state 400
    "explicit"                        shift, and go to state 401
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "=="                              shift, and go to state 402
    "??"                              shift, and go to state 403
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "$f"                              shift, and go to state 874
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 875
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '?'                               shift, and go to state 404
    '&'                               shift, and go to state 405
    '-'                               shift, and go to state 876
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 877
    '('                               shift, and go to state 886
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497
    '#'                               shift, and go to state 408

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 879
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_fields      go to state 880
    make_struct_dim         go to state 887
    make_struct_decl        go to state 543
    make_tuple              go to state 883
    make_tuple_call         go to state 544
    make_dim                go to state 888
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 680

  814 array_comprehension: "{{" "for" . variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}' '}'

    "$i"    shift, and go to state 417
    "name"  shift, and go to state 418

    variable_name_with_pos_list  go to state 889


State 681

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'
  778 make_map_tuple: expr . "=>" expr
  779               | expr .

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "=>"   shift, and go to state 890
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 779 (make_map_tuple)


State 682

  797 make_table: make_map_tuple .

    $default  reduce using rule 797 (make_table)


State 683

  798 make_table: make_table . ';' make_map_tuple
  802 make_table_decl: "{{" make_table . optional_trailing_semicolon_cur_cur

    ";}}"  shift, and go to state 891
    ';'    shift, and go to state 892
    '}'    shift, and go to state 893

    optional_trailing_semicolon_cur_cur  go to state 894


State 684

  247 expression_keyword: "keyword" '<' . $@7 type_declaration_no_options '>' $@8 expr

    $default  reduce using rule 245 ($@7)

    $@7  go to state 895


State 685

  242 expr_keyword: "keyword" expr . expression_block
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    '{'    shift, and go to state 284

    expression_block  go to state 896


State 686

  250 expression_keyword: "type function" '<' . $@9 type_declaration_no_options '>' $@10 '(' optional_expr_list ')'

    $default  reduce using rule 248 ($@9)

    $@9  go to state 897


State 687

   29 string_builder_body: string_builder_body . character_sequence
   30                    | string_builder_body . "{" expr "}"
   31 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163
    "end of the string"   shift, and go to state 898
    "{"                   shift, and go to state 899

    character_sequence  go to state 900


State 688

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  392 expr: '-' expr .
  393     | expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 718
    "as"  shift, and go to state 719
    "++"  shift, and go to state 730
    "--"  shift, and go to state 731
    "->"  shift, and go to state 738
    "?."  shift, and go to state 741
    "?["  shift, and go to state 742
    "<|"  shift, and go to state 743
    "|>"  shift, and go to state 744
    '.'   shift, and go to state 769
    '['   shift, and go to state 770

    $default  reduce using rule 392 (expr)


State 689

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  391 expr: '+' expr .
  393     | expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 718
    "as"  shift, and go to state 719
    "++"  shift, and go to state 730
    "--"  shift, and go to state 731
    "->"  shift, and go to state 738
    "?."  shift, and go to state 741
    "?["  shift, and go to state 742
    "<|"  shift, and go to state 743
    "|>"  shift, and go to state 744
    '.'   shift, and go to state 769
    '['   shift, and go to state 770

    $default  reduce using rule 391 (expr)


State 690

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  432     | '*' expr .
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 741
    "?["  shift, and go to state 742
    '.'   shift, and go to state 769
    '['   shift, and go to state 770

    $default  reduce using rule 432 (expr)


State 691

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  390 expr: '~' expr .
  393     | expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 718
    "as"  shift, and go to state 719
    "++"  shift, and go to state 730
    "--"  shift, and go to state 731
    "->"  shift, and go to state 738
    "?."  shift, and go to state 741
    "?["  shift, and go to state 742
    "<|"  shift, and go to state 743
    "|>"  shift, and go to state 744
    '.'   shift, and go to state 769
    '['   shift, and go to state 770

    $default  reduce using rule 390 (expr)


State 692

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  389 expr: '!' expr .
  393     | expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 718
    "as"  shift, and go to state 719
    "++"  shift, and go to state 730
    "--"  shift, and go to state 731
    "->"  shift, and go to state 738
    "?."  shift, and go to state 741
    "?["  shift, and go to state 742
    "<|"  shift, and go to state 743
    "|>"  shift, and go to state 744
    '.'   shift, and go to state 769
    '['   shift, and go to state 770

    $default  reduce using rule 389 (expr)


State 693

  810 array_comprehension: '[' "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 417
    "name"  shift, and go to state 418

    variable_name_with_pos_list  go to state 901


State 694

  309 expr_list: expr_list . ',' expr
  786 make_dim_decl: '[' expr_list . optional_comma ']'

    ','  shift, and go to state 902

    $default  reduce using rule 808 (optional_comma)

    optional_comma  go to state 903


State 695

  308 expr_list: expr .
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 308 (expr_list)


State 696

  309 expr_list: expr_list . ',' expr
  419 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 902

    $default  reduce using rule 808 (optional_comma)

    optional_comma  go to state 904


State 697

  315 block_or_lambda: '@' '@' .
  365 func_addr_expr: '@' '@' . func_addr_name
  368               | '@' '@' . '<' $@21 type_declaration_no_options '>' $@22 func_addr_name
  371               | '@' '@' . '<' $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name
  482 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 905
    "$c"    shift, and go to state 906
    "name"  shift, and go to state 59
    '<'     shift, and go to state 907

    $default  reduce using rule 315 (block_or_lambda)

    name_in_namespace  go to state 908
    func_addr_name     go to state 909


State 698

  813 array_comprehension: '{' "for" . variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}'

    "$i"    shift, and go to state 417
    "name"  shift, and go to state 418

    variable_name_with_pos_list  go to state 910


State 699

  799 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 799 (expr_map_tuple_list)


State 700

  800 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  801 make_table_decl: '{' expr_map_tuple_list . optional_comma '}'

    ','  shift, and go to state 911

    $default  reduce using rule 808 (optional_comma)

    optional_comma  go to state 912


State 701

  217 expression_block: '{' expressions '}' "finally" . '{' expressions '}'

    '{'  shift, and go to state 913


State 702

  236 expression_any: expression_label ';' .

    $default  reduce using rule 236 (expression_any)


State 703

  237 expression_any: expression_goto ';' .

    $default  reduce using rule 237 (expression_any)


State 704

   72 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    '{'    shift, and go to state 284

    expression_block  go to state 914


State 705

   74 expression_if_then_else: expression_if_one_liner "if" . $@3 expr expression_else_one_liner ';'

    $default  reduce using rule 73 ($@3)

    $@3  go to state 915


State 706

  464 expr: name_in_namespace "name" .

    $default  reduce using rule 464 (expr)


State 707

  359 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  360                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  427 expr: name_in_namespace '(' . ')'
  428     | name_in_namespace '(' . make_struct_dim ')'
  429     | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "$f"                              shift, and go to state 874
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 875
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 916
    '('                               shift, and go to state 493
    ')'                               shift, and go to state 917
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 918
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 695
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_fields      go to state 880
    make_struct_dim         go to state 919
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 708

  223 expression_any: expression_delete ';' .

    $default  reduce using rule 223 (expression_any)


State 709

  230 expression_any: expression_break ';' .

    $default  reduce using rule 230 (expression_any)


State 710

  231 expression_any: expression_continue ';' .

    $default  reduce using rule 231 (expression_any)


State 711

  274 expression_return: expression_return_no_pipe ';' .

    $default  reduce using rule 274 (expression_return)


State 712

  279 expression_yield: expression_yield_no_pipe ';' .

    $default  reduce using rule 279 (expression_yield)


State 713

  285 optional_in_scope: "inscope" .

    $default  reduce using rule 285 (optional_in_scope)


State 714

  291 expression_let: kwd_let optional_in_scope . let_variable_declaration
  292               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 299
    "[["    shift, and go to state 920
    "name"  shift, and go to state 300

    tuple_expansion_variable_declaration  go to state 921
    let_variable_name_with_pos_list       go to state 301
    let_variable_declaration              go to state 922


State 715

  326 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 923

    $default  reduce using rule 322 (optional_capture_list)

    optional_capture_list  go to state 924


State 716

  251 expr_pipe: expr_assign " <|" . expr_block

    '$'  shift, and go to state 494
    '@'  shift, and go to state 664
    '{'  shift, and go to state 284

    expression_block  go to state 665
    block_or_lambda   go to state 666
    expr_block        go to state 925


State 717

  222 expression_any: expr_assign ';' .

    $default  reduce using rule 222 (expression_any)


State 718

  441 expr: expr "is" . "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr "is" . basic_type_declaration
  443     | expr "is" . "name"
  481 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 926
    "bool"      shift, and go to state 310
    "void"      shift, and go to state 311
    "string"    shift, and go to state 312
    "int"       shift, and go to state 314
    "int2"      shift, and go to state 315
    "int3"      shift, and go to state 316
    "int4"      shift, and go to state 317
    "uint"      shift, and go to state 318
    "bitfield"  shift, and go to state 457
    "uint2"     shift, and go to state 320
    "uint3"     shift, and go to state 321
    "uint4"     shift, and go to state 322
    "float"     shift, and go to state 323
    "float2"    shift, and go to state 324
    "float3"    shift, and go to state 325
    "float4"    shift, and go to state 326
    "range"     shift, and go to state 327
    "urange"    shift, and go to state 328
    "range64"   shift, and go to state 329
    "urange64"  shift, and go to state 330
    "int64"     shift, and go to state 332
    "uint64"    shift, and go to state 333
    "double"    shift, and go to state 334
    "int8"      shift, and go to state 337
    "uint8"     shift, and go to state 338
    "int16"     shift, and go to state 339
    "uint16"    shift, and go to state 340
    "$f"        shift, and go to state 927
    "name"      shift, and go to state 928

    basic_type_declaration  go to state 929


State 719

  444 expr: expr "as" . "name"
  447     | expr "as" . "type" '<' $@29 type_declaration '>' $@30
  448     | expr "as" . basic_type_declaration
  479 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 930
    "bool"      shift, and go to state 310
    "void"      shift, and go to state 311
    "string"    shift, and go to state 312
    "int"       shift, and go to state 314
    "int2"      shift, and go to state 315
    "int3"      shift, and go to state 316
    "int4"      shift, and go to state 317
    "uint"      shift, and go to state 318
    "bitfield"  shift, and go to state 457
    "uint2"     shift, and go to state 320
    "uint3"     shift, and go to state 321
    "uint4"     shift, and go to state 322
    "float"     shift, and go to state 323
    "float2"    shift, and go to state 324
    "float3"    shift, and go to state 325
    "float4"    shift, and go to state 326
    "range"     shift, and go to state 327
    "urange"    shift, and go to state 328
    "range64"   shift, and go to state 329
    "urange64"  shift, and go to state 330
    "int64"     shift, and go to state 332
    "uint64"    shift, and go to state 333
    "double"    shift, and go to state 334
    "int8"      shift, and go to state 337
    "uint8"     shift, and go to state 338
    "int16"     shift, and go to state 339
    "uint16"    shift, and go to state 340
    "$f"        shift, and go to state 931
    "name"      shift, and go to state 932

    basic_type_declaration  go to state 933


State 720

  344 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 934
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 721

  345 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 935
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 722

  347 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 936
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 723

  346 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 937
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 724

  348 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 938
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 725

  338 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 939
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 726

  339 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 940
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 727

  340 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 941
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 728

  393 expr: expr "<<" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 942
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 729

  394 expr: expr ">>" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 943
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 730

  417 expr: expr "++" .

    $default  reduce using rule 417 (expr)


State 731

  418 expr: expr "--" .

    $default  reduce using rule 418 (expr)


State 732

  406 expr: expr "<=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 944
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 733

  349 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 945
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 734

  350 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 946
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 735

  407 expr: expr ">=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 947
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 736

  404 expr: expr "==" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 948
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 737

  405 expr: expr "!=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 949
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 738

  361 expr_method_call: expr "->" . "name" '(' ')'
  362                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 950


State 739

  336 expr_assign: expr "<-" . expr
  356 expr_assign_pipe: expr "<-" . "@ <|" expr_block
  357                 | expr "<-" . "@@ <|" expr_block
  358                 | expr "<-" . "$ <|" expr_block

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "$ <|"                            shift, and go to state 951
    "@ <|"                            shift, and go to state 952
    "@@ <|"                           shift, and go to state 953
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 954
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 740

  437 expr: expr "??" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 955
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 741

  424 expr: expr "?." . "name"
  476 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 956
    "name"  shift, and go to state 957


State 742

  422 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 958
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 743

  461 expr: expr "<|" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 959
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 744

  462 expr: expr "|>" . expr
  463     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 960
    expr_mtag               go to state 540
    basic_type_declaration  go to state 961
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 745

  337 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 962
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 746

  395 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 963
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 747

  396 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 964
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 748

  351 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 965
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 749

  352 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 966
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 750

  411 expr: expr "&&" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 967
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 751

  412 expr: expr "||" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 968
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 752

  413 expr: expr "^^" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 969
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 753

  341 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 970
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 754

  342 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 971
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 755

  343 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 972
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 756

  414 expr: expr ".." . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 973
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 757

  335 expr_assign: expr '=' . expr
  353 expr_assign_pipe: expr '=' . "@ <|" expr_block
  354                 | expr '=' . "@@ <|" expr_block
  355                 | expr '=' . "$ <|" expr_block

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "$ <|"                            shift, and go to state 974
    "@ <|"                            shift, and go to state 975
    "@@ <|"                           shift, and go to state 976
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 977
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 758

  438 expr: expr '?' . expr ':' expr
  449     | expr '?' . "as" "name"
  452     | expr '?' . "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr '?' . "as" basic_type_declaration
  480 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "as"                              shift, and go to state 978
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 979
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 759

  409 expr: expr '|' . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 980
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 760

  410 expr: expr '^' . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 981
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 761

  408 expr: expr '&' . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 982
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 762

  402 expr: expr '<' . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 983
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 763

  403 expr: expr '>' . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 984
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 764

  398 expr: expr '-' . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 985
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 765

  397 expr: expr '+' . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 986
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 766

  399 expr: expr '*' . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 987
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 767

  400 expr: expr '/' . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 988
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 768

  401 expr: expr '%' . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 989
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 769

  372 expr_field: expr '.' . "name"
  373           | expr '.' . '.' "name"
  374           | expr '.' . "name" '(' ')'
  375           | expr '.' . "name" '(' expr_list ')'
  378           | expr '.' . $@25 error $@26
  421 expr: expr '.' . '[' expr ']'
  423     | expr '.' . "?[" expr ']'
  425     | expr '.' . "?." "name"
  475 expr_mtag: expr '.' . "$f" '(' expr ')'
  477          | expr '.' . '.' "$f" '(' expr ')'
  478          | expr '.' . "?." "$f" '(' expr ')'

    "?."    shift, and go to state 990
    "?["    shift, and go to state 991
    "$f"    shift, and go to state 992
    "name"  shift, and go to state 993
    '.'     shift, and go to state 994
    '['     shift, and go to state 995

    $default  reduce using rule 376 ($@25)

    $@25  go to state 996


State 770

  420 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 997
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 771

  430 expr: basic_type_declaration '(' . ')'
  431     | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    ')'                               shift, and go to state 998
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 999
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 695
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 772

  557 enum_list: enum_list . ';'
  558          | enum_list . "name" ';'
  559          | enum_list . "name" '=' expr ';'
  579 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@42 enum_list . $@43 '}'

    "name"  shift, and go to state 549
    ';'     shift, and go to state 550

    $default  reduce using rule 578 ($@43)

    $@43  go to state 1000


State 773

  559 enum_list: enum_list "name" '=' . expr ';'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1001
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 774

  558 enum_list: enum_list "name" ';' .

    $default  reduce using rule 558 (enum_list)


State 775

  576 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@40 enum_list $@41 '}' .

    $default  reduce using rule 576 (enum_declaration)


State 776

  118 optional_annotation_list: '[' . annotation_list ']'
  503 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' ';'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 1002
    name_in_namespace             go to state 70


State 777

  591 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list '}' .

    $default  reduce using rule 591 (optional_struct_variable_declaration_list)


State 778

  500 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header ';'
  502                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block

    "def"  shift, and go to state 1003


State 779

  498 struct_variable_declaration_list: struct_variable_declaration_list $@33 . structure_variable_declaration ';'

    "[["  shift, and go to state 218

    $default  reduce using rule 483 (optional_field_annotation)

    optional_field_annotation       go to state 1004
    structure_variable_declaration  go to state 1005


State 780

  536 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 536 (let_variable_name_with_pos_list)


State 781

  539 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1006


State 782

  540 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options ';' .

    $default  reduce using rule 540 (let_variable_declaration)


State 783

  541 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr ';'
  542                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "$ <|"                            shift, and go to state 464
    "@ <|"                            shift, and go to state 465
    "@@ <|"                           shift, and go to state 466
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    expr_pipe               go to state 1007
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_assign             go to state 632
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1008
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 784

  544 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 544 (let_variable_declaration)


State 785

  334 expr_assign: expr .
  335            | expr . '=' expr
  336            | expr . "<-" expr
  337            | expr . ":=" expr
  338            | expr . "&=" expr
  339            | expr . "|=" expr
  340            | expr . "^=" expr
  341            | expr . "&&=" expr
  342            | expr . "||=" expr
  343            | expr . "^^=" expr
  344            | expr . "+=" expr
  345            | expr . "-=" expr
  346            | expr . "*=" expr
  347            | expr . "/=" expr
  348            | expr . "%=" expr
  349            | expr . "<<=" expr
  350            | expr . ">>=" expr
  351            | expr . "<<<=" expr
  352            | expr . ">>>=" expr
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'
  543 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 718
    "as"    shift, and go to state 719
    "+="    shift, and go to state 720
    "-="    shift, and go to state 721
    "/="    shift, and go to state 722
    "*="    shift, and go to state 723
    "%="    shift, and go to state 724
    "&="    shift, and go to state 725
    "|="    shift, and go to state 726
    "^="    shift, and go to state 727
    "<<"    shift, and go to state 728
    ">>"    shift, and go to state 729
    "++"    shift, and go to state 730
    "--"    shift, and go to state 731
    "<="    shift, and go to state 732
    "<<="   shift, and go to state 733
    ">>="   shift, and go to state 734
    ">="    shift, and go to state 735
    "=="    shift, and go to state 736
    "!="    shift, and go to state 737
    "->"    shift, and go to state 738
    "<-"    shift, and go to state 839
    "??"    shift, and go to state 740
    "?."    shift, and go to state 741
    "?["    shift, and go to state 742
    "<|"    shift, and go to state 743
    "|>"    shift, and go to state 744
    ":="    shift, and go to state 745
    "<<<"   shift, and go to state 746
    ">>>"   shift, and go to state 747
    "<<<="  shift, and go to state 748
    ">>>="  shift, and go to state 749
    "&&"    shift, and go to state 750
    "||"    shift, and go to state 751
    "^^"    shift, and go to state 752
    "&&="   shift, and go to state 753
    "||="   shift, and go to state 754
    "^^="   shift, and go to state 755
    ".."    shift, and go to state 756
    '='     shift, and go to state 840
    '?'     shift, and go to state 758
    '|'     shift, and go to state 759
    '^'     shift, and go to state 760
    '&'     shift, and go to state 761
    '<'     shift, and go to state 762
    '>'     shift, and go to state 763
    '-'     shift, and go to state 764
    '+'     shift, and go to state 765
    '*'     shift, and go to state 766
    '/'     shift, and go to state 767
    '%'     shift, and go to state 768
    '.'     shift, and go to state 769
    '['     shift, and go to state 770
    ';'     shift, and go to state 1009

    $default  reduce using rule 334 (expr_assign)


State 786

  655 type_declaration_no_options: "type" '<' $@48 type_declaration . '>' $@49
  711 type_declaration: type_declaration . '|' type_declaration_no_options
  712                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409
    '>'  shift, and go to state 1010


State 787

  676 type_declaration_no_options: "array" '<' $@52 type_declaration . '>' $@53
  711 type_declaration: type_declaration . '|' type_declaration_no_options
  712                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409
    '>'  shift, and go to state 1011


State 788

  679 type_declaration_no_options: "table" '<' $@54 table_type_pair . '>' $@55

    '>'  shift, and go to state 1012


State 789

  645 table_type_pair: type_declaration .
  646                | type_declaration . ';' type_declaration
  711 type_declaration: type_declaration . '|' type_declaration_no_options
  712                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409
    ';'  shift, and go to state 1013

    $default  reduce using rule 645 (table_type_pair)


State 790

  656 type_declaration_no_options: "typedecl" '(' expr ')' .

    $default  reduce using rule 656 (type_declaration_no_options)


State 791

  682 type_declaration_no_options: "iterator" '<' $@56 type_declaration . '>' $@57
  711 type_declaration: type_declaration . '|' type_declaration_no_options
  712                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409
    '>'  shift, and go to state 1014


State 792

  672 type_declaration_no_options: "smart_ptr" '<' $@50 type_declaration . '>' $@51
  711 type_declaration: type_declaration . '|' type_declaration_no_options
  712                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409
    '>'  shift, and go to state 1015


State 793

  635 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 635 (auto_type_declaration)


State 794

  637 bitfield_bits: "name" .

    $default  reduce using rule 637 (bitfield_bits)


State 795

  638 bitfield_bits: bitfield_bits . ';' "name"
  644 bitfield_type_declaration: "bitfield" '<' $@46 bitfield_bits . '>' $@47

    '>'  shift, and go to state 1016
    ';'  shift, and go to state 1017


State 796

  686 type_declaration_no_options: "block" '<' $@58 type_declaration . '>' $@59
  711 type_declaration: type_declaration . '|' type_declaration_no_options
  712                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409
    '>'  shift, and go to state 1018


State 797

  689 type_declaration_no_options: "block" '<' $@60 optional_function_argument_list . optional_function_type '>' $@61

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1019


State 798

  693 type_declaration_no_options: "function" '<' $@62 type_declaration . '>' $@63
  711 type_declaration: type_declaration . '|' type_declaration_no_options
  712                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409
    '>'  shift, and go to state 1020


State 799

  696 type_declaration_no_options: "function" '<' $@64 optional_function_argument_list . optional_function_type '>' $@65

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1021


State 800

  700 type_declaration_no_options: "lambda" '<' $@66 type_declaration . '>' $@67
  711 type_declaration: type_declaration . '|' type_declaration_no_options
  712                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409
    '>'  shift, and go to state 1022


State 801

  703 type_declaration_no_options: "lambda" '<' $@68 optional_function_argument_list . optional_function_type '>' $@69

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1023


State 802

  511 tuple_type_list: tuple_type .

    $default  reduce using rule 511 (tuple_type_list)


State 803

  512 tuple_type_list: tuple_type_list . ';' tuple_type
  706 type_declaration_no_options: "tuple" '<' $@70 tuple_type_list . '>' $@71

    '>'  shift, and go to state 1024
    ';'  shift, and go to state 1025


State 804

  517 variant_type_list: variant_type .

    $default  reduce using rule 517 (variant_type_list)


State 805

  518 variant_type_list: variant_type_list . ';' variant_type
  709 type_declaration_no_options: "variant" '<' $@72 variant_type_list . '>' $@73

    '>'  shift, and go to state 1026
    ';'  shift, and go to state 1027


State 806

  636 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 636 (auto_type_declaration)


State 807

  657 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 1028


State 808

  244 optional_expr_list: expr_list .
  309 expr_list: expr_list . ',' expr

    ','  shift, and go to state 838

    $default  reduce using rule 244 (optional_expr_list)


State 809

  658 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 658 (type_declaration_no_options)


State 810

  651 type_declaration_no_options: type_declaration_no_options '[' expr ']' .

    $default  reduce using rule 651 (type_declaration_no_options)


State 811

  641 bitfield_alias_bits: bitfield_alias_bits "name" ';' .

    $default  reduce using rule 641 (bitfield_alias_bits)


State 812

  727 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@82 "name" $@83 '{' $@84 bitfield_alias_bits $@85 '}' .

    $default  reduce using rule 727 (bitfield_alias_declaration)


State 813

  510 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1029


State 814

  515 tuple_alias_type_list: tuple_alias_type_list tuple_type ';' .

    $default  reduce using rule 515 (tuple_alias_type_list)


State 815

  717 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@74 "name" $@75 '{' $@76 tuple_alias_type_list $@77 '}' .

    $default  reduce using rule 717 (tuple_alias_declaration)


State 816

  516 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1030


State 817

  521 variant_alias_type_list: variant_alias_type_list variant_type ';' .

    $default  reduce using rule 521 (variant_alias_type_list)


State 818

  722 variant_alias_declaration: "variant" optional_public_or_private_alias $@78 "name" $@79 '{' $@80 variant_alias_type_list $@81 '}' .

    $default  reduce using rule 722 (variant_alias_declaration)


State 819

  506 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 506 (function_argument_declaration)


State 820

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'
  596 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ')'    shift, and go to state 1031


State 821

  597 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 597 (variable_name_with_pos_list)


State 822

  598 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  599                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1032

    $default  reduce using rule 598 (variable_name_with_pos_list)


State 823

  526 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  527                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  711 type_declaration: type_declaration . '|' type_declaration_no_options
  712                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 610
    '='   shift, and go to state 612
    '|'   shift, and go to state 409

    $default  reduce using rule 526 (variable_declaration)

    copy_or_move  go to state 1033


State 824

  529 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 529 (variable_declaration)


State 825

  334 expr_assign: expr .
  335            | expr . '=' expr
  336            | expr . "<-" expr
  337            | expr . ":=" expr
  338            | expr . "&=" expr
  339            | expr . "|=" expr
  340            | expr . "^=" expr
  341            | expr . "&&=" expr
  342            | expr . "||=" expr
  343            | expr . "^^=" expr
  344            | expr . "+=" expr
  345            | expr . "-=" expr
  346            | expr . "*=" expr
  347            | expr . "/=" expr
  348            | expr . "%=" expr
  349            | expr . "<<=" expr
  350            | expr . ">>=" expr
  351            | expr . "<<<=" expr
  352            | expr . ">>>=" expr
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'
  528 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 718
    "as"    shift, and go to state 719
    "+="    shift, and go to state 720
    "-="    shift, and go to state 721
    "/="    shift, and go to state 722
    "*="    shift, and go to state 723
    "%="    shift, and go to state 724
    "&="    shift, and go to state 725
    "|="    shift, and go to state 726
    "^="    shift, and go to state 727
    "<<"    shift, and go to state 728
    ">>"    shift, and go to state 729
    "++"    shift, and go to state 730
    "--"    shift, and go to state 731
    "<="    shift, and go to state 732
    "<<="   shift, and go to state 733
    ">>="   shift, and go to state 734
    ">="    shift, and go to state 735
    "=="    shift, and go to state 736
    "!="    shift, and go to state 737
    "->"    shift, and go to state 738
    "<-"    shift, and go to state 839
    "??"    shift, and go to state 740
    "?."    shift, and go to state 741
    "?["    shift, and go to state 742
    "<|"    shift, and go to state 743
    "|>"    shift, and go to state 744
    ":="    shift, and go to state 745
    "<<<"   shift, and go to state 746
    ">>>"   shift, and go to state 747
    "<<<="  shift, and go to state 748
    ">>>="  shift, and go to state 749
    "&&"    shift, and go to state 750
    "||"    shift, and go to state 751
    "^^"    shift, and go to state 752
    "&&="   shift, and go to state 753
    "||="   shift, and go to state 754
    "^^="   shift, and go to state 755
    ".."    shift, and go to state 756
    '='     shift, and go to state 840
    '?'     shift, and go to state 758
    '|'     shift, and go to state 759
    '^'     shift, and go to state 760
    '&'     shift, and go to state 761
    '<'     shift, and go to state 762
    '>'     shift, and go to state 763
    '-'     shift, and go to state 764
    '+'     shift, and go to state 765
    '*'     shift, and go to state 766
    '/'     shift, and go to state 767
    '%'     shift, and go to state 768
    '.'     shift, and go to state 769
    '['     shift, and go to state 770

    " <|"     reduce using rule 334 (expr_assign)
    $default  reduce using rule 528 (variable_declaration)


State 826

  765 make_struct_decl: "struct" '<' $@86 . type_declaration_no_options '>' $@87 '(' make_struct_dim ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1034


State 827

  768 make_struct_decl: "class" '<' $@88 . type_declaration_no_options '>' $@89 '(' make_struct_dim ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1035


State 828

   78 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 78 (expression_while_loop)


State 829

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list . "in" expr_list expression_block
  598 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  599                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1036
    ','   shift, and go to state 611


State 830

  262 new_type_declaration: '<' $@11 . type_declaration '>' $@12

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1037


State 831

  265 expr_new: "new" new_type_declaration '(' . ')'
  266         | "new" new_type_declaration '(' . expr_list ')'
  267         | "new" new_type_declaration '(' . make_struct_dim ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "$f"                              shift, and go to state 874
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 875
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    ')'                               shift, and go to state 1038
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 1039
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 695
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_fields      go to state 880
    make_struct_dim         go to state 1040
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 832

  305 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  306               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  307               | "typeinfo" '(' name_in_namespace . '<' "name" ';' "name" '>' expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '<'                               shift, and go to state 1041
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1042
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 833

  304 expr_type_decl: "type" '<' $@19 . type_declaration '>' $@20

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1043


State 834

  792 make_dim_decl: "array" '<' $@96 . type_declaration_no_options '>' $@97 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1044


State 835

  309 expr_list: expr_list . ',' expr
  789 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 902

    $default  reduce using rule 808 (optional_comma)

    optional_comma  go to state 1045


State 836

  276 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 276 (expression_return)


State 837

  273 expression_return_no_pipe: "return" "<-" expr_list .
  309 expr_list: expr_list . ',' expr

    ','  shift, and go to state 838

    $default  reduce using rule 273 (expression_return_no_pipe)


State 838

  309 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1046
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 839

  336 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 954
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 840

  335 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 977
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 841

  282 expression_try_catch: "try" expression_block "recover" . expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 1047


State 842

  651 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  652                            | type_declaration_no_options . '[' ']'
  658                            | type_declaration_no_options . '-' '[' ']'
  659                            | type_declaration_no_options . "explicit"
  660                            | type_declaration_no_options . "const"
  661                            | type_declaration_no_options . '-' "const"
  662                            | type_declaration_no_options . '&'
  663                            | type_declaration_no_options . '-' '&'
  664                            | type_declaration_no_options . '#'
  665                            | type_declaration_no_options . "implicit"
  666                            | type_declaration_no_options . '-' '#'
  667                            | type_declaration_no_options . "==" "const"
  668                            | type_declaration_no_options . "==" '&'
  669                            | type_declaration_no_options . '?'
  673                            | type_declaration_no_options . "??"
  804 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' expr_map_tuple_list optional_comma ')'
  805                | "table" '<' type_declaration_no_options . ';' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1048
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    ';'         shift, and go to state 1049
    '#'         shift, and go to state 408


State 843

  800 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  803 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 911

    $default  reduce using rule 808 (optional_comma)

    optional_comma  go to state 1050


State 844

  259 expression_delete: "delete" "explicit" expr .
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 259 (expression_delete)


State 845

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  433     | "deref" '(' expr . ')'
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ')'    shift, and go to state 1051


State 846

   79 expression_with: "with" expr expression_block .

    $default  reduce using rule 79 (expression_with)


State 847

   81 expression_with_alias: "assume" "name" '=' . $@5 expr

    $default  reduce using rule 80 ($@5)

    $@5  go to state 1052


State 848

  295 expr_cast: "cast" '<' $@13 . type_declaration_no_options '>' $@14 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1053


State 849

  298 expr_cast: "upcast" '<' $@15 . type_declaration_no_options '>' $@16 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1054


State 850

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  434     | "addr" '(' expr . ')'
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ')'    shift, and go to state 1055


State 851

  301 expr_cast: "reinterpret" '<' $@17 . type_declaration_no_options '>' $@18 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1056


State 852

   54 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 54 (expression_label)


State 853

   55 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 55 (expression_goto)


State 854

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  465     | "unsafe" '(' expr . ')'
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ')'    shift, and go to state 1057


State 855

  796 make_dim_decl: "fixed_array" '<' $@98 . type_declaration_no_options '>' $@99 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1058


State 856

  309 expr_list: expr_list . ',' expr
  793 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 902

    $default  reduce using rule 808 (optional_comma)

    optional_comma  go to state 1059


State 857

  774 make_struct_decl: "default" '<' $@92 . type_declaration_no_options '>' $@93

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1060


State 858

  783 make_tuple_call: "tuple" '<' $@94 . type_declaration_no_options '>' $@95 '(' make_struct_dim ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1061


State 859

  309 expr_list: expr_list . ',' expr
  780 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 902

    $default  reduce using rule 808 (optional_comma)

    optional_comma  go to state 1062


State 860

  771 make_struct_decl: "variant" '<' $@90 . type_declaration_no_options '>' $@91 '(' make_struct_dim ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1063


State 861

  435 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  436     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  651 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  652                            | type_declaration_no_options . '[' ']'
  658                            | type_declaration_no_options . '-' '[' ']'
  659                            | type_declaration_no_options . "explicit"
  660                            | type_declaration_no_options . "const"
  661                            | type_declaration_no_options . '-' "const"
  662                            | type_declaration_no_options . '&'
  663                            | type_declaration_no_options . '-' '&'
  664                            | type_declaration_no_options . '#'
  665                            | type_declaration_no_options . "implicit"
  666                            | type_declaration_no_options . '-' '#'
  667                            | type_declaration_no_options . "==" "const"
  668                            | type_declaration_no_options . "==" '&'
  669                            | type_declaration_no_options . '?'
  673                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1064
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 862

  281 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 281 (expression_yield)


State 863

  278 expression_yield_no_pipe: "yield" "<-" expr .
  334 expr_assign: expr .
  335            | expr . '=' expr
  336            | expr . "<-" expr
  337            | expr . ":=" expr
  338            | expr . "&=" expr
  339            | expr . "|=" expr
  340            | expr . "^=" expr
  341            | expr . "&&=" expr
  342            | expr . "||=" expr
  343            | expr . "^^=" expr
  344            | expr . "+=" expr
  345            | expr . "-=" expr
  346            | expr . "*=" expr
  347            | expr . "/=" expr
  348            | expr . "%=" expr
  349            | expr . "<<=" expr
  350            | expr . ">>=" expr
  351            | expr . "<<<=" expr
  352            | expr . ">>>=" expr
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 718
    "as"    shift, and go to state 719
    "+="    shift, and go to state 720
    "-="    shift, and go to state 721
    "/="    shift, and go to state 722
    "*="    shift, and go to state 723
    "%="    shift, and go to state 724
    "&="    shift, and go to state 725
    "|="    shift, and go to state 726
    "^="    shift, and go to state 727
    "<<"    shift, and go to state 728
    ">>"    shift, and go to state 729
    "++"    shift, and go to state 730
    "--"    shift, and go to state 731
    "<="    shift, and go to state 732
    "<<="   shift, and go to state 733
    ">>="   shift, and go to state 734
    ">="    shift, and go to state 735
    "=="    shift, and go to state 736
    "!="    shift, and go to state 737
    "->"    shift, and go to state 738
    "<-"    shift, and go to state 839
    "??"    shift, and go to state 740
    "?."    shift, and go to state 741
    "?["    shift, and go to state 742
    "<|"    shift, and go to state 743
    "|>"    shift, and go to state 744
    ":="    shift, and go to state 745
    "<<<"   shift, and go to state 746
    ">>>"   shift, and go to state 747
    "<<<="  shift, and go to state 748
    ">>>="  shift, and go to state 749
    "&&"    shift, and go to state 750
    "||"    shift, and go to state 751
    "^^"    shift, and go to state 752
    "&&="   shift, and go to state 753
    "||="   shift, and go to state 754
    "^^="   shift, and go to state 755
    ".."    shift, and go to state 756
    '='     shift, and go to state 840
    '?'     shift, and go to state 758
    '|'     shift, and go to state 759
    '^'     shift, and go to state 760
    '&'     shift, and go to state 761
    '<'     shift, and go to state 762
    '>'     shift, and go to state 763
    '-'     shift, and go to state 764
    '+'     shift, and go to state 765
    '*'     shift, and go to state 766
    '/'     shift, and go to state 767
    '%'     shift, and go to state 768
    '.'     shift, and go to state 769
    '['     shift, and go to state 770

    " <|"     reduce using rule 334 (expr_assign)
    $default  reduce using rule 278 (expression_yield_no_pipe)


State 864

  315 block_or_lambda: '@' '@' .

    $default  reduce using rule 315 (block_or_lambda)


State 865

  325 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 923

    $default  reduce using rule 322 (optional_capture_list)

    optional_capture_list  go to state 1065


State 866

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  467 expr_mtag: "$$" '(' expr . ')'
  475          | expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ')'    shift, and go to state 1066


State 867

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  468 expr_mtag: "$i" '(' expr . ')'
  475          | expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ')'    shift, and go to state 1067


State 868

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  469 expr_mtag: "$v" '(' expr . ')'
  475          | expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ')'    shift, and go to state 1068


State 869

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  470 expr_mtag: "$b" '(' expr . ')'
  475          | expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ')'    shift, and go to state 1069


State 870

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  471 expr_mtag: "$a" '(' expr . ')'
  475          | expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ')'    shift, and go to state 1070


State 871

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  473 expr_mtag: "$c" '(' expr . ')' '(' ')'
  474          | "$c" '(' expr . ')' '(' expr_list ')'
  475          | expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ')'    shift, and go to state 1071


State 872

  598 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  599                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  811 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 1072
    ','   shift, and go to state 611


State 873

  744 optional_block: "where" . expr_block

    '$'  shift, and go to state 494
    '@'  shift, and go to state 664
    '{'  shift, and go to state 284

    expression_block  go to state 665
    block_or_lambda   go to state 666
    expr_block        go to state 1073


State 874

  737 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  738                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1074


State 875

  255 name_in_namespace: "name" .
  256                  | "name" . "::" "name"
  733 make_struct_fields: "name" . copy_or_move expr
  734                   | "name" . ":=" expr

    "<-"  shift, and go to state 610
    ":="  shift, and go to state 1075
    "::"  shift, and go to state 98
    '='   shift, and go to state 612

    $default  reduce using rule 255 (name_in_namespace)

    copy_or_move  go to state 1076


State 876

  392 expr: '-' . expr
  658 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  661                            | type_declaration_no_options '-' . "const"
  663                            | type_declaration_no_options '-' . '&'
  666                            | type_declaration_no_options '-' . '#'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "const"                           shift, and go to state 586
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '&'                               shift, and go to state 587
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 1077
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497
    '#'                               shift, and go to state 589

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 688
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 877

  651 type_declaration_no_options: type_declaration_no_options '[' . expr ']'
  652                            | type_declaration_no_options '[' . ']'
  786 make_dim_decl: '[' . expr_list optional_comma ']'
  810 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "for"                             shift, and go to state 693
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    ']'                               shift, and go to state 590
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 694
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1078
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 878

  419 expr: '(' . expr_list optional_comma ')'
  759 make_struct_decl: "[[" type_declaration_no_options '(' . ')' optional_block optional_trailing_delim_sqr_sqr
  760                 | "[[" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    ')'                               shift, and go to state 1079
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 696
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 695
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 879

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'
  775 make_tuple: expr .
  776           | expr . "=>" expr

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "=>"   shift, and go to state 1080
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 775 (make_tuple)


State 880

  735 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  736                   | make_struct_fields . ',' "name" ":=" expr
  739                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  740                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  741 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 1081

    $default  reduce using rule 741 (make_struct_dim)


State 881

  742 make_struct_dim: make_struct_dim . ';' make_struct_fields
  757 make_struct_decl: "[[" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 873
    ';'      shift, and go to state 1082

    $default  reduce using rule 743 (optional_block)

    optional_block  go to state 1083


State 882

  758 make_struct_decl: "[[" type_declaration_no_options optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1084
    ",]]"  shift, and go to state 1085
    ']'    shift, and go to state 1086

    optional_trailing_delim_sqr_sqr  go to state 1087


State 883

  777 make_tuple: make_tuple . ',' expr
  784 make_dim: make_tuple .

    ','  shift, and go to state 1088

    $default  reduce using rule 784 (make_dim)


State 884

  785 make_dim: make_dim . ';' make_tuple
  787 make_dim_decl: "[[" type_declaration_no_options make_dim . optional_trailing_semicolon_sqr_sqr

    ";]]"  shift, and go to state 1089
    ']'    shift, and go to state 1090
    ';'    shift, and go to state 1091

    optional_trailing_semicolon_sqr_sqr  go to state 1092


State 885

  598 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  599                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  812 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where '}' ']'

    "in"  shift, and go to state 1093
    ','   shift, and go to state 611


State 886

  419 expr: '(' . expr_list optional_comma ')'
  762 make_struct_decl: "[{" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    ')'                               shift, and go to state 1094
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 696
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 695
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 887

  742 make_struct_dim: make_struct_dim . ';' make_struct_fields
  761 make_struct_decl: "[{" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"  shift, and go to state 873
    ';'      shift, and go to state 1082

    $default  reduce using rule 743 (optional_block)

    optional_block  go to state 1095


State 888

  785 make_dim: make_dim . ';' make_tuple
  788 make_dim_decl: "[{" type_declaration_no_options make_dim . optional_trailing_semicolon_cur_sqr

    ";}]"  shift, and go to state 1096
    ';'    shift, and go to state 1091
    '}'    shift, and go to state 1097

    optional_trailing_semicolon_cur_sqr  go to state 1098


State 889

  598 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  599                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  814 array_comprehension: "{{" "for" variable_name_with_pos_list . "in" expr_list ';' make_map_tuple array_comprehension_where '}' '}'

    "in"  shift, and go to state 1099
    ','   shift, and go to state 611


State 890

  778 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1100
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 891

  746 optional_trailing_semicolon_cur_cur: ";}}" .

    $default  reduce using rule 746 (optional_trailing_semicolon_cur_cur)


State 892

  798 make_table: make_table ';' . make_map_tuple

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 681
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_map_tuple          go to state 1101
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 893

  745 optional_trailing_semicolon_cur_cur: '}' . '}'

    '}'  shift, and go to state 1102


State 894

  802 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur .

    $default  reduce using rule 802 (make_table_decl)


State 895

  247 expression_keyword: "keyword" '<' $@7 . type_declaration_no_options '>' $@8 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1103


State 896

  242 expr_keyword: "keyword" expr expression_block .

    $default  reduce using rule 242 (expr_keyword)


State 897

  250 expression_keyword: "type function" '<' $@9 . type_declaration_no_options '>' $@10 '(' optional_expr_list ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1104


State 898

   31 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 31 (string_builder)


State 899

   30 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1105
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 900

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   29 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 220
    STRING_CHARACTER_ESC  shift, and go to state 221

    STRING_CHARACTER      [reduce using rule 29 (string_builder_body)]
    STRING_CHARACTER_ESC  [reduce using rule 29 (string_builder_body)]
    $default              reduce using rule 29 (string_builder_body)


State 901

  598 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  599                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  810 array_comprehension: '[' "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1106
    ','   shift, and go to state 611


State 902

  309 expr_list: expr_list ',' . expr
  809 optional_comma: ',' .

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    $default  reduce using rule 809 (optional_comma)

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1046
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 903

  786 make_dim_decl: '[' expr_list optional_comma . ']'

    ']'  shift, and go to state 1107


State 904

  419 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1108


State 905

  364 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1109


State 906

  482 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1110


State 907

  368 func_addr_expr: '@' '@' '<' . $@21 type_declaration_no_options '>' $@22 func_addr_name
  371               | '@' '@' '<' . $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name

    ':'       reduce using rule 369 ($@23)
    '>'       reduce using rule 369 ($@23)
    '('       reduce using rule 369 ($@23)
    $default  reduce using rule 366 ($@21)

    $@21  go to state 1111
    $@23  go to state 1112


State 908

  363 func_addr_name: name_in_namespace .

    $default  reduce using rule 363 (func_addr_name)


State 909

  365 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 365 (func_addr_expr)


State 910

  598 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  599                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  813 array_comprehension: '{' "for" variable_name_with_pos_list . "in" expr_list ';' make_map_tuple array_comprehension_where '}'

    "in"  shift, and go to state 1113
    ','   shift, and go to state 611


State 911

  800 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  809 optional_comma: ',' .

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    $default  reduce using rule 809 (optional_comma)

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 681
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_map_tuple          go to state 1114
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 912

  801 make_table_decl: '{' expr_map_tuple_list optional_comma . '}'

    '}'  shift, and go to state 1115


State 913

  217 expression_block: '{' expressions '}' "finally" '{' . expressions '}'

    $default  reduce using rule 239 (expressions)

    expressions  go to state 1116


State 914

   72 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1117
    "elif"         shift, and go to state 1118
    "static_elif"  shift, and go to state 1119

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1120
    expression_else      go to state 1121


State 915

   74 expression_if_then_else: expression_if_one_liner "if" $@3 . expr expression_else_one_liner ';'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1122
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 916

  359 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  786 make_dim_decl: '[' . expr_list optional_comma ']'
  810 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "for"                             shift, and go to state 693
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "$f"                              shift, and go to state 874
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 875
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 694
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 695
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_fields      go to state 1123
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 917

  427 expr: name_in_namespace '(' ')' .

    $default  reduce using rule 427 (expr)


State 918

  309 expr_list: expr_list . ',' expr
  360 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  429 expr: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1124
    ')'  shift, and go to state 1125


State 919

  428 expr: name_in_namespace '(' make_struct_dim . ')'
  742 make_struct_dim: make_struct_dim . ';' make_struct_fields

    ')'  shift, and go to state 1126
    ';'  shift, and go to state 1082


State 920

  289 tuple_expansion_variable_declaration: "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  290                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr ';'

    "name"  shift, and go to state 1127

    tuple_expansion  go to state 1128


State 921

  292 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 292 (expression_let)


State 922

  291 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 291 (expression_let)


State 923

  323 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"  shift, and go to state 1129
    ":="  shift, and go to state 1130
    '='   shift, and go to state 1131
    '&'   shift, and go to state 1132

    capture_entry  go to state 1133
    capture_list   go to state 1134


State 924

  326 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 1135


State 925

  251 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 251 (expr_pipe)


State 926

  441 expr: expr "is" "type" . '<' $@27 type_declaration_no_options '>' $@28

    '<'  shift, and go to state 1136


State 927

  481 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1137


State 928

  443 expr: expr "is" "name" .

    $default  reduce using rule 443 (expr)


State 929

  442 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 442 (expr)


State 930

  447 expr: expr "as" "type" . '<' $@29 type_declaration '>' $@30

    '<'  shift, and go to state 1138


State 931

  479 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1139


State 932

  444 expr: expr "as" "name" .

    $default  reduce using rule 444 (expr)


State 933

  448 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 448 (expr)


State 934

  344 expr_assign: expr "+=" expr .
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 344 (expr_assign)


State 935

  345 expr_assign: expr "-=" expr .
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 345 (expr_assign)


State 936

  347 expr_assign: expr "/=" expr .
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 347 (expr_assign)


State 937

  346 expr_assign: expr "*=" expr .
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 346 (expr_assign)


State 938

  348 expr_assign: expr "%=" expr .
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 348 (expr_assign)


State 939

  338 expr_assign: expr "&=" expr .
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 338 (expr_assign)


State 940

  339 expr_assign: expr "|=" expr .
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 339 (expr_assign)


State 941

  340 expr_assign: expr "^=" expr .
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 340 (expr_assign)


State 942

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  393     | expr "<<" expr .
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 718
    "as"  shift, and go to state 719
    "++"  shift, and go to state 730
    "--"  shift, and go to state 731
    "->"  shift, and go to state 738
    "??"  shift, and go to state 740
    "?."  shift, and go to state 741
    "?["  shift, and go to state 742
    "<|"  shift, and go to state 743
    "|>"  shift, and go to state 744
    '-'   shift, and go to state 764
    '+'   shift, and go to state 765
    '*'   shift, and go to state 766
    '/'   shift, and go to state 767
    '%'   shift, and go to state 768
    '.'   shift, and go to state 769
    '['   shift, and go to state 770

    $default  reduce using rule 393 (expr)


State 943

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  394     | expr ">>" expr .
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 718
    "as"  shift, and go to state 719
    "++"  shift, and go to state 730
    "--"  shift, and go to state 731
    "->"  shift, and go to state 738
    "??"  shift, and go to state 740
    "?."  shift, and go to state 741
    "?["  shift, and go to state 742
    "<|"  shift, and go to state 743
    "|>"  shift, and go to state 744
    '-'   shift, and go to state 764
    '+'   shift, and go to state 765
    '*'   shift, and go to state 766
    '/'   shift, and go to state 767
    '%'   shift, and go to state 768
    '.'   shift, and go to state 769
    '['   shift, and go to state 770

    $default  reduce using rule 394 (expr)


State 944

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  406     | expr "<=" expr .
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 406 (expr)


State 945

  349 expr_assign: expr "<<=" expr .
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 349 (expr_assign)


State 946

  350 expr_assign: expr ">>=" expr .
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 350 (expr_assign)


State 947

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  407     | expr ">=" expr .
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 407 (expr)


State 948

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  404     | expr "==" expr .
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 404 (expr)


State 949

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  405     | expr "!=" expr .
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 405 (expr)


State 950

  361 expr_method_call: expr "->" "name" . '(' ')'
  362                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1140


State 951

  358 expr_assign_pipe: expr "<-" "$ <|" . expr_block

    '$'  shift, and go to state 494
    '@'  shift, and go to state 664
    '{'  shift, and go to state 284

    expression_block  go to state 665
    block_or_lambda   go to state 666
    expr_block        go to state 1141


State 952

  356 expr_assign_pipe: expr "<-" "@ <|" . expr_block

    '$'  shift, and go to state 494
    '@'  shift, and go to state 664
    '{'  shift, and go to state 284

    expression_block  go to state 665
    block_or_lambda   go to state 666
    expr_block        go to state 1142


State 953

  357 expr_assign_pipe: expr "<-" "@@ <|" . expr_block

    '$'  shift, and go to state 494
    '@'  shift, and go to state 664
    '{'  shift, and go to state 284

    expression_block  go to state 665
    block_or_lambda   go to state 666
    expr_block        go to state 1143


State 954

  336 expr_assign: expr "<-" expr .
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 336 (expr_assign)


State 955

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  437     | expr "??" expr .
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 718
    "as"  shift, and go to state 719
    "++"  shift, and go to state 730
    "--"  shift, and go to state 731
    "->"  shift, and go to state 738
    "??"  shift, and go to state 740
    "?."  shift, and go to state 741
    "?["  shift, and go to state 742
    "<|"  shift, and go to state 743
    "|>"  shift, and go to state 744
    '.'   shift, and go to state 769
    '['   shift, and go to state 770

    $default  reduce using rule 437 (expr)


State 956

  476 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1144


State 957

  424 expr: expr "?." "name" .

    $default  reduce using rule 424 (expr)


State 958

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  422     | expr "?[" expr . ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ']'    shift, and go to state 1145


State 959

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  461     | expr "<|" expr .
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 738
    "?."  shift, and go to state 741
    "?["  shift, and go to state 742
    '.'   shift, and go to state 769
    '['   shift, and go to state 770

    $default  reduce using rule 461 (expr)


State 960

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  462     | expr "|>" expr .
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 738
    "?."  shift, and go to state 741
    "?["  shift, and go to state 742
    '.'   shift, and go to state 769
    '['   shift, and go to state 770

    $default  reduce using rule 462 (expr)


State 961

  430 expr: basic_type_declaration . '(' ')'
  431     | basic_type_declaration . '(' expr_list ')'
  463     | expr "|>" basic_type_declaration .

    '('  shift, and go to state 771

    $default  reduce using rule 463 (expr)


State 962

  337 expr_assign: expr ":=" expr .
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 337 (expr_assign)


State 963

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  395     | expr "<<<" expr .
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 718
    "as"  shift, and go to state 719
    "++"  shift, and go to state 730
    "--"  shift, and go to state 731
    "->"  shift, and go to state 738
    "??"  shift, and go to state 740
    "?."  shift, and go to state 741
    "?["  shift, and go to state 742
    "<|"  shift, and go to state 743
    "|>"  shift, and go to state 744
    '-'   shift, and go to state 764
    '+'   shift, and go to state 765
    '*'   shift, and go to state 766
    '/'   shift, and go to state 767
    '%'   shift, and go to state 768
    '.'   shift, and go to state 769
    '['   shift, and go to state 770

    $default  reduce using rule 395 (expr)


State 964

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  396     | expr ">>>" expr .
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 718
    "as"  shift, and go to state 719
    "++"  shift, and go to state 730
    "--"  shift, and go to state 731
    "->"  shift, and go to state 738
    "??"  shift, and go to state 740
    "?."  shift, and go to state 741
    "?["  shift, and go to state 742
    "<|"  shift, and go to state 743
    "|>"  shift, and go to state 744
    '-'   shift, and go to state 764
    '+'   shift, and go to state 765
    '*'   shift, and go to state 766
    '/'   shift, and go to state 767
    '%'   shift, and go to state 768
    '.'   shift, and go to state 769
    '['   shift, and go to state 770

    $default  reduce using rule 396 (expr)


State 965

  351 expr_assign: expr "<<<=" expr .
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 351 (expr_assign)


State 966

  352 expr_assign: expr ">>>=" expr .
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 352 (expr_assign)


State 967

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  411     | expr "&&" expr .
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 411 (expr)


State 968

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  412     | expr "||" expr .
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "^^"   shift, and go to state 752
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 412 (expr)


State 969

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  413     | expr "^^" expr .
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 413 (expr)


State 970

  341 expr_assign: expr "&&=" expr .
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 341 (expr_assign)


State 971

  342 expr_assign: expr "||=" expr .
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 342 (expr_assign)


State 972

  343 expr_assign: expr "^^=" expr .
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 343 (expr_assign)


State 973

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  414     | expr ".." expr .
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    ".."  error (nonassociative)

    $default  reduce using rule 414 (expr)


State 974

  355 expr_assign_pipe: expr '=' "$ <|" . expr_block

    '$'  shift, and go to state 494
    '@'  shift, and go to state 664
    '{'  shift, and go to state 284

    expression_block  go to state 665
    block_or_lambda   go to state 666
    expr_block        go to state 1146


State 975

  353 expr_assign_pipe: expr '=' "@ <|" . expr_block

    '$'  shift, and go to state 494
    '@'  shift, and go to state 664
    '{'  shift, and go to state 284

    expression_block  go to state 665
    block_or_lambda   go to state 666
    expr_block        go to state 1147


State 976

  354 expr_assign_pipe: expr '=' "@@ <|" . expr_block

    '$'  shift, and go to state 494
    '@'  shift, and go to state 664
    '{'  shift, and go to state 284

    expression_block  go to state 665
    block_or_lambda   go to state 666
    expr_block        go to state 1148


State 977

  335 expr_assign: expr '=' expr .
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 335 (expr_assign)


State 978

  449 expr: expr '?' "as" . "name"
  452     | expr '?' "as" . "type" '<' $@31 type_declaration '>' $@32
  453     | expr '?' "as" . basic_type_declaration
  480 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1149
    "bool"      shift, and go to state 310
    "void"      shift, and go to state 311
    "string"    shift, and go to state 312
    "int"       shift, and go to state 314
    "int2"      shift, and go to state 315
    "int3"      shift, and go to state 316
    "int4"      shift, and go to state 317
    "uint"      shift, and go to state 318
    "bitfield"  shift, and go to state 457
    "uint2"     shift, and go to state 320
    "uint3"     shift, and go to state 321
    "uint4"     shift, and go to state 322
    "float"     shift, and go to state 323
    "float2"    shift, and go to state 324
    "float3"    shift, and go to state 325
    "float4"    shift, and go to state 326
    "range"     shift, and go to state 327
    "urange"    shift, and go to state 328
    "range64"   shift, and go to state 329
    "urange64"  shift, and go to state 330
    "int64"     shift, and go to state 332
    "uint64"    shift, and go to state 333
    "double"    shift, and go to state 334
    "int8"      shift, and go to state 337
    "uint8"     shift, and go to state 338
    "int16"     shift, and go to state 339
    "uint16"    shift, and go to state 340
    "$f"        shift, and go to state 1150
    "name"      shift, and go to state 1151

    basic_type_declaration  go to state 1152


State 979

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  438     | expr '?' expr . ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    ':'    shift, and go to state 1153
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770


State 980

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  409     | expr '|' expr .
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 409 (expr)


State 981

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  410     | expr '^' expr .
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 410 (expr)


State 982

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  408     | expr '&' expr .
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 408 (expr)


State 983

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  402     | expr '<' expr .
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 402 (expr)


State 984

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  403     | expr '>' expr .
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 403 (expr)


State 985

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  398     | expr '-' expr .
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 718
    "as"  shift, and go to state 719
    "++"  shift, and go to state 730
    "--"  shift, and go to state 731
    "->"  shift, and go to state 738
    "??"  shift, and go to state 740
    "?."  shift, and go to state 741
    "?["  shift, and go to state 742
    "<|"  shift, and go to state 743
    "|>"  shift, and go to state 744
    '*'   shift, and go to state 766
    '/'   shift, and go to state 767
    '%'   shift, and go to state 768
    '.'   shift, and go to state 769
    '['   shift, and go to state 770

    $default  reduce using rule 398 (expr)


State 986

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  397     | expr '+' expr .
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 718
    "as"  shift, and go to state 719
    "++"  shift, and go to state 730
    "--"  shift, and go to state 731
    "->"  shift, and go to state 738
    "??"  shift, and go to state 740
    "?."  shift, and go to state 741
    "?["  shift, and go to state 742
    "<|"  shift, and go to state 743
    "|>"  shift, and go to state 744
    '*'   shift, and go to state 766
    '/'   shift, and go to state 767
    '%'   shift, and go to state 768
    '.'   shift, and go to state 769
    '['   shift, and go to state 770

    $default  reduce using rule 397 (expr)


State 987

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  399     | expr '*' expr .
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 718
    "as"  shift, and go to state 719
    "++"  shift, and go to state 730
    "--"  shift, and go to state 731
    "->"  shift, and go to state 738
    "??"  shift, and go to state 740
    "?."  shift, and go to state 741
    "?["  shift, and go to state 742
    "<|"  shift, and go to state 743
    "|>"  shift, and go to state 744
    '.'   shift, and go to state 769
    '['   shift, and go to state 770

    $default  reduce using rule 399 (expr)


State 988

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  400     | expr '/' expr .
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 718
    "as"  shift, and go to state 719
    "++"  shift, and go to state 730
    "--"  shift, and go to state 731
    "->"  shift, and go to state 738
    "??"  shift, and go to state 740
    "?."  shift, and go to state 741
    "?["  shift, and go to state 742
    "<|"  shift, and go to state 743
    "|>"  shift, and go to state 744
    '.'   shift, and go to state 769
    '['   shift, and go to state 770

    $default  reduce using rule 400 (expr)


State 989

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  401     | expr '%' expr .
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 718
    "as"  shift, and go to state 719
    "++"  shift, and go to state 730
    "--"  shift, and go to state 731
    "->"  shift, and go to state 738
    "??"  shift, and go to state 740
    "?."  shift, and go to state 741
    "?["  shift, and go to state 742
    "<|"  shift, and go to state 743
    "|>"  shift, and go to state 744
    '.'   shift, and go to state 769
    '['   shift, and go to state 770

    $default  reduce using rule 401 (expr)


State 990

  425 expr: expr '.' "?." . "name"
  478 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1154
    "name"  shift, and go to state 1155


State 991

  423 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1156
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 992

  475 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1157


State 993

  372 expr_field: expr '.' "name" .
  374           | expr '.' "name" . '(' ')'
  375           | expr '.' "name" . '(' expr_list ')'

    '('  shift, and go to state 1158

    '('       [reduce using rule 372 (expr_field)]
    $default  reduce using rule 372 (expr_field)


State 994

  373 expr_field: expr '.' '.' . "name"
  477 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1159
    "name"  shift, and go to state 1160


State 995

  421 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1161
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 996

  378 expr_field: expr '.' $@25 . error $@26

    error  shift, and go to state 1162


State 997

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  420     | expr '[' expr . ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ']'    shift, and go to state 1163


State 998

  430 expr: basic_type_declaration '(' ')' .

    $default  reduce using rule 430 (expr)


State 999

  309 expr_list: expr_list . ',' expr
  431 expr: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 838
    ')'  shift, and go to state 1164


State 1000

  579 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@42 enum_list $@43 . '}'

    '}'  shift, and go to state 1165


State 1001

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'
  559 enum_list: enum_list "name" '=' expr . ';'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ';'    shift, and go to state 1166


State 1002

  116 annotation_list: annotation_list . ',' annotation_declaration
  118 optional_annotation_list: '[' annotation_list . ']'
  503 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' ';'

    ','  shift, and go to state 107
    ']'  shift, and go to state 1167


State 1003

  500 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header ';'
  502                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block

    "public"   shift, and go to state 1168
    "private"  shift, and go to state 1169

    $default  reduce using rule 490 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1170


State 1004

  495 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1171

    $default  reduce using rule 493 (optional_static_member_variable)

    optional_static_member_variable  go to state 1172


State 1005

  498 struct_variable_declaration_list: struct_variable_declaration_list $@33 structure_variable_declaration . ';'

    ';'  shift, and go to state 1173


State 1006

  539 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 539 (let_variable_name_with_pos_list)


State 1007

  542 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 542 (let_variable_declaration)


State 1008

  334 expr_assign: expr .
  335            | expr . '=' expr
  336            | expr . "<-" expr
  337            | expr . ":=" expr
  338            | expr . "&=" expr
  339            | expr . "|=" expr
  340            | expr . "^=" expr
  341            | expr . "&&=" expr
  342            | expr . "||=" expr
  343            | expr . "^^=" expr
  344            | expr . "+=" expr
  345            | expr . "-=" expr
  346            | expr . "*=" expr
  347            | expr . "/=" expr
  348            | expr . "%=" expr
  349            | expr . "<<=" expr
  350            | expr . ">>=" expr
  351            | expr . "<<<=" expr
  352            | expr . ">>>=" expr
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'
  541 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 718
    "as"    shift, and go to state 719
    "+="    shift, and go to state 720
    "-="    shift, and go to state 721
    "/="    shift, and go to state 722
    "*="    shift, and go to state 723
    "%="    shift, and go to state 724
    "&="    shift, and go to state 725
    "|="    shift, and go to state 726
    "^="    shift, and go to state 727
    "<<"    shift, and go to state 728
    ">>"    shift, and go to state 729
    "++"    shift, and go to state 730
    "--"    shift, and go to state 731
    "<="    shift, and go to state 732
    "<<="   shift, and go to state 733
    ">>="   shift, and go to state 734
    ">="    shift, and go to state 735
    "=="    shift, and go to state 736
    "!="    shift, and go to state 737
    "->"    shift, and go to state 738
    "<-"    shift, and go to state 839
    "??"    shift, and go to state 740
    "?."    shift, and go to state 741
    "?["    shift, and go to state 742
    "<|"    shift, and go to state 743
    "|>"    shift, and go to state 744
    ":="    shift, and go to state 745
    "<<<"   shift, and go to state 746
    ">>>"   shift, and go to state 747
    "<<<="  shift, and go to state 748
    ">>>="  shift, and go to state 749
    "&&"    shift, and go to state 750
    "||"    shift, and go to state 751
    "^^"    shift, and go to state 752
    "&&="   shift, and go to state 753
    "||="   shift, and go to state 754
    "^^="   shift, and go to state 755
    ".."    shift, and go to state 756
    '='     shift, and go to state 840
    '?'     shift, and go to state 758
    '|'     shift, and go to state 759
    '^'     shift, and go to state 760
    '&'     shift, and go to state 761
    '<'     shift, and go to state 762
    '>'     shift, and go to state 763
    '-'     shift, and go to state 764
    '+'     shift, and go to state 765
    '*'     shift, and go to state 766
    '/'     shift, and go to state 767
    '%'     shift, and go to state 768
    '.'     shift, and go to state 769
    '['     shift, and go to state 770
    ';'     shift, and go to state 1174

    $default  reduce using rule 334 (expr_assign)


State 1009

  543 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';' .

    $default  reduce using rule 543 (let_variable_declaration)


State 1010

  655 type_declaration_no_options: "type" '<' $@48 type_declaration '>' . $@49

    $default  reduce using rule 654 ($@49)

    $@49  go to state 1175


State 1011

  676 type_declaration_no_options: "array" '<' $@52 type_declaration '>' . $@53

    $default  reduce using rule 675 ($@53)

    $@53  go to state 1176


State 1012

  679 type_declaration_no_options: "table" '<' $@54 table_type_pair '>' . $@55

    $default  reduce using rule 678 ($@55)

    $@55  go to state 1177


State 1013

  646 table_type_pair: type_declaration ';' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1178


State 1014

  682 type_declaration_no_options: "iterator" '<' $@56 type_declaration '>' . $@57

    $default  reduce using rule 681 ($@57)

    $@57  go to state 1179


State 1015

  672 type_declaration_no_options: "smart_ptr" '<' $@50 type_declaration '>' . $@51

    $default  reduce using rule 671 ($@51)

    $@51  go to state 1180


State 1016

  644 bitfield_type_declaration: "bitfield" '<' $@46 bitfield_bits '>' . $@47

    $default  reduce using rule 643 ($@47)

    $@47  go to state 1181


State 1017

  638 bitfield_bits: bitfield_bits ';' . "name"

    "name"  shift, and go to state 1182


State 1018

  686 type_declaration_no_options: "block" '<' $@58 type_declaration '>' . $@59

    $default  reduce using rule 685 ($@59)

    $@59  go to state 1183


State 1019

  689 type_declaration_no_options: "block" '<' $@60 optional_function_argument_list optional_function_type . '>' $@61

    '>'  shift, and go to state 1184


State 1020

  693 type_declaration_no_options: "function" '<' $@62 type_declaration '>' . $@63

    $default  reduce using rule 692 ($@63)

    $@63  go to state 1185


State 1021

  696 type_declaration_no_options: "function" '<' $@64 optional_function_argument_list optional_function_type . '>' $@65

    '>'  shift, and go to state 1186


State 1022

  700 type_declaration_no_options: "lambda" '<' $@66 type_declaration '>' . $@67

    $default  reduce using rule 699 ($@67)

    $@67  go to state 1187


State 1023

  703 type_declaration_no_options: "lambda" '<' $@68 optional_function_argument_list optional_function_type . '>' $@69

    '>'  shift, and go to state 1188


State 1024

  706 type_declaration_no_options: "tuple" '<' $@70 tuple_type_list '>' . $@71

    $default  reduce using rule 705 ($@71)

    $@71  go to state 1189


State 1025

  512 tuple_type_list: tuple_type_list ';' . tuple_type

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 597
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    tuple_type                   go to state 1190
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 600


State 1026

  709 type_declaration_no_options: "variant" '<' $@72 variant_type_list '>' . $@73

    $default  reduce using rule 708 ($@73)

    $@73  go to state 1191


State 1027

  518 variant_type_list: variant_type_list ';' . variant_type

    "name"  shift, and go to state 602

    variant_type  go to state 1192


State 1028

  657 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 657 (type_declaration_no_options)


State 1029

  510 tuple_type: "name" ':' type_declaration .
  711 type_declaration: type_declaration . '|' type_declaration_no_options
  712                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409

    $default  reduce using rule 510 (tuple_type)


State 1030

  516 variant_type: "name" ':' type_declaration .
  711 type_declaration: type_declaration . '|' type_declaration_no_options
  712                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409

    $default  reduce using rule 516 (variant_type)


State 1031

  596 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 596 (variable_name_with_pos_list)


State 1032

  599 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1193


State 1033

  527 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1194
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1034

  651 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  652                            | type_declaration_no_options . '[' ']'
  658                            | type_declaration_no_options . '-' '[' ']'
  659                            | type_declaration_no_options . "explicit"
  660                            | type_declaration_no_options . "const"
  661                            | type_declaration_no_options . '-' "const"
  662                            | type_declaration_no_options . '&'
  663                            | type_declaration_no_options . '-' '&'
  664                            | type_declaration_no_options . '#'
  665                            | type_declaration_no_options . "implicit"
  666                            | type_declaration_no_options . '-' '#'
  667                            | type_declaration_no_options . "==" "const"
  668                            | type_declaration_no_options . "==" '&'
  669                            | type_declaration_no_options . '?'
  673                            | type_declaration_no_options . "??"
  765 make_struct_decl: "struct" '<' $@86 type_declaration_no_options . '>' $@87 '(' make_struct_dim ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1195
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1035

  651 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  652                            | type_declaration_no_options . '[' ']'
  658                            | type_declaration_no_options . '-' '[' ']'
  659                            | type_declaration_no_options . "explicit"
  660                            | type_declaration_no_options . "const"
  661                            | type_declaration_no_options . '-' "const"
  662                            | type_declaration_no_options . '&'
  663                            | type_declaration_no_options . '-' '&'
  664                            | type_declaration_no_options . '#'
  665                            | type_declaration_no_options . "implicit"
  666                            | type_declaration_no_options . '-' '#'
  667                            | type_declaration_no_options . "==" "const"
  668                            | type_declaration_no_options . "==" '&'
  669                            | type_declaration_no_options . '?'
  673                            | type_declaration_no_options . "??"
  768 make_struct_decl: "class" '<' $@88 type_declaration_no_options . '>' $@89 '(' make_struct_dim ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1196
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1036

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" . expr_list expression_block

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 1197
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 695
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1037

  262 new_type_declaration: '<' $@11 type_declaration . '>' $@12
  711 type_declaration: type_declaration . '|' type_declaration_no_options
  712                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409
    '>'  shift, and go to state 1198


State 1038

  265 expr_new: "new" new_type_declaration '(' ')' .

    $default  reduce using rule 265 (expr_new)


State 1039

  266 expr_new: "new" new_type_declaration '(' expr_list . ')'
  309 expr_list: expr_list . ',' expr

    ','  shift, and go to state 838
    ')'  shift, and go to state 1199


State 1040

  267 expr_new: "new" new_type_declaration '(' make_struct_dim . ')'
  742 make_struct_dim: make_struct_dim . ';' make_struct_fields

    ')'  shift, and go to state 1200
    ';'  shift, and go to state 1082


State 1041

  306 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  307               | "typeinfo" '(' name_in_namespace '<' . "name" ';' "name" '>' expr ')'

    "name"  shift, and go to state 1201


State 1042

  305 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ')'    shift, and go to state 1202


State 1043

  304 expr_type_decl: "type" '<' $@19 type_declaration . '>' $@20
  711 type_declaration: type_declaration . '|' type_declaration_no_options
  712                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409
    '>'  shift, and go to state 1203


State 1044

  651 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  652                            | type_declaration_no_options . '[' ']'
  658                            | type_declaration_no_options . '-' '[' ']'
  659                            | type_declaration_no_options . "explicit"
  660                            | type_declaration_no_options . "const"
  661                            | type_declaration_no_options . '-' "const"
  662                            | type_declaration_no_options . '&'
  663                            | type_declaration_no_options . '-' '&'
  664                            | type_declaration_no_options . '#'
  665                            | type_declaration_no_options . "implicit"
  666                            | type_declaration_no_options . '-' '#'
  667                            | type_declaration_no_options . "==" "const"
  668                            | type_declaration_no_options . "==" '&'
  669                            | type_declaration_no_options . '?'
  673                            | type_declaration_no_options . "??"
  792 make_dim_decl: "array" '<' $@96 type_declaration_no_options . '>' $@97 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1204
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1045

  789 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1205


State 1046

  309 expr_list: expr_list ',' expr .
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 309 (expr_list)


State 1047

  282 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 282 (expression_try_catch)


State 1048

  804 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' expr_map_tuple_list optional_comma ')'

    '('  shift, and go to state 1206


State 1049

  805 make_table_decl: "table" '<' type_declaration_no_options ';' . type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1207


State 1050

  803 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1208


State 1051

  433 expr: "deref" '(' expr ')' .

    $default  reduce using rule 433 (expr)


State 1052

   81 expression_with_alias: "assume" "name" '=' $@5 . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1209
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1053

  295 expr_cast: "cast" '<' $@13 type_declaration_no_options . '>' $@14 expr
  651 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  652                            | type_declaration_no_options . '[' ']'
  658                            | type_declaration_no_options . '-' '[' ']'
  659                            | type_declaration_no_options . "explicit"
  660                            | type_declaration_no_options . "const"
  661                            | type_declaration_no_options . '-' "const"
  662                            | type_declaration_no_options . '&'
  663                            | type_declaration_no_options . '-' '&'
  664                            | type_declaration_no_options . '#'
  665                            | type_declaration_no_options . "implicit"
  666                            | type_declaration_no_options . '-' '#'
  667                            | type_declaration_no_options . "==" "const"
  668                            | type_declaration_no_options . "==" '&'
  669                            | type_declaration_no_options . '?'
  673                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1210
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1054

  298 expr_cast: "upcast" '<' $@15 type_declaration_no_options . '>' $@16 expr
  651 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  652                            | type_declaration_no_options . '[' ']'
  658                            | type_declaration_no_options . '-' '[' ']'
  659                            | type_declaration_no_options . "explicit"
  660                            | type_declaration_no_options . "const"
  661                            | type_declaration_no_options . '-' "const"
  662                            | type_declaration_no_options . '&'
  663                            | type_declaration_no_options . '-' '&'
  664                            | type_declaration_no_options . '#'
  665                            | type_declaration_no_options . "implicit"
  666                            | type_declaration_no_options . '-' '#'
  667                            | type_declaration_no_options . "==" "const"
  668                            | type_declaration_no_options . "==" '&'
  669                            | type_declaration_no_options . '?'
  673                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1211
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1055

  434 expr: "addr" '(' expr ')' .

    $default  reduce using rule 434 (expr)


State 1056

  301 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options . '>' $@18 expr
  651 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  652                            | type_declaration_no_options . '[' ']'
  658                            | type_declaration_no_options . '-' '[' ']'
  659                            | type_declaration_no_options . "explicit"
  660                            | type_declaration_no_options . "const"
  661                            | type_declaration_no_options . '-' "const"
  662                            | type_declaration_no_options . '&'
  663                            | type_declaration_no_options . '-' '&'
  664                            | type_declaration_no_options . '#'
  665                            | type_declaration_no_options . "implicit"
  666                            | type_declaration_no_options . '-' '#'
  667                            | type_declaration_no_options . "==" "const"
  668                            | type_declaration_no_options . "==" '&'
  669                            | type_declaration_no_options . '?'
  673                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1212
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1057

  465 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 465 (expr)


State 1058

  651 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  652                            | type_declaration_no_options . '[' ']'
  658                            | type_declaration_no_options . '-' '[' ']'
  659                            | type_declaration_no_options . "explicit"
  660                            | type_declaration_no_options . "const"
  661                            | type_declaration_no_options . '-' "const"
  662                            | type_declaration_no_options . '&'
  663                            | type_declaration_no_options . '-' '&'
  664                            | type_declaration_no_options . '#'
  665                            | type_declaration_no_options . "implicit"
  666                            | type_declaration_no_options . '-' '#'
  667                            | type_declaration_no_options . "==" "const"
  668                            | type_declaration_no_options . "==" '&'
  669                            | type_declaration_no_options . '?'
  673                            | type_declaration_no_options . "??"
  796 make_dim_decl: "fixed_array" '<' $@98 type_declaration_no_options . '>' $@99 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1213
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1059

  793 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1214


State 1060

  651 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  652                            | type_declaration_no_options . '[' ']'
  658                            | type_declaration_no_options . '-' '[' ']'
  659                            | type_declaration_no_options . "explicit"
  660                            | type_declaration_no_options . "const"
  661                            | type_declaration_no_options . '-' "const"
  662                            | type_declaration_no_options . '&'
  663                            | type_declaration_no_options . '-' '&'
  664                            | type_declaration_no_options . '#'
  665                            | type_declaration_no_options . "implicit"
  666                            | type_declaration_no_options . '-' '#'
  667                            | type_declaration_no_options . "==" "const"
  668                            | type_declaration_no_options . "==" '&'
  669                            | type_declaration_no_options . '?'
  673                            | type_declaration_no_options . "??"
  774 make_struct_decl: "default" '<' $@92 type_declaration_no_options . '>' $@93

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1215
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1061

  651 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  652                            | type_declaration_no_options . '[' ']'
  658                            | type_declaration_no_options . '-' '[' ']'
  659                            | type_declaration_no_options . "explicit"
  660                            | type_declaration_no_options . "const"
  661                            | type_declaration_no_options . '-' "const"
  662                            | type_declaration_no_options . '&'
  663                            | type_declaration_no_options . '-' '&'
  664                            | type_declaration_no_options . '#'
  665                            | type_declaration_no_options . "implicit"
  666                            | type_declaration_no_options . '-' '#'
  667                            | type_declaration_no_options . "==" "const"
  668                            | type_declaration_no_options . "==" '&'
  669                            | type_declaration_no_options . '?'
  673                            | type_declaration_no_options . "??"
  783 make_tuple_call: "tuple" '<' $@94 type_declaration_no_options . '>' $@95 '(' make_struct_dim ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1216
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1062

  780 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1217


State 1063

  651 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  652                            | type_declaration_no_options . '[' ']'
  658                            | type_declaration_no_options . '-' '[' ']'
  659                            | type_declaration_no_options . "explicit"
  660                            | type_declaration_no_options . "const"
  661                            | type_declaration_no_options . '-' "const"
  662                            | type_declaration_no_options . '&'
  663                            | type_declaration_no_options . '-' '&'
  664                            | type_declaration_no_options . '#'
  665                            | type_declaration_no_options . "implicit"
  666                            | type_declaration_no_options . '-' '#'
  667                            | type_declaration_no_options . "==" "const"
  668                            | type_declaration_no_options . "==" '&'
  669                            | type_declaration_no_options . '?'
  673                            | type_declaration_no_options . "??"
  771 make_struct_decl: "variant" '<' $@90 type_declaration_no_options . '>' $@91 '(' make_struct_dim ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1218
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1064

  435 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  436     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "[["  shift, and go to state 923

    $default  reduce using rule 322 (optional_capture_list)

    optional_capture_list  go to state 1219


State 1065

  325 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 1220


State 1066

  467 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 467 (expr_mtag)


State 1067

  468 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 468 (expr_mtag)


State 1068

  469 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 469 (expr_mtag)


State 1069

  470 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 470 (expr_mtag)


State 1070

  471 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 471 (expr_mtag)


State 1071

  473 expr_mtag: "$c" '(' expr ')' . '(' ')'
  474          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1221


State 1072

  811 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 1222
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 695
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1073

  744 optional_block: "where" expr_block .

    $default  reduce using rule 744 (optional_block)


State 1074

  737 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  738                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1223
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1075

  734 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1224
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1076

  733 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1225
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1077

  658 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'
  786 make_dim_decl: '[' . expr_list optional_comma ']'
  810 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "for"                             shift, and go to state 693
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    ']'                               shift, and go to state 809
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 694
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 695
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1078

  308 expr_list: expr .
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'
  651 type_declaration_no_options: type_declaration_no_options '[' expr . ']'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ']'    shift, and go to state 810

    ']'       [reduce using rule 308 (expr_list)]
    $default  reduce using rule 308 (expr_list)


State 1079

  759 make_struct_decl: "[[" type_declaration_no_options '(' ')' . optional_block optional_trailing_delim_sqr_sqr
  760                 | "[[" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 873
    "$f"     shift, and go to state 874
    "name"   shift, and go to state 1226

    $default  reduce using rule 743 (optional_block)

    make_struct_fields  go to state 880
    make_struct_dim     go to state 1227
    optional_block      go to state 1228


State 1080

  776 make_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1229
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1081

  735 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  736                   | make_struct_fields ',' . "name" ":=" expr
  739                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  740                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1230
    "name"  shift, and go to state 1231


State 1082

  742 make_struct_dim: make_struct_dim ';' . make_struct_fields

    "$f"    shift, and go to state 874
    "name"  shift, and go to state 1226

    make_struct_fields  go to state 1232


State 1083

  757 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1084
    ",]]"  shift, and go to state 1085
    ']'    shift, and go to state 1086

    optional_trailing_delim_sqr_sqr  go to state 1233


State 1084

  752 optional_trailing_delim_sqr_sqr: ";]]" .

    $default  reduce using rule 752 (optional_trailing_delim_sqr_sqr)


State 1085

  753 optional_trailing_delim_sqr_sqr: ",]]" .

    $default  reduce using rule 753 (optional_trailing_delim_sqr_sqr)


State 1086

  751 optional_trailing_delim_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1234


State 1087

  758 make_struct_decl: "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 758 (make_struct_decl)


State 1088

  777 make_tuple: make_tuple ',' . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1235
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1089

  750 optional_trailing_semicolon_sqr_sqr: ";]]" .

    $default  reduce using rule 750 (optional_trailing_semicolon_sqr_sqr)


State 1090

  749 optional_trailing_semicolon_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1236


State 1091

  785 make_dim: make_dim ';' . make_tuple

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 879
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple              go to state 1237
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1092

  787 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr .

    $default  reduce using rule 787 (make_dim_decl)


State 1093

  812 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where '}' ']'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 1238
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 695
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1094

  762 make_struct_decl: "[{" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "$f"    shift, and go to state 874
    "name"  shift, and go to state 1226

    make_struct_fields  go to state 880
    make_struct_dim     go to state 1239


State 1095

  761 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    ";}]"  shift, and go to state 1240
    ",}]"  shift, and go to state 1241
    '}'    shift, and go to state 1242

    optional_trailing_delim_cur_sqr  go to state 1243


State 1096

  748 optional_trailing_semicolon_cur_sqr: ";}]" .

    $default  reduce using rule 748 (optional_trailing_semicolon_cur_sqr)


State 1097

  747 optional_trailing_semicolon_cur_sqr: '}' . ']'

    ']'  shift, and go to state 1244


State 1098

  788 make_dim_decl: "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr .

    $default  reduce using rule 788 (make_dim_decl)


State 1099

  814 array_comprehension: "{{" "for" variable_name_with_pos_list "in" . expr_list ';' make_map_tuple array_comprehension_where '}' '}'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 1245
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 695
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1100

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'
  778 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 778 (make_map_tuple)


State 1101

  798 make_table: make_table ';' make_map_tuple .

    $default  reduce using rule 798 (make_table)


State 1102

  745 optional_trailing_semicolon_cur_cur: '}' '}' .

    $default  reduce using rule 745 (optional_trailing_semicolon_cur_cur)


State 1103

  247 expression_keyword: "keyword" '<' $@7 type_declaration_no_options . '>' $@8 expr
  651 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  652                            | type_declaration_no_options . '[' ']'
  658                            | type_declaration_no_options . '-' '[' ']'
  659                            | type_declaration_no_options . "explicit"
  660                            | type_declaration_no_options . "const"
  661                            | type_declaration_no_options . '-' "const"
  662                            | type_declaration_no_options . '&'
  663                            | type_declaration_no_options . '-' '&'
  664                            | type_declaration_no_options . '#'
  665                            | type_declaration_no_options . "implicit"
  666                            | type_declaration_no_options . '-' '#'
  667                            | type_declaration_no_options . "==" "const"
  668                            | type_declaration_no_options . "==" '&'
  669                            | type_declaration_no_options . '?'
  673                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1246
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1104

  250 expression_keyword: "type function" '<' $@9 type_declaration_no_options . '>' $@10 '(' optional_expr_list ')'
  651 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  652                            | type_declaration_no_options . '[' ']'
  658                            | type_declaration_no_options . '-' '[' ']'
  659                            | type_declaration_no_options . "explicit"
  660                            | type_declaration_no_options . "const"
  661                            | type_declaration_no_options . '-' "const"
  662                            | type_declaration_no_options . '&'
  663                            | type_declaration_no_options . '-' '&'
  664                            | type_declaration_no_options . '#'
  665                            | type_declaration_no_options . "implicit"
  666                            | type_declaration_no_options . '-' '#'
  667                            | type_declaration_no_options . "==" "const"
  668                            | type_declaration_no_options . "==" '&'
  669                            | type_declaration_no_options . '?'
  673                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1247
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1105

   30 string_builder_body: string_builder_body "{" expr . "}"
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    "}"    shift, and go to state 1248
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770


State 1106

  810 array_comprehension: '[' "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 1249
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 695
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1107

  786 make_dim_decl: '[' expr_list optional_comma ']' .

    $default  reduce using rule 786 (make_dim_decl)


State 1108

  419 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 419 (expr)


State 1109

  364 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1250
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1110

  482 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1251
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1111

  368 func_addr_expr: '@' '@' '<' $@21 . type_declaration_no_options '>' $@22 func_addr_name

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1252


State 1112

  371 func_addr_expr: '@' '@' '<' $@23 . optional_function_argument_list optional_function_type '>' $@24 func_addr_name

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 1253


State 1113

  813 array_comprehension: '{' "for" variable_name_with_pos_list "in" . expr_list ';' make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 1254
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 695
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1114

  800 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 800 (expr_map_tuple_list)


State 1115

  801 make_table_decl: '{' expr_map_tuple_list optional_comma '}' .

    $default  reduce using rule 801 (make_table_decl)


State 1116

  217 expression_block: '{' expressions '}' "finally" '{' expressions . '}'
  240 expressions: expressions . expression_any
  241            | expressions . error

    error                             shift, and go to state 424
    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 427
    "if"                              shift, and go to state 428
    "static_if"                       shift, and go to state 429
    "for"                             shift, and go to state 430
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "return"                          shift, and go to state 437
    "null"                            shift, and go to state 438
    "break"                           shift, and go to state 439
    "try"                             shift, and go to state 440
    "table"                           shift, and go to state 441
    "delete"                          shift, and go to state 442
    "deref"                           shift, and go to state 443
    "with"                            shift, and go to state 444
    "assume"                          shift, and go to state 445
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 448
    "continue"                        shift, and go to state 449
    "pass"                            shift, and go to state 450
    "reinterpret"                     shift, and go to state 451
    "label"                           shift, and go to state 452
    "goto"                            shift, and go to state 453
    "unsafe"                          shift, and go to state 454
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "yield"                           shift, and go to state 461
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "$ <|"                            shift, and go to state 464
    "@ <|"                            shift, and go to state 465
    "@@ <|"                           shift, and go to state 466
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 484
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    ';'                               shift, and go to state 496
    '{'                               shift, and go to state 497
    '}'                               shift, and go to state 1255

    string_builder             go to state 499
    expr_reader                go to state 500
    expression_label           go to state 501
    expression_goto            go to state 502
    if_or_static_if            go to state 503
    expression_if_one_liner    go to state 504
    expression_if_then_else    go to state 505
    expression_for_loop        go to state 506
    expression_unsafe          go to state 507
    expression_while_loop      go to state 508
    expression_with            go to state 509
    expression_with_alias      go to state 510
    expression_any             go to state 511
    expr_keyword               go to state 512
    expression_keyword         go to state 513
    expr_pipe                  go to state 514
    name_in_namespace          go to state 515
    expression_delete          go to state 516
    expr_new                   go to state 517
    expression_break           go to state 518
    expression_continue        go to state 519
    expression_return_no_pipe  go to state 520
    expression_return          go to state 521
    expression_yield_no_pipe   go to state 522
    expression_yield           go to state 523
    expression_try_catch       go to state 524
    kwd_let                    go to state 525
    expression_let             go to state 526
    expr_cast                  go to state 527
    expr_type_decl             go to state 528
    expr_type_info             go to state 529
    block_or_lambda            go to state 530
    expr_full_block            go to state 531
    expr_numeric_const         go to state 532
    expr_assign                go to state 533
    expr_assign_pipe           go to state 534
    expr_named_call            go to state 535
    expr_method_call           go to state 536
    func_addr_expr             go to state 537
    expr_field                 go to state 538
    expr                       go to state 539
    expr_mtag                  go to state 540
    basic_type_declaration     go to state 541
    make_decl                  go to state 542
    make_struct_decl           go to state 543
    make_tuple_call            go to state 544
    make_dim_decl              go to state 545
    make_table_decl            go to state 546
    array_comprehension        go to state 547


State 1117

   60 expression_else: "else" . expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 1256


State 1118

   57 elif_or_static_elif: "elif" .

    $default  reduce using rule 57 (elif_or_static_elif)


State 1119

   58 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 58 (elif_or_static_elif)


State 1120

   61 expression_else: elif_or_static_elif . expr expression_block expression_else

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1257
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1121

   72 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 72 (expression_if_then_else)


State 1122

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr . expression_else_one_liner ';'
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1258
    "is"    shift, and go to state 718
    "as"    shift, and go to state 719
    "<<"    shift, and go to state 728
    ">>"    shift, and go to state 729
    "++"    shift, and go to state 730
    "--"    shift, and go to state 731
    "<="    shift, and go to state 732
    ">="    shift, and go to state 735
    "=="    shift, and go to state 736
    "!="    shift, and go to state 737
    "->"    shift, and go to state 738
    "??"    shift, and go to state 740
    "?."    shift, and go to state 741
    "?["    shift, and go to state 742
    "<|"    shift, and go to state 743
    "|>"    shift, and go to state 744
    "<<<"   shift, and go to state 746
    ">>>"   shift, and go to state 747
    "&&"    shift, and go to state 750
    "||"    shift, and go to state 751
    "^^"    shift, and go to state 752
    ".."    shift, and go to state 756
    '?'     shift, and go to state 758
    '|'     shift, and go to state 759
    '^'     shift, and go to state 760
    '&'     shift, and go to state 761
    '<'     shift, and go to state 762
    '>'     shift, and go to state 763
    '-'     shift, and go to state 764
    '+'     shift, and go to state 765
    '*'     shift, and go to state 766
    '/'     shift, and go to state 767
    '%'     shift, and go to state 768
    '.'     shift, and go to state 769
    '['     shift, and go to state 770

    $default  reduce using rule 64 (expression_else_one_liner)

    expression_else_one_liner  go to state 1259


State 1123

  359 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  735 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  736                   | make_struct_fields . ',' "name" ":=" expr
  739                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  740                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1081
    ']'  shift, and go to state 1260


State 1124

  309 expr_list: expr_list ',' . expr
  360 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 1261
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1046
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1125

  429 expr: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 429 (expr)


State 1126

  428 expr: name_in_namespace '(' make_struct_dim ')' .

    $default  reduce using rule 428 (expr)


State 1127

  287 tuple_expansion: "name" .

    $default  reduce using rule 287 (tuple_expansion)


State 1128

  288 tuple_expansion: tuple_expansion . ',' "name"
  289 tuple_expansion_variable_declaration: "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  290                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr ';'

    ','  shift, and go to state 1262
    ']'  shift, and go to state 1263


State 1129

  318 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1264


State 1130

  319 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1265


State 1131

  317 capture_entry: '=' . "name"

    "name"  shift, and go to state 1266


State 1132

  316 capture_entry: '&' . "name"

    "name"  shift, and go to state 1267


State 1133

  320 capture_list: capture_entry .

    $default  reduce using rule 320 (capture_list)


State 1134

  321 capture_list: capture_list . ',' capture_entry
  323 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 1268
    ']'  shift, and go to state 1269


State 1135

  326 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1270


State 1136

  441 expr: expr "is" "type" '<' . $@27 type_declaration_no_options '>' $@28

    $default  reduce using rule 439 ($@27)

    $@27  go to state 1271


State 1137

  481 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1272
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1138

  447 expr: expr "as" "type" '<' . $@29 type_declaration '>' $@30

    $default  reduce using rule 445 ($@29)

    $@29  go to state 1273


State 1139

  479 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1274
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1140

  361 expr_method_call: expr "->" "name" '(' . ')'
  362                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    ')'                               shift, and go to state 1275
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 1276
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 695
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1141

  358 expr_assign_pipe: expr "<-" "$ <|" expr_block .

    $default  reduce using rule 358 (expr_assign_pipe)


State 1142

  356 expr_assign_pipe: expr "<-" "@ <|" expr_block .

    $default  reduce using rule 356 (expr_assign_pipe)


State 1143

  357 expr_assign_pipe: expr "<-" "@@ <|" expr_block .

    $default  reduce using rule 357 (expr_assign_pipe)


State 1144

  476 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1277
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1145

  422 expr: expr "?[" expr ']' .

    $default  reduce using rule 422 (expr)


State 1146

  355 expr_assign_pipe: expr '=' "$ <|" expr_block .

    $default  reduce using rule 355 (expr_assign_pipe)


State 1147

  353 expr_assign_pipe: expr '=' "@ <|" expr_block .

    $default  reduce using rule 353 (expr_assign_pipe)


State 1148

  354 expr_assign_pipe: expr '=' "@@ <|" expr_block .

    $default  reduce using rule 354 (expr_assign_pipe)


State 1149

  452 expr: expr '?' "as" "type" . '<' $@31 type_declaration '>' $@32

    '<'  shift, and go to state 1278


State 1150

  480 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1279


State 1151

  449 expr: expr '?' "as" "name" .

    $default  reduce using rule 449 (expr)


State 1152

  453 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 453 (expr)


State 1153

  438 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1280
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1154

  478 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1281


State 1155

  425 expr: expr '.' "?." "name" .

    $default  reduce using rule 425 (expr)


State 1156

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  423     | expr '.' "?[" expr . ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ']'    shift, and go to state 1282


State 1157

  475 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1283
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1158

  374 expr_field: expr '.' "name" '(' . ')'
  375           | expr '.' "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    ')'                               shift, and go to state 1284
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 1285
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 695
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1159

  477 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1286


State 1160

  373 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 373 (expr_field)


State 1161

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  421     | expr '.' '[' expr . ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ']'    shift, and go to state 1287


State 1162

  378 expr_field: expr '.' $@25 error . $@26

    $default  reduce using rule 377 ($@26)

    $@26  go to state 1288


State 1163

  420 expr: expr '[' expr ']' .

    $default  reduce using rule 420 (expr)


State 1164

  431 expr: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 431 (expr)


State 1165

  579 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@42 enum_list $@43 '}' .

    $default  reduce using rule 579 (enum_declaration)


State 1166

  559 enum_list: enum_list "name" '=' expr ';' .

    $default  reduce using rule 559 (enum_list)


State 1167

  118 optional_annotation_list: '[' annotation_list ']' .
  503 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . ';'

    ';'  shift, and go to state 1289

    $default  reduce using rule 118 (optional_annotation_list)


State 1168

  491 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 491 (optional_public_or_private_member_variable)


State 1169

  492 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 492 (optional_public_or_private_member_variable)


State 1170

  500 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@34 function_declaration_header ';'
  502                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block

    "abstract"  shift, and go to state 1290
    "static"    shift, and go to state 1171

    $default  reduce using rule 493 (optional_static_member_variable)

    optional_static_member_variable  go to state 1291


State 1171

  494 optional_static_member_variable: "static" .

    $default  reduce using rule 494 (optional_static_member_variable)


State 1172

  495 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1292
    "sealed"    shift, and go to state 1293

    $default  reduce using rule 485 (optional_override)

    optional_override  go to state 1294


State 1173

  498 struct_variable_declaration_list: struct_variable_declaration_list $@33 structure_variable_declaration ';' .

    $default  reduce using rule 498 (struct_variable_declaration_list)


State 1174

  541 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr ';' .

    $default  reduce using rule 541 (let_variable_declaration)


State 1175

  655 type_declaration_no_options: "type" '<' $@48 type_declaration '>' $@49 .

    $default  reduce using rule 655 (type_declaration_no_options)


State 1176

  676 type_declaration_no_options: "array" '<' $@52 type_declaration '>' $@53 .

    $default  reduce using rule 676 (type_declaration_no_options)


State 1177

  679 type_declaration_no_options: "table" '<' $@54 table_type_pair '>' $@55 .

    $default  reduce using rule 679 (type_declaration_no_options)


State 1178

  646 table_type_pair: type_declaration ';' type_declaration .
  711 type_declaration: type_declaration . '|' type_declaration_no_options
  712                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409

    $default  reduce using rule 646 (table_type_pair)


State 1179

  682 type_declaration_no_options: "iterator" '<' $@56 type_declaration '>' $@57 .

    $default  reduce using rule 682 (type_declaration_no_options)


State 1180

  672 type_declaration_no_options: "smart_ptr" '<' $@50 type_declaration '>' $@51 .

    $default  reduce using rule 672 (type_declaration_no_options)


State 1181

  644 bitfield_type_declaration: "bitfield" '<' $@46 bitfield_bits '>' $@47 .

    $default  reduce using rule 644 (bitfield_type_declaration)


State 1182

  638 bitfield_bits: bitfield_bits ';' "name" .

    $default  reduce using rule 638 (bitfield_bits)


State 1183

  686 type_declaration_no_options: "block" '<' $@58 type_declaration '>' $@59 .

    $default  reduce using rule 686 (type_declaration_no_options)


State 1184

  689 type_declaration_no_options: "block" '<' $@60 optional_function_argument_list optional_function_type '>' . $@61

    $default  reduce using rule 688 ($@61)

    $@61  go to state 1295


State 1185

  693 type_declaration_no_options: "function" '<' $@62 type_declaration '>' $@63 .

    $default  reduce using rule 693 (type_declaration_no_options)


State 1186

  696 type_declaration_no_options: "function" '<' $@64 optional_function_argument_list optional_function_type '>' . $@65

    $default  reduce using rule 695 ($@65)

    $@65  go to state 1296


State 1187

  700 type_declaration_no_options: "lambda" '<' $@66 type_declaration '>' $@67 .

    $default  reduce using rule 700 (type_declaration_no_options)


State 1188

  703 type_declaration_no_options: "lambda" '<' $@68 optional_function_argument_list optional_function_type '>' . $@69

    $default  reduce using rule 702 ($@69)

    $@69  go to state 1297


State 1189

  706 type_declaration_no_options: "tuple" '<' $@70 tuple_type_list '>' $@71 .

    $default  reduce using rule 706 (type_declaration_no_options)


State 1190

  512 tuple_type_list: tuple_type_list ';' tuple_type .

    $default  reduce using rule 512 (tuple_type_list)


State 1191

  709 type_declaration_no_options: "variant" '<' $@72 variant_type_list '>' $@73 .

    $default  reduce using rule 709 (type_declaration_no_options)


State 1192

  518 variant_type_list: variant_type_list ';' variant_type .

    $default  reduce using rule 518 (variant_type_list)


State 1193

  599 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 599 (variable_name_with_pos_list)


State 1194

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'
  527 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 527 (variable_declaration)


State 1195

  765 make_struct_decl: "struct" '<' $@86 type_declaration_no_options '>' . $@87 '(' make_struct_dim ')'

    $default  reduce using rule 764 ($@87)

    $@87  go to state 1298


State 1196

  768 make_struct_decl: "class" '<' $@88 type_declaration_no_options '>' . $@89 '(' make_struct_dim ')'

    $default  reduce using rule 767 ($@89)

    $@89  go to state 1299


State 1197

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list . expression_block
  309 expr_list: expr_list . ',' expr

    ','  shift, and go to state 838
    '{'  shift, and go to state 284

    expression_block  go to state 1300


State 1198

  262 new_type_declaration: '<' $@11 type_declaration '>' . $@12

    $default  reduce using rule 261 ($@12)

    $@12  go to state 1301


State 1199

  266 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 266 (expr_new)


State 1200

  267 expr_new: "new" new_type_declaration '(' make_struct_dim ')' .

    $default  reduce using rule 267 (expr_new)


State 1201

  306 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  307               | "typeinfo" '(' name_in_namespace '<' "name" . ';' "name" '>' expr ')'

    '>'  shift, and go to state 1302
    ';'  shift, and go to state 1303


State 1202

  305 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 305 (expr_type_info)


State 1203

  304 expr_type_decl: "type" '<' $@19 type_declaration '>' . $@20

    $default  reduce using rule 303 ($@20)

    $@20  go to state 1304


State 1204

  792 make_dim_decl: "array" '<' $@96 type_declaration_no_options '>' . $@97 '(' expr_list optional_comma ')'

    $default  reduce using rule 791 ($@97)

    $@97  go to state 1305


State 1205

  789 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 789 (make_dim_decl)


State 1206

  804 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 681
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_map_tuple          go to state 699
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    expr_map_tuple_list     go to state 1306
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1207

  651 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  652                            | type_declaration_no_options . '[' ']'
  658                            | type_declaration_no_options . '-' '[' ']'
  659                            | type_declaration_no_options . "explicit"
  660                            | type_declaration_no_options . "const"
  661                            | type_declaration_no_options . '-' "const"
  662                            | type_declaration_no_options . '&'
  663                            | type_declaration_no_options . '-' '&'
  664                            | type_declaration_no_options . '#'
  665                            | type_declaration_no_options . "implicit"
  666                            | type_declaration_no_options . '-' '#'
  667                            | type_declaration_no_options . "==" "const"
  668                            | type_declaration_no_options . "==" '&'
  669                            | type_declaration_no_options . '?'
  673                            | type_declaration_no_options . "??"
  805 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options . '>' '(' expr_map_tuple_list optional_comma ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1307
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1208

  803 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 803 (make_table_decl)


State 1209

   81 expression_with_alias: "assume" "name" '=' $@5 expr .
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 81 (expression_with_alias)


State 1210

  295 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' . $@14 expr

    $default  reduce using rule 294 ($@14)

    $@14  go to state 1308


State 1211

  298 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' . $@16 expr

    $default  reduce using rule 297 ($@16)

    $@16  go to state 1309


State 1212

  301 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' . $@18 expr

    $default  reduce using rule 300 ($@18)

    $@18  go to state 1310


State 1213

  796 make_dim_decl: "fixed_array" '<' $@98 type_declaration_no_options '>' . $@99 '(' expr_list optional_comma ')'

    $default  reduce using rule 795 ($@99)

    $@99  go to state 1311


State 1214

  793 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 793 (make_dim_decl)


State 1215

  774 make_struct_decl: "default" '<' $@92 type_declaration_no_options '>' . $@93

    $default  reduce using rule 773 ($@93)

    $@93  go to state 1312


State 1216

  783 make_tuple_call: "tuple" '<' $@94 type_declaration_no_options '>' . $@95 '(' make_struct_dim ')'

    $default  reduce using rule 782 ($@95)

    $@95  go to state 1313


State 1217

  780 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 780 (make_tuple_call)


State 1218

  771 make_struct_decl: "variant" '<' $@90 type_declaration_no_options '>' . $@91 '(' make_struct_dim ')'

    $default  reduce using rule 770 ($@91)

    $@91  go to state 1314


State 1219

  435 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  436     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1315


State 1220

  325 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1316


State 1221

  473 expr_mtag: "$c" '(' expr ')' '(' . ')'
  474          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    ')'                               shift, and go to state 1317
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 1318
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 695
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1222

  309 expr_list: expr_list . ',' expr
  811 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where ']' ']'

    ','  shift, and go to state 838
    ';'  shift, and go to state 1319


State 1223

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'
  737 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  738                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ')'    shift, and go to state 1320


State 1224

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'
  734 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 734 (make_struct_fields)


State 1225

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'
  733 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 733 (make_struct_fields)


State 1226

  733 make_struct_fields: "name" . copy_or_move expr
  734                   | "name" . ":=" expr

    "<-"  shift, and go to state 610
    ":="  shift, and go to state 1075
    '='   shift, and go to state 612

    copy_or_move  go to state 1076


State 1227

  742 make_struct_dim: make_struct_dim . ';' make_struct_fields
  760 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 873
    ';'      shift, and go to state 1082

    $default  reduce using rule 743 (optional_block)

    optional_block  go to state 1321


State 1228

  759 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1084
    ",]]"  shift, and go to state 1085
    ']'    shift, and go to state 1086

    optional_trailing_delim_sqr_sqr  go to state 1322


State 1229

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'
  776 make_tuple: expr "=>" expr .

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 776 (make_tuple)


State 1230

  739 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  740                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1323


State 1231

  735 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  736                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 610
    ":="  shift, and go to state 1324
    '='   shift, and go to state 612

    copy_or_move  go to state 1325


State 1232

  735 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  736                   | make_struct_fields . ',' "name" ":=" expr
  739                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  740                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  742 make_struct_dim: make_struct_dim ';' make_struct_fields .

    ','  shift, and go to state 1081

    $default  reduce using rule 742 (make_struct_dim)


State 1233

  757 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 757 (make_struct_decl)


State 1234

  751 optional_trailing_delim_sqr_sqr: ']' ']' .

    $default  reduce using rule 751 (optional_trailing_delim_sqr_sqr)


State 1235

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'
  777 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 777 (make_tuple)


State 1236

  749 optional_trailing_semicolon_sqr_sqr: ']' ']' .

    $default  reduce using rule 749 (optional_trailing_semicolon_sqr_sqr)


State 1237

  777 make_tuple: make_tuple . ',' expr
  785 make_dim: make_dim ';' make_tuple .

    ','  shift, and go to state 1088

    $default  reduce using rule 785 (make_dim)


State 1238

  309 expr_list: expr_list . ',' expr
  812 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where '}' ']'

    ','  shift, and go to state 838
    ';'  shift, and go to state 1326


State 1239

  742 make_struct_dim: make_struct_dim . ';' make_struct_fields
  762 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"  shift, and go to state 873
    ';'      shift, and go to state 1082

    $default  reduce using rule 743 (optional_block)

    optional_block  go to state 1327


State 1240

  755 optional_trailing_delim_cur_sqr: ";}]" .

    $default  reduce using rule 755 (optional_trailing_delim_cur_sqr)


State 1241

  756 optional_trailing_delim_cur_sqr: ",}]" .

    $default  reduce using rule 756 (optional_trailing_delim_cur_sqr)


State 1242

  754 optional_trailing_delim_cur_sqr: '}' . ']'

    ']'  shift, and go to state 1328


State 1243

  761 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 761 (make_struct_decl)


State 1244

  747 optional_trailing_semicolon_cur_sqr: '}' ']' .

    $default  reduce using rule 747 (optional_trailing_semicolon_cur_sqr)


State 1245

  309 expr_list: expr_list . ',' expr
  814 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list . ';' make_map_tuple array_comprehension_where '}' '}'

    ','  shift, and go to state 838
    ';'  shift, and go to state 1329


State 1246

  247 expression_keyword: "keyword" '<' $@7 type_declaration_no_options '>' . $@8 expr

    $default  reduce using rule 246 ($@8)

    $@8  go to state 1330


State 1247

  250 expression_keyword: "type function" '<' $@9 type_declaration_no_options '>' . $@10 '(' optional_expr_list ')'

    $default  reduce using rule 249 ($@10)

    $@10  go to state 1331


State 1248

   30 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 30 (string_builder_body)


State 1249

  309 expr_list: expr_list . ',' expr
  810 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where ']'

    ','  shift, and go to state 838
    ';'  shift, and go to state 1332


State 1250

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  364 func_addr_name: "$i" '(' expr . ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ')'    shift, and go to state 1333


State 1251

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'
  482          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ')'    shift, and go to state 1334


State 1252

  368 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options . '>' $@22 func_addr_name
  651 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  652                            | type_declaration_no_options . '[' ']'
  658                            | type_declaration_no_options . '-' '[' ']'
  659                            | type_declaration_no_options . "explicit"
  660                            | type_declaration_no_options . "const"
  661                            | type_declaration_no_options . '-' "const"
  662                            | type_declaration_no_options . '&'
  663                            | type_declaration_no_options . '-' '&'
  664                            | type_declaration_no_options . '#'
  665                            | type_declaration_no_options . "implicit"
  666                            | type_declaration_no_options . '-' '#'
  667                            | type_declaration_no_options . "==" "const"
  668                            | type_declaration_no_options . "==" '&'
  669                            | type_declaration_no_options . '?'
  673                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1335
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1253

  371 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list . optional_function_type '>' $@24 func_addr_name

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1336


State 1254

  309 expr_list: expr_list . ',' expr
  813 array_comprehension: '{' "for" variable_name_with_pos_list "in" expr_list . ';' make_map_tuple array_comprehension_where '}'

    ','  shift, and go to state 838
    ';'  shift, and go to state 1337


State 1255

  217 expression_block: '{' expressions '}' "finally" '{' expressions '}' .

    $default  reduce using rule 217 (expression_block)


State 1256

   60 expression_else: "else" expression_block .

    $default  reduce using rule 60 (expression_else)


State 1257

   61 expression_else: elif_or_static_elif expr . expression_block expression_else
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    '{'    shift, and go to state 284

    expression_block  go to state 1338


State 1258

   66 expression_else_one_liner: "else" . $@2 expression_if_one_liner

    $default  reduce using rule 65 ($@2)

    $@2  go to state 1339


State 1259

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner . ';'

    ';'  shift, and go to state 1340


State 1260

  359 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1341


State 1261

  360 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  786 make_dim_decl: '[' . expr_list optional_comma ']'
  810 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "for"                             shift, and go to state 693
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "$f"                              shift, and go to state 874
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 875
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 694
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 695
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_fields      go to state 1342
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1262

  288 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1343


State 1263

  289 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  290                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr ';'

    ']'  shift, and go to state 1344


State 1264

  318 capture_entry: "<-" "name" .

    $default  reduce using rule 318 (capture_entry)


State 1265

  319 capture_entry: ":=" "name" .

    $default  reduce using rule 319 (capture_entry)


State 1266

  317 capture_entry: '=' "name" .

    $default  reduce using rule 317 (capture_entry)


State 1267

  316 capture_entry: '&' "name" .

    $default  reduce using rule 316 (capture_entry)


State 1268

  321 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 1129
    ":="  shift, and go to state 1130
    '='   shift, and go to state 1131
    '&'   shift, and go to state 1132

    capture_entry  go to state 1345


State 1269

  323 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 1346


State 1270

  326 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"  shift, and go to state 1347
    '{'   shift, and go to state 284

    expression_block       go to state 1348
    block_or_simple_block  go to state 1349


State 1271

  441 expr: expr "is" "type" '<' $@27 . type_declaration_no_options '>' $@28

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1350


State 1272

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'
  481          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ')'    shift, and go to state 1351


State 1273

  447 expr: expr "as" "type" '<' $@29 . type_declaration '>' $@30

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1352


State 1274

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  479          | expr "as" "$f" '(' expr . ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ')'    shift, and go to state 1353


State 1275

  361 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 361 (expr_method_call)


State 1276

  309 expr_list: expr_list . ',' expr
  362 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 838
    ')'  shift, and go to state 1354


State 1277

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  476          | expr "?." "$f" '(' expr . ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ')'    shift, and go to state 1355


State 1278

  452 expr: expr '?' "as" "type" '<' . $@31 type_declaration '>' $@32

    $default  reduce using rule 450 ($@31)

    $@31  go to state 1356


State 1279

  480 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1357
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1280

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  438     | expr '?' expr ':' expr .
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 438 (expr)


State 1281

  478 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1358
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1282

  423 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 423 (expr)


State 1283

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr '.' "$f" '(' expr . ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ')'    shift, and go to state 1359


State 1284

  374 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 374 (expr_field)


State 1285

  309 expr_list: expr_list . ',' expr
  375 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 838
    ')'  shift, and go to state 1360


State 1286

  477 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1361
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1287

  421 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 421 (expr)


State 1288

  378 expr_field: expr '.' $@25 error $@26 .

    $default  reduce using rule 378 (expr_field)


State 1289

  503 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' ';' .

    $default  reduce using rule 503 (struct_variable_declaration_list)


State 1290

  500 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@34 function_declaration_header ';'

    "const"  shift, and go to state 1362

    $default  reduce using rule 488 (optional_constant)

    optional_constant  go to state 1363


State 1291

  502 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@35 function_declaration_header expression_block

    "override"  shift, and go to state 1292
    "sealed"    shift, and go to state 1293

    $default  reduce using rule 485 (optional_override)

    optional_override  go to state 1364


State 1292

  486 optional_override: "override" .

    $default  reduce using rule 486 (optional_override)


State 1293

  487 optional_override: "sealed" .

    $default  reduce using rule 487 (optional_override)


State 1294

  495 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1168
    "private"  shift, and go to state 1169

    $default  reduce using rule 490 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1365


State 1295

  689 type_declaration_no_options: "block" '<' $@60 optional_function_argument_list optional_function_type '>' $@61 .

    $default  reduce using rule 689 (type_declaration_no_options)


State 1296

  696 type_declaration_no_options: "function" '<' $@64 optional_function_argument_list optional_function_type '>' $@65 .

    $default  reduce using rule 696 (type_declaration_no_options)


State 1297

  703 type_declaration_no_options: "lambda" '<' $@68 optional_function_argument_list optional_function_type '>' $@69 .

    $default  reduce using rule 703 (type_declaration_no_options)


State 1298

  765 make_struct_decl: "struct" '<' $@86 type_declaration_no_options '>' $@87 . '(' make_struct_dim ')'

    '('  shift, and go to state 1366


State 1299

  768 make_struct_decl: "class" '<' $@88 type_declaration_no_options '>' $@89 . '(' make_struct_dim ')'

    '('  shift, and go to state 1367


State 1300

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list expression_block .

    $default  reduce using rule 76 (expression_for_loop)


State 1301

  262 new_type_declaration: '<' $@11 type_declaration '>' $@12 .

    $default  reduce using rule 262 (new_type_declaration)


State 1302

  306 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1368
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1303

  307 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' . "name" '>' expr ')'

    "name"  shift, and go to state 1369


State 1304

  304 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20 .

    $default  reduce using rule 304 (expr_type_decl)


State 1305

  792 make_dim_decl: "array" '<' $@96 type_declaration_no_options '>' $@97 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1370


State 1306

  800 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  804 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 911

    $default  reduce using rule 808 (optional_comma)

    optional_comma  go to state 1371


State 1307

  805 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' . '(' expr_map_tuple_list optional_comma ')'

    '('  shift, and go to state 1372


State 1308

  295 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1373
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1309

  298 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1374
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1310

  301 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1375
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1311

  796 make_dim_decl: "fixed_array" '<' $@98 type_declaration_no_options '>' $@99 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1376


State 1312

  774 make_struct_decl: "default" '<' $@92 type_declaration_no_options '>' $@93 .

    $default  reduce using rule 774 (make_struct_decl)


State 1313

  783 make_tuple_call: "tuple" '<' $@94 type_declaration_no_options '>' $@95 . '(' make_struct_dim ')'

    '('  shift, and go to state 1377


State 1314

  771 make_struct_decl: "variant" '<' $@90 type_declaration_no_options '>' $@91 . '(' make_struct_dim ')'

    '('  shift, and go to state 1378


State 1315

  435 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  436     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    ')'                               shift, and go to state 1379
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1380
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1316

  325 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"  shift, and go to state 1347
    '{'   shift, and go to state 284

    expression_block       go to state 1348
    block_or_simple_block  go to state 1381


State 1317

  473 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 473 (expr_mtag)


State 1318

  309 expr_list: expr_list . ',' expr
  474 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 838
    ')'  shift, and go to state 1382


State 1319

  811 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1383
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1320

  737 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  738                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 610
    ":="  shift, and go to state 1384
    '='   shift, and go to state 612

    copy_or_move  go to state 1385


State 1321

  760 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1084
    ",]]"  shift, and go to state 1085
    ']'    shift, and go to state 1086

    optional_trailing_delim_sqr_sqr  go to state 1386


State 1322

  759 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 759 (make_struct_decl)


State 1323

  739 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  740                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1387
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1324

  736 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1388
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1325

  735 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1389
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1326

  812 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where '}' ']'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1390
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1327

  762 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    ";}]"  shift, and go to state 1240
    ",}]"  shift, and go to state 1241
    '}'    shift, and go to state 1242

    optional_trailing_delim_cur_sqr  go to state 1391


State 1328

  754 optional_trailing_delim_cur_sqr: '}' ']' .

    $default  reduce using rule 754 (optional_trailing_delim_cur_sqr)


State 1329

  814 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list ';' . make_map_tuple array_comprehension_where '}' '}'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 681
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_map_tuple          go to state 1392
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1330

  247 expression_keyword: "keyword" '<' $@7 type_declaration_no_options '>' $@8 . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1393
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1331

  250 expression_keyword: "type function" '<' $@9 type_declaration_no_options '>' $@10 . '(' optional_expr_list ')'

    '('  shift, and go to state 1394


State 1332

  810 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1395
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1333

  364 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 364 (func_addr_name)


State 1334

  482 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 482 (expr_mtag)


State 1335

  368 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options '>' . $@22 func_addr_name

    $default  reduce using rule 367 ($@22)

    $@22  go to state 1396


State 1336

  371 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type . '>' $@24 func_addr_name

    '>'  shift, and go to state 1397


State 1337

  813 array_comprehension: '{' "for" variable_name_with_pos_list "in" expr_list ';' . make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 681
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_map_tuple          go to state 1398
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1338

   61 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1117
    "elif"         shift, and go to state 1118
    "static_elif"  shift, and go to state 1119

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1120
    expression_else      go to state 1399


State 1339

   66 expression_else_one_liner: "else" $@2 . expression_if_one_liner

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "return"                          shift, and go to state 1400
    "null"                            shift, and go to state 438
    "break"                           shift, and go to state 439
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "continue"                        shift, and go to state 449
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "yield"                           shift, and go to state 1401
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder             go to state 499
    expr_reader                go to state 500
    expression_if_one_liner    go to state 1402
    expression_keyword         go to state 513
    name_in_namespace          go to state 515
    expr_new                   go to state 517
    expression_break           go to state 1403
    expression_continue        go to state 1404
    expression_return_no_pipe  go to state 1405
    expression_yield_no_pipe   go to state 1406
    expr_cast                  go to state 527
    expr_type_decl             go to state 528
    expr_type_info             go to state 529
    block_or_lambda            go to state 530
    expr_full_block            go to state 531
    expr_numeric_const         go to state 532
    expr_named_call            go to state 535
    expr_method_call           go to state 536
    func_addr_expr             go to state 537
    expr_field                 go to state 538
    expr                       go to state 1407
    expr_mtag                  go to state 540
    basic_type_declaration     go to state 541
    make_decl                  go to state 542
    make_struct_decl           go to state 543
    make_tuple_call            go to state 544
    make_dim_decl              go to state 545
    make_table_decl            go to state 546
    array_comprehension        go to state 547


State 1340

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner ';' .

    $default  reduce using rule 74 (expression_if_then_else)


State 1341

  359 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 359 (expr_named_call)


State 1342

  360 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  735 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  736                   | make_struct_fields . ',' "name" ":=" expr
  739                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  740                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1081
    ']'  shift, and go to state 1408


State 1343

  288 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 288 (tuple_expansion)


State 1344

  289 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  290                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr ';'

    ':'  shift, and go to state 1409
    '&'  shift, and go to state 382

    $default  reduce using rule 533 (optional_ref)

    optional_ref  go to state 1410


State 1345

  321 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 321 (capture_list)


State 1346

  323 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 323 (optional_capture_list)


State 1347

  311 block_or_simple_block: "=>" . expr
  312                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "<-"                              shift, and go to state 1411
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1412
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1348

  310 block_or_simple_block: expression_block .

    $default  reduce using rule 310 (block_or_simple_block)


State 1349

  326 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 326 (expr_full_block)


State 1350

  441 expr: expr "is" "type" '<' $@27 type_declaration_no_options . '>' $@28
  651 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  652                            | type_declaration_no_options . '[' ']'
  658                            | type_declaration_no_options . '-' '[' ']'
  659                            | type_declaration_no_options . "explicit"
  660                            | type_declaration_no_options . "const"
  661                            | type_declaration_no_options . '-' "const"
  662                            | type_declaration_no_options . '&'
  663                            | type_declaration_no_options . '-' '&'
  664                            | type_declaration_no_options . '#'
  665                            | type_declaration_no_options . "implicit"
  666                            | type_declaration_no_options . '-' '#'
  667                            | type_declaration_no_options . "==" "const"
  668                            | type_declaration_no_options . "==" '&'
  669                            | type_declaration_no_options . '?'
  673                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1413
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1351

  481 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 481 (expr_mtag)


State 1352

  447 expr: expr "as" "type" '<' $@29 type_declaration . '>' $@30
  711 type_declaration: type_declaration . '|' type_declaration_no_options
  712                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409
    '>'  shift, and go to state 1414


State 1353

  479 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 479 (expr_mtag)


State 1354

  362 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 362 (expr_method_call)


State 1355

  476 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 476 (expr_mtag)


State 1356

  452 expr: expr '?' "as" "type" '<' $@31 . type_declaration '>' $@32

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1415


State 1357

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr '?' "as" "$f" '(' expr . ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ')'    shift, and go to state 1416


State 1358

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr '.' "?." "$f" '(' expr . ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ')'    shift, and go to state 1417


State 1359

  475 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 475 (expr_mtag)


State 1360

  375 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 375 (expr_field)


State 1361

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr '.' '.' "$f" '(' expr . ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ')'    shift, and go to state 1418


State 1362

  489 optional_constant: "const" .

    $default  reduce using rule 489 (optional_constant)


State 1363

  500 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@34 function_declaration_header ';'

    $default  reduce using rule 499 ($@34)

    $@34  go to state 1419


State 1364

  502 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@35 function_declaration_header expression_block

    "const"  shift, and go to state 1362

    $default  reduce using rule 488 (optional_constant)

    optional_constant  go to state 1420


State 1365

  495 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 417
    "name"  shift, and go to state 418

    variable_declaration         go to state 1421
    variable_name_with_pos_list  go to state 420


State 1366

  765 make_struct_decl: "struct" '<' $@86 type_declaration_no_options '>' $@87 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 874
    "name"  shift, and go to state 1226

    make_struct_fields  go to state 880
    make_struct_dim     go to state 1422


State 1367

  768 make_struct_decl: "class" '<' $@88 type_declaration_no_options '>' $@89 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 874
    "name"  shift, and go to state 1226

    make_struct_fields  go to state 880
    make_struct_dim     go to state 1423


State 1368

  306 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ')'    shift, and go to state 1424


State 1369

  307 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" . '>' expr ')'

    '>'  shift, and go to state 1425


State 1370

  792 make_dim_decl: "array" '<' $@96 type_declaration_no_options '>' $@97 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 1426
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 695
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1371

  804 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1427


State 1372

  805 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 681
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_map_tuple          go to state 699
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    expr_map_tuple_list     go to state 1428
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1373

  295 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr .
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 295 (expr_cast)


State 1374

  298 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr .
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 298 (expr_cast)


State 1375

  301 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr .
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 301 (expr_cast)


State 1376

  796 make_dim_decl: "fixed_array" '<' $@98 type_declaration_no_options '>' $@99 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 1429
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 695
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1377

  783 make_tuple_call: "tuple" '<' $@94 type_declaration_no_options '>' $@95 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 874
    "name"  shift, and go to state 1226

    make_struct_fields  go to state 880
    make_struct_dim     go to state 1430


State 1378

  771 make_struct_decl: "variant" '<' $@90 type_declaration_no_options '>' $@91 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 874
    "name"  shift, and go to state 1226

    make_struct_fields  go to state 880
    make_struct_dim     go to state 1431


State 1379

  435 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 435 (expr)


State 1380

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  436     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ')'    shift, and go to state 1432


State 1381

  325 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 325 (expr_block)


State 1382

  474 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 474 (expr_mtag)


State 1383

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'
  811 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where ']' ']'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ';'    shift, and go to state 1433

    $default  reduce using rule 806 (array_comprehension_where)

    array_comprehension_where  go to state 1434


State 1384

  738 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1435
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1385

  737 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1436
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1386

  760 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 760 (make_struct_decl)


State 1387

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'
  739 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  740                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ')'    shift, and go to state 1437


State 1388

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'
  736 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 736 (make_struct_fields)


State 1389

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'
  735 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 735 (make_struct_fields)


State 1390

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'
  812 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where '}' ']'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ';'    shift, and go to state 1433

    $default  reduce using rule 806 (array_comprehension_where)

    array_comprehension_where  go to state 1438


State 1391

  762 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 762 (make_struct_decl)


State 1392

  814 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple . array_comprehension_where '}' '}'

    ';'  shift, and go to state 1433

    $default  reduce using rule 806 (array_comprehension_where)

    array_comprehension_where  go to state 1439


State 1393

  247 expression_keyword: "keyword" '<' $@7 type_declaration_no_options '>' $@8 expr .
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 247 (expression_keyword)


State 1394

  250 expression_keyword: "type function" '<' $@9 type_declaration_no_options '>' $@10 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    $default  reduce using rule 243 (optional_expr_list)

    string_builder          go to state 499
    expr_reader             go to state 500
    optional_expr_list      go to state 1440
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 808
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 695
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1395

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'
  810 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ';'    shift, and go to state 1433

    $default  reduce using rule 806 (array_comprehension_where)

    array_comprehension_where  go to state 1441


State 1396

  368 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options '>' $@22 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 905
    "name"  shift, and go to state 59

    name_in_namespace  go to state 908
    func_addr_name     go to state 1442


State 1397

  371 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type '>' . $@24 func_addr_name

    $default  reduce using rule 370 ($@24)

    $@24  go to state 1443


State 1398

  813 array_comprehension: '{' "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple . array_comprehension_where '}'

    ';'  shift, and go to state 1433

    $default  reduce using rule 806 (array_comprehension_where)

    array_comprehension_where  go to state 1444


State 1399

   61 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 61 (expression_else)


State 1400

  271 expression_return_no_pipe: "return" .
  272                          | "return" . expr_list
  273                          | "return" . "<-" expr_list

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "<-"                              shift, and go to state 1445
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    $default  reduce using rule 271 (expression_return_no_pipe)

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 631
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 695
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1401

  277 expression_yield_no_pipe: "yield" . expr
  278                         | "yield" . "<-" expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "<-"                              shift, and go to state 1446
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1447
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1402

   66 expression_else_one_liner: "else" $@2 expression_if_one_liner .

    $default  reduce using rule 66 (expression_else_one_liner)


State 1403

   70 expression_if_one_liner: expression_break .

    $default  reduce using rule 70 (expression_if_one_liner)


State 1404

   71 expression_if_one_liner: expression_continue .

    $default  reduce using rule 71 (expression_if_one_liner)


State 1405

   68 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 68 (expression_if_one_liner)


State 1406

   69 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 69 (expression_if_one_liner)


State 1407

   67 expression_if_one_liner: expr .
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 67 (expression_if_one_liner)


State 1408

  360 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1448


State 1409

  289 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr ';'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1449


State 1410

  290 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr ';'

    "<-"  shift, and go to state 562
    ":="  shift, and go to state 563
    '='   shift, and go to state 564

    copy_or_move_or_clone  go to state 1450


State 1411

  312 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1451
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1412

  311 block_or_simple_block: "=>" expr .
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    ".."  error (nonassociative)

    $default  reduce using rule 311 (block_or_simple_block)


State 1413

  441 expr: expr "is" "type" '<' $@27 type_declaration_no_options '>' . $@28

    $default  reduce using rule 440 ($@28)

    $@28  go to state 1452


State 1414

  447 expr: expr "as" "type" '<' $@29 type_declaration '>' . $@30

    $default  reduce using rule 446 ($@30)

    $@30  go to state 1453


State 1415

  452 expr: expr '?' "as" "type" '<' $@31 type_declaration . '>' $@32
  711 type_declaration: type_declaration . '|' type_declaration_no_options
  712                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409
    '>'  shift, and go to state 1454


State 1416

  480 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 480 (expr_mtag)


State 1417

  478 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 478 (expr_mtag)


State 1418

  477 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 477 (expr_mtag)


State 1419

  500 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 . function_declaration_header ';'

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1455


State 1420

  502 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@35 function_declaration_header expression_block

    $default  reduce using rule 501 ($@35)

    $@35  go to state 1456


State 1421

  495 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 495 (structure_variable_declaration)


State 1422

  742 make_struct_dim: make_struct_dim . ';' make_struct_fields
  765 make_struct_decl: "struct" '<' $@86 type_declaration_no_options '>' $@87 '(' make_struct_dim . ')'

    ')'  shift, and go to state 1457
    ';'  shift, and go to state 1082


State 1423

  742 make_struct_dim: make_struct_dim . ';' make_struct_fields
  768 make_struct_decl: "class" '<' $@88 type_declaration_no_options '>' $@89 '(' make_struct_dim . ')'

    ')'  shift, and go to state 1458
    ';'  shift, and go to state 1082


State 1424

  306 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 306 (expr_type_info)


State 1425

  307 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1459
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1426

  309 expr_list: expr_list . ',' expr
  792 make_dim_decl: "array" '<' $@96 type_declaration_no_options '>' $@97 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 902

    $default  reduce using rule 808 (optional_comma)

    optional_comma  go to state 1460


State 1427

  804 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 804 (make_table_decl)


State 1428

  800 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  805 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 911

    $default  reduce using rule 808 (optional_comma)

    optional_comma  go to state 1461


State 1429

  309 expr_list: expr_list . ',' expr
  796 make_dim_decl: "fixed_array" '<' $@98 type_declaration_no_options '>' $@99 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 902

    $default  reduce using rule 808 (optional_comma)

    optional_comma  go to state 1462


State 1430

  742 make_struct_dim: make_struct_dim . ';' make_struct_fields
  783 make_tuple_call: "tuple" '<' $@94 type_declaration_no_options '>' $@95 '(' make_struct_dim . ')'

    ')'  shift, and go to state 1463
    ';'  shift, and go to state 1082


State 1431

  742 make_struct_dim: make_struct_dim . ';' make_struct_fields
  771 make_struct_decl: "variant" '<' $@90 type_declaration_no_options '>' $@91 '(' make_struct_dim . ')'

    ')'  shift, and go to state 1464
    ';'  shift, and go to state 1082


State 1432

  436 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 436 (expr)


State 1433

  807 array_comprehension_where: ';' . "where" expr

    "where"  shift, and go to state 1465


State 1434

  811 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1466


State 1435

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'
  738 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 738 (make_struct_fields)


State 1436

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'
  737 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 737 (make_struct_fields)


State 1437

  739 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  740                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 610
    ":="  shift, and go to state 1467
    '='   shift, and go to state 612

    copy_or_move  go to state 1468


State 1438

  812 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . '}' ']'

    '}'  shift, and go to state 1469


State 1439

  814 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where . '}' '}'

    '}'  shift, and go to state 1470


State 1440

  250 expression_keyword: "type function" '<' $@9 type_declaration_no_options '>' $@10 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1471


State 1441

  810 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1472


State 1442

  368 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options '>' $@22 func_addr_name .

    $default  reduce using rule 368 (func_addr_expr)


State 1443

  371 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type '>' $@24 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 905
    "name"  shift, and go to state 59

    name_in_namespace  go to state 908
    func_addr_name     go to state 1473


State 1444

  813 array_comprehension: '{' "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where . '}'

    '}'  shift, and go to state 1474


State 1445

  273 expression_return_no_pipe: "return" "<-" . expr_list

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    expr_list               go to state 837
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 695
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1446

  278 expression_yield_no_pipe: "yield" "<-" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1475
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1447

  277 expression_yield_no_pipe: "yield" expr .
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 277 (expression_yield_no_pipe)


State 1448

  360 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 360 (expr_named_call)


State 1449

  289 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr ';'
  651 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  652                            | type_declaration_no_options . '[' ']'
  658                            | type_declaration_no_options . '-' '[' ']'
  659                            | type_declaration_no_options . "explicit"
  660                            | type_declaration_no_options . "const"
  661                            | type_declaration_no_options . '-' "const"
  662                            | type_declaration_no_options . '&'
  663                            | type_declaration_no_options . '-' '&'
  664                            | type_declaration_no_options . '#'
  665                            | type_declaration_no_options . "implicit"
  666                            | type_declaration_no_options . '-' '#'
  667                            | type_declaration_no_options . "==" "const"
  668                            | type_declaration_no_options . "==" '&'
  669                            | type_declaration_no_options . '?'
  673                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "<-"        shift, and go to state 562
    "??"        shift, and go to state 403
    ":="        shift, and go to state 563
    '='         shift, and go to state 564
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    copy_or_move_or_clone  go to state 1476


State 1450

  290 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr ';'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1477
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1451

  312 block_or_simple_block: "=>" "<-" expr .
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 312 (block_or_simple_block)


State 1452

  441 expr: expr "is" "type" '<' $@27 type_declaration_no_options '>' $@28 .

    $default  reduce using rule 441 (expr)


State 1453

  447 expr: expr "as" "type" '<' $@29 type_declaration '>' $@30 .

    $default  reduce using rule 447 (expr)


State 1454

  452 expr: expr '?' "as" "type" '<' $@31 type_declaration '>' . $@32

    $default  reduce using rule 451 ($@32)

    $@32  go to state 1478


State 1455

  500 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header . ';'

    ';'  shift, and go to state 1479


State 1456

  502 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1480


State 1457

  765 make_struct_decl: "struct" '<' $@86 type_declaration_no_options '>' $@87 '(' make_struct_dim ')' .

    $default  reduce using rule 765 (make_struct_decl)


State 1458

  768 make_struct_decl: "class" '<' $@88 type_declaration_no_options '>' $@89 '(' make_struct_dim ')' .

    $default  reduce using rule 768 (make_struct_decl)


State 1459

  307 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr . ')'
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ')'    shift, and go to state 1481


State 1460

  792 make_dim_decl: "array" '<' $@96 type_declaration_no_options '>' $@97 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1482


State 1461

  805 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1483


State 1462

  796 make_dim_decl: "fixed_array" '<' $@98 type_declaration_no_options '>' $@99 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1484


State 1463

  783 make_tuple_call: "tuple" '<' $@94 type_declaration_no_options '>' $@95 '(' make_struct_dim ')' .

    $default  reduce using rule 783 (make_tuple_call)


State 1464

  771 make_struct_decl: "variant" '<' $@90 type_declaration_no_options '>' $@91 '(' make_struct_dim ')' .

    $default  reduce using rule 771 (make_struct_decl)


State 1465

  807 array_comprehension_where: ';' "where" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1485
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1466

  811 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1486


State 1467

  740 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1487
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1468

  739 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1488
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1469

  812 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' . ']'

    ']'  shift, and go to state 1489


State 1470

  814 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}' . '}'

    '}'  shift, and go to state 1490


State 1471

  250 expression_keyword: "type function" '<' $@9 type_declaration_no_options '>' $@10 '(' optional_expr_list ')' .

    $default  reduce using rule 250 (expression_keyword)


State 1472

  810 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' .

    $default  reduce using rule 810 (array_comprehension)


State 1473

  371 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name .

    $default  reduce using rule 371 (func_addr_expr)


State 1474

  813 array_comprehension: '{' "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}' .

    $default  reduce using rule 813 (array_comprehension)


State 1475

  278 expression_yield_no_pipe: "yield" "<-" expr .
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 278 (expression_yield_no_pipe)


State 1476

  289 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr ';'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 556
    "fixed_array"                     shift, and go to state 455
    "default"                         shift, and go to state 456
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 457
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 458
    "variant"                         shift, and go to state 459
    "generator"                       shift, and go to state 460
    "++"                              shift, and go to state 462
    "--"                              shift, and go to state 463
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 467
    "$i"                              shift, and go to state 468
    "$v"                              shift, and go to state 469
    "$b"                              shift, and go to state 470
    "$a"                              shift, and go to state 471
    "$c"                              shift, and go to state 472
    "..."                             shift, and go to state 473
    "[["                              shift, and go to state 474
    "[{"                              shift, and go to state 475
    "{{"                              shift, and go to state 476
    "integer constant"                shift, and go to state 477
    "long integer constant"           shift, and go to state 478
    "unsigned integer constant"       shift, and go to state 479
    "unsigned long integer constant"  shift, and go to state 480
    "unsigned int8 constant"          shift, and go to state 481
    "floating point constant"         shift, and go to state 482
    "double constant"                 shift, and go to state 483
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 557
    "type function"                   shift, and go to state 485
    "start of the string"             shift, and go to state 486
    '-'                               shift, and go to state 487
    '+'                               shift, and go to state 488
    '*'                               shift, and go to state 489
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 490
    '!'                               shift, and go to state 491
    '['                               shift, and go to state 492
    '('                               shift, and go to state 493
    '$'                               shift, and go to state 494
    '@'                               shift, and go to state 495
    '{'                               shift, and go to state 497

    string_builder          go to state 499
    expr_reader             go to state 500
    expression_keyword      go to state 513
    name_in_namespace       go to state 515
    expr_new                go to state 517
    expr_cast               go to state 527
    expr_type_decl          go to state 528
    expr_type_info          go to state 529
    block_or_lambda         go to state 530
    expr_full_block         go to state 531
    expr_numeric_const      go to state 532
    expr_named_call         go to state 535
    expr_method_call        go to state 536
    func_addr_expr          go to state 537
    expr_field              go to state 538
    expr                    go to state 1491
    expr_mtag               go to state 540
    basic_type_declaration  go to state 541
    make_decl               go to state 542
    make_struct_decl        go to state 543
    make_tuple_call         go to state 544
    make_dim_decl           go to state 545
    make_table_decl         go to state 546
    array_comprehension     go to state 547


State 1477

  290 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr . ';'
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ';'    shift, and go to state 1492


State 1478

  452 expr: expr '?' "as" "type" '<' $@31 type_declaration '>' $@32 .

    $default  reduce using rule 452 (expr)


State 1479

  500 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header ';' .

    $default  reduce using rule 500 (struct_variable_declaration_list)


State 1480

  502 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header . expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 1493


State 1481

  307 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')' .

    $default  reduce using rule 307 (expr_type_info)


State 1482

  792 make_dim_decl: "array" '<' $@96 type_declaration_no_options '>' $@97 '(' expr_list optional_comma ')' .

    $default  reduce using rule 792 (make_dim_decl)


State 1483

  805 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 805 (make_table_decl)


State 1484

  796 make_dim_decl: "fixed_array" '<' $@98 type_declaration_no_options '>' $@99 '(' expr_list optional_comma ')' .

    $default  reduce using rule 796 (make_dim_decl)


State 1485

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'
  807 array_comprehension_where: ';' "where" expr .

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 807 (array_comprehension_where)


State 1486

  811 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']' .

    $default  reduce using rule 811 (array_comprehension)


State 1487

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'
  740 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 740 (make_struct_fields)


State 1488

  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'
  739 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770

    $default  reduce using rule 739 (make_struct_fields)


State 1489

  812 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']' .

    $default  reduce using rule 812 (array_comprehension)


State 1490

  814 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}' '}' .

    $default  reduce using rule 814 (array_comprehension)


State 1491

  289 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr . ';'
  361 expr_method_call: expr . "->" "name" '(' ')'
  362                 | expr . "->" "name" '(' expr_list ')'
  372 expr_field: expr . '.' "name"
  373           | expr . '.' '.' "name"
  374           | expr . '.' "name" '(' ')'
  375           | expr . '.' "name" '(' expr_list ')'
  378           | expr . '.' $@25 error $@26
  393 expr: expr . "<<" expr
  394     | expr . ">>" expr
  395     | expr . "<<<" expr
  396     | expr . ">>>" expr
  397     | expr . '+' expr
  398     | expr . '-' expr
  399     | expr . '*' expr
  400     | expr . '/' expr
  401     | expr . '%' expr
  402     | expr . '<' expr
  403     | expr . '>' expr
  404     | expr . "==" expr
  405     | expr . "!=" expr
  406     | expr . "<=" expr
  407     | expr . ">=" expr
  408     | expr . '&' expr
  409     | expr . '|' expr
  410     | expr . '^' expr
  411     | expr . "&&" expr
  412     | expr . "||" expr
  413     | expr . "^^" expr
  414     | expr . ".." expr
  417     | expr . "++"
  418     | expr . "--"
  420     | expr . '[' expr ']'
  421     | expr . '.' '[' expr ']'
  422     | expr . "?[" expr ']'
  423     | expr . '.' "?[" expr ']'
  424     | expr . "?." "name"
  425     | expr . '.' "?." "name"
  437     | expr . "??" expr
  438     | expr . '?' expr ':' expr
  441     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  442     | expr . "is" basic_type_declaration
  443     | expr . "is" "name"
  444     | expr . "as" "name"
  447     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  448     | expr . "as" basic_type_declaration
  449     | expr . '?' "as" "name"
  452     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  453     | expr . '?' "as" basic_type_declaration
  461     | expr . "<|" expr
  462     | expr . "|>" expr
  463     | expr . "|>" basic_type_declaration
  475 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr . "?." "$f" '(' expr ')'
  477          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr . "as" "$f" '(' expr ')'
  480          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 718
    "as"   shift, and go to state 719
    "<<"   shift, and go to state 728
    ">>"   shift, and go to state 729
    "++"   shift, and go to state 730
    "--"   shift, and go to state 731
    "<="   shift, and go to state 732
    ">="   shift, and go to state 735
    "=="   shift, and go to state 736
    "!="   shift, and go to state 737
    "->"   shift, and go to state 738
    "??"   shift, and go to state 740
    "?."   shift, and go to state 741
    "?["   shift, and go to state 742
    "<|"   shift, and go to state 743
    "|>"   shift, and go to state 744
    "<<<"  shift, and go to state 746
    ">>>"  shift, and go to state 747
    "&&"   shift, and go to state 750
    "||"   shift, and go to state 751
    "^^"   shift, and go to state 752
    ".."   shift, and go to state 756
    '?'    shift, and go to state 758
    '|'    shift, and go to state 759
    '^'    shift, and go to state 760
    '&'    shift, and go to state 761
    '<'    shift, and go to state 762
    '>'    shift, and go to state 763
    '-'    shift, and go to state 764
    '+'    shift, and go to state 765
    '*'    shift, and go to state 766
    '/'    shift, and go to state 767
    '%'    shift, and go to state 768
    '.'    shift, and go to state 769
    '['    shift, and go to state 770
    ';'    shift, and go to state 1494


State 1492

  290 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr ';' .

    $default  reduce using rule 290 (tuple_expansion_variable_declaration)


State 1493

  502 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block .

    $default  reduce using rule 502 (struct_variable_declaration_list)


State 1494

  289 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';' .

    $default  reduce using rule 289 (tuple_expansion_variable_declaration)

Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 59 conflicts: 1 shift/reduce
State 313 conflicts: 1 shift/reduce
State 510 conflicts: 2 shift/reduce
State 615 conflicts: 1 shift/reduce
State 875 conflicts: 2 shift/reduce
State 961 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program ';'

   16 top_level_reader_macro: expr_reader ';'

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"

   28 string_builder_body: %empty
   29                    | string_builder_body character_sequence
   30                    | string_builder_body "{" expr "}"

   31 string_builder: "start of the string" string_builder_body "end of the string"

   32 reader_character_sequence: STRING_CHARACTER
   33                          | reader_character_sequence STRING_CHARACTER

   34 $@1: %empty

   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   36 options_declaration: "options" annotation_argument_list

   37 require_declaration: "require" require_module

   38 keyword_or_name: "name"
   39                | "keyword"
   40                | "type function"

   41 require_module_name: keyword_or_name
   42                    | '%' require_module_name
   43                    | require_module_name '.' keyword_or_name
   44                    | require_module_name '/' keyword_or_name

   45 require_module: require_module_name is_public_module
   46               | require_module_name "as" "name" is_public_module

   47 is_public_module: %empty
   48                 | "public"

   49 expect_declaration: "expect" expect_list

   50 expect_list: expect_error
   51            | expect_list ',' expect_error

   52 expect_error: "integer constant"
   53             | "integer constant" ':' "integer constant"

   54 expression_label: "label" "integer constant" ':'

   55 expression_goto: "goto" "label" "integer constant"
   56                | "goto" expr

   57 elif_or_static_elif: "elif"
   58                    | "static_elif"

   59 expression_else: %empty
   60                | "else" expression_block
   61                | elif_or_static_elif expr expression_block expression_else

   62 if_or_static_if: "if"
   63                | "static_if"

   64 expression_else_one_liner: %empty

   65 $@2: %empty

   66 expression_else_one_liner: "else" $@2 expression_if_one_liner

   67 expression_if_one_liner: expr
   68                        | expression_return_no_pipe
   69                        | expression_yield_no_pipe
   70                        | expression_break
   71                        | expression_continue

   72 expression_if_then_else: if_or_static_if expr expression_block expression_else

   73 $@3: %empty

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner ';'

   75 $@4: %empty

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list expression_block

   77 expression_unsafe: "unsafe" expression_block

   78 expression_while_loop: "while" expr expression_block

   79 expression_with: "with" expr expression_block

   80 $@5: %empty

   81 expression_with_alias: "assume" "name" '=' $@5 expr

   82 annotation_argument_value: string_constant
   83                          | "name"
   84                          | "integer constant"
   85                          | "floating point constant"
   86                          | "true"
   87                          | "false"

   88 annotation_argument_value_list: annotation_argument_value
   89                               | annotation_argument_value_list ',' annotation_argument_value

   90 annotation_argument_name: "name"
   91                         | "type"
   92                         | "in"

   93 annotation_argument: annotation_argument_name '=' string_constant
   94                    | annotation_argument_name '=' "name"
   95                    | annotation_argument_name '=' "integer constant"
   96                    | annotation_argument_name '=' "floating point constant"
   97                    | annotation_argument_name '=' "true"
   98                    | annotation_argument_name '=' "false"
   99                    | annotation_argument_name
  100                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  101 annotation_argument_list: annotation_argument
  102                         | annotation_argument_list ',' annotation_argument

  103 annotation_declaration_name: name_in_namespace
  104                            | "require"
  105                            | "private"

  106 annotation_declaration_basic: annotation_declaration_name
  107                             | annotation_declaration_name '(' annotation_argument_list ')'

  108 annotation_declaration: annotation_declaration_basic
  109                       | '!' annotation_declaration
  110                       | annotation_declaration "&&" annotation_declaration
  111                       | annotation_declaration "||" annotation_declaration
  112                       | annotation_declaration "^^" annotation_declaration
  113                       | '(' annotation_declaration ')'
  114                       | "|>" annotation_declaration

  115 annotation_list: annotation_declaration
  116                | annotation_list ',' annotation_declaration

  117 optional_annotation_list: %empty
  118                         | '[' annotation_list ']'

  119 optional_function_argument_list: %empty
  120                                | '(' ')'
  121                                | '(' function_argument_list ')'

  122 optional_function_type: %empty
  123                       | ':' type_declaration

  124 function_name: "name"
  125              | "operator" '!'
  126              | "operator" '~'
  127              | "operator" "+="
  128              | "operator" "-="
  129              | "operator" "*="
  130              | "operator" "/="
  131              | "operator" "%="
  132              | "operator" "&="
  133              | "operator" "|="
  134              | "operator" "^="
  135              | "operator" "&&="
  136              | "operator" "||="
  137              | "operator" "^^="
  138              | "operator" "&&"
  139              | "operator" "||"
  140              | "operator" "^^"
  141              | "operator" '+'
  142              | "operator" '-'
  143              | "operator" '*'
  144              | "operator" '/'
  145              | "operator" '%'
  146              | "operator" '<'
  147              | "operator" '>'
  148              | "operator" ".."
  149              | "operator" "=="
  150              | "operator" "!="
  151              | "operator" "<="
  152              | "operator" ">="
  153              | "operator" '&'
  154              | "operator" '|'
  155              | "operator" '^'
  156              | "++" "operator"
  157              | "--" "operator"
  158              | "operator" "++"
  159              | "operator" "--"
  160              | "operator" "<<"
  161              | "operator" ">>"
  162              | "operator" "<<="
  163              | "operator" ">>="
  164              | "operator" "<<<"
  165              | "operator" ">>>"
  166              | "operator" "<<<="
  167              | "operator" ">>>="
  168              | "operator" '[' ']'
  169              | "operator" "?[" ']'
  170              | "operator" '.'
  171              | "operator" "?."
  172              | "operator" '.' "name"
  173              | "operator" '.' "name" ":="
  174              | "operator" "?." "name"
  175              | "operator" ":="
  176              | "operator" "delete"
  177              | "operator" "??"
  178              | "operator" "is"
  179              | "operator" "as"
  180              | "operator" "is" "name"
  181              | "operator" "as" "name"
  182              | "operator" '?' "as"
  183              | "operator" '?' "as" "name"
  184              | "bool"
  185              | "string"
  186              | "int"
  187              | "int2"
  188              | "int3"
  189              | "int4"
  190              | "uint"
  191              | "uint2"
  192              | "uint3"
  193              | "uint4"
  194              | "float"
  195              | "float2"
  196              | "float3"
  197              | "float4"
  198              | "range"
  199              | "urange"
  200              | "range64"
  201              | "urange64"
  202              | "int64"
  203              | "uint64"
  204              | "double"
  205              | "int8"
  206              | "uint8"
  207              | "int16"
  208              | "uint16"

  209 global_function_declaration: optional_annotation_list "def" function_declaration

  210 optional_public_or_private_function: %empty
  211                                    | "private"
  212                                    | "public"

  213 function_declaration_header: function_name optional_function_argument_list optional_function_type

  214 $@6: %empty

  215 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block

  216 expression_block: '{' expressions '}'
  217                 | '{' expressions '}' "finally" '{' expressions '}'

  218 expression_any: ';'
  219               | expr_pipe
  220               | expr_keyword
  221               | expr_assign_pipe
  222               | expr_assign ';'
  223               | expression_delete ';'
  224               | expression_let
  225               | expression_while_loop
  226               | expression_unsafe
  227               | expression_with
  228               | expression_with_alias
  229               | expression_for_loop
  230               | expression_break ';'
  231               | expression_continue ';'
  232               | expression_return
  233               | expression_yield
  234               | expression_if_then_else
  235               | expression_try_catch
  236               | expression_label ';'
  237               | expression_goto ';'
  238               | "pass" ';'

  239 expressions: %empty
  240            | expressions expression_any
  241            | expressions error

  242 expr_keyword: "keyword" expr expression_block

  243 optional_expr_list: %empty
  244                   | expr_list

  245 $@7: %empty

  246 $@8: %empty

  247 expression_keyword: "keyword" '<' $@7 type_declaration_no_options '>' $@8 expr

  248 $@9: %empty

  249 $@10: %empty

  250 expression_keyword: "type function" '<' $@9 type_declaration_no_options '>' $@10 '(' optional_expr_list ')'

  251 expr_pipe: expr_assign " <|" expr_block
  252          | "@ <|" expr_block
  253          | "@@ <|" expr_block
  254          | "$ <|" expr_block

  255 name_in_namespace: "name"
  256                  | "name" "::" "name"
  257                  | "::" "name"

  258 expression_delete: "delete" expr
  259                  | "delete" "explicit" expr

  260 $@11: %empty

  261 $@12: %empty

  262 new_type_declaration: '<' $@11 type_declaration '>' $@12
  263                     | structure_type_declaration

  264 expr_new: "new" new_type_declaration
  265         | "new" new_type_declaration '(' ')'
  266         | "new" new_type_declaration '(' expr_list ')'
  267         | "new" make_decl

  268 expression_break: "break"

  269 expression_continue: "continue"

  270 expression_return_no_pipe: "return"
  271                          | "return" expr_list
  272                          | "return" "<-" expr_list

  273 expression_return: expression_return_no_pipe ';'
  274                  | "return" expr_pipe
  275                  | "return" "<-" expr_pipe

  276 expression_yield_no_pipe: "yield" expr
  277                         | "yield" "<-" expr

  278 expression_yield: expression_yield_no_pipe ';'
  279                 | "yield" expr_pipe
  280                 | "yield" "<-" expr_pipe

  281 expression_try_catch: "try" expression_block "recover" expression_block

  282 kwd_let: "let"
  283        | "var"

  284 optional_in_scope: "inscope"
  285                  | %empty

  286 tuple_expansion: "name"
  287                | tuple_expansion ',' "name"

  288 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  289                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr ';'

  290 expression_let: kwd_let optional_in_scope let_variable_declaration
  291               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  292 $@13: %empty

  293 $@14: %empty

  294 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr

  295 $@15: %empty

  296 $@16: %empty

  297 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr

  298 $@17: %empty

  299 $@18: %empty

  300 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr

  301 $@19: %empty

  302 $@20: %empty

  303 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20

  304 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  305               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  306               | "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

  307 expr_list: expr
  308          | expr_list ',' expr

  309 block_or_simple_block: expression_block
  310                      | "=>" expr
  311                      | "=>" "<-" expr

  312 block_or_lambda: '$'
  313                | '@'
  314                | '@' '@'

  315 capture_entry: '&' "name"
  316              | '=' "name"
  317              | "<-" "name"
  318              | ":=" "name"

  319 capture_list: capture_entry
  320             | capture_list ',' capture_entry

  321 optional_capture_list: %empty
  322                      | "[[" capture_list ']' ']'

  323 expr_block: expression_block
  324           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  325 expr_numeric_const: "integer constant"
  326                   | "unsigned integer constant"
  327                   | "long integer constant"
  328                   | "unsigned long integer constant"
  329                   | "unsigned int8 constant"
  330                   | "floating point constant"
  331                   | "double constant"

  332 expr_assign: expr
  333            | expr '=' expr
  334            | expr "<-" expr
  335            | expr ":=" expr
  336            | expr "&=" expr
  337            | expr "|=" expr
  338            | expr "^=" expr
  339            | expr "&&=" expr
  340            | expr "||=" expr
  341            | expr "^^=" expr
  342            | expr "+=" expr
  343            | expr "-=" expr
  344            | expr "*=" expr
  345            | expr "/=" expr
  346            | expr "%=" expr
  347            | expr "<<=" expr
  348            | expr ">>=" expr
  349            | expr "<<<=" expr
  350            | expr ">>>=" expr

  351 expr_assign_pipe: expr '=' "@ <|" expr_block
  352                 | expr '=' "@@ <|" expr_block
  353                 | expr '=' "$ <|" expr_block
  354                 | expr "<-" "@ <|" expr_block
  355                 | expr "<-" "@@ <|" expr_block
  356                 | expr "<-" "$ <|" expr_block

  357 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  358                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  359 expr_method_call: expr "->" "name" '(' ')'
  360                 | expr "->" "name" '(' expr_list ')'

  361 func_addr_name: name_in_namespace
  362               | "$i" '(' expr ')'

  363 func_addr_expr: '@' '@' func_addr_name

  364 $@21: %empty

  365 $@22: %empty

  366 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options '>' $@22 func_addr_name

  367 $@23: %empty

  368 $@24: %empty

  369 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name

  370 expr_field: expr '.' "name"
  371           | expr '.' '.' "name"
  372           | expr '.' "name" '(' ')'
  373           | expr '.' "name" '(' expr_list ')'

  374 $@25: %empty

  375 $@26: %empty

  376 expr_field: expr '.' $@25 error $@26

  377 expr: "null"
  378     | name_in_namespace
  379     | expr_numeric_const
  380     | expr_reader
  381     | string_builder
  382     | make_decl
  383     | "true"
  384     | "false"
  385     | expr_field
  386     | expr_mtag
  387     | '!' expr
  388     | '~' expr
  389     | '+' expr
  390     | '-' expr
  391     | expr "<<" expr
  392     | expr ">>" expr
  393     | expr "<<<" expr
  394     | expr ">>>" expr
  395     | expr '+' expr
  396     | expr '-' expr
  397     | expr '*' expr
  398     | expr '/' expr
  399     | expr '%' expr
  400     | expr '<' expr
  401     | expr '>' expr
  402     | expr "==" expr
  403     | expr "!=" expr
  404     | expr "<=" expr
  405     | expr ">=" expr
  406     | expr '&' expr
  407     | expr '|' expr
  408     | expr '^' expr
  409     | expr "&&" expr
  410     | expr "||" expr
  411     | expr "^^" expr
  412     | expr ".." expr
  413     | "++" expr
  414     | "--" expr
  415     | expr "++"
  416     | expr "--"
  417     | '(' expr ')'
  418     | expr '[' expr ']'
  419     | expr '.' '[' expr ']'
  420     | expr "?[" expr ']'
  421     | expr '.' "?[" expr ']'
  422     | expr "?." "name"
  423     | expr '.' "?." "name"
  424     | func_addr_expr
  425     | name_in_namespace '(' ')'
  426     | name_in_namespace '(' expr_list ')'
  427     | basic_type_declaration '(' ')'
  428     | basic_type_declaration '(' expr_list ')'
  429     | '*' expr
  430     | "deref" '(' expr ')'
  431     | "addr" '(' expr ')'
  432     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  433     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  434     | expr "??" expr
  435     | expr '?' expr ':' expr

  436 $@27: %empty

  437 $@28: %empty

  438 expr: expr "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr "is" basic_type_declaration
  440     | expr "is" "name"
  441     | expr "as" "name"

  442 $@29: %empty

  443 $@30: %empty

  444 expr: expr "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr "as" basic_type_declaration
  446     | expr '?' "as" "name"

  447 $@31: %empty

  448 $@32: %empty

  449 expr: expr '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr '?' "as" basic_type_declaration
  451     | expr_type_info
  452     | expr_type_decl
  453     | expr_cast
  454     | expr_new
  455     | expr_method_call
  456     | expr_named_call
  457     | expr_block
  458     | expr "<|" expr
  459     | expr "|>" expr
  460     | expr "|>" basic_type_declaration
  461     | name_in_namespace "name"
  462     | "unsafe" '(' expr ')'
  463     | expression_keyword

  464 expr_mtag: "$$" '(' expr ')'
  465          | "$i" '(' expr ')'
  466          | "$v" '(' expr ')'
  467          | "$b" '(' expr ')'
  468          | "$a" '(' expr ')'
  469          | "..."
  470          | "$c" '(' expr ')' '(' ')'
  471          | "$c" '(' expr ')' '(' expr_list ')'
  472          | expr '.' "$f" '(' expr ')'
  473          | expr "?." "$f" '(' expr ')'
  474          | expr '.' '.' "$f" '(' expr ')'
  475          | expr '.' "?." "$f" '(' expr ')'
  476          | expr "as" "$f" '(' expr ')'
  477          | expr '?' "as" "$f" '(' expr ')'
  478          | expr "is" "$f" '(' expr ')'
  479          | '@' '@' "$c" '(' expr ')'

  480 optional_field_annotation: %empty
  481                          | "[[" annotation_argument_list ']' ']'

  482 optional_override: %empty
  483                  | "override"
  484                  | "sealed"

  485 optional_constant: %empty
  486                  | "const"

  487 optional_public_or_private_member_variable: %empty
  488                                           | "public"
  489                                           | "private"

  490 optional_static_member_variable: %empty
  491                                | "static"

  492 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  493 struct_variable_declaration_list: %empty

  494 $@33: %empty

  495 struct_variable_declaration_list: struct_variable_declaration_list $@33 structure_variable_declaration ';'

  496 $@34: %empty

  497 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header ';'

  498 $@35: %empty

  499 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block
  500                                 | struct_variable_declaration_list '[' annotation_list ']' ';'

  501 function_argument_declaration: optional_field_annotation variable_declaration
  502                              | optional_field_annotation "var" variable_declaration
  503                              | "$a" '(' expr ')'

  504 function_argument_list: function_argument_declaration
  505                       | function_argument_list ';' function_argument_declaration

  506 tuple_type: type_declaration
  507           | "name" ':' type_declaration

  508 tuple_type_list: tuple_type
  509                | tuple_type_list ';' tuple_type

  510 tuple_alias_type_list: %empty
  511                      | tuple_alias_type_list ';'
  512                      | tuple_alias_type_list tuple_type ';'

  513 variant_type: "name" ':' type_declaration

  514 variant_type_list: variant_type
  515                  | variant_type_list ';' variant_type

  516 variant_alias_type_list: %empty
  517                        | variant_alias_type_list ';'
  518                        | variant_alias_type_list variant_type ';'

  519 copy_or_move: '='
  520             | "<-"

  521 variable_declaration: variable_name_with_pos_list
  522                     | variable_name_with_pos_list '&'
  523                     | variable_name_with_pos_list ':' type_declaration
  524                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  525                     | variable_name_with_pos_list copy_or_move expr
  526                     | variable_name_with_pos_list copy_or_move expr_pipe

  527 copy_or_move_or_clone: '='
  528                      | "<-"
  529                      | ":="

  530 optional_ref: %empty
  531             | '&'

  532 let_variable_name_with_pos_list: "name"
  533                                | "$i" '(' expr ')'
  534                                | "name" "aka" "name"
  535                                | let_variable_name_with_pos_list ',' "name"
  536                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  537 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options ';'
  538                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  539                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  540                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';'
  541                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  542 global_variable_declaration_list: %empty

  543 $@36: %empty

  544 global_variable_declaration_list: global_variable_declaration_list $@36 optional_field_annotation let_variable_declaration

  545 optional_shared: %empty
  546                | "shared"

  547 optional_public_or_private_variable: %empty
  548                                    | "private"
  549                                    | "public"

  550 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'

  551 $@37: %empty

  552 global_let: kwd_let optional_shared optional_public_or_private_variable $@37 optional_field_annotation let_variable_declaration

  553 enum_list: %empty
  554          | enum_list ';'
  555          | enum_list "name" ';'
  556          | enum_list "name" '=' expr ';'

  557 optional_public_or_private_alias: %empty
  558                                 | "private"
  559                                 | "public"

  560 $@38: %empty

  561 single_alias: optional_public_or_private_alias "name" $@38 '=' type_declaration

  562 alias_list: single_alias ';'
  563           | alias_list single_alias ';'

  564 alias_declaration: "typedef" '{' alias_list '}'

  565 $@39: %empty

  566 alias_declaration: "typedef" $@39 single_alias ';'

  567 optional_public_or_private_enum: %empty
  568                                | "private"
  569                                | "public"

  570 enum_name: "name"

  571 $@40: %empty

  572 $@41: %empty

  573 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@40 enum_list $@41 '}'

  574 $@42: %empty

  575 $@43: %empty

  576 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@42 enum_list $@43 '}'

  577 optional_structure_parent: %empty
  578                          | ':' name_in_namespace

  579 optional_sealed: %empty
  580                | "sealed"

  581 structure_name: optional_sealed "name" optional_structure_parent

  582 class_or_struct: "class"
  583                | "struct"

  584 optional_public_or_private_structure: %empty
  585                                     | "private"
  586                                     | "public"

  587 optional_struct_variable_declaration_list: %empty
  588                                          | '{' struct_variable_declaration_list '}'

  589 $@44: %empty

  590 $@45: %empty

  591 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@44 structure_name $@45 optional_struct_variable_declaration_list

  592 variable_name_with_pos_list: "name"
  593                            | "$i" '(' expr ')'
  594                            | "name" "aka" "name"
  595                            | variable_name_with_pos_list ',' "name"
  596                            | variable_name_with_pos_list ',' "name" "aka" "name"

  597 basic_type_declaration: "bool"
  598                       | "string"
  599                       | "int"
  600                       | "int8"
  601                       | "int16"
  602                       | "int64"
  603                       | "int2"
  604                       | "int3"
  605                       | "int4"
  606                       | "uint"
  607                       | "uint8"
  608                       | "uint16"
  609                       | "uint64"
  610                       | "uint2"
  611                       | "uint3"
  612                       | "uint4"
  613                       | "float"
  614                       | "float2"
  615                       | "float3"
  616                       | "float4"
  617                       | "void"
  618                       | "range"
  619                       | "urange"
  620                       | "range64"
  621                       | "urange64"
  622                       | "double"
  623                       | "bitfield"

  624 enum_basic_type_declaration: "int"
  625                            | "int8"
  626                            | "int16"
  627                            | "uint"
  628                            | "uint8"
  629                            | "uint16"

  630 structure_type_declaration: name_in_namespace

  631 auto_type_declaration: "auto"
  632                      | "auto" '(' "name" ')'
  633                      | "$t" '(' expr ')'

  634 bitfield_bits: "name"
  635              | bitfield_bits ';' "name"

  636 bitfield_alias_bits: %empty
  637                    | bitfield_alias_bits ';'
  638                    | bitfield_alias_bits "name" ';'

  639 $@46: %empty

  640 $@47: %empty

  641 bitfield_type_declaration: "bitfield" '<' $@46 bitfield_bits '>' $@47

  642 table_type_pair: type_declaration
  643                | type_declaration ';' type_declaration

  644 type_declaration_no_options: basic_type_declaration
  645                            | auto_type_declaration
  646                            | bitfield_type_declaration
  647                            | structure_type_declaration
  648                            | type_declaration_no_options '[' expr ']'
  649                            | type_declaration_no_options '[' ']'

  650 $@48: %empty

  651 $@49: %empty

  652 type_declaration_no_options: "type" '<' $@48 type_declaration '>' $@49
  653                            | "typedecl" '(' expr ')'
  654                            | '$' name_in_namespace '(' optional_expr_list ')'
  655                            | type_declaration_no_options '-' '[' ']'
  656                            | type_declaration_no_options "explicit"
  657                            | type_declaration_no_options "const"
  658                            | type_declaration_no_options '-' "const"
  659                            | type_declaration_no_options '&'
  660                            | type_declaration_no_options '-' '&'
  661                            | type_declaration_no_options '#'
  662                            | type_declaration_no_options "implicit"
  663                            | type_declaration_no_options '-' '#'
  664                            | type_declaration_no_options "==" "const"
  665                            | type_declaration_no_options "==" '&'
  666                            | type_declaration_no_options '?'

  667 $@50: %empty

  668 $@51: %empty

  669 type_declaration_no_options: "smart_ptr" '<' $@50 type_declaration '>' $@51
  670                            | type_declaration_no_options "??"

  671 $@52: %empty

  672 $@53: %empty

  673 type_declaration_no_options: "array" '<' $@52 type_declaration '>' $@53

  674 $@54: %empty

  675 $@55: %empty

  676 type_declaration_no_options: "table" '<' $@54 table_type_pair '>' $@55

  677 $@56: %empty

  678 $@57: %empty

  679 type_declaration_no_options: "iterator" '<' $@56 type_declaration '>' $@57
  680                            | "block"

  681 $@58: %empty

  682 $@59: %empty

  683 type_declaration_no_options: "block" '<' $@58 type_declaration '>' $@59

  684 $@60: %empty

  685 $@61: %empty

  686 type_declaration_no_options: "block" '<' $@60 optional_function_argument_list optional_function_type '>' $@61
  687                            | "function"

  688 $@62: %empty

  689 $@63: %empty

  690 type_declaration_no_options: "function" '<' $@62 type_declaration '>' $@63

  691 $@64: %empty

  692 $@65: %empty

  693 type_declaration_no_options: "function" '<' $@64 optional_function_argument_list optional_function_type '>' $@65
  694                            | "lambda"

  695 $@66: %empty

  696 $@67: %empty

  697 type_declaration_no_options: "lambda" '<' $@66 type_declaration '>' $@67

  698 $@68: %empty

  699 $@69: %empty

  700 type_declaration_no_options: "lambda" '<' $@68 optional_function_argument_list optional_function_type '>' $@69

  701 $@70: %empty

  702 $@71: %empty

  703 type_declaration_no_options: "tuple" '<' $@70 tuple_type_list '>' $@71

  704 $@72: %empty

  705 $@73: %empty

  706 type_declaration_no_options: "variant" '<' $@72 variant_type_list '>' $@73

  707 type_declaration: type_declaration_no_options
  708                 | type_declaration '|' type_declaration_no_options
  709                 | type_declaration '|' '#'

  710 $@74: %empty

  711 $@75: %empty

  712 $@76: %empty

  713 $@77: %empty

  714 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@74 "name" $@75 '{' $@76 tuple_alias_type_list $@77 '}'

  715 $@78: %empty

  716 $@79: %empty

  717 $@80: %empty

  718 $@81: %empty

  719 variant_alias_declaration: "variant" optional_public_or_private_alias $@78 "name" $@79 '{' $@80 variant_alias_type_list $@81 '}'

  720 $@82: %empty

  721 $@83: %empty

  722 $@84: %empty

  723 $@85: %empty

  724 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@82 "name" $@83 '{' $@84 bitfield_alias_bits $@85 '}'

  725 make_decl: make_struct_decl
  726          | make_dim_decl
  727          | make_table_decl
  728          | array_comprehension
  729          | make_tuple_call

  730 make_struct_fields: "name" copy_or_move expr
  731                   | "name" ":=" expr
  732                   | make_struct_fields ',' "name" copy_or_move expr
  733                   | make_struct_fields ',' "name" ":=" expr
  734                   | "$f" '(' expr ')' copy_or_move expr
  735                   | "$f" '(' expr ')' ":=" expr
  736                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  737                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  738 make_struct_dim: make_struct_fields
  739                | make_struct_dim ';' make_struct_fields

  740 optional_block: %empty
  741               | "where" expr_block

  742 optional_trailing_semicolon_cur_cur: '}' '}'
  743                                    | ";}}"

  744 optional_trailing_semicolon_cur_sqr: '}' ']'
  745                                    | ";}]"

  746 optional_trailing_semicolon_sqr_sqr: ']' ']'
  747                                    | ";]]"

  748 optional_trailing_delim_sqr_sqr: ']' ']'
  749                                | ";]]"
  750                                | ",]]"

  751 optional_trailing_delim_cur_sqr: '}' ']'
  752                                | ";}]"
  753                                | ",}]"

  754 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  755                 | "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  756                 | "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  757                 | "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  758                 | "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  759                 | "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

  760 make_tuple: expr
  761           | expr "=>" expr
  762           | make_tuple ',' expr

  763 make_map_tuple: expr "=>" expr
  764               | expr

  765 make_tuple_call: "tuple" '(' expr_list ')'

  766 make_dim: make_tuple
  767         | make_dim ';' make_tuple

  768 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  769              | "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  770              | "array" '(' expr_list ')'

  771 $@86: %empty

  772 $@87: %empty

  773 make_dim_decl: "array" '<' $@86 type_declaration_no_options '>' $@87 '(' expr_list ')'
  774              | "fixed_array" '(' expr_list ')'

  775 $@88: %empty

  776 $@89: %empty

  777 make_dim_decl: "fixed_array" '<' $@88 type_declaration_no_options '>' $@89 '(' expr_list ')'

  778 make_table: make_map_tuple
  779           | make_table ';' make_map_tuple

  780 expr_map_tuple_list: make_map_tuple
  781                    | expr_map_tuple_list ',' make_map_tuple

  782 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur
  783                | "table" '(' expr_map_tuple_list ')'
  784                | "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list ')'
  785                | "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list ')'

  786 array_comprehension_where: %empty
  787                          | ';' "where" expr

  788 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'
  789                    | "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 109 125 387
    '#' (35) 661 663 709
    '$' (36) 20 312 654
    '%' (37) 35 42 145 399
    '&' (38) 153 315 406 522 531 659 660 665
    '(' (40) 100 107 113 120 121 250 265 266 304 305 306 357 358 359 360 362 372 373 417 425 426 427 428 430 431 432 433 462 464 465 466 467 468 470 471 472 473 474 475 476 477 478 479 503 533 593 632 633 653 654 734 735 736 737 756 757 759 765 770 773 774 777 783 784 785
    ')' (41) 100 107 113 120 121 250 265 266 304 305 306 357 358 359 360 362 372 373 417 425 426 427 428 430 431 432 433 462 464 465 466 467 468 470 471 472 473 474 475 476 477 478 479 503 533 593 632 633 653 654 734 735 736 737 756 757 759 765 770 773 774 777 783 784 785
    '*' (42) 143 397 429
    '+' (43) 141 389 395
    ',' (44) 51 89 102 116 287 308 320 358 535 536 595 596 732 733 736 737 762 781
    '-' (45) 142 390 396 655 658 660 663
    '.' (46) 43 170 172 173 370 371 372 373 376 419 421 423 472 474 475
    '/' (47) 44 144 398
    ':' (58) 53 54 123 288 435 507 513 523 524 537 538 539 576 578
    ';' (59) 15 16 74 218 222 223 230 231 236 237 238 273 278 288 289 306 495 497 500 505 509 511 512 515 517 518 537 538 540 554 555 556 562 563 566 635 637 638 643 739 767 779 785 787 788 789
    '<' (60) 146 247 250 262 294 297 300 303 305 306 366 369 400 432 433 438 444 449 641 652 669 673 676 679 683 686 690 693 697 700 703 706 773 777 784 785
    '=' (61) 81 93 94 95 96 97 98 100 316 333 351 352 353 519 527 556 561
    '>' (62) 147 247 250 262 294 297 300 303 305 306 366 369 401 432 433 438 444 449 641 652 669 673 676 679 683 686 690 693 697 700 703 706 773 777 784 785
    '?' (63) 182 183 435 446 449 450 477 666
    '@' (64) 313 314 363 366 369 479
    '[' (91) 118 168 357 358 418 419 500 648 649 655
    ']' (93) 118 168 169 288 289 322 357 358 418 419 420 421 481 500 648 649 655 744 746 748 751 788 789
    '^' (94) 155 408
    '{' (123) 216 217 550 564 573 576 588 714 719 724
    '|' (124) 154 407 708 709
    '}' (125) 216 217 550 564 573 576 588 714 719 724 742 744 751 789
    '~' (126) 126 388
    error (256) 241 376
    "lexer error" (258)
    "struct" (259) 583
    "class" (260) 582
    "let" (261) 282
    "def" (262) 209 497 499
    "while" (263) 78
    "if" (264) 62 74
    "static_if" (265) 63
    "else" (266) 60 66
    "for" (267) 76 788 789
    "recover" (268) 281
    "true" (269) 86 97 383
    "false" (270) 87 98 384
    "new" (271) 264 265 266 267
    "typeinfo" (272) 304 305 306
    "type" (273) 91 303 438 444 449 652
    "in" (274) 76 92 788 789
    "is" (275) 178 180 438 439 440 478
    "as" (276) 46 179 181 182 183 441 444 445 446 449 450 476 477
    "elif" (277) 57
    "static_elif" (278) 58
    "array" (279) 673 770 773
    "return" (280) 270 271 272 274 275
    "null" (281) 377
    "break" (282) 268
    "try" (283) 281
    "options" (284) 36
    "table" (285) 676 783 784 785
    "expect" (286) 49
    "const" (287) 486 657 658 664
    "require" (288) 37 104
    "operator" (289) 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183
    "enum" (290) 573 576
    "finally" (291) 217
    "delete" (292) 176 258 259
    "deref" (293) 430
    "typedef" (294) 564 566
    "typedecl" (295) 653
    "with" (296) 79
    "aka" (297) 534 536 594 596
    "assume" (298) 81
    "cast" (299) 294
    "override" (300) 483
    "abstract" (301) 497
    "upcast" (302) 297
    "iterator" (303) 679
    "var" (304) 283 502
    "addr" (305) 431
    "continue" (306) 269
    "where" (307) 741 787
    "pass" (308) 238
    "reinterpret" (309) 300
    "module" (310) 22
    "public" (311) 18 48 212 488 549 559 569 586
    "label" (312) 54 55
    "goto" (313) 55 56
    "implicit" (314) 662
    "explicit" (315) 259 656
    "shared" (316) 546
    "private" (317) 19 105 211 489 548 558 568 585
    "smart_ptr" (318) 669
    "unsafe" (319) 77 462
    "inscope" (320) 284
    "static" (321) 491
    "fixed_array" (322) 774 777
    "bool" (323) 184 597
    "void" (324) 617
    "string" (325) 185 598
    "auto" (326) 631 632
    "int" (327) 186 599 624
    "int2" (328) 187 603
    "int3" (329) 188 604
    "int4" (330) 189 605
    "uint" (331) 190 606 627
    "bitfield" (332) 623 641 724
    "uint2" (333) 191 610
    "uint3" (334) 192 611
    "uint4" (335) 193 612
    "float" (336) 194 613
    "float2" (337) 195 614
    "float3" (338) 196 615
    "float4" (339) 197 616
    "range" (340) 198 618
    "urange" (341) 199 619
    "range64" (342) 200 620
    "urange64" (343) 201 621
    "block" (344) 680 683 686
    "int64" (345) 202 602
    "uint64" (346) 203 609
    "double" (347) 204 622
    "function" (348) 687 690 693
    "lambda" (349) 694 697 700
    "int8" (350) 205 600 625
    "uint8" (351) 206 607 628
    "int16" (352) 207 601 626
    "uint16" (353) 208 608 629
    "tuple" (354) 703 714 765
    "variant" (355) 706 719
    "generator" (356) 432 433
    "yield" (357) 276 277 279 280
    "sealed" (358) 484 580
    "+=" (359) 127 342
    "-=" (360) 128 343
    "/=" (361) 130 345
    "*=" (362) 129 344
    "%=" (363) 131 346
    "&=" (364) 132 336
    "|=" (365) 133 337
    "^=" (366) 134 338
    "<<" (367) 160 391
    ">>" (368) 161 392
    "++" (369) 156 158 413 415
    "--" (370) 157 159 414 416
    "<=" (371) 151 404
    "<<=" (372) 162 347
    ">>=" (373) 163 348
    ">=" (374) 152 405
    "==" (375) 149 402 664 665
    "!=" (376) 150 403
    "->" (377) 359 360
    "<-" (378) 272 275 277 280 311 317 334 354 355 356 520 528
    "??" (379) 177 434 670
    "?." (380) 171 174 422 423 473 475
    "?[" (381) 169 420 421
    "<|" (382) 458
    " <|" (383) 251
    "$ <|" (384) 254 353 356
    "@ <|" (385) 252 351 354
    "@@ <|" (386) 253 352 355
    "|>" (387) 114 459 460
    ":=" (388) 173 175 318 335 529 731 733 735 737
    "<<<" (389) 164 393
    ">>>" (390) 165 394
    "<<<=" (391) 166 349
    ">>>=" (392) 167 350
    "=>" (393) 310 311 761 763
    "::" (394) 256 257
    "&&" (395) 110 138 409
    "||" (396) 111 139 410
    "^^" (397) 112 140 411
    "&&=" (398) 135 339
    "||=" (399) 136 340
    "^^=" (400) 137 341
    ".." (401) 148 412
    "$$" (402) 464
    "$i" (403) 362 465 533 593
    "$v" (404) 466
    "$b" (405) 467
    "$a" (406) 468 503
    "$t" (407) 633
    "$c" (408) 470 471 479
    "$f" (409) 472 473 474 475 476 477 478 734 735 736 737
    "..." (410) 469
    "[[" (411) 288 289 322 481 754 755 756 757 768 788
    "[{" (412) 758 759 769 789
    "{{" (413) 782
    "integer constant" <i> (414) 52 53 54 55 84 95 325
    "long integer constant" <i64> (415) 327
    "unsigned integer constant" <ui> (416) 326
    "unsigned long integer constant" <ui64> (417) 328
    "unsigned int8 constant" <ui> (418) 329
    "floating point constant" <fd> (419) 85 96 330
    "double constant" <d> (420) 331
    "name" <s> (421) 21 38 46 81 83 90 94 124 172 173 174 180 181 183 255 256 257 286 287 305 306 315 316 317 318 359 360 370 371 372 373 422 423 440 441 446 461 507 513 532 534 535 536 555 556 561 570 581 592 594 595 596 632 634 635 638 714 719 724 730 731 732 733
    "keyword" <s> (422) 39 242 247
    "type function" <s> (423) 40 250
    "start of the string" (424) 27 31
    STRING_CHARACTER <ch> (425) 23 25 32 33
    STRING_CHARACTER_ESC (426) 24 26
    "end of the string" (427) 27 31
    "{" (428) 30
    "}" (429) 30
    "end of failed eader macro" (430)
    ";}}" (431) 743
    ";}]" (432) 745 752
    ";]]" (433) 747 749
    ",]]" (434) 750
    ",}]" (435) 753
    UNARY_MINUS (436)
    UNARY_PLUS (437)
    PRE_INC (438)
    PRE_DEC (439)
    POST_INC (440)
    POST_DEC (441)
    DEREF (442)


Nonterminals, with rules where they appear

    $accept (215)
        on left: 0
    program (216)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (217)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (218)
        on left: 17 18 19
        on right: 22
    module_name <s> (219)
        on left: 20 21
        on right: 22
    module_declaration (220)
        on left: 22
        on right: 2
    character_sequence <s> (221)
        on left: 23 24 25 26
        on right: 25 26 27 29
    string_constant <s> (222)
        on left: 27
        on right: 82 93
    string_builder_body <pExpression> (223)
        on left: 28 29 30
        on right: 29 30 31
    string_builder <pExpression> (224)
        on left: 31
        on right: 381
    reader_character_sequence (225)
        on left: 32 33
        on right: 33 35
    expr_reader <pExpression> (226)
        on left: 35
        on right: 16 380
    $@1 (227)
        on left: 34
        on right: 35
    options_declaration (228)
        on left: 36
        on right: 9
    require_declaration (229)
        on left: 37
        on right: 8
    keyword_or_name <s> (230)
        on left: 38 39 40
        on right: 41 43 44
    require_module_name <s> (231)
        on left: 41 42 43 44
        on right: 42 43 44 45 46
    require_module (232)
        on left: 45 46
        on right: 37
    is_public_module <b> (233)
        on left: 47 48
        on right: 45 46
    expect_declaration (234)
        on left: 49
        on right: 7
    expect_list (235)
        on left: 50 51
        on right: 49 51
    expect_error (236)
        on left: 52 53
        on right: 50 51
    expression_label <pExpression> (237)
        on left: 54
        on right: 236
    expression_goto <pExpression> (238)
        on left: 55 56
        on right: 237
    elif_or_static_elif <b> (239)
        on left: 57 58
        on right: 61
    expression_else <pExpression> (240)
        on left: 59 60 61
        on right: 61 72
    if_or_static_if <b> (241)
        on left: 62 63
        on right: 72
    expression_else_one_liner <pExpression> (242)
        on left: 64 66
        on right: 74
    $@2 (243)
        on left: 65
        on right: 66
    expression_if_one_liner <pExpression> (244)
        on left: 67 68 69 70 71
        on right: 66 74
    expression_if_then_else <pExpression> (245)
        on left: 72 74
        on right: 234
    $@3 (246)
        on left: 73
        on right: 74
    expression_for_loop <pExpression> (247)
        on left: 76
        on right: 229
    $@4 (248)
        on left: 75
        on right: 76
    expression_unsafe <pExpression> (249)
        on left: 77
        on right: 226
    expression_while_loop <pExpression> (250)
        on left: 78
        on right: 225
    expression_with <pExpression> (251)
        on left: 79
        on right: 227
    expression_with_alias <pExpression> (252)
        on left: 81
        on right: 228
    $@5 (253)
        on left: 80
        on right: 81
    annotation_argument_value <aa> (254)
        on left: 82 83 84 85 86 87
        on right: 88 89
    annotation_argument_value_list <aaList> (255)
        on left: 88 89
        on right: 89 100
    annotation_argument_name <s> (256)
        on left: 90 91 92
        on right: 93 94 95 96 97 98 99 100
    annotation_argument <aa> (257)
        on left: 93 94 95 96 97 98 99 100
        on right: 101 102
    annotation_argument_list <aaList> (258)
        on left: 101 102
        on right: 36 102 107 481
    annotation_declaration_name <s> (259)
        on left: 103 104 105
        on right: 106 107
    annotation_declaration_basic <fa> (260)
        on left: 106 107
        on right: 108
    annotation_declaration <fa> (261)
        on left: 108 109 110 111 112 113 114
        on right: 109 110 111 112 113 114 115 116
    annotation_list <faList> (262)
        on left: 115 116
        on right: 116 118 500
    optional_annotation_list <faList> (263)
        on left: 117 118
        on right: 209 324 497 499 573 576 591
    optional_function_argument_list <pVarDeclList> (264)
        on left: 119 120 121
        on right: 213 324 369 686 693 700
    optional_function_type <pTypeDecl> (265)
        on left: 122 123
        on right: 213 324 369 686 693 700
    function_name <s> (266)
        on left: 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208
        on right: 213
    global_function_declaration (267)
        on left: 209
        on right: 6
    optional_public_or_private_function <b> (268)
        on left: 210 211 212
        on right: 215
    function_declaration_header <pFuncDecl> (269)
        on left: 213
        on right: 215 497 499
    function_declaration <pFuncDecl> (270)
        on left: 215
        on right: 209
    $@6 (271)
        on left: 214
        on right: 215
    expression_block <pExpression> (272)
        on left: 216 217
        on right: 60 61 72 76 77 78 79 215 242 281 309 323 499
    expression_any <pExpression> (273)
        on left: 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238
        on right: 240
    expressions <pExpression> (274)
        on left: 239 240 241
        on right: 216 217 240 241
    expr_keyword <pExpression> (275)
        on left: 242
        on right: 220
    optional_expr_list <pExpression> (276)
        on left: 243 244
        on right: 250 654
    expression_keyword <pExpression> (277)
        on left: 247 250
        on right: 463
    $@7 (278)
        on left: 245
        on right: 247
    $@8 (279)
        on left: 246
        on right: 247
    $@9 (280)
        on left: 248
        on right: 250
    $@10 (281)
        on left: 249
        on right: 250
    expr_pipe <pExpression> (282)
        on left: 251 252 253 254
        on right: 219 274 275 279 280 526 539 541
    name_in_namespace <s> (283)
        on left: 255 256 257
        on right: 35 103 304 305 306 357 358 361 378 425 426 461 578 630 654
    expression_delete <pExpression> (284)
        on left: 258 259
        on right: 223
    new_type_declaration <pTypeDecl> (285)
        on left: 262 263
        on right: 264 265 266
    $@11 (286)
        on left: 260
        on right: 262
    $@12 (287)
        on left: 261
        on right: 262
    expr_new <pExpression> (288)
        on left: 264 265 266 267
        on right: 454
    expression_break <pExpression> (289)
        on left: 268
        on right: 70 230
    expression_continue <pExpression> (290)
        on left: 269
        on right: 71 231
    expression_return_no_pipe <pExpression> (291)
        on left: 270 271 272
        on right: 68 273
    expression_return <pExpression> (292)
        on left: 273 274 275
        on right: 232
    expression_yield_no_pipe <pExpression> (293)
        on left: 276 277
        on right: 69 278
    expression_yield <pExpression> (294)
        on left: 278 279 280
        on right: 233
    expression_try_catch <pExpression> (295)
        on left: 281
        on right: 235
    kwd_let <b> (296)
        on left: 282 283
        on right: 290 291 550 552
    optional_in_scope <b> (297)
        on left: 284 285
        on right: 290 291
    tuple_expansion <pNameList> (298)
        on left: 286 287
        on right: 287 288 289
    tuple_expansion_variable_declaration <pVarDecl> (299)
        on left: 288 289
        on right: 291
    expression_let <pExpression> (300)
        on left: 290 291
        on right: 224
    expr_cast <pExpression> (301)
        on left: 294 297 300
        on right: 453
    $@13 (302)
        on left: 292
        on right: 294
    $@14 (303)
        on left: 293
        on right: 294
    $@15 (304)
        on left: 295
        on right: 297
    $@16 (305)
        on left: 296
        on right: 297
    $@17 (306)
        on left: 298
        on right: 300
    $@18 (307)
        on left: 299
        on right: 300
    expr_type_decl <pExpression> (308)
        on left: 303
        on right: 452
    $@19 (309)
        on left: 301
        on right: 303
    $@20 (310)
        on left: 302
        on right: 303
    expr_type_info <pExpression> (311)
        on left: 304 305 306
        on right: 451
    expr_list <pExpression> (312)
        on left: 307 308
        on right: 76 244 266 271 272 308 358 360 373 426 428 471 765 770 773 774 777 788 789
    block_or_simple_block <pExpression> (313)
        on left: 309 310 311
        on right: 324
    block_or_lambda <i> (314)
        on left: 312 313 314
        on right: 324
    capture_entry <pCapt> (315)
        on left: 315 316 317 318
        on right: 319 320
    capture_list <pCaptList> (316)
        on left: 319 320
        on right: 320 322
    optional_capture_list <pCaptList> (317)
        on left: 321 322
        on right: 324 432 433
    expr_block <pExpression> (318)
        on left: 323 324
        on right: 251 252 253 254 351 352 353 354 355 356 457 741
    expr_numeric_const <pExpression> (319)
        on left: 325 326 327 328 329 330 331
        on right: 379
    expr_assign <pExpression> (320)
        on left: 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350
        on right: 222 251
    expr_assign_pipe <pExpression> (321)
        on left: 351 352 353 354 355 356
        on right: 221
    expr_named_call <pExpression> (322)
        on left: 357 358
        on right: 456
    expr_method_call <pExpression> (323)
        on left: 359 360
        on right: 455
    func_addr_name <pExpression> (324)
        on left: 361 362
        on right: 363 366 369
    func_addr_expr <pExpression> (325)
        on left: 363 366 369
        on right: 424
    $@21 (326)
        on left: 364
        on right: 366
    $@22 (327)
        on left: 365
        on right: 366
    $@23 (328)
        on left: 367
        on right: 369
    $@24 (329)
        on left: 368
        on right: 369
    expr_field <pExpression> (330)
        on left: 370 371 372 373 376
        on right: 385
    $@25 (331)
        on left: 374
        on right: 376
    $@26 (332)
        on left: 375
        on right: 376
    expr <pExpression> (333)
        on left: 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 438 439 440 441 444 445 446 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463
        on right
    $@27 (334)
        on left: 436
        on right: 438
    $@28 (335)
        on left: 437
        on right: 438
    $@29 (336)
        on left: 442
        on right: 444
    $@30 (337)
        on left: 443
        on right: 444
    $@31 (338)
        on left: 447
        on right: 449
    $@32 (339)
        on left: 448
        on right: 449
    expr_mtag <pExpression> (340)
        on left: 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479
        on right: 386
    optional_field_annotation <aaList> (341)
        on left: 480 481
        on right: 492 501 502 544 552
    optional_override <i> (342)
        on left: 482 483 484
        on right: 492 499
    optional_constant <b> (343)
        on left: 485 486
        on right: 497 499
    optional_public_or_private_member_variable <b> (344)
        on left: 487 488 489
        on right: 492 497 499
    optional_static_member_variable <b> (345)
        on left: 490 491
        on right: 492 499
    structure_variable_declaration <pVarDecl> (346)
        on left: 492
        on right: 495
    struct_variable_declaration_list <pVarDeclList> (347)
        on left: 493 495 497 499 500
        on right: 495 497 499 500 588
    $@33 (348)
        on left: 494
        on right: 495
    $@34 (349)
        on left: 496
        on right: 497
    $@35 (350)
        on left: 498
        on right: 499
    function_argument_declaration <pVarDecl> (351)
        on left: 501 502 503
        on right: 504 505
    function_argument_list <pVarDeclList> (352)
        on left: 504 505
        on right: 121 505
    tuple_type <pVarDecl> (353)
        on left: 506 507
        on right: 508 509 512
    tuple_type_list <pVarDeclList> (354)
        on left: 508 509
        on right: 509 703
    tuple_alias_type_list <pVarDeclList> (355)
        on left: 510 511 512
        on right: 511 512 714
    variant_type <pVarDecl> (356)
        on left: 513
        on right: 514 515 518
    variant_type_list <pVarDeclList> (357)
        on left: 514 515
        on right: 515 706
    variant_alias_type_list <pVarDeclList> (358)
        on left: 516 517 518
        on right: 517 518 719
    copy_or_move <b> (359)
        on left: 519 520
        on right: 524 525 526 730 732 734 736
    variable_declaration <pVarDecl> (360)
        on left: 521 522 523 524 525 526
        on right: 492 501 502
    copy_or_move_or_clone <i> (361)
        on left: 527 528 529
        on right: 288 289 538 539 540 541
    optional_ref <b> (362)
        on left: 530 531
        on right: 289 540 541
    let_variable_name_with_pos_list <pNameWithPosList> (363)
        on left: 532 533 534 535 536
        on right: 535 536 537 538 539 540 541
    let_variable_declaration <pVarDecl> (364)
        on left: 537 538 539 540 541
        on right: 290 544 552
    global_variable_declaration_list <pVarDeclList> (365)
        on left: 542 544
        on right: 544 550
    $@36 (366)
        on left: 543
        on right: 544
    optional_shared <b> (367)
        on left: 545 546
        on right: 22 550 552
    optional_public_or_private_variable <b> (368)
        on left: 547 548 549
        on right: 550 552
    global_let (369)
        on left: 550 552
        on right: 5
    $@37 (370)
        on left: 551
        on right: 552
    enum_list <pEnum> (371)
        on left: 553 554 555 556
        on right: 554 555 556 573 576
    optional_public_or_private_alias <b> (372)
        on left: 557 558 559
        on right: 561 714 719 724
    single_alias (373)
        on left: 561
        on right: 562 563 566
    $@38 (374)
        on left: 560
        on right: 561
    alias_list (375)
        on left: 562 563
        on right: 563 564
    alias_declaration (376)
        on left: 564 566
        on right: 10
    $@39 (377)
        on left: 565
        on right: 566
    optional_public_or_private_enum <b> (378)
        on left: 567 568 569
        on right: 573 576
    enum_name <pEnum> (379)
        on left: 570
        on right: 573 576
    enum_declaration (380)
        on left: 573 576
        on right: 4
    $@40 (381)
        on left: 571
        on right: 573
    $@41 (382)
        on left: 572
        on right: 573
    $@42 (383)
        on left: 574
        on right: 576
    $@43 (384)
        on left: 575
        on right: 576
    optional_structure_parent <s> (385)
        on left: 577 578
        on right: 581
    optional_sealed <b> (386)
        on left: 579 580
        on right: 581
    structure_name <pStructure> (387)
        on left: 581
        on right: 591
    class_or_struct <b> (388)
        on left: 582 583
        on right: 591
    optional_public_or_private_structure <b> (389)
        on left: 584 585 586
        on right: 591
    optional_struct_variable_declaration_list <pVarDeclList> (390)
        on left: 587 588
        on right: 591
    structure_declaration (391)
        on left: 591
        on right: 3
    $@44 (392)
        on left: 589
        on right: 591
    $@45 (393)
        on left: 590
        on right: 591
    variable_name_with_pos_list <pNameWithPosList> (394)
        on left: 592 593 594 595 596
        on right: 76 521 522 523 524 525 526 595 596 788 789
    basic_type_declaration <type> (395)
        on left: 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623
        on right: 427 428 439 445 450 460 644
    enum_basic_type_declaration <type> (396)
        on left: 624 625 626 627 628 629
        on right: 576
    structure_type_declaration <pTypeDecl> (397)
        on left: 630
        on right: 263 647
    auto_type_declaration <pTypeDecl> (398)
        on left: 631 632 633
        on right: 645
    bitfield_bits <pNameList> (399)
        on left: 634 635
        on right: 635 641
    bitfield_alias_bits <pNameList> (400)
        on left: 636 637 638
        on right: 637 638 724
    bitfield_type_declaration <pTypeDecl> (401)
        on left: 641
        on right: 646
    $@46 (402)
        on left: 639
        on right: 641
    $@47 (403)
        on left: 640
        on right: 641
    table_type_pair <aTypePair> (404)
        on left: 642 643
        on right: 676
    type_declaration_no_options <pTypeDecl> (405)
        on left: 644 645 646 647 648 649 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 669 670 673 676 679 680 683 686 687 690 693 694 697 700 703 706
        on right: 247 250 288 294 297 300 366 432 433 438 537 538 539 648 649 655 656 657 658 659 660 661 662 663 664 665 666 670 707 708 754 755 756 757 758 759 768 769 773 777 784 785
    $@48 (406)
        on left: 650
        on right: 652
    $@49 (407)
        on left: 651
        on right: 652
    $@50 (408)
        on left: 667
        on right: 669
    $@51 (409)
        on left: 668
        on right: 669
    $@52 (410)
        on left: 671
        on right: 673
    $@53 (411)
        on left: 672
        on right: 673
    $@54 (412)
        on left: 674
        on right: 676
    $@55 (413)
        on left: 675
        on right: 676
    $@56 (414)
        on left: 677
        on right: 679
    $@57 (415)
        on left: 678
        on right: 679
    $@58 (416)
        on left: 681
        on right: 683
    $@59 (417)
        on left: 682
        on right: 683
    $@60 (418)
        on left: 684
        on right: 686
    $@61 (419)
        on left: 685
        on right: 686
    $@62 (420)
        on left: 688
        on right: 690
    $@63 (421)
        on left: 689
        on right: 690
    $@64 (422)
        on left: 691
        on right: 693
    $@65 (423)
        on left: 692
        on right: 693
    $@66 (424)
        on left: 695
        on right: 697
    $@67 (425)
        on left: 696
        on right: 697
    $@68 (426)
        on left: 698
        on right: 700
    $@69 (427)
        on left: 699
        on right: 700
    $@70 (428)
        on left: 701
        on right: 703
    $@71 (429)
        on left: 702
        on right: 703
    $@72 (430)
        on left: 704
        on right: 706
    $@73 (431)
        on left: 705
        on right: 706
    type_declaration <pTypeDecl> (432)
        on left: 707 708 709
        on right: 123 262 303 444 449 506 507 513 523 524 561 642 643 652 669 673 679 683 690 697 708 709
    tuple_alias_declaration (433)
        on left: 714
        on right: 12
    $@74 (434)
        on left: 710
        on right: 714
    $@75 (435)
        on left: 711
        on right: 714
    $@76 (436)
        on left: 712
        on right: 714
    $@77 (437)
        on left: 713
        on right: 714
    variant_alias_declaration (438)
        on left: 719
        on right: 11
    $@78 (439)
        on left: 715
        on right: 719
    $@79 (440)
        on left: 716
        on right: 719
    $@80 (441)
        on left: 717
        on right: 719
    $@81 (442)
        on left: 718
        on right: 719
    bitfield_alias_declaration (443)
        on left: 724
        on right: 13
    $@82 (444)
        on left: 720
        on right: 724
    $@83 (445)
        on left: 721
        on right: 724
    $@84 (446)
        on left: 722
        on right: 724
    $@85 (447)
        on left: 723
        on right: 724
    make_decl <pExpression> (448)
        on left: 725 726 727 728 729
        on right: 267 382
    make_struct_fields <pMakeStruct> (449)
        on left: 730 731 732 733 734 735 736 737
        on right: 357 358 732 733 736 737 738 739
    make_struct_dim <pExpression> (450)
        on left: 738 739
        on right: 739 754 757 758 759
    optional_block <pExpression> (451)
        on left: 740 741
        on right: 754 755 756 757 758 759
    optional_trailing_semicolon_cur_cur (452)
        on left: 742 743
        on right: 782
    optional_trailing_semicolon_cur_sqr (453)
        on left: 744 745
        on right: 769
    optional_trailing_semicolon_sqr_sqr (454)
        on left: 746 747
        on right: 768
    optional_trailing_delim_sqr_sqr (455)
        on left: 748 749 750
        on right: 754 755 756 757
    optional_trailing_delim_cur_sqr (456)
        on left: 751 752 753
        on right: 758 759
    make_struct_decl <pExpression> (457)
        on left: 754 755 756 757 758 759
        on right: 725
    make_tuple <pExpression> (458)
        on left: 760 761 762
        on right: 762 766 767
    make_map_tuple <pExpression> (459)
        on left: 763 764
        on right: 778 779 780 781
    make_tuple_call <pExpression> (460)
        on left: 765
        on right: 729
    make_dim <pExpression> (461)
        on left: 766 767
        on right: 767 768 769
    make_dim_decl <pExpression> (462)
        on left: 768 769 770 773 774 777
        on right: 726
    $@86 (463)
        on left: 771
        on right: 773
    $@87 (464)
        on left: 772
        on right: 773
    $@88 (465)
        on left: 775
        on right: 777
    $@89 (466)
        on left: 776
        on right: 777
    make_table <pExpression> (467)
        on left: 778 779
        on right: 779 782
    expr_map_tuple_list <pExpression> (468)
        on left: 780 781
        on right: 781 783 784 785
    make_table_decl <pExpression> (469)
        on left: 782 783 784 785
        on right: 727
    array_comprehension_where <pExpression> (470)
        on left: 786 787
        on right: 788 789
    array_comprehension <pExpression> (471)
        on left: 788 789
        on right: 728


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . ';'

    $end        shift, and go to state 2
    "let"       shift, and go to state 3
    "options"   shift, and go to state 4
    "expect"    shift, and go to state 5
    "require"   shift, and go to state 6
    "typedef"   shift, and go to state 7
    "var"       shift, and go to state 8
    "module"    shift, and go to state 9
    "bitfield"  shift, and go to state 10
    "tuple"     shift, and go to state 11
    "variant"   shift, and go to state 12
    '%'         shift, and go to state 13
    '['         shift, and go to state 14
    ';'         shift, and go to state 15

    $default  reduce using rule 117 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  282 kwd_let: "let" .

    $default  reduce using rule 282 (kwd_let)


State 4

   36 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   49 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   37 require_declaration: "require" . require_module

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 46
    require_module       go to state 47


State 7

  564 alias_declaration: "typedef" . '{' alias_list '}'
  566                  | "typedef" . $@39 single_alias ';'

    '{'  shift, and go to state 48

    $default  reduce using rule 565 ($@39)

    $@39  go to state 49


State 8

  283 kwd_let: "var" .

    $default  reduce using rule 283 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 50
    '$'     shift, and go to state 51

    module_name  go to state 52


State 10

  724 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias $@82 "name" $@83 '{' $@84 bitfield_alias_bits $@85 '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 557 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 55


State 11

  714 tuple_alias_declaration: "tuple" . optional_public_or_private_alias $@74 "name" $@75 '{' $@76 tuple_alias_type_list $@77 '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 557 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 56


State 12

  719 variant_alias_declaration: "variant" . optional_public_or_private_alias $@78 "name" $@79 '{' $@80 variant_alias_type_list $@81 '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 557 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 57


State 13

   35 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 60


State 14

  118 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 69
    name_in_namespace             go to state 70


State 15

   15 program: program ';' .

    $default  reduce using rule 15 (program)


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   16 top_level_reader_macro: expr_reader . ';'

    ';'  shift, and go to state 71


State 19

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 20

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  209 global_function_declaration: optional_annotation_list . "def" function_declaration
  573 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name '{' $@40 enum_list $@41 '}'
  576                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@42 enum_list $@43 '}'
  591 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@44 structure_name $@45 optional_struct_variable_declaration_list

    "struct"  shift, and go to state 72
    "class"   shift, and go to state 73
    "def"     shift, and go to state 74
    "enum"    shift, and go to state 75

    class_or_struct  go to state 76


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  550 global_let: kwd_let . optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'
  552           | kwd_let . optional_shared optional_public_or_private_variable $@37 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 77

    $default  reduce using rule 545 (optional_shared)

    optional_shared  go to state 78


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

   91 annotation_argument_name: "type" .

    $default  reduce using rule 91 (annotation_argument_name)


State 33

   92 annotation_argument_name: "in" .

    $default  reduce using rule 92 (annotation_argument_name)


State 34

   90 annotation_argument_name: "name" .

    $default  reduce using rule 90 (annotation_argument_name)


State 35

   93 annotation_argument: annotation_argument_name . '=' string_constant
   94                    | annotation_argument_name . '=' "name"
   95                    | annotation_argument_name . '=' "integer constant"
   96                    | annotation_argument_name . '=' "floating point constant"
   97                    | annotation_argument_name . '=' "true"
   98                    | annotation_argument_name . '=' "false"
   99                    | annotation_argument_name .
  100                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 79

    $default  reduce using rule 99 (annotation_argument)


State 36

  101 annotation_argument_list: annotation_argument .

    $default  reduce using rule 101 (annotation_argument_list)


State 37

   36 options_declaration: "options" annotation_argument_list .
  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 80

    $default  reduce using rule 36 (options_declaration)


State 38

   52 expect_error: "integer constant" .
   53             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 81

    $default  reduce using rule 52 (expect_error)


State 39

   49 expect_declaration: "expect" expect_list .
   51 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 82

    $default  reduce using rule 49 (expect_declaration)


State 40

   50 expect_list: expect_error .

    $default  reduce using rule 50 (expect_list)


State 41

   38 keyword_or_name: "name" .

    $default  reduce using rule 38 (keyword_or_name)


State 42

   39 keyword_or_name: "keyword" .

    $default  reduce using rule 39 (keyword_or_name)


State 43

   40 keyword_or_name: "type function" .

    $default  reduce using rule 40 (keyword_or_name)


State 44

   42 require_module_name: '%' . require_module_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 83


State 45

   41 require_module_name: keyword_or_name .

    $default  reduce using rule 41 (require_module_name)


State 46

   43 require_module_name: require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name
   45 require_module: require_module_name . is_public_module
   46               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 84
    "public"  shift, and go to state 85
    '/'       shift, and go to state 86
    '.'       shift, and go to state 87

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 88


State 47

   37 require_declaration: "require" require_module .

    $default  reduce using rule 37 (require_declaration)


State 48

  564 alias_declaration: "typedef" '{' . alias_list '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 557 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 90
    alias_list                        go to state 91


State 49

  566 alias_declaration: "typedef" $@39 . single_alias ';'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 557 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 92


State 50

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 51

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 52

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 77

    $default  reduce using rule 545 (optional_shared)

    optional_shared  go to state 93


State 53

  559 optional_public_or_private_alias: "public" .

    $default  reduce using rule 559 (optional_public_or_private_alias)


State 54

  558 optional_public_or_private_alias: "private" .

    $default  reduce using rule 558 (optional_public_or_private_alias)


State 55

  724 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . $@82 "name" $@83 '{' $@84 bitfield_alias_bits $@85 '}'

    $default  reduce using rule 720 ($@82)

    $@82  go to state 94


State 56

  714 tuple_alias_declaration: "tuple" optional_public_or_private_alias . $@74 "name" $@75 '{' $@76 tuple_alias_type_list $@77 '}'

    $default  reduce using rule 710 ($@74)

    $@74  go to state 95


State 57

  719 variant_alias_declaration: "variant" optional_public_or_private_alias . $@78 "name" $@79 '{' $@80 variant_alias_type_list $@81 '}'

    $default  reduce using rule 715 ($@78)

    $@78  go to state 96


State 58

  257 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 97


State 59

  255 name_in_namespace: "name" .
  256                  | "name" . "::" "name"

    "::"  shift, and go to state 98

    "::"      [reduce using rule 255 (name_in_namespace)]
    $default  reduce using rule 255 (name_in_namespace)


State 60

   35 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 34 ($@1)

    $@1  go to state 99


State 61

  104 annotation_declaration_name: "require" .

    $default  reduce using rule 104 (annotation_declaration_name)


State 62

  105 annotation_declaration_name: "private" .

    $default  reduce using rule 105 (annotation_declaration_name)


State 63

  114 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 100
    name_in_namespace             go to state 70


State 64

  109 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 101
    name_in_namespace             go to state 70


State 65

  113 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 102
    name_in_namespace             go to state 70


State 66

  106 annotation_declaration_basic: annotation_declaration_name .
  107                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 103

    $default  reduce using rule 106 (annotation_declaration_basic)


State 67

  108 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 108 (annotation_declaration)


State 68

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  115 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106

    $default  reduce using rule 115 (annotation_list)


State 69

  116 annotation_list: annotation_list . ',' annotation_declaration
  118 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 107
    ']'  shift, and go to state 108


State 70

  103 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 103 (annotation_declaration_name)


State 71

   16 top_level_reader_macro: expr_reader ';' .

    $default  reduce using rule 16 (top_level_reader_macro)


State 72

  583 class_or_struct: "struct" .

    $default  reduce using rule 583 (class_or_struct)


State 73

  582 class_or_struct: "class" .

    $default  reduce using rule 582 (class_or_struct)


State 74

  209 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 109
    "private"  shift, and go to state 110

    $default  reduce using rule 210 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 111
    function_declaration                 go to state 112


State 75

  573 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name '{' $@40 enum_list $@41 '}'
  576                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@42 enum_list $@43 '}'

    "public"   shift, and go to state 113
    "private"  shift, and go to state 114

    $default  reduce using rule 567 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 115


State 76

  591 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@44 structure_name $@45 optional_struct_variable_declaration_list

    "public"   shift, and go to state 116
    "private"  shift, and go to state 117

    $default  reduce using rule 584 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 118


State 77

  546 optional_shared: "shared" .

    $default  reduce using rule 546 (optional_shared)


State 78

  550 global_let: kwd_let optional_shared . optional_public_or_private_variable '{' global_variable_declaration_list '}'
  552           | kwd_let optional_shared . optional_public_or_private_variable $@37 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 119
    "private"  shift, and go to state 120

    $default  reduce using rule 547 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 121


State 79

   93 annotation_argument: annotation_argument_name '=' . string_constant
   94                    | annotation_argument_name '=' . "name"
   95                    | annotation_argument_name '=' . "integer constant"
   96                    | annotation_argument_name '=' . "floating point constant"
   97                    | annotation_argument_name '=' . "true"
   98                    | annotation_argument_name '=' . "false"
  100                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 122
    "false"                    shift, and go to state 123
    "integer constant"         shift, and go to state 124
    "floating point constant"  shift, and go to state 125
    "name"                     shift, and go to state 126
    "start of the string"      shift, and go to state 127
    '('                        shift, and go to state 128

    string_constant  go to state 129


State 80

  102 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 130


State 81

   53 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 131


State 82

   51 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 132


State 83

   42 require_module_name: '%' require_module_name .
   43                    | require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name

    '.'  shift, and go to state 87

    $default  reduce using rule 42 (require_module_name)


State 84

   46 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 133


State 85

   48 is_public_module: "public" .

    $default  reduce using rule 48 (is_public_module)


State 86

   44 require_module_name: require_module_name '/' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 134


State 87

   43 require_module_name: require_module_name '.' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 135


State 88

   45 require_module: require_module_name is_public_module .

    $default  reduce using rule 45 (require_module)


State 89

  561 single_alias: optional_public_or_private_alias . "name" $@38 '=' type_declaration

    "name"  shift, and go to state 136


State 90

  562 alias_list: single_alias . ';'

    ';'  shift, and go to state 137


State 91

  563 alias_list: alias_list . single_alias ';'
  564 alias_declaration: "typedef" '{' alias_list . '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54
    '}'        shift, and go to state 138

    $default  reduce using rule 557 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 139


State 92

  566 alias_declaration: "typedef" $@39 single_alias . ';'

    ';'  shift, and go to state 140


State 93

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 141
    "private"  shift, and go to state 142

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 143


State 94

  724 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@82 . "name" $@83 '{' $@84 bitfield_alias_bits $@85 '}'

    "name"  shift, and go to state 144


State 95

  714 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@74 . "name" $@75 '{' $@76 tuple_alias_type_list $@77 '}'

    "name"  shift, and go to state 145


State 96

  719 variant_alias_declaration: "variant" optional_public_or_private_alias $@78 . "name" $@79 '{' $@80 variant_alias_type_list $@81 '}'

    "name"  shift, and go to state 146


State 97

  257 name_in_namespace: "::" "name" .

    $default  reduce using rule 257 (name_in_namespace)


State 98

  256 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 147


State 99

   35 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 148

    reader_character_sequence  go to state 149


State 100

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  114                       | "|>" annotation_declaration .

    $default  reduce using rule 114 (annotation_declaration)


State 101

  109 annotation_declaration: '!' annotation_declaration .
  110                       | annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 109 (annotation_declaration)


State 102

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  113                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106
    ')'   shift, and go to state 150


State 103

  107 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 151


State 104

  110 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 152
    name_in_namespace             go to state 70


State 105

  111 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 153
    name_in_namespace             go to state 70


State 106

  112 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 154
    name_in_namespace             go to state 70


State 107

  116 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 155
    name_in_namespace             go to state 70


State 108

  118 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 118 (optional_annotation_list)


State 109

  212 optional_public_or_private_function: "public" .

    $default  reduce using rule 212 (optional_public_or_private_function)


State 110

  211 optional_public_or_private_function: "private" .

    $default  reduce using rule 211 (optional_public_or_private_function)


State 111

  215 function_declaration: optional_public_or_private_function . $@6 function_declaration_header expression_block

    $default  reduce using rule 214 ($@6)

    $@6  go to state 156


State 112

  209 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 209 (global_function_declaration)


State 113

  569 optional_public_or_private_enum: "public" .

    $default  reduce using rule 569 (optional_public_or_private_enum)


State 114

  568 optional_public_or_private_enum: "private" .

    $default  reduce using rule 568 (optional_public_or_private_enum)


State 115

  573 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name '{' $@40 enum_list $@41 '}'
  576                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration '{' $@42 enum_list $@43 '}'

    "name"  shift, and go to state 157

    enum_name  go to state 158


State 116

  586 optional_public_or_private_structure: "public" .

    $default  reduce using rule 586 (optional_public_or_private_structure)


State 117

  585 optional_public_or_private_structure: "private" .

    $default  reduce using rule 585 (optional_public_or_private_structure)


State 118

  591 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@44 structure_name $@45 optional_struct_variable_declaration_list

    $default  reduce using rule 589 ($@44)

    $@44  go to state 159


State 119

  549 optional_public_or_private_variable: "public" .

    $default  reduce using rule 549 (optional_public_or_private_variable)


State 120

  548 optional_public_or_private_variable: "private" .

    $default  reduce using rule 548 (optional_public_or_private_variable)


State 121

  550 global_let: kwd_let optional_shared optional_public_or_private_variable . '{' global_variable_declaration_list '}'
  552           | kwd_let optional_shared optional_public_or_private_variable . $@37 optional_field_annotation let_variable_declaration

    '{'  shift, and go to state 160

    $default  reduce using rule 551 ($@37)

    $@37  go to state 161


State 122

   97 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 97 (annotation_argument)


State 123

   98 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 98 (annotation_argument)


State 124

   95 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 95 (annotation_argument)


State 125

   96 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 96 (annotation_argument)


State 126

   94 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 94 (annotation_argument)


State 127

   27 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163

    character_sequence  go to state 164


State 128

  100 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 127

    string_constant                 go to state 170
    annotation_argument_value       go to state 171
    annotation_argument_value_list  go to state 172


State 129

   93 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 93 (annotation_argument)


State 130

  102 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 102 (annotation_argument_list)


State 131

   53 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 53 (expect_error)


State 132

   51 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 51 (expect_list)


State 133

   46 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 85

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 173


State 134

   44 require_module_name: require_module_name '/' keyword_or_name .

    $default  reduce using rule 44 (require_module_name)


State 135

   43 require_module_name: require_module_name '.' keyword_or_name .

    $default  reduce using rule 43 (require_module_name)


State 136

  561 single_alias: optional_public_or_private_alias "name" . $@38 '=' type_declaration

    $default  reduce using rule 560 ($@38)

    $@38  go to state 174


State 137

  562 alias_list: single_alias ';' .

    $default  reduce using rule 562 (alias_list)


State 138

  564 alias_declaration: "typedef" '{' alias_list '}' .

    $default  reduce using rule 564 (alias_declaration)


State 139

  563 alias_list: alias_list single_alias . ';'

    ';'  shift, and go to state 175


State 140

  566 alias_declaration: "typedef" $@39 single_alias ';' .

    $default  reduce using rule 566 (alias_declaration)


State 141

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 142

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 143

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 144

  724 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@82 "name" . $@83 '{' $@84 bitfield_alias_bits $@85 '}'

    $default  reduce using rule 721 ($@83)

    $@83  go to state 176


State 145

  714 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@74 "name" . $@75 '{' $@76 tuple_alias_type_list $@77 '}'

    $default  reduce using rule 711 ($@75)

    $@75  go to state 177


State 146

  719 variant_alias_declaration: "variant" optional_public_or_private_alias $@78 "name" . $@79 '{' $@80 variant_alias_type_list $@81 '}'

    $default  reduce using rule 716 ($@79)

    $@79  go to state 178


State 147

  256 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 256 (name_in_namespace)


State 148

   32 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 32 (reader_character_sequence)


State 149

   33 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 179

    $default  reduce using rule 35 (expr_reader)


State 150

  113 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 113 (annotation_declaration)


State 151

  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  107 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 80
    ')'  shift, and go to state 180


State 152

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  110                       | annotation_declaration "&&" annotation_declaration .
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 110 (annotation_declaration)


State 153

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  111                       | annotation_declaration "||" annotation_declaration .
  112                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 104
    "^^"  shift, and go to state 106

    $default  reduce using rule 111 (annotation_declaration)


State 154

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  112                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 104

    $default  reduce using rule 112 (annotation_declaration)


State 155

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  116 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106

    $default  reduce using rule 116 (annotation_list)


State 156

  215 function_declaration: optional_public_or_private_function $@6 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 211


State 157

  570 enum_name: "name" .

    $default  reduce using rule 570 (enum_name)


State 158

  573 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . '{' $@40 enum_list $@41 '}'
  576                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration '{' $@42 enum_list $@43 '}'

    ':'  shift, and go to state 212
    '{'  shift, and go to state 213


State 159

  591 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@44 . structure_name $@45 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 214

    $default  reduce using rule 579 (optional_sealed)

    optional_sealed  go to state 215
    structure_name   go to state 216


State 160

  550 global_let: kwd_let optional_shared optional_public_or_private_variable '{' . global_variable_declaration_list '}'

    $default  reduce using rule 542 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 217


State 161

  552 global_let: kwd_let optional_shared optional_public_or_private_variable $@37 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 218

    $default  reduce using rule 480 (optional_field_annotation)

    optional_field_annotation  go to state 219


State 162

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 163

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 164

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 220
    STRING_CHARACTER_ESC  shift, and go to state 221
    "end of the string"   shift, and go to state 222


State 165

   86 annotation_argument_value: "true" .

    $default  reduce using rule 86 (annotation_argument_value)


State 166

   87 annotation_argument_value: "false" .

    $default  reduce using rule 87 (annotation_argument_value)


State 167

   84 annotation_argument_value: "integer constant" .

    $default  reduce using rule 84 (annotation_argument_value)


State 168

   85 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 85 (annotation_argument_value)


State 169

   83 annotation_argument_value: "name" .

    $default  reduce using rule 83 (annotation_argument_value)


State 170

   82 annotation_argument_value: string_constant .

    $default  reduce using rule 82 (annotation_argument_value)


State 171

   88 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 88 (annotation_argument_value_list)


State 172

   89 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  100 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 223
    ')'  shift, and go to state 224


State 173

   46 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 46 (require_module)


State 174

  561 single_alias: optional_public_or_private_alias "name" $@38 . '=' type_declaration

    '='  shift, and go to state 225


State 175

  563 alias_list: alias_list single_alias ';' .

    $default  reduce using rule 563 (alias_list)


State 176

  724 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@82 "name" $@83 . '{' $@84 bitfield_alias_bits $@85 '}'

    '{'  shift, and go to state 226


State 177

  714 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@74 "name" $@75 . '{' $@76 tuple_alias_type_list $@77 '}'

    '{'  shift, and go to state 227


State 178

  719 variant_alias_declaration: "variant" optional_public_or_private_alias $@78 "name" $@79 . '{' $@80 variant_alias_type_list $@81 '}'

    '{'  shift, and go to state 228


State 179

   33 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 33 (reader_character_sequence)


State 180

  107 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 107 (annotation_declaration_basic)


State 181

  125 function_name: "operator" . '!'
  126              | "operator" . '~'
  127              | "operator" . "+="
  128              | "operator" . "-="
  129              | "operator" . "*="
  130              | "operator" . "/="
  131              | "operator" . "%="
  132              | "operator" . "&="
  133              | "operator" . "|="
  134              | "operator" . "^="
  135              | "operator" . "&&="
  136              | "operator" . "||="
  137              | "operator" . "^^="
  138              | "operator" . "&&"
  139              | "operator" . "||"
  140              | "operator" . "^^"
  141              | "operator" . '+'
  142              | "operator" . '-'
  143              | "operator" . '*'
  144              | "operator" . '/'
  145              | "operator" . '%'
  146              | "operator" . '<'
  147              | "operator" . '>'
  148              | "operator" . ".."
  149              | "operator" . "=="
  150              | "operator" . "!="
  151              | "operator" . "<="
  152              | "operator" . ">="
  153              | "operator" . '&'
  154              | "operator" . '|'
  155              | "operator" . '^'
  158              | "operator" . "++"
  159              | "operator" . "--"
  160              | "operator" . "<<"
  161              | "operator" . ">>"
  162              | "operator" . "<<="
  163              | "operator" . ">>="
  164              | "operator" . "<<<"
  165              | "operator" . ">>>"
  166              | "operator" . "<<<="
  167              | "operator" . ">>>="
  168              | "operator" . '[' ']'
  169              | "operator" . "?[" ']'
  170              | "operator" . '.'
  171              | "operator" . "?."
  172              | "operator" . '.' "name"
  173              | "operator" . '.' "name" ":="
  174              | "operator" . "?." "name"
  175              | "operator" . ":="
  176              | "operator" . "delete"
  177              | "operator" . "??"
  178              | "operator" . "is"
  179              | "operator" . "as"
  180              | "operator" . "is" "name"
  181              | "operator" . "as" "name"
  182              | "operator" . '?' "as"
  183              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 229
    "as"      shift, and go to state 230
    "delete"  shift, and go to state 231
    "+="      shift, and go to state 232
    "-="      shift, and go to state 233
    "/="      shift, and go to state 234
    "*="      shift, and go to state 235
    "%="      shift, and go to state 236
    "&="      shift, and go to state 237
    "|="      shift, and go to state 238
    "^="      shift, and go to state 239
    "<<"      shift, and go to state 240
    ">>"      shift, and go to state 241
    "++"      shift, and go to state 242
    "--"      shift, and go to state 243
    "<="      shift, and go to state 244
    "<<="     shift, and go to state 245
    ">>="     shift, and go to state 246
    ">="      shift, and go to state 247
    "=="      shift, and go to state 248
    "!="      shift, and go to state 249
    "??"      shift, and go to state 250
    "?."      shift, and go to state 251
    "?["      shift, and go to state 252
    ":="      shift, and go to state 253
    "<<<"     shift, and go to state 254
    ">>>"     shift, and go to state 255
    "<<<="    shift, and go to state 256
    ">>>="    shift, and go to state 257
    "&&"      shift, and go to state 258
    "||"      shift, and go to state 259
    "^^"      shift, and go to state 260
    "&&="     shift, and go to state 261
    "||="     shift, and go to state 262
    "^^="     shift, and go to state 263
    ".."      shift, and go to state 264
    '?'       shift, and go to state 265
    '|'       shift, and go to state 266
    '^'       shift, and go to state 267
    '&'       shift, and go to state 268
    '<'       shift, and go to state 269
    '>'       shift, and go to state 270
    '-'       shift, and go to state 271
    '+'       shift, and go to state 272
    '*'       shift, and go to state 273
    '/'       shift, and go to state 274
    '%'       shift, and go to state 275
    '~'       shift, and go to state 276
    '!'       shift, and go to state 277
    '.'       shift, and go to state 278
    '['       shift, and go to state 279


State 182

  184 function_name: "bool" .

    $default  reduce using rule 184 (function_name)


State 183

  185 function_name: "string" .

    $default  reduce using rule 185 (function_name)


State 184

  186 function_name: "int" .

    $default  reduce using rule 186 (function_name)


State 185

  187 function_name: "int2" .

    $default  reduce using rule 187 (function_name)


State 186

  188 function_name: "int3" .

    $default  reduce using rule 188 (function_name)


State 187

  189 function_name: "int4" .

    $default  reduce using rule 189 (function_name)


State 188

  190 function_name: "uint" .

    $default  reduce using rule 190 (function_name)


State 189

  191 function_name: "uint2" .

    $default  reduce using rule 191 (function_name)


State 190

  192 function_name: "uint3" .

    $default  reduce using rule 192 (function_name)


State 191

  193 function_name: "uint4" .

    $default  reduce using rule 193 (function_name)


State 192

  194 function_name: "float" .

    $default  reduce using rule 194 (function_name)


State 193

  195 function_name: "float2" .

    $default  reduce using rule 195 (function_name)


State 194

  196 function_name: "float3" .

    $default  reduce using rule 196 (function_name)


State 195

  197 function_name: "float4" .

    $default  reduce using rule 197 (function_name)


State 196

  198 function_name: "range" .

    $default  reduce using rule 198 (function_name)


State 197

  199 function_name: "urange" .

    $default  reduce using rule 199 (function_name)


State 198

  200 function_name: "range64" .

    $default  reduce using rule 200 (function_name)


State 199

  201 function_name: "urange64" .

    $default  reduce using rule 201 (function_name)


State 200

  202 function_name: "int64" .

    $default  reduce using rule 202 (function_name)


State 201

  203 function_name: "uint64" .

    $default  reduce using rule 203 (function_name)


State 202

  204 function_name: "double" .

    $default  reduce using rule 204 (function_name)


State 203

  205 function_name: "int8" .

    $default  reduce using rule 205 (function_name)


State 204

  206 function_name: "uint8" .

    $default  reduce using rule 206 (function_name)


State 205

  207 function_name: "int16" .

    $default  reduce using rule 207 (function_name)


State 206

  208 function_name: "uint16" .

    $default  reduce using rule 208 (function_name)


State 207

  156 function_name: "++" . "operator"

    "operator"  shift, and go to state 280


State 208

  157 function_name: "--" . "operator"

    "operator"  shift, and go to state 281


State 209

  124 function_name: "name" .

    $default  reduce using rule 124 (function_name)


State 210

  213 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 283


State 211

  215 function_declaration: optional_public_or_private_function $@6 function_declaration_header . expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 285


State 212

  576 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration '{' $@42 enum_list $@43 '}'

    "int"     shift, and go to state 286
    "uint"    shift, and go to state 287
    "int8"    shift, and go to state 288
    "uint8"   shift, and go to state 289
    "int16"   shift, and go to state 290
    "uint16"  shift, and go to state 291

    enum_basic_type_declaration  go to state 292


State 213

  573 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' . $@40 enum_list $@41 '}'

    $default  reduce using rule 571 ($@40)

    $@40  go to state 293


State 214

  580 optional_sealed: "sealed" .

    $default  reduce using rule 580 (optional_sealed)


State 215

  581 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 294


State 216

  591 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@44 structure_name . $@45 optional_struct_variable_declaration_list

    $default  reduce using rule 590 ($@45)

    $@45  go to state 295


State 217

  544 global_variable_declaration_list: global_variable_declaration_list . $@36 optional_field_annotation let_variable_declaration
  550 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list . '}'

    '}'  shift, and go to state 296

    $default  reduce using rule 543 ($@36)

    $@36  go to state 297


State 218

  481 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 298


State 219

  552 global_let: kwd_let optional_shared optional_public_or_private_variable $@37 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 299
    "name"  shift, and go to state 300

    let_variable_name_with_pos_list  go to state 301
    let_variable_declaration         go to state 302


State 220

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 221

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 222

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 223

   89 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 127

    string_constant            go to state 170
    annotation_argument_value  go to state 303


State 224

  100 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 100 (annotation_argument)


State 225

  561 single_alias: optional_public_or_private_alias "name" $@38 '=' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 351


State 226

  724 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@82 "name" $@83 '{' . $@84 bitfield_alias_bits $@85 '}'

    $default  reduce using rule 722 ($@84)

    $@84  go to state 352


State 227

  714 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@74 "name" $@75 '{' . $@76 tuple_alias_type_list $@77 '}'

    $default  reduce using rule 712 ($@76)

    $@76  go to state 353


State 228

  719 variant_alias_declaration: "variant" optional_public_or_private_alias $@78 "name" $@79 '{' . $@80 variant_alias_type_list $@81 '}'

    $default  reduce using rule 717 ($@80)

    $@80  go to state 354


State 229

  178 function_name: "operator" "is" .
  180              | "operator" "is" . "name"

    "name"  shift, and go to state 355

    $default  reduce using rule 178 (function_name)


State 230

  179 function_name: "operator" "as" .
  181              | "operator" "as" . "name"

    "name"  shift, and go to state 356

    $default  reduce using rule 179 (function_name)


State 231

  176 function_name: "operator" "delete" .

    $default  reduce using rule 176 (function_name)


State 232

  127 function_name: "operator" "+=" .

    $default  reduce using rule 127 (function_name)


State 233

  128 function_name: "operator" "-=" .

    $default  reduce using rule 128 (function_name)


State 234

  130 function_name: "operator" "/=" .

    $default  reduce using rule 130 (function_name)


State 235

  129 function_name: "operator" "*=" .

    $default  reduce using rule 129 (function_name)


State 236

  131 function_name: "operator" "%=" .

    $default  reduce using rule 131 (function_name)


State 237

  132 function_name: "operator" "&=" .

    $default  reduce using rule 132 (function_name)


State 238

  133 function_name: "operator" "|=" .

    $default  reduce using rule 133 (function_name)


State 239

  134 function_name: "operator" "^=" .

    $default  reduce using rule 134 (function_name)


State 240

  160 function_name: "operator" "<<" .

    $default  reduce using rule 160 (function_name)


State 241

  161 function_name: "operator" ">>" .

    $default  reduce using rule 161 (function_name)


State 242

  158 function_name: "operator" "++" .

    $default  reduce using rule 158 (function_name)


State 243

  159 function_name: "operator" "--" .

    $default  reduce using rule 159 (function_name)


State 244

  151 function_name: "operator" "<=" .

    $default  reduce using rule 151 (function_name)


State 245

  162 function_name: "operator" "<<=" .

    $default  reduce using rule 162 (function_name)


State 246

  163 function_name: "operator" ">>=" .

    $default  reduce using rule 163 (function_name)


State 247

  152 function_name: "operator" ">=" .

    $default  reduce using rule 152 (function_name)


State 248

  149 function_name: "operator" "==" .

    $default  reduce using rule 149 (function_name)


State 249

  150 function_name: "operator" "!=" .

    $default  reduce using rule 150 (function_name)


State 250

  177 function_name: "operator" "??" .

    $default  reduce using rule 177 (function_name)


State 251

  171 function_name: "operator" "?." .
  174              | "operator" "?." . "name"

    "name"  shift, and go to state 357

    $default  reduce using rule 171 (function_name)


State 252

  169 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 358


State 253

  175 function_name: "operator" ":=" .

    $default  reduce using rule 175 (function_name)


State 254

  164 function_name: "operator" "<<<" .

    $default  reduce using rule 164 (function_name)


State 255

  165 function_name: "operator" ">>>" .

    $default  reduce using rule 165 (function_name)


State 256

  166 function_name: "operator" "<<<=" .

    $default  reduce using rule 166 (function_name)


State 257

  167 function_name: "operator" ">>>=" .

    $default  reduce using rule 167 (function_name)


State 258

  138 function_name: "operator" "&&" .

    $default  reduce using rule 138 (function_name)


State 259

  139 function_name: "operator" "||" .

    $default  reduce using rule 139 (function_name)


State 260

  140 function_name: "operator" "^^" .

    $default  reduce using rule 140 (function_name)


State 261

  135 function_name: "operator" "&&=" .

    $default  reduce using rule 135 (function_name)


State 262

  136 function_name: "operator" "||=" .

    $default  reduce using rule 136 (function_name)


State 263

  137 function_name: "operator" "^^=" .

    $default  reduce using rule 137 (function_name)


State 264

  148 function_name: "operator" ".." .

    $default  reduce using rule 148 (function_name)


State 265

  182 function_name: "operator" '?' . "as"
  183              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 359


State 266

  154 function_name: "operator" '|' .

    $default  reduce using rule 154 (function_name)


State 267

  155 function_name: "operator" '^' .

    $default  reduce using rule 155 (function_name)


State 268

  153 function_name: "operator" '&' .

    $default  reduce using rule 153 (function_name)


State 269

  146 function_name: "operator" '<' .

    $default  reduce using rule 146 (function_name)


State 270

  147 function_name: "operator" '>' .

    $default  reduce using rule 147 (function_name)


State 271

  142 function_name: "operator" '-' .

    $default  reduce using rule 142 (function_name)


State 272

  141 function_name: "operator" '+' .

    $default  reduce using rule 141 (function_name)


State 273

  143 function_name: "operator" '*' .

    $default  reduce using rule 143 (function_name)


State 274

  144 function_name: "operator" '/' .

    $default  reduce using rule 144 (function_name)


State 275

  145 function_name: "operator" '%' .

    $default  reduce using rule 145 (function_name)


State 276

  126 function_name: "operator" '~' .

    $default  reduce using rule 126 (function_name)


State 277

  125 function_name: "operator" '!' .

    $default  reduce using rule 125 (function_name)


State 278

  170 function_name: "operator" '.' .
  172              | "operator" '.' . "name"
  173              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 360

    $default  reduce using rule 170 (function_name)


State 279

  168 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 361


State 280

  156 function_name: "++" "operator" .

    $default  reduce using rule 156 (function_name)


State 281

  157 function_name: "--" "operator" .

    $default  reduce using rule 157 (function_name)


State 282

  120 optional_function_argument_list: '(' . ')'
  121                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 362
    "[["  shift, and go to state 218
    ')'   shift, and go to state 363

    $default  reduce using rule 480 (optional_field_annotation)

    optional_field_annotation      go to state 364
    function_argument_declaration  go to state 365
    function_argument_list         go to state 366


State 283

  213 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 368


State 284

  216 expression_block: '{' . expressions '}'
  217                 | '{' . expressions '}' "finally" '{' expressions '}'

    $default  reduce using rule 239 (expressions)

    expressions  go to state 369


State 285

  215 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block .

    $default  reduce using rule 215 (function_declaration)


State 286

  624 enum_basic_type_declaration: "int" .

    $default  reduce using rule 624 (enum_basic_type_declaration)


State 287

  627 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 627 (enum_basic_type_declaration)


State 288

  625 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 625 (enum_basic_type_declaration)


State 289

  628 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 628 (enum_basic_type_declaration)


State 290

  626 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 626 (enum_basic_type_declaration)


State 291

  629 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 629 (enum_basic_type_declaration)


State 292

  576 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . '{' $@42 enum_list $@43 '}'

    '{'  shift, and go to state 370


State 293

  573 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@40 . enum_list $@41 '}'

    $default  reduce using rule 553 (enum_list)

    enum_list  go to state 371


State 294

  581 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 372

    $default  reduce using rule 577 (optional_structure_parent)

    optional_structure_parent  go to state 373


State 295

  591 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@44 structure_name $@45 . optional_struct_variable_declaration_list

    '{'  shift, and go to state 374

    $default  reduce using rule 587 (optional_struct_variable_declaration_list)

    optional_struct_variable_declaration_list  go to state 375


State 296

  550 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}' .

    $default  reduce using rule 550 (global_let)


State 297

  544 global_variable_declaration_list: global_variable_declaration_list $@36 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 218

    $default  reduce using rule 480 (optional_field_annotation)

    optional_field_annotation  go to state 376


State 298

  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  481 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 80
    ']'  shift, and go to state 377


State 299

  533 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 378


State 300

  532 let_variable_name_with_pos_list: "name" .
  534                                | "name" . "aka" "name"

    "aka"  shift, and go to state 379

    $default  reduce using rule 532 (let_variable_name_with_pos_list)


State 301

  535 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  536                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  537 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options ';'
  538                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  539                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  540                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr ';'
  541                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 380
    ':'  shift, and go to state 381
    '&'  shift, and go to state 382

    $default  reduce using rule 530 (optional_ref)

    optional_ref  go to state 383


State 302

  552 global_let: kwd_let optional_shared optional_public_or_private_variable $@37 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 552 (global_let)


State 303

   89 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 89 (annotation_argument_value_list)


State 304

  652 type_declaration_no_options: "type" . '<' $@48 type_declaration '>' $@49

    '<'  shift, and go to state 384


State 305

  673 type_declaration_no_options: "array" . '<' $@52 type_declaration '>' $@53

    '<'  shift, and go to state 385


State 306

  676 type_declaration_no_options: "table" . '<' $@54 table_type_pair '>' $@55

    '<'  shift, and go to state 386


State 307

  653 type_declaration_no_options: "typedecl" . '(' expr ')'

    '('  shift, and go to state 387


State 308

  679 type_declaration_no_options: "iterator" . '<' $@56 type_declaration '>' $@57

    '<'  shift, and go to state 388


State 309

  669 type_declaration_no_options: "smart_ptr" . '<' $@50 type_declaration '>' $@51

    '<'  shift, and go to state 389


State 310

  597 basic_type_declaration: "bool" .

    $default  reduce using rule 597 (basic_type_declaration)


State 311

  617 basic_type_declaration: "void" .

    $default  reduce using rule 617 (basic_type_declaration)


State 312

  598 basic_type_declaration: "string" .

    $default  reduce using rule 598 (basic_type_declaration)


State 313

  631 auto_type_declaration: "auto" .
  632                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 390

    '('       [reduce using rule 631 (auto_type_declaration)]
    $default  reduce using rule 631 (auto_type_declaration)


State 314

  599 basic_type_declaration: "int" .

    $default  reduce using rule 599 (basic_type_declaration)


State 315

  603 basic_type_declaration: "int2" .

    $default  reduce using rule 603 (basic_type_declaration)


State 316

  604 basic_type_declaration: "int3" .

    $default  reduce using rule 604 (basic_type_declaration)


State 317

  605 basic_type_declaration: "int4" .

    $default  reduce using rule 605 (basic_type_declaration)


State 318

  606 basic_type_declaration: "uint" .

    $default  reduce using rule 606 (basic_type_declaration)


State 319

  623 basic_type_declaration: "bitfield" .
  641 bitfield_type_declaration: "bitfield" . '<' $@46 bitfield_bits '>' $@47

    '<'  shift, and go to state 391

    $default  reduce using rule 623 (basic_type_declaration)


State 320

  610 basic_type_declaration: "uint2" .

    $default  reduce using rule 610 (basic_type_declaration)


State 321

  611 basic_type_declaration: "uint3" .

    $default  reduce using rule 611 (basic_type_declaration)


State 322

  612 basic_type_declaration: "uint4" .

    $default  reduce using rule 612 (basic_type_declaration)


State 323

  613 basic_type_declaration: "float" .

    $default  reduce using rule 613 (basic_type_declaration)


State 324

  614 basic_type_declaration: "float2" .

    $default  reduce using rule 614 (basic_type_declaration)


State 325

  615 basic_type_declaration: "float3" .

    $default  reduce using rule 615 (basic_type_declaration)


State 326

  616 basic_type_declaration: "float4" .

    $default  reduce using rule 616 (basic_type_declaration)


State 327

  618 basic_type_declaration: "range" .

    $default  reduce using rule 618 (basic_type_declaration)


State 328

  619 basic_type_declaration: "urange" .

    $default  reduce using rule 619 (basic_type_declaration)


State 329

  620 basic_type_declaration: "range64" .

    $default  reduce using rule 620 (basic_type_declaration)


State 330

  621 basic_type_declaration: "urange64" .

    $default  reduce using rule 621 (basic_type_declaration)


State 331

  680 type_declaration_no_options: "block" .
  683                            | "block" . '<' $@58 type_declaration '>' $@59
  686                            | "block" . '<' $@60 optional_function_argument_list optional_function_type '>' $@61

    '<'  shift, and go to state 392

    $default  reduce using rule 680 (type_declaration_no_options)


State 332

  602 basic_type_declaration: "int64" .

    $default  reduce using rule 602 (basic_type_declaration)


State 333

  609 basic_type_declaration: "uint64" .

    $default  reduce using rule 609 (basic_type_declaration)


State 334

  622 basic_type_declaration: "double" .

    $default  reduce using rule 622 (basic_type_declaration)


State 335

  687 type_declaration_no_options: "function" .
  690                            | "function" . '<' $@62 type_declaration '>' $@63
  693                            | "function" . '<' $@64 optional_function_argument_list optional_function_type '>' $@65

    '<'  shift, and go to state 393

    $default  reduce using rule 687 (type_declaration_no_options)


State 336

  694 type_declaration_no_options: "lambda" .
  697                            | "lambda" . '<' $@66 type_declaration '>' $@67
  700                            | "lambda" . '<' $@68 optional_function_argument_list optional_function_type '>' $@69

    '<'  shift, and go to state 394

    $default  reduce using rule 694 (type_declaration_no_options)


State 337

  600 basic_type_declaration: "int8" .

    $default  reduce using rule 600 (basic_type_declaration)


State 338

  607 basic_type_declaration: "uint8" .

    $default  reduce using rule 607 (basic_type_declaration)


State 339

  601 basic_type_declaration: "int16" .

    $default  reduce using rule 601 (basic_type_declaration)


State 340

  608 basic_type_declaration: "uint16" .

    $default  reduce using rule 608 (basic_type_declaration)


State 341

  703 type_declaration_no_options: "tuple" . '<' $@70 tuple_type_list '>' $@71

    '<'  shift, and go to state 395


State 342

  706 type_declaration_no_options: "variant" . '<' $@72 variant_type_list '>' $@73

    '<'  shift, and go to state 396


State 343

  633 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 397


State 344

  654 type_declaration_no_options: '$' . name_in_namespace '(' optional_expr_list ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 398


State 345

  630 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 630 (structure_type_declaration)


State 346

  644 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 644 (type_declaration_no_options)


State 347

  647 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 647 (type_declaration_no_options)


State 348

  645 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 645 (type_declaration_no_options)


State 349

  646 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 646 (type_declaration_no_options)


State 350

  648 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  649                            | type_declaration_no_options . '[' ']'
  655                            | type_declaration_no_options . '-' '[' ']'
  656                            | type_declaration_no_options . "explicit"
  657                            | type_declaration_no_options . "const"
  658                            | type_declaration_no_options . '-' "const"
  659                            | type_declaration_no_options . '&'
  660                            | type_declaration_no_options . '-' '&'
  661                            | type_declaration_no_options . '#'
  662                            | type_declaration_no_options . "implicit"
  663                            | type_declaration_no_options . '-' '#'
  664                            | type_declaration_no_options . "==" "const"
  665                            | type_declaration_no_options . "==" '&'
  666                            | type_declaration_no_options . '?'
  670                            | type_declaration_no_options . "??"
  707 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    $default  reduce using rule 707 (type_declaration)


State 351

  561 single_alias: optional_public_or_private_alias "name" $@38 '=' type_declaration .
  708 type_declaration: type_declaration . '|' type_declaration_no_options
  709                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409

    $default  reduce using rule 561 (single_alias)


State 352

  724 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@82 "name" $@83 '{' $@84 . bitfield_alias_bits $@85 '}'

    $default  reduce using rule 636 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 410


State 353

  714 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@74 "name" $@75 '{' $@76 . tuple_alias_type_list $@77 '}'

    $default  reduce using rule 510 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 411


State 354

  719 variant_alias_declaration: "variant" optional_public_or_private_alias $@78 "name" $@79 '{' $@80 . variant_alias_type_list $@81 '}'

    $default  reduce using rule 516 (variant_alias_type_list)

    variant_alias_type_list  go to state 412


State 355

  180 function_name: "operator" "is" "name" .

    $default  reduce using rule 180 (function_name)


State 356

  181 function_name: "operator" "as" "name" .

    $default  reduce using rule 181 (function_name)


State 357

  174 function_name: "operator" "?." "name" .

    $default  reduce using rule 174 (function_name)


State 358

  169 function_name: "operator" "?[" ']' .

    $default  reduce using rule 169 (function_name)


State 359

  182 function_name: "operator" '?' "as" .
  183              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 413

    $default  reduce using rule 182 (function_name)


State 360

  172 function_name: "operator" '.' "name" .
  173              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 414

    $default  reduce using rule 172 (function_name)


State 361

  168 function_name: "operator" '[' ']' .

    $default  reduce using rule 168 (function_name)


State 362

  503 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 415


State 363

  120 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 120 (optional_function_argument_list)


State 364

  501 function_argument_declaration: optional_field_annotation . variable_declaration
  502                              | optional_field_annotation . "var" variable_declaration

    "var"   shift, and go to state 416
    "$i"    shift, and go to state 417
    "name"  shift, and go to state 418

    variable_declaration         go to state 419
    variable_name_with_pos_list  go to state 420


State 365

  504 function_argument_list: function_argument_declaration .

    $default  reduce using rule 504 (function_argument_list)


State 366

  121 optional_function_argument_list: '(' function_argument_list . ')'
  505 function_argument_list: function_argument_list . ';' function_argument_declaration

    ')'  shift, and go to state 421
    ';'  shift, and go to state 422


State 367

  123 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 423


State 368

  213 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 213 (function_declaration_header)


State 369

  216 expression_block: '{' expressions . '}'
  217                 | '{' expressions . '}' "finally" '{' expressions '}'
  240 expressions: expressions . expression_any
  241            | expressions . error

    error                             shift, and go to state 424
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 425
    "if"                              shift, and go to state 426
    "static_if"                       shift, and go to state 427
    "for"                             shift, and go to state 428
    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "return"                          shift, and go to state 435
    "null"                            shift, and go to state 436
    "break"                           shift, and go to state 437
    "try"                             shift, and go to state 438
    "table"                           shift, and go to state 439
    "delete"                          shift, and go to state 440
    "deref"                           shift, and go to state 441
    "with"                            shift, and go to state 442
    "assume"                          shift, and go to state 443
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 446
    "continue"                        shift, and go to state 447
    "pass"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 449
    "label"                           shift, and go to state 450
    "goto"                            shift, and go to state 451
    "unsafe"                          shift, and go to state 452
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "yield"                           shift, and go to state 457
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "$ <|"                            shift, and go to state 460
    "@ <|"                            shift, and go to state 461
    "@@ <|"                           shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 480
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    ';'                               shift, and go to state 491
    '{'                               shift, and go to state 284
    '}'                               shift, and go to state 492

    string_builder             go to state 493
    expr_reader                go to state 494
    expression_label           go to state 495
    expression_goto            go to state 496
    if_or_static_if            go to state 497
    expression_if_one_liner    go to state 498
    expression_if_then_else    go to state 499
    expression_for_loop        go to state 500
    expression_unsafe          go to state 501
    expression_while_loop      go to state 502
    expression_with            go to state 503
    expression_with_alias      go to state 504
    expression_block           go to state 505
    expression_any             go to state 506
    expr_keyword               go to state 507
    expression_keyword         go to state 508
    expr_pipe                  go to state 509
    name_in_namespace          go to state 510
    expression_delete          go to state 511
    expr_new                   go to state 512
    expression_break           go to state 513
    expression_continue        go to state 514
    expression_return_no_pipe  go to state 515
    expression_return          go to state 516
    expression_yield_no_pipe   go to state 517
    expression_yield           go to state 518
    expression_try_catch       go to state 519
    kwd_let                    go to state 520
    expression_let             go to state 521
    expr_cast                  go to state 522
    expr_type_decl             go to state 523
    expr_type_info             go to state 524
    block_or_lambda            go to state 525
    expr_block                 go to state 526
    expr_numeric_const         go to state 527
    expr_assign                go to state 528
    expr_assign_pipe           go to state 529
    expr_named_call            go to state 530
    expr_method_call           go to state 531
    func_addr_expr             go to state 532
    expr_field                 go to state 533
    expr                       go to state 534
    expr_mtag                  go to state 535
    basic_type_declaration     go to state 536
    make_decl                  go to state 537
    make_struct_decl           go to state 538
    make_tuple_call            go to state 539
    make_dim_decl              go to state 540
    make_table_decl            go to state 541
    array_comprehension        go to state 542


State 370

  576 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' . $@42 enum_list $@43 '}'

    $default  reduce using rule 574 ($@42)

    $@42  go to state 543


State 371

  554 enum_list: enum_list . ';'
  555          | enum_list . "name" ';'
  556          | enum_list . "name" '=' expr ';'
  573 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@40 enum_list . $@41 '}'

    "name"  shift, and go to state 544
    ';'     shift, and go to state 545

    $default  reduce using rule 572 ($@41)

    $@41  go to state 546


State 372

  578 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 547


State 373

  581 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 581 (structure_name)


State 374

  588 optional_struct_variable_declaration_list: '{' . struct_variable_declaration_list '}'

    $default  reduce using rule 493 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 548


State 375

  591 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@44 structure_name $@45 optional_struct_variable_declaration_list .

    $default  reduce using rule 591 (structure_declaration)


State 376

  544 global_variable_declaration_list: global_variable_declaration_list $@36 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 299
    "name"  shift, and go to state 300

    let_variable_name_with_pos_list  go to state 301
    let_variable_declaration         go to state 549


State 377

  481 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 550


State 378

  533 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 553
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 379

  534 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 554


State 380

  535 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  536                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 555


State 381

  537 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options ';'
  538                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr ';'
  539                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 556


State 382

  531 optional_ref: '&' .

    $default  reduce using rule 531 (optional_ref)


State 383

  540 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr ';'
  541                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 557
    ":="  shift, and go to state 558
    '='   shift, and go to state 559

    copy_or_move_or_clone  go to state 560


State 384

  652 type_declaration_no_options: "type" '<' . $@48 type_declaration '>' $@49

    $default  reduce using rule 650 ($@48)

    $@48  go to state 561


State 385

  673 type_declaration_no_options: "array" '<' . $@52 type_declaration '>' $@53

    $default  reduce using rule 671 ($@52)

    $@52  go to state 562


State 386

  676 type_declaration_no_options: "table" '<' . $@54 table_type_pair '>' $@55

    $default  reduce using rule 674 ($@54)

    $@54  go to state 563


State 387

  653 type_declaration_no_options: "typedecl" '(' . expr ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 564
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 388

  679 type_declaration_no_options: "iterator" '<' . $@56 type_declaration '>' $@57

    $default  reduce using rule 677 ($@56)

    $@56  go to state 565


State 389

  669 type_declaration_no_options: "smart_ptr" '<' . $@50 type_declaration '>' $@51

    $default  reduce using rule 667 ($@50)

    $@50  go to state 566


State 390

  632 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 567


State 391

  641 bitfield_type_declaration: "bitfield" '<' . $@46 bitfield_bits '>' $@47

    $default  reduce using rule 639 ($@46)

    $@46  go to state 568


State 392

  683 type_declaration_no_options: "block" '<' . $@58 type_declaration '>' $@59
  686                            | "block" '<' . $@60 optional_function_argument_list optional_function_type '>' $@61

    ':'       reduce using rule 684 ($@60)
    '>'       reduce using rule 684 ($@60)
    '('       reduce using rule 684 ($@60)
    $default  reduce using rule 681 ($@58)

    $@58  go to state 569
    $@60  go to state 570


State 393

  690 type_declaration_no_options: "function" '<' . $@62 type_declaration '>' $@63
  693                            | "function" '<' . $@64 optional_function_argument_list optional_function_type '>' $@65

    ':'       reduce using rule 691 ($@64)
    '>'       reduce using rule 691 ($@64)
    '('       reduce using rule 691 ($@64)
    $default  reduce using rule 688 ($@62)

    $@62  go to state 571
    $@64  go to state 572


State 394

  697 type_declaration_no_options: "lambda" '<' . $@66 type_declaration '>' $@67
  700                            | "lambda" '<' . $@68 optional_function_argument_list optional_function_type '>' $@69

    ':'       reduce using rule 698 ($@68)
    '>'       reduce using rule 698 ($@68)
    '('       reduce using rule 698 ($@68)
    $default  reduce using rule 695 ($@66)

    $@66  go to state 573
    $@68  go to state 574


State 395

  703 type_declaration_no_options: "tuple" '<' . $@70 tuple_type_list '>' $@71

    $default  reduce using rule 701 ($@70)

    $@70  go to state 575


State 396

  706 type_declaration_no_options: "variant" '<' . $@72 variant_type_list '>' $@73

    $default  reduce using rule 704 ($@72)

    $@72  go to state 576


State 397

  633 auto_type_declaration: "$t" '(' . expr ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 577
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 398

  654 type_declaration_no_options: '$' name_in_namespace . '(' optional_expr_list ')'

    '('  shift, and go to state 578


State 399

  657 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 657 (type_declaration_no_options)


State 400

  662 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 662 (type_declaration_no_options)


State 401

  656 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 656 (type_declaration_no_options)


State 402

  664 type_declaration_no_options: type_declaration_no_options "==" . "const"
  665                            | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 579
    '&'      shift, and go to state 580


State 403

  670 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 670 (type_declaration_no_options)


State 404

  666 type_declaration_no_options: type_declaration_no_options '?' .

    $default  reduce using rule 666 (type_declaration_no_options)


State 405

  659 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 659 (type_declaration_no_options)


State 406

  655 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  658                            | type_declaration_no_options '-' . "const"
  660                            | type_declaration_no_options '-' . '&'
  663                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 581
    '&'      shift, and go to state 582
    '['      shift, and go to state 583
    '#'      shift, and go to state 584


State 407

  648 type_declaration_no_options: type_declaration_no_options '[' . expr ']'
  649                            | type_declaration_no_options '[' . ']'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    ']'                               shift, and go to state 585
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 586
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 408

  661 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 661 (type_declaration_no_options)


State 409

  708 type_declaration: type_declaration '|' . type_declaration_no_options
  709                 | type_declaration '|' . '#'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344
    '#'          shift, and go to state 587

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 588


State 410

  637 bitfield_alias_bits: bitfield_alias_bits . ';'
  638                    | bitfield_alias_bits . "name" ';'
  724 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@82 "name" $@83 '{' $@84 bitfield_alias_bits . $@85 '}'

    "name"  shift, and go to state 589
    ';'     shift, and go to state 590

    $default  reduce using rule 723 ($@85)

    $@85  go to state 591


State 411

  511 tuple_alias_type_list: tuple_alias_type_list . ';'
  512                      | tuple_alias_type_list . tuple_type ';'
  714 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@74 "name" $@75 '{' $@76 tuple_alias_type_list . $@77 '}'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 592
    '$'          shift, and go to state 344
    ';'          shift, and go to state 593

    $default  reduce using rule 713 ($@77)

    name_in_namespace            go to state 345
    tuple_type                   go to state 594
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 595
    $@77                         go to state 596


State 412

  517 variant_alias_type_list: variant_alias_type_list . ';'
  518                        | variant_alias_type_list . variant_type ';'
  719 variant_alias_declaration: "variant" optional_public_or_private_alias $@78 "name" $@79 '{' $@80 variant_alias_type_list . $@81 '}'

    "name"  shift, and go to state 597
    ';'     shift, and go to state 598

    $default  reduce using rule 718 ($@81)

    variant_type  go to state 599
    $@81          go to state 600


State 413

  183 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 183 (function_name)


State 414

  173 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 173 (function_name)


State 415

  503 function_argument_declaration: "$a" '(' . expr ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 601
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 416

  502 function_argument_declaration: optional_field_annotation "var" . variable_declaration

    "$i"    shift, and go to state 417
    "name"  shift, and go to state 418

    variable_declaration         go to state 602
    variable_name_with_pos_list  go to state 420


State 417

  593 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 603


State 418

  592 variable_name_with_pos_list: "name" .
  594                            | "name" . "aka" "name"

    "aka"  shift, and go to state 604

    $default  reduce using rule 592 (variable_name_with_pos_list)


State 419

  501 function_argument_declaration: optional_field_annotation variable_declaration .

    $default  reduce using rule 501 (function_argument_declaration)


State 420

  521 variable_declaration: variable_name_with_pos_list .
  522                     | variable_name_with_pos_list . '&'
  523                     | variable_name_with_pos_list . ':' type_declaration
  524                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  525                     | variable_name_with_pos_list . copy_or_move expr
  526                     | variable_name_with_pos_list . copy_or_move expr_pipe
  595 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  596                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 605
    ','   shift, and go to state 606
    '='   shift, and go to state 607
    ':'   shift, and go to state 608
    '&'   shift, and go to state 609

    $default  reduce using rule 521 (variable_declaration)

    copy_or_move  go to state 610


State 421

  121 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 121 (optional_function_argument_list)


State 422

  505 function_argument_list: function_argument_list ';' . function_argument_declaration

    "$a"  shift, and go to state 362
    "[["  shift, and go to state 218

    $default  reduce using rule 480 (optional_field_annotation)

    optional_field_annotation      go to state 364
    function_argument_declaration  go to state 611


State 423

  123 optional_function_type: ':' type_declaration .
  708 type_declaration: type_declaration . '|' type_declaration_no_options
  709                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409

    $default  reduce using rule 123 (optional_function_type)


State 424

  241 expressions: expressions error .

    $default  reduce using rule 241 (expressions)


State 425

   78 expression_while_loop: "while" . expr expression_block

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 612
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 426

   62 if_or_static_if: "if" .

    $default  reduce using rule 62 (if_or_static_if)


State 427

   63 if_or_static_if: "static_if" .

    $default  reduce using rule 63 (if_or_static_if)


State 428

   76 expression_for_loop: "for" . $@4 variable_name_with_pos_list "in" expr_list expression_block

    $default  reduce using rule 75 ($@4)

    $@4  go to state 613


State 429

  383 expr: "true" .

    $default  reduce using rule 383 (expr)


State 430

  384 expr: "false" .

    $default  reduce using rule 384 (expr)


State 431

  264 expr_new: "new" . new_type_declaration
  265         | "new" . new_type_declaration '(' ')'
  266         | "new" . new_type_declaration '(' expr_list ')'
  267         | "new" . make_decl

    "array"        shift, and go to state 434
    "table"        shift, and go to state 439
    "fixed_array"  shift, and go to state 453
    "tuple"        shift, and go to state 455
    "::"           shift, and go to state 58
    "[["           shift, and go to state 470
    "[{"           shift, and go to state 471
    "{{"           shift, and go to state 472
    "name"         shift, and go to state 59
    '<'            shift, and go to state 614

    name_in_namespace           go to state 345
    new_type_declaration        go to state 615
    structure_type_declaration  go to state 616
    make_decl                   go to state 617
    make_struct_decl            go to state 538
    make_tuple_call             go to state 539
    make_dim_decl               go to state 540
    make_table_decl             go to state 541
    array_comprehension         go to state 542


State 432

  304 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  305               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  306               | "typeinfo" . '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

    '('  shift, and go to state 618


State 433

  303 expr_type_decl: "type" . '<' $@19 type_declaration '>' $@20

    '<'  shift, and go to state 619


State 434

  770 make_dim_decl: "array" . '(' expr_list ')'
  773              | "array" . '<' $@86 type_declaration_no_options '>' $@87 '(' expr_list ')'

    '<'  shift, and go to state 620
    '('  shift, and go to state 621


State 435

  270 expression_return_no_pipe: "return" .
  271                          | "return" . expr_list
  272                          | "return" . "<-" expr_list
  274 expression_return: "return" . expr_pipe
  275                  | "return" . "<-" expr_pipe

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "<-"                              shift, and go to state 622
    "$ <|"                            shift, and go to state 460
    "@ <|"                            shift, and go to state 461
    "@@ <|"                           shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    $default  reduce using rule 270 (expression_return_no_pipe)

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    expr_pipe               go to state 623
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    expr_list               go to state 624
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_assign             go to state 625
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 626
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 436

  377 expr: "null" .

    $default  reduce using rule 377 (expr)


State 437

  268 expression_break: "break" .

    $default  reduce using rule 268 (expression_break)


State 438

  281 expression_try_catch: "try" . expression_block "recover" expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 627


State 439

  783 make_table_decl: "table" . '(' expr_map_tuple_list ')'
  784                | "table" . '<' type_declaration_no_options '>' '(' expr_map_tuple_list ')'
  785                | "table" . '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list ')'

    '<'  shift, and go to state 628
    '('  shift, and go to state 629


State 440

  258 expression_delete: "delete" . expr
  259                  | "delete" . "explicit" expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "explicit"                        shift, and go to state 630
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 631
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 441

  430 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 632


State 442

   79 expression_with: "with" . expr expression_block

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 633
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 443

   81 expression_with_alias: "assume" . "name" '=' $@5 expr

    "name"  shift, and go to state 634


State 444

  294 expr_cast: "cast" . '<' $@13 type_declaration_no_options '>' $@14 expr

    '<'  shift, and go to state 635


State 445

  297 expr_cast: "upcast" . '<' $@15 type_declaration_no_options '>' $@16 expr

    '<'  shift, and go to state 636


State 446

  431 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 637


State 447

  269 expression_continue: "continue" .

    $default  reduce using rule 269 (expression_continue)


State 448

  238 expression_any: "pass" . ';'

    ';'  shift, and go to state 638


State 449

  300 expr_cast: "reinterpret" . '<' $@17 type_declaration_no_options '>' $@18 expr

    '<'  shift, and go to state 639


State 450

   54 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 640


State 451

   55 expression_goto: "goto" . "label" "integer constant"
   56                | "goto" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "label"                           shift, and go to state 641
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 642
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 452

   77 expression_unsafe: "unsafe" . expression_block
  462 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 643
    '{'  shift, and go to state 284

    expression_block  go to state 644


State 453

  774 make_dim_decl: "fixed_array" . '(' expr_list ')'
  777              | "fixed_array" . '<' $@88 type_declaration_no_options '>' $@89 '(' expr_list ')'

    '<'  shift, and go to state 645
    '('  shift, and go to state 646


State 454

  623 basic_type_declaration: "bitfield" .

    $default  reduce using rule 623 (basic_type_declaration)


State 455

  765 make_tuple_call: "tuple" . '(' expr_list ')'

    '('  shift, and go to state 647


State 456

  432 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  433     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 648


State 457

  276 expression_yield_no_pipe: "yield" . expr
  277                         | "yield" . "<-" expr
  279 expression_yield: "yield" . expr_pipe
  280                 | "yield" . "<-" expr_pipe

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "<-"                              shift, and go to state 649
    "$ <|"                            shift, and go to state 460
    "@ <|"                            shift, and go to state 461
    "@@ <|"                           shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    expr_pipe               go to state 650
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_assign             go to state 625
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 651
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 458

  413 expr: "++" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 652
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 459

  414 expr: "--" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 653
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 460

  254 expr_pipe: "$ <|" . expr_block

    '$'  shift, and go to state 489
    '@'  shift, and go to state 654
    '{'  shift, and go to state 284

    expression_block  go to state 505
    block_or_lambda   go to state 525
    expr_block        go to state 655


State 461

  252 expr_pipe: "@ <|" . expr_block

    '$'  shift, and go to state 489
    '@'  shift, and go to state 654
    '{'  shift, and go to state 284

    expression_block  go to state 505
    block_or_lambda   go to state 525
    expr_block        go to state 656


State 462

  253 expr_pipe: "@@ <|" . expr_block

    '$'  shift, and go to state 489
    '@'  shift, and go to state 654
    '{'  shift, and go to state 284

    expression_block  go to state 505
    block_or_lambda   go to state 525
    expr_block        go to state 657


State 463

  464 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 658


State 464

  465 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 659


State 465

  466 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 660


State 466

  467 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 661


State 467

  468 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 662


State 468

  470 expr_mtag: "$c" . '(' expr ')' '(' ')'
  471          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 663


State 469

  469 expr_mtag: "..." .

    $default  reduce using rule 469 (expr_mtag)


State 470

  754 make_struct_decl: "[[" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  755                 | "[[" . type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  756                 | "[[" . type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  757                 | "[[" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  768 make_dim_decl: "[[" . type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  788 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 664
    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 665


State 471

  758 make_struct_decl: "[{" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  759                 | "[{" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  769 make_dim_decl: "[{" . type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  789 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "for"        shift, and go to state 666
    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 667


State 472

  782 make_table_decl: "{{" . make_table optional_trailing_semicolon_cur_cur

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 668
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_map_tuple          go to state 669
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table              go to state 670
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 473

  325 expr_numeric_const: "integer constant" .

    $default  reduce using rule 325 (expr_numeric_const)


State 474

  327 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 327 (expr_numeric_const)


State 475

  326 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 326 (expr_numeric_const)


State 476

  328 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 328 (expr_numeric_const)


State 477

  329 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 329 (expr_numeric_const)


State 478

  330 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 330 (expr_numeric_const)


State 479

  331 expr_numeric_const: "double constant" .

    $default  reduce using rule 331 (expr_numeric_const)


State 480

  242 expr_keyword: "keyword" . expr expression_block
  247 expression_keyword: "keyword" . '<' $@7 type_declaration_no_options '>' $@8 expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '<'                               shift, and go to state 671
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 672
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 481

  250 expression_keyword: "type function" . '<' $@9 type_declaration_no_options '>' $@10 '(' optional_expr_list ')'

    '<'  shift, and go to state 673


State 482

   31 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 28 (string_builder_body)

    string_builder_body  go to state 674


State 483

  390 expr: '-' . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 675
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 484

  389 expr: '+' . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 676
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 485

  429 expr: '*' . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 677
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 486

  388 expr: '~' . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 678
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 487

  387 expr: '!' . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 679
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 488

  417 expr: '(' . expr ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 680
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 489

  312 block_or_lambda: '$' .

    $default  reduce using rule 312 (block_or_lambda)


State 490

  313 block_or_lambda: '@' .
  314                | '@' . '@'
  363 func_addr_expr: '@' . '@' func_addr_name
  366               | '@' . '@' '<' $@21 type_declaration_no_options '>' $@22 func_addr_name
  369               | '@' . '@' '<' $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name
  479 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 681

    $default  reduce using rule 313 (block_or_lambda)


State 491

  218 expression_any: ';' .

    $default  reduce using rule 218 (expression_any)


State 492

  216 expression_block: '{' expressions '}' .
  217                 | '{' expressions '}' . "finally" '{' expressions '}'

    "finally"  shift, and go to state 682

    $default  reduce using rule 216 (expression_block)


State 493

  381 expr: string_builder .

    $default  reduce using rule 381 (expr)


State 494

  380 expr: expr_reader .

    $default  reduce using rule 380 (expr)


State 495

  236 expression_any: expression_label . ';'

    ';'  shift, and go to state 683


State 496

  237 expression_any: expression_goto . ';'

    ';'  shift, and go to state 684


State 497

   72 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 685
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 498

   74 expression_if_then_else: expression_if_one_liner . "if" $@3 expr expression_else_one_liner ';'

    "if"  shift, and go to state 686


State 499

  234 expression_any: expression_if_then_else .

    $default  reduce using rule 234 (expression_any)


State 500

  229 expression_any: expression_for_loop .

    $default  reduce using rule 229 (expression_any)


State 501

  226 expression_any: expression_unsafe .

    $default  reduce using rule 226 (expression_any)


State 502

  225 expression_any: expression_while_loop .

    $default  reduce using rule 225 (expression_any)


State 503

  227 expression_any: expression_with .

    $default  reduce using rule 227 (expression_any)


State 504

  228 expression_any: expression_with_alias .

    $default  reduce using rule 228 (expression_any)


State 505

  323 expr_block: expression_block .

    $default  reduce using rule 323 (expr_block)


State 506

  240 expressions: expressions expression_any .

    $default  reduce using rule 240 (expressions)


State 507

  220 expression_any: expr_keyword .

    $default  reduce using rule 220 (expression_any)


State 508

  463 expr: expression_keyword .

    $default  reduce using rule 463 (expr)


State 509

  219 expression_any: expr_pipe .

    $default  reduce using rule 219 (expression_any)


State 510

  357 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  358                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  378 expr: name_in_namespace .
  425     | name_in_namespace . '(' ')'
  426     | name_in_namespace . '(' expr_list ')'
  461     | name_in_namespace . "name"

    "name"  shift, and go to state 687
    '('     shift, and go to state 688

    "name"    [reduce using rule 378 (expr)]
    '('       [reduce using rule 378 (expr)]
    $default  reduce using rule 378 (expr)


State 511

  223 expression_any: expression_delete . ';'

    ';'  shift, and go to state 689


State 512

  454 expr: expr_new .

    $default  reduce using rule 454 (expr)


State 513

   70 expression_if_one_liner: expression_break .
  230 expression_any: expression_break . ';'

    ';'  shift, and go to state 690

    $default  reduce using rule 70 (expression_if_one_liner)


State 514

   71 expression_if_one_liner: expression_continue .
  231 expression_any: expression_continue . ';'

    ';'  shift, and go to state 691

    $default  reduce using rule 71 (expression_if_one_liner)


State 515

   68 expression_if_one_liner: expression_return_no_pipe .
  273 expression_return: expression_return_no_pipe . ';'

    ';'  shift, and go to state 692

    $default  reduce using rule 68 (expression_if_one_liner)


State 516

  232 expression_any: expression_return .

    $default  reduce using rule 232 (expression_any)


State 517

   69 expression_if_one_liner: expression_yield_no_pipe .
  278 expression_yield: expression_yield_no_pipe . ';'

    ';'  shift, and go to state 693

    $default  reduce using rule 69 (expression_if_one_liner)


State 518

  233 expression_any: expression_yield .

    $default  reduce using rule 233 (expression_any)


State 519

  235 expression_any: expression_try_catch .

    $default  reduce using rule 235 (expression_any)


State 520

  290 expression_let: kwd_let . optional_in_scope let_variable_declaration
  291               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 694

    $default  reduce using rule 285 (optional_in_scope)

    optional_in_scope  go to state 695


State 521

  224 expression_any: expression_let .

    $default  reduce using rule 224 (expression_any)


State 522

  453 expr: expr_cast .

    $default  reduce using rule 453 (expr)


State 523

  452 expr: expr_type_decl .

    $default  reduce using rule 452 (expr)


State 524

  451 expr: expr_type_info .

    $default  reduce using rule 451 (expr)


State 525

  324 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 14

    $default  reduce using rule 117 (optional_annotation_list)

    optional_annotation_list  go to state 696


State 526

  457 expr: expr_block .

    $default  reduce using rule 457 (expr)


State 527

  379 expr: expr_numeric_const .

    $default  reduce using rule 379 (expr)


State 528

  222 expression_any: expr_assign . ';'
  251 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 697
    ';'    shift, and go to state 698


State 529

  221 expression_any: expr_assign_pipe .

    $default  reduce using rule 221 (expression_any)


State 530

  456 expr: expr_named_call .

    $default  reduce using rule 456 (expr)


State 531

  455 expr: expr_method_call .

    $default  reduce using rule 455 (expr)


State 532

  424 expr: func_addr_expr .

    $default  reduce using rule 424 (expr)


State 533

  385 expr: expr_field .

    $default  reduce using rule 385 (expr)


State 534

   67 expression_if_one_liner: expr .
  332 expr_assign: expr .
  333            | expr . '=' expr
  334            | expr . "<-" expr
  335            | expr . ":=" expr
  336            | expr . "&=" expr
  337            | expr . "|=" expr
  338            | expr . "^=" expr
  339            | expr . "&&=" expr
  340            | expr . "||=" expr
  341            | expr . "^^=" expr
  342            | expr . "+=" expr
  343            | expr . "-=" expr
  344            | expr . "*=" expr
  345            | expr . "/=" expr
  346            | expr . "%=" expr
  347            | expr . "<<=" expr
  348            | expr . ">>=" expr
  349            | expr . "<<<=" expr
  350            | expr . ">>>=" expr
  351 expr_assign_pipe: expr . '=' "@ <|" expr_block
  352                 | expr . '=' "@@ <|" expr_block
  353                 | expr . '=' "$ <|" expr_block
  354                 | expr . "<-" "@ <|" expr_block
  355                 | expr . "<-" "@@ <|" expr_block
  356                 | expr . "<-" "$ <|" expr_block
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 699
    "as"    shift, and go to state 700
    "+="    shift, and go to state 701
    "-="    shift, and go to state 702
    "/="    shift, and go to state 703
    "*="    shift, and go to state 704
    "%="    shift, and go to state 705
    "&="    shift, and go to state 706
    "|="    shift, and go to state 707
    "^="    shift, and go to state 708
    "<<"    shift, and go to state 709
    ">>"    shift, and go to state 710
    "++"    shift, and go to state 711
    "--"    shift, and go to state 712
    "<="    shift, and go to state 713
    "<<="   shift, and go to state 714
    ">>="   shift, and go to state 715
    ">="    shift, and go to state 716
    "=="    shift, and go to state 717
    "!="    shift, and go to state 718
    "->"    shift, and go to state 719
    "<-"    shift, and go to state 720
    "??"    shift, and go to state 721
    "?."    shift, and go to state 722
    "?["    shift, and go to state 723
    "<|"    shift, and go to state 724
    "|>"    shift, and go to state 725
    ":="    shift, and go to state 726
    "<<<"   shift, and go to state 727
    ">>>"   shift, and go to state 728
    "<<<="  shift, and go to state 729
    ">>>="  shift, and go to state 730
    "&&"    shift, and go to state 731
    "||"    shift, and go to state 732
    "^^"    shift, and go to state 733
    "&&="   shift, and go to state 734
    "||="   shift, and go to state 735
    "^^="   shift, and go to state 736
    ".."    shift, and go to state 737
    '='     shift, and go to state 738
    '?'     shift, and go to state 739
    '|'     shift, and go to state 740
    '^'     shift, and go to state 741
    '&'     shift, and go to state 742
    '<'     shift, and go to state 743
    '>'     shift, and go to state 744
    '-'     shift, and go to state 745
    '+'     shift, and go to state 746
    '*'     shift, and go to state 747
    '/'     shift, and go to state 748
    '%'     shift, and go to state 749
    '.'     shift, and go to state 750
    '['     shift, and go to state 751

    "if"      reduce using rule 67 (expression_if_one_liner)
    $default  reduce using rule 332 (expr_assign)


State 535

  386 expr: expr_mtag .

    $default  reduce using rule 386 (expr)


State 536

  427 expr: basic_type_declaration . '(' ')'
  428     | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 752


State 537

  382 expr: make_decl .

    $default  reduce using rule 382 (expr)


State 538

  725 make_decl: make_struct_decl .

    $default  reduce using rule 725 (make_decl)


State 539

  729 make_decl: make_tuple_call .

    $default  reduce using rule 729 (make_decl)


State 540

  726 make_decl: make_dim_decl .

    $default  reduce using rule 726 (make_decl)


State 541

  727 make_decl: make_table_decl .

    $default  reduce using rule 727 (make_decl)


State 542

  728 make_decl: array_comprehension .

    $default  reduce using rule 728 (make_decl)


State 543

  576 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@42 . enum_list $@43 '}'

    $default  reduce using rule 553 (enum_list)

    enum_list  go to state 753


State 544

  555 enum_list: enum_list "name" . ';'
  556          | enum_list "name" . '=' expr ';'

    '='  shift, and go to state 754
    ';'  shift, and go to state 755


State 545

  554 enum_list: enum_list ';' .

    $default  reduce using rule 554 (enum_list)


State 546

  573 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@40 enum_list $@41 . '}'

    '}'  shift, and go to state 756


State 547

  578 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 578 (optional_structure_parent)


State 548

  495 struct_variable_declaration_list: struct_variable_declaration_list . $@33 structure_variable_declaration ';'
  497                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header ';'
  499                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block
  500                                 | struct_variable_declaration_list . '[' annotation_list ']' ';'
  588 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list . '}'

    '['  shift, and go to state 757
    '}'  shift, and go to state 758

    "def"     reduce using rule 117 (optional_annotation_list)
    $default  reduce using rule 494 ($@33)

    optional_annotation_list  go to state 759
    $@33                      go to state 760


State 549

  544 global_variable_declaration_list: global_variable_declaration_list $@36 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 544 (global_variable_declaration_list)


State 550

  481 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 481 (optional_field_annotation)


State 551

  462 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 643


State 552

  247 expression_keyword: "keyword" . '<' $@7 type_declaration_no_options '>' $@8 expr

    '<'  shift, and go to state 671


State 553

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'
  533 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ')'    shift, and go to state 761


State 554

  534 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 534 (let_variable_name_with_pos_list)


State 555

  535 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  536                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 762

    $default  reduce using rule 535 (let_variable_name_with_pos_list)


State 556

  537 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . ';'
  538                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr ';'
  539                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  648 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  649                            | type_declaration_no_options . '[' ']'
  655                            | type_declaration_no_options . '-' '[' ']'
  656                            | type_declaration_no_options . "explicit"
  657                            | type_declaration_no_options . "const"
  658                            | type_declaration_no_options . '-' "const"
  659                            | type_declaration_no_options . '&'
  660                            | type_declaration_no_options . '-' '&'
  661                            | type_declaration_no_options . '#'
  662                            | type_declaration_no_options . "implicit"
  663                            | type_declaration_no_options . '-' '#'
  664                            | type_declaration_no_options . "==" "const"
  665                            | type_declaration_no_options . "==" '&'
  666                            | type_declaration_no_options . '?'
  670                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "<-"        shift, and go to state 557
    "??"        shift, and go to state 403
    ":="        shift, and go to state 558
    '='         shift, and go to state 559
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    ';'         shift, and go to state 763
    '#'         shift, and go to state 408

    copy_or_move_or_clone  go to state 764


State 557

  528 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 528 (copy_or_move_or_clone)


State 558

  529 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 529 (copy_or_move_or_clone)


State 559

  527 copy_or_move_or_clone: '=' .

    $default  reduce using rule 527 (copy_or_move_or_clone)


State 560

  540 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr ';'
  541                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "$ <|"                            shift, and go to state 460
    "@ <|"                            shift, and go to state 461
    "@@ <|"                           shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    expr_pipe               go to state 765
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_assign             go to state 625
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 766
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 561

  652 type_declaration_no_options: "type" '<' $@48 . type_declaration '>' $@49

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 767


State 562

  673 type_declaration_no_options: "array" '<' $@52 . type_declaration '>' $@53

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 768


State 563

  676 type_declaration_no_options: "table" '<' $@54 . table_type_pair '>' $@55

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    table_type_pair              go to state 769
    type_declaration_no_options  go to state 350
    type_declaration             go to state 770


State 564

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'
  653 type_declaration_no_options: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ')'    shift, and go to state 771


State 565

  679 type_declaration_no_options: "iterator" '<' $@56 . type_declaration '>' $@57

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 772


State 566

  669 type_declaration_no_options: "smart_ptr" '<' $@50 . type_declaration '>' $@51

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 773


State 567

  632 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 774


State 568

  641 bitfield_type_declaration: "bitfield" '<' $@46 . bitfield_bits '>' $@47

    "name"  shift, and go to state 775

    bitfield_bits  go to state 776


State 569

  683 type_declaration_no_options: "block" '<' $@58 . type_declaration '>' $@59

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 777


State 570

  686 type_declaration_no_options: "block" '<' $@60 . optional_function_argument_list optional_function_type '>' $@61

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 778


State 571

  690 type_declaration_no_options: "function" '<' $@62 . type_declaration '>' $@63

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 779


State 572

  693 type_declaration_no_options: "function" '<' $@64 . optional_function_argument_list optional_function_type '>' $@65

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 780


State 573

  697 type_declaration_no_options: "lambda" '<' $@66 . type_declaration '>' $@67

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 781


State 574

  700 type_declaration_no_options: "lambda" '<' $@68 . optional_function_argument_list optional_function_type '>' $@69

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 782


State 575

  703 type_declaration_no_options: "tuple" '<' $@70 . tuple_type_list '>' $@71

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 592
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    tuple_type                   go to state 783
    tuple_type_list              go to state 784
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 595


State 576

  706 type_declaration_no_options: "variant" '<' $@72 . variant_type_list '>' $@73

    "name"  shift, and go to state 597

    variant_type       go to state 785
    variant_type_list  go to state 786


State 577

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'
  633 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ')'    shift, and go to state 787


State 578

  654 type_declaration_no_options: '$' name_in_namespace '(' . optional_expr_list ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    $default  reduce using rule 243 (optional_expr_list)

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    optional_expr_list      go to state 788
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    expr_list               go to state 789
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 790
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 579

  664 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 664 (type_declaration_no_options)


State 580

  665 type_declaration_no_options: type_declaration_no_options "==" '&' .

    $default  reduce using rule 665 (type_declaration_no_options)


State 581

  658 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 658 (type_declaration_no_options)


State 582

  660 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 660 (type_declaration_no_options)


State 583

  655 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 791


State 584

  663 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 663 (type_declaration_no_options)


State 585

  649 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 649 (type_declaration_no_options)


State 586

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'
  648 type_declaration_no_options: type_declaration_no_options '[' expr . ']'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ']'    shift, and go to state 792


State 587

  709 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 709 (type_declaration)


State 588

  648 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  649                            | type_declaration_no_options . '[' ']'
  655                            | type_declaration_no_options . '-' '[' ']'
  656                            | type_declaration_no_options . "explicit"
  657                            | type_declaration_no_options . "const"
  658                            | type_declaration_no_options . '-' "const"
  659                            | type_declaration_no_options . '&'
  660                            | type_declaration_no_options . '-' '&'
  661                            | type_declaration_no_options . '#'
  662                            | type_declaration_no_options . "implicit"
  663                            | type_declaration_no_options . '-' '#'
  664                            | type_declaration_no_options . "==" "const"
  665                            | type_declaration_no_options . "==" '&'
  666                            | type_declaration_no_options . '?'
  670                            | type_declaration_no_options . "??"
  708 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    $default  reduce using rule 708 (type_declaration)


State 589

  638 bitfield_alias_bits: bitfield_alias_bits "name" . ';'

    ';'  shift, and go to state 793


State 590

  637 bitfield_alias_bits: bitfield_alias_bits ';' .

    $default  reduce using rule 637 (bitfield_alias_bits)


State 591

  724 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@82 "name" $@83 '{' $@84 bitfield_alias_bits $@85 . '}'

    '}'  shift, and go to state 794


State 592

  255 name_in_namespace: "name" .
  256                  | "name" . "::" "name"
  507 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 98
    ':'   shift, and go to state 795

    $default  reduce using rule 255 (name_in_namespace)


State 593

  511 tuple_alias_type_list: tuple_alias_type_list ';' .

    $default  reduce using rule 511 (tuple_alias_type_list)


State 594

  512 tuple_alias_type_list: tuple_alias_type_list tuple_type . ';'

    ';'  shift, and go to state 796


State 595

  506 tuple_type: type_declaration .
  708 type_declaration: type_declaration . '|' type_declaration_no_options
  709                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409

    $default  reduce using rule 506 (tuple_type)


State 596

  714 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@74 "name" $@75 '{' $@76 tuple_alias_type_list $@77 . '}'

    '}'  shift, and go to state 797


State 597

  513 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 798


State 598

  517 variant_alias_type_list: variant_alias_type_list ';' .

    $default  reduce using rule 517 (variant_alias_type_list)


State 599

  518 variant_alias_type_list: variant_alias_type_list variant_type . ';'

    ';'  shift, and go to state 799


State 600

  719 variant_alias_declaration: "variant" optional_public_or_private_alias $@78 "name" $@79 '{' $@80 variant_alias_type_list $@81 . '}'

    '}'  shift, and go to state 800


State 601

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'
  503 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ')'    shift, and go to state 801


State 602

  502 function_argument_declaration: optional_field_annotation "var" variable_declaration .

    $default  reduce using rule 502 (function_argument_declaration)


State 603

  593 variable_name_with_pos_list: "$i" '(' . expr ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 802
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 604

  594 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 803


State 605

  520 copy_or_move: "<-" .

    $default  reduce using rule 520 (copy_or_move)


State 606

  595 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  596                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 804


State 607

  519 copy_or_move: '=' .

    $default  reduce using rule 519 (copy_or_move)


State 608

  523 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  524                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 805


State 609

  522 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 522 (variable_declaration)


State 610

  525 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  526                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "$ <|"                            shift, and go to state 460
    "@ <|"                            shift, and go to state 461
    "@@ <|"                           shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    expr_pipe               go to state 806
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_assign             go to state 625
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 807
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 611

  505 function_argument_list: function_argument_list ';' function_argument_declaration .

    $default  reduce using rule 505 (function_argument_list)


State 612

   78 expression_while_loop: "while" expr . expression_block
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    '{'    shift, and go to state 284

    expression_block  go to state 808


State 613

   76 expression_for_loop: "for" $@4 . variable_name_with_pos_list "in" expr_list expression_block

    "$i"    shift, and go to state 417
    "name"  shift, and go to state 418

    variable_name_with_pos_list  go to state 809


State 614

  262 new_type_declaration: '<' . $@11 type_declaration '>' $@12

    $default  reduce using rule 260 ($@11)

    $@11  go to state 810


State 615

  264 expr_new: "new" new_type_declaration .
  265         | "new" new_type_declaration . '(' ')'
  266         | "new" new_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 811

    '('       [reduce using rule 264 (expr_new)]
    $default  reduce using rule 264 (expr_new)


State 616

  263 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 263 (new_type_declaration)


State 617

  267 expr_new: "new" make_decl .

    $default  reduce using rule 267 (expr_new)


State 618

  304 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  305               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  306               | "typeinfo" '(' . name_in_namespace '<' "name" ';' "name" '>' expr ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 812


State 619

  303 expr_type_decl: "type" '<' . $@19 type_declaration '>' $@20

    $default  reduce using rule 301 ($@19)

    $@19  go to state 813


State 620

  773 make_dim_decl: "array" '<' . $@86 type_declaration_no_options '>' $@87 '(' expr_list ')'

    $default  reduce using rule 771 ($@86)

    $@86  go to state 814


State 621

  770 make_dim_decl: "array" '(' . expr_list ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    expr_list               go to state 815
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 790
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 622

  272 expression_return_no_pipe: "return" "<-" . expr_list
  275 expression_return: "return" "<-" . expr_pipe

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "$ <|"                            shift, and go to state 460
    "@ <|"                            shift, and go to state 461
    "@@ <|"                           shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    expr_pipe               go to state 816
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    expr_list               go to state 817
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_assign             go to state 625
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 626
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 623

  274 expression_return: "return" expr_pipe .

    $default  reduce using rule 274 (expression_return)


State 624

  271 expression_return_no_pipe: "return" expr_list .
  308 expr_list: expr_list . ',' expr

    ','  shift, and go to state 818

    $default  reduce using rule 271 (expression_return_no_pipe)


State 625

  251 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 697


State 626

  307 expr_list: expr .
  332 expr_assign: expr .
  333            | expr . '=' expr
  334            | expr . "<-" expr
  335            | expr . ":=" expr
  336            | expr . "&=" expr
  337            | expr . "|=" expr
  338            | expr . "^=" expr
  339            | expr . "&&=" expr
  340            | expr . "||=" expr
  341            | expr . "^^=" expr
  342            | expr . "+=" expr
  343            | expr . "-=" expr
  344            | expr . "*=" expr
  345            | expr . "/=" expr
  346            | expr . "%=" expr
  347            | expr . "<<=" expr
  348            | expr . ">>=" expr
  349            | expr . "<<<=" expr
  350            | expr . ">>>=" expr
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 699
    "as"    shift, and go to state 700
    "+="    shift, and go to state 701
    "-="    shift, and go to state 702
    "/="    shift, and go to state 703
    "*="    shift, and go to state 704
    "%="    shift, and go to state 705
    "&="    shift, and go to state 706
    "|="    shift, and go to state 707
    "^="    shift, and go to state 708
    "<<"    shift, and go to state 709
    ">>"    shift, and go to state 710
    "++"    shift, and go to state 711
    "--"    shift, and go to state 712
    "<="    shift, and go to state 713
    "<<="   shift, and go to state 714
    ">>="   shift, and go to state 715
    ">="    shift, and go to state 716
    "=="    shift, and go to state 717
    "!="    shift, and go to state 718
    "->"    shift, and go to state 719
    "<-"    shift, and go to state 819
    "??"    shift, and go to state 721
    "?."    shift, and go to state 722
    "?["    shift, and go to state 723
    "<|"    shift, and go to state 724
    "|>"    shift, and go to state 725
    ":="    shift, and go to state 726
    "<<<"   shift, and go to state 727
    ">>>"   shift, and go to state 728
    "<<<="  shift, and go to state 729
    ">>>="  shift, and go to state 730
    "&&"    shift, and go to state 731
    "||"    shift, and go to state 732
    "^^"    shift, and go to state 733
    "&&="   shift, and go to state 734
    "||="   shift, and go to state 735
    "^^="   shift, and go to state 736
    ".."    shift, and go to state 737
    '='     shift, and go to state 820
    '?'     shift, and go to state 739
    '|'     shift, and go to state 740
    '^'     shift, and go to state 741
    '&'     shift, and go to state 742
    '<'     shift, and go to state 743
    '>'     shift, and go to state 744
    '-'     shift, and go to state 745
    '+'     shift, and go to state 746
    '*'     shift, and go to state 747
    '/'     shift, and go to state 748
    '%'     shift, and go to state 749
    '.'     shift, and go to state 750
    '['     shift, and go to state 751

    " <|"     reduce using rule 332 (expr_assign)
    $default  reduce using rule 307 (expr_list)


State 627

  281 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 821


State 628

  784 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' expr_map_tuple_list ')'
  785                | "table" '<' . type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 822


State 629

  783 make_table_decl: "table" '(' . expr_map_tuple_list ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 668
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_map_tuple          go to state 823
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    expr_map_tuple_list     go to state 824
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 630

  259 expression_delete: "delete" "explicit" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 825
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 631

  258 expression_delete: "delete" expr .
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 258 (expression_delete)


State 632

  430 expr: "deref" '(' . expr ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 826
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 633

   79 expression_with: "with" expr . expression_block
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    '{'    shift, and go to state 284

    expression_block  go to state 827


State 634

   81 expression_with_alias: "assume" "name" . '=' $@5 expr

    '='  shift, and go to state 828


State 635

  294 expr_cast: "cast" '<' . $@13 type_declaration_no_options '>' $@14 expr

    $default  reduce using rule 292 ($@13)

    $@13  go to state 829


State 636

  297 expr_cast: "upcast" '<' . $@15 type_declaration_no_options '>' $@16 expr

    $default  reduce using rule 295 ($@15)

    $@15  go to state 830


State 637

  431 expr: "addr" '(' . expr ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 831
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 638

  238 expression_any: "pass" ';' .

    $default  reduce using rule 238 (expression_any)


State 639

  300 expr_cast: "reinterpret" '<' . $@17 type_declaration_no_options '>' $@18 expr

    $default  reduce using rule 298 ($@17)

    $@17  go to state 832


State 640

   54 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 833


State 641

   55 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 834


State 642

   56 expression_goto: "goto" expr .
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 56 (expression_goto)


State 643

  462 expr: "unsafe" '(' . expr ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 835
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 644

   77 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 77 (expression_unsafe)


State 645

  777 make_dim_decl: "fixed_array" '<' . $@88 type_declaration_no_options '>' $@89 '(' expr_list ')'

    $default  reduce using rule 775 ($@88)

    $@88  go to state 836


State 646

  774 make_dim_decl: "fixed_array" '(' . expr_list ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    expr_list               go to state 837
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 790
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 647

  765 make_tuple_call: "tuple" '(' . expr_list ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    expr_list               go to state 838
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 790
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 648

  432 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  433     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 839


State 649

  277 expression_yield_no_pipe: "yield" "<-" . expr
  280 expression_yield: "yield" "<-" . expr_pipe

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "$ <|"                            shift, and go to state 460
    "@ <|"                            shift, and go to state 461
    "@@ <|"                           shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    expr_pipe               go to state 840
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_assign             go to state 625
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 841
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 650

  279 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 279 (expression_yield)


State 651

  276 expression_yield_no_pipe: "yield" expr .
  332 expr_assign: expr .
  333            | expr . '=' expr
  334            | expr . "<-" expr
  335            | expr . ":=" expr
  336            | expr . "&=" expr
  337            | expr . "|=" expr
  338            | expr . "^=" expr
  339            | expr . "&&=" expr
  340            | expr . "||=" expr
  341            | expr . "^^=" expr
  342            | expr . "+=" expr
  343            | expr . "-=" expr
  344            | expr . "*=" expr
  345            | expr . "/=" expr
  346            | expr . "%=" expr
  347            | expr . "<<=" expr
  348            | expr . ">>=" expr
  349            | expr . "<<<=" expr
  350            | expr . ">>>=" expr
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 699
    "as"    shift, and go to state 700
    "+="    shift, and go to state 701
    "-="    shift, and go to state 702
    "/="    shift, and go to state 703
    "*="    shift, and go to state 704
    "%="    shift, and go to state 705
    "&="    shift, and go to state 706
    "|="    shift, and go to state 707
    "^="    shift, and go to state 708
    "<<"    shift, and go to state 709
    ">>"    shift, and go to state 710
    "++"    shift, and go to state 711
    "--"    shift, and go to state 712
    "<="    shift, and go to state 713
    "<<="   shift, and go to state 714
    ">>="   shift, and go to state 715
    ">="    shift, and go to state 716
    "=="    shift, and go to state 717
    "!="    shift, and go to state 718
    "->"    shift, and go to state 719
    "<-"    shift, and go to state 819
    "??"    shift, and go to state 721
    "?."    shift, and go to state 722
    "?["    shift, and go to state 723
    "<|"    shift, and go to state 724
    "|>"    shift, and go to state 725
    ":="    shift, and go to state 726
    "<<<"   shift, and go to state 727
    ">>>"   shift, and go to state 728
    "<<<="  shift, and go to state 729
    ">>>="  shift, and go to state 730
    "&&"    shift, and go to state 731
    "||"    shift, and go to state 732
    "^^"    shift, and go to state 733
    "&&="   shift, and go to state 734
    "||="   shift, and go to state 735
    "^^="   shift, and go to state 736
    ".."    shift, and go to state 737
    '='     shift, and go to state 820
    '?'     shift, and go to state 739
    '|'     shift, and go to state 740
    '^'     shift, and go to state 741
    '&'     shift, and go to state 742
    '<'     shift, and go to state 743
    '>'     shift, and go to state 744
    '-'     shift, and go to state 745
    '+'     shift, and go to state 746
    '*'     shift, and go to state 747
    '/'     shift, and go to state 748
    '%'     shift, and go to state 749
    '.'     shift, and go to state 750
    '['     shift, and go to state 751

    " <|"     reduce using rule 332 (expr_assign)
    $default  reduce using rule 276 (expression_yield_no_pipe)


State 652

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  413     | "++" expr .
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 699
    "as"  shift, and go to state 700
    "++"  shift, and go to state 711
    "--"  shift, and go to state 712
    "->"  shift, and go to state 719
    "?."  shift, and go to state 722
    "?["  shift, and go to state 723
    "<|"  shift, and go to state 724
    "|>"  shift, and go to state 725
    '.'   shift, and go to state 750
    '['   shift, and go to state 751

    $default  reduce using rule 413 (expr)


State 653

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  414     | "--" expr .
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 699
    "as"  shift, and go to state 700
    "++"  shift, and go to state 711
    "--"  shift, and go to state 712
    "->"  shift, and go to state 719
    "?."  shift, and go to state 722
    "?["  shift, and go to state 723
    "<|"  shift, and go to state 724
    "|>"  shift, and go to state 725
    '.'   shift, and go to state 750
    '['   shift, and go to state 751

    $default  reduce using rule 414 (expr)


State 654

  313 block_or_lambda: '@' .
  314                | '@' . '@'

    '@'  shift, and go to state 842

    $default  reduce using rule 313 (block_or_lambda)


State 655

  254 expr_pipe: "$ <|" expr_block .

    $default  reduce using rule 254 (expr_pipe)


State 656

  252 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 252 (expr_pipe)


State 657

  253 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 253 (expr_pipe)


State 658

  464 expr_mtag: "$$" '(' . expr ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 843
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 659

  465 expr_mtag: "$i" '(' . expr ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 844
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 660

  466 expr_mtag: "$v" '(' . expr ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 845
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 661

  467 expr_mtag: "$b" '(' . expr ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 846
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 662

  468 expr_mtag: "$a" '(' . expr ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 847
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 663

  470 expr_mtag: "$c" '(' . expr ')' '(' ')'
  471          | "$c" '(' . expr ')' '(' expr_list ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 848
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 664

  788 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "$i"    shift, and go to state 417
    "name"  shift, and go to state 418

    variable_name_with_pos_list  go to state 849


State 665

  648 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  649                            | type_declaration_no_options . '[' ']'
  655                            | type_declaration_no_options . '-' '[' ']'
  656                            | type_declaration_no_options . "explicit"
  657                            | type_declaration_no_options . "const"
  658                            | type_declaration_no_options . '-' "const"
  659                            | type_declaration_no_options . '&'
  660                            | type_declaration_no_options . '-' '&'
  661                            | type_declaration_no_options . '#'
  662                            | type_declaration_no_options . "implicit"
  663                            | type_declaration_no_options . '-' '#'
  664                            | type_declaration_no_options . "==" "const"
  665                            | type_declaration_no_options . "==" '&'
  666                            | type_declaration_no_options . '?'
  670                            | type_declaration_no_options . "??"
  754 make_struct_decl: "[[" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  755                 | "[[" type_declaration_no_options . optional_block optional_trailing_delim_sqr_sqr
  756                 | "[[" type_declaration_no_options . '(' ')' optional_block optional_trailing_delim_sqr_sqr
  757                 | "[[" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  768 make_dim_decl: "[[" type_declaration_no_options . make_dim optional_trailing_semicolon_sqr_sqr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "const"                           shift, and go to state 399
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "where"                           shift, and go to state 850
    "reinterpret"                     shift, and go to state 449
    "implicit"                        shift, and go to state 400
    "explicit"                        shift, and go to state 401
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "=="                              shift, and go to state 402
    "??"                              shift, and go to state 403
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "$f"                              shift, and go to state 851
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 852
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '?'                               shift, and go to state 404
    '&'                               shift, and go to state 405
    '-'                               shift, and go to state 853
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '['                               shift, and go to state 407
    '('                               shift, and go to state 854
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284
    '#'                               shift, and go to state 408

    $default  reduce using rule 740 (optional_block)

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 855
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_fields      go to state 856
    make_struct_dim         go to state 857
    optional_block          go to state 858
    make_struct_decl        go to state 538
    make_tuple              go to state 859
    make_tuple_call         go to state 539
    make_dim                go to state 860
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 666

  789 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "$i"    shift, and go to state 417
    "name"  shift, and go to state 418

    variable_name_with_pos_list  go to state 861


State 667

  648 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  649                            | type_declaration_no_options . '[' ']'
  655                            | type_declaration_no_options . '-' '[' ']'
  656                            | type_declaration_no_options . "explicit"
  657                            | type_declaration_no_options . "const"
  658                            | type_declaration_no_options . '-' "const"
  659                            | type_declaration_no_options . '&'
  660                            | type_declaration_no_options . '-' '&'
  661                            | type_declaration_no_options . '#'
  662                            | type_declaration_no_options . "implicit"
  663                            | type_declaration_no_options . '-' '#'
  664                            | type_declaration_no_options . "==" "const"
  665                            | type_declaration_no_options . "==" '&'
  666                            | type_declaration_no_options . '?'
  670                            | type_declaration_no_options . "??"
  758 make_struct_decl: "[{" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_cur_sqr
  759                 | "[{" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  769 make_dim_decl: "[{" type_declaration_no_options . make_dim optional_trailing_semicolon_cur_sqr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "const"                           shift, and go to state 399
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "implicit"                        shift, and go to state 400
    "explicit"                        shift, and go to state 401
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "=="                              shift, and go to state 402
    "??"                              shift, and go to state 403
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "$f"                              shift, and go to state 851
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 852
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '?'                               shift, and go to state 404
    '&'                               shift, and go to state 405
    '-'                               shift, and go to state 853
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '['                               shift, and go to state 407
    '('                               shift, and go to state 862
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284
    '#'                               shift, and go to state 408

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 855
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_fields      go to state 856
    make_struct_dim         go to state 863
    make_struct_decl        go to state 538
    make_tuple              go to state 859
    make_tuple_call         go to state 539
    make_dim                go to state 864
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 668

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'
  763 make_map_tuple: expr . "=>" expr
  764               | expr .

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "=>"   shift, and go to state 865
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 764 (make_map_tuple)


State 669

  778 make_table: make_map_tuple .

    $default  reduce using rule 778 (make_table)


State 670

  779 make_table: make_table . ';' make_map_tuple
  782 make_table_decl: "{{" make_table . optional_trailing_semicolon_cur_cur

    ";}}"  shift, and go to state 866
    ';'    shift, and go to state 867
    '}'    shift, and go to state 868

    optional_trailing_semicolon_cur_cur  go to state 869


State 671

  247 expression_keyword: "keyword" '<' . $@7 type_declaration_no_options '>' $@8 expr

    $default  reduce using rule 245 ($@7)

    $@7  go to state 870


State 672

  242 expr_keyword: "keyword" expr . expression_block
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    '{'    shift, and go to state 284

    expression_block  go to state 871


State 673

  250 expression_keyword: "type function" '<' . $@9 type_declaration_no_options '>' $@10 '(' optional_expr_list ')'

    $default  reduce using rule 248 ($@9)

    $@9  go to state 872


State 674

   29 string_builder_body: string_builder_body . character_sequence
   30                    | string_builder_body . "{" expr "}"
   31 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163
    "end of the string"   shift, and go to state 873
    "{"                   shift, and go to state 874

    character_sequence  go to state 875


State 675

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  390 expr: '-' expr .
  391     | expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 699
    "as"  shift, and go to state 700
    "++"  shift, and go to state 711
    "--"  shift, and go to state 712
    "->"  shift, and go to state 719
    "?."  shift, and go to state 722
    "?["  shift, and go to state 723
    "<|"  shift, and go to state 724
    "|>"  shift, and go to state 725
    '.'   shift, and go to state 750
    '['   shift, and go to state 751

    $default  reduce using rule 390 (expr)


State 676

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  389 expr: '+' expr .
  391     | expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 699
    "as"  shift, and go to state 700
    "++"  shift, and go to state 711
    "--"  shift, and go to state 712
    "->"  shift, and go to state 719
    "?."  shift, and go to state 722
    "?["  shift, and go to state 723
    "<|"  shift, and go to state 724
    "|>"  shift, and go to state 725
    '.'   shift, and go to state 750
    '['   shift, and go to state 751

    $default  reduce using rule 389 (expr)


State 677

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  429     | '*' expr .
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 722
    "?["  shift, and go to state 723
    '.'   shift, and go to state 750
    '['   shift, and go to state 751

    $default  reduce using rule 429 (expr)


State 678

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  388 expr: '~' expr .
  391     | expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 699
    "as"  shift, and go to state 700
    "++"  shift, and go to state 711
    "--"  shift, and go to state 712
    "->"  shift, and go to state 719
    "?."  shift, and go to state 722
    "?["  shift, and go to state 723
    "<|"  shift, and go to state 724
    "|>"  shift, and go to state 725
    '.'   shift, and go to state 750
    '['   shift, and go to state 751

    $default  reduce using rule 388 (expr)


State 679

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  387 expr: '!' expr .
  391     | expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 699
    "as"  shift, and go to state 700
    "++"  shift, and go to state 711
    "--"  shift, and go to state 712
    "->"  shift, and go to state 719
    "?."  shift, and go to state 722
    "?["  shift, and go to state 723
    "<|"  shift, and go to state 724
    "|>"  shift, and go to state 725
    '.'   shift, and go to state 750
    '['   shift, and go to state 751

    $default  reduce using rule 387 (expr)


State 680

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  417     | '(' expr . ')'
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ')'    shift, and go to state 876


State 681

  314 block_or_lambda: '@' '@' .
  363 func_addr_expr: '@' '@' . func_addr_name
  366               | '@' '@' . '<' $@21 type_declaration_no_options '>' $@22 func_addr_name
  369               | '@' '@' . '<' $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name
  479 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 877
    "$c"    shift, and go to state 878
    "name"  shift, and go to state 59
    '<'     shift, and go to state 879

    $default  reduce using rule 314 (block_or_lambda)

    name_in_namespace  go to state 880
    func_addr_name     go to state 881


State 682

  217 expression_block: '{' expressions '}' "finally" . '{' expressions '}'

    '{'  shift, and go to state 882


State 683

  236 expression_any: expression_label ';' .

    $default  reduce using rule 236 (expression_any)


State 684

  237 expression_any: expression_goto ';' .

    $default  reduce using rule 237 (expression_any)


State 685

   72 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    '{'    shift, and go to state 284

    expression_block  go to state 883


State 686

   74 expression_if_then_else: expression_if_one_liner "if" . $@3 expr expression_else_one_liner ';'

    $default  reduce using rule 73 ($@3)

    $@3  go to state 884


State 687

  461 expr: name_in_namespace "name" .

    $default  reduce using rule 461 (expr)


State 688

  357 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  358                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  425 expr: name_in_namespace '(' . ')'
  426     | name_in_namespace '(' . expr_list ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '['                               shift, and go to state 885
    '('                               shift, and go to state 488
    ')'                               shift, and go to state 886
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    expr_list               go to state 887
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 790
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 689

  223 expression_any: expression_delete ';' .

    $default  reduce using rule 223 (expression_any)


State 690

  230 expression_any: expression_break ';' .

    $default  reduce using rule 230 (expression_any)


State 691

  231 expression_any: expression_continue ';' .

    $default  reduce using rule 231 (expression_any)


State 692

  273 expression_return: expression_return_no_pipe ';' .

    $default  reduce using rule 273 (expression_return)


State 693

  278 expression_yield: expression_yield_no_pipe ';' .

    $default  reduce using rule 278 (expression_yield)


State 694

  284 optional_in_scope: "inscope" .

    $default  reduce using rule 284 (optional_in_scope)


State 695

  290 expression_let: kwd_let optional_in_scope . let_variable_declaration
  291               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 299
    "[["    shift, and go to state 888
    "name"  shift, and go to state 300

    tuple_expansion_variable_declaration  go to state 889
    let_variable_name_with_pos_list       go to state 301
    let_variable_declaration              go to state 890


State 696

  324 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 891

    $default  reduce using rule 321 (optional_capture_list)

    optional_capture_list  go to state 892


State 697

  251 expr_pipe: expr_assign " <|" . expr_block

    '$'  shift, and go to state 489
    '@'  shift, and go to state 654
    '{'  shift, and go to state 284

    expression_block  go to state 505
    block_or_lambda   go to state 525
    expr_block        go to state 893


State 698

  222 expression_any: expr_assign ';' .

    $default  reduce using rule 222 (expression_any)


State 699

  438 expr: expr "is" . "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr "is" . basic_type_declaration
  440     | expr "is" . "name"
  478 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 894
    "bool"      shift, and go to state 310
    "void"      shift, and go to state 311
    "string"    shift, and go to state 312
    "int"       shift, and go to state 314
    "int2"      shift, and go to state 315
    "int3"      shift, and go to state 316
    "int4"      shift, and go to state 317
    "uint"      shift, and go to state 318
    "bitfield"  shift, and go to state 454
    "uint2"     shift, and go to state 320
    "uint3"     shift, and go to state 321
    "uint4"     shift, and go to state 322
    "float"     shift, and go to state 323
    "float2"    shift, and go to state 324
    "float3"    shift, and go to state 325
    "float4"    shift, and go to state 326
    "range"     shift, and go to state 327
    "urange"    shift, and go to state 328
    "range64"   shift, and go to state 329
    "urange64"  shift, and go to state 330
    "int64"     shift, and go to state 332
    "uint64"    shift, and go to state 333
    "double"    shift, and go to state 334
    "int8"      shift, and go to state 337
    "uint8"     shift, and go to state 338
    "int16"     shift, and go to state 339
    "uint16"    shift, and go to state 340
    "$f"        shift, and go to state 895
    "name"      shift, and go to state 896

    basic_type_declaration  go to state 897


State 700

  441 expr: expr "as" . "name"
  444     | expr "as" . "type" '<' $@29 type_declaration '>' $@30
  445     | expr "as" . basic_type_declaration
  476 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 898
    "bool"      shift, and go to state 310
    "void"      shift, and go to state 311
    "string"    shift, and go to state 312
    "int"       shift, and go to state 314
    "int2"      shift, and go to state 315
    "int3"      shift, and go to state 316
    "int4"      shift, and go to state 317
    "uint"      shift, and go to state 318
    "bitfield"  shift, and go to state 454
    "uint2"     shift, and go to state 320
    "uint3"     shift, and go to state 321
    "uint4"     shift, and go to state 322
    "float"     shift, and go to state 323
    "float2"    shift, and go to state 324
    "float3"    shift, and go to state 325
    "float4"    shift, and go to state 326
    "range"     shift, and go to state 327
    "urange"    shift, and go to state 328
    "range64"   shift, and go to state 329
    "urange64"  shift, and go to state 330
    "int64"     shift, and go to state 332
    "uint64"    shift, and go to state 333
    "double"    shift, and go to state 334
    "int8"      shift, and go to state 337
    "uint8"     shift, and go to state 338
    "int16"     shift, and go to state 339
    "uint16"    shift, and go to state 340
    "$f"        shift, and go to state 899
    "name"      shift, and go to state 900

    basic_type_declaration  go to state 901


State 701

  342 expr_assign: expr "+=" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 902
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 702

  343 expr_assign: expr "-=" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 903
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 703

  345 expr_assign: expr "/=" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 904
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 704

  344 expr_assign: expr "*=" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 905
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 705

  346 expr_assign: expr "%=" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 906
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 706

  336 expr_assign: expr "&=" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 907
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 707

  337 expr_assign: expr "|=" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 908
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 708

  338 expr_assign: expr "^=" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 909
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 709

  391 expr: expr "<<" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 910
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 710

  392 expr: expr ">>" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 911
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 711

  415 expr: expr "++" .

    $default  reduce using rule 415 (expr)


State 712

  416 expr: expr "--" .

    $default  reduce using rule 416 (expr)


State 713

  404 expr: expr "<=" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 912
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 714

  347 expr_assign: expr "<<=" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 913
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 715

  348 expr_assign: expr ">>=" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 914
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 716

  405 expr: expr ">=" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 915
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 717

  402 expr: expr "==" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 916
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 718

  403 expr: expr "!=" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 917
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 719

  359 expr_method_call: expr "->" . "name" '(' ')'
  360                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 918


State 720

  334 expr_assign: expr "<-" . expr
  354 expr_assign_pipe: expr "<-" . "@ <|" expr_block
  355                 | expr "<-" . "@@ <|" expr_block
  356                 | expr "<-" . "$ <|" expr_block

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "$ <|"                            shift, and go to state 919
    "@ <|"                            shift, and go to state 920
    "@@ <|"                           shift, and go to state 921
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 922
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 721

  434 expr: expr "??" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 923
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 722

  422 expr: expr "?." . "name"
  473 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 924
    "name"  shift, and go to state 925


State 723

  420 expr: expr "?[" . expr ']'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 926
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 724

  458 expr: expr "<|" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 927
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 725

  459 expr: expr "|>" . expr
  460     | expr "|>" . basic_type_declaration

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 928
    expr_mtag               go to state 535
    basic_type_declaration  go to state 929
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 726

  335 expr_assign: expr ":=" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 930
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 727

  393 expr: expr "<<<" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 931
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 728

  394 expr: expr ">>>" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 932
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 729

  349 expr_assign: expr "<<<=" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 933
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 730

  350 expr_assign: expr ">>>=" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 934
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 731

  409 expr: expr "&&" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 935
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 732

  410 expr: expr "||" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 936
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 733

  411 expr: expr "^^" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 937
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 734

  339 expr_assign: expr "&&=" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 938
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 735

  340 expr_assign: expr "||=" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 939
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 736

  341 expr_assign: expr "^^=" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 940
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 737

  412 expr: expr ".." . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 941
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 738

  333 expr_assign: expr '=' . expr
  351 expr_assign_pipe: expr '=' . "@ <|" expr_block
  352                 | expr '=' . "@@ <|" expr_block
  353                 | expr '=' . "$ <|" expr_block

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "$ <|"                            shift, and go to state 942
    "@ <|"                            shift, and go to state 943
    "@@ <|"                           shift, and go to state 944
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 945
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 739

  435 expr: expr '?' . expr ':' expr
  446     | expr '?' . "as" "name"
  449     | expr '?' . "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr '?' . "as" basic_type_declaration
  477 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "as"                              shift, and go to state 946
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 947
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 740

  407 expr: expr '|' . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 948
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 741

  408 expr: expr '^' . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 949
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 742

  406 expr: expr '&' . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 950
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 743

  400 expr: expr '<' . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 951
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 744

  401 expr: expr '>' . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 952
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 745

  396 expr: expr '-' . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 953
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 746

  395 expr: expr '+' . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 954
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 747

  397 expr: expr '*' . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 955
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 748

  398 expr: expr '/' . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 956
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 749

  399 expr: expr '%' . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 957
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 750

  370 expr_field: expr '.' . "name"
  371           | expr '.' . '.' "name"
  372           | expr '.' . "name" '(' ')'
  373           | expr '.' . "name" '(' expr_list ')'
  376           | expr '.' . $@25 error $@26
  419 expr: expr '.' . '[' expr ']'
  421     | expr '.' . "?[" expr ']'
  423     | expr '.' . "?." "name"
  472 expr_mtag: expr '.' . "$f" '(' expr ')'
  474          | expr '.' . '.' "$f" '(' expr ')'
  475          | expr '.' . "?." "$f" '(' expr ')'

    "?."    shift, and go to state 958
    "?["    shift, and go to state 959
    "$f"    shift, and go to state 960
    "name"  shift, and go to state 961
    '.'     shift, and go to state 962
    '['     shift, and go to state 963

    $default  reduce using rule 374 ($@25)

    $@25  go to state 964


State 751

  418 expr: expr '[' . expr ']'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 965
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 752

  427 expr: basic_type_declaration '(' . ')'
  428     | basic_type_declaration '(' . expr_list ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    ')'                               shift, and go to state 966
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    expr_list               go to state 967
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 790
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 753

  554 enum_list: enum_list . ';'
  555          | enum_list . "name" ';'
  556          | enum_list . "name" '=' expr ';'
  576 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@42 enum_list . $@43 '}'

    "name"  shift, and go to state 544
    ';'     shift, and go to state 545

    $default  reduce using rule 575 ($@43)

    $@43  go to state 968


State 754

  556 enum_list: enum_list "name" '=' . expr ';'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 969
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 755

  555 enum_list: enum_list "name" ';' .

    $default  reduce using rule 555 (enum_list)


State 756

  573 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@40 enum_list $@41 '}' .

    $default  reduce using rule 573 (enum_declaration)


State 757

  118 optional_annotation_list: '[' . annotation_list ']'
  500 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' ';'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 970
    name_in_namespace             go to state 70


State 758

  588 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list '}' .

    $default  reduce using rule 588 (optional_struct_variable_declaration_list)


State 759

  497 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header ';'
  499                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block

    "def"  shift, and go to state 971


State 760

  495 struct_variable_declaration_list: struct_variable_declaration_list $@33 . structure_variable_declaration ';'

    "[["  shift, and go to state 218

    $default  reduce using rule 480 (optional_field_annotation)

    optional_field_annotation       go to state 972
    structure_variable_declaration  go to state 973


State 761

  533 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 533 (let_variable_name_with_pos_list)


State 762

  536 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 974


State 763

  537 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options ';' .

    $default  reduce using rule 537 (let_variable_declaration)


State 764

  538 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr ';'
  539                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "$ <|"                            shift, and go to state 460
    "@ <|"                            shift, and go to state 461
    "@@ <|"                           shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    expr_pipe               go to state 975
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_assign             go to state 625
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 976
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 765

  541 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 541 (let_variable_declaration)


State 766

  332 expr_assign: expr .
  333            | expr . '=' expr
  334            | expr . "<-" expr
  335            | expr . ":=" expr
  336            | expr . "&=" expr
  337            | expr . "|=" expr
  338            | expr . "^=" expr
  339            | expr . "&&=" expr
  340            | expr . "||=" expr
  341            | expr . "^^=" expr
  342            | expr . "+=" expr
  343            | expr . "-=" expr
  344            | expr . "*=" expr
  345            | expr . "/=" expr
  346            | expr . "%=" expr
  347            | expr . "<<=" expr
  348            | expr . ">>=" expr
  349            | expr . "<<<=" expr
  350            | expr . ">>>=" expr
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'
  540 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 699
    "as"    shift, and go to state 700
    "+="    shift, and go to state 701
    "-="    shift, and go to state 702
    "/="    shift, and go to state 703
    "*="    shift, and go to state 704
    "%="    shift, and go to state 705
    "&="    shift, and go to state 706
    "|="    shift, and go to state 707
    "^="    shift, and go to state 708
    "<<"    shift, and go to state 709
    ">>"    shift, and go to state 710
    "++"    shift, and go to state 711
    "--"    shift, and go to state 712
    "<="    shift, and go to state 713
    "<<="   shift, and go to state 714
    ">>="   shift, and go to state 715
    ">="    shift, and go to state 716
    "=="    shift, and go to state 717
    "!="    shift, and go to state 718
    "->"    shift, and go to state 719
    "<-"    shift, and go to state 819
    "??"    shift, and go to state 721
    "?."    shift, and go to state 722
    "?["    shift, and go to state 723
    "<|"    shift, and go to state 724
    "|>"    shift, and go to state 725
    ":="    shift, and go to state 726
    "<<<"   shift, and go to state 727
    ">>>"   shift, and go to state 728
    "<<<="  shift, and go to state 729
    ">>>="  shift, and go to state 730
    "&&"    shift, and go to state 731
    "||"    shift, and go to state 732
    "^^"    shift, and go to state 733
    "&&="   shift, and go to state 734
    "||="   shift, and go to state 735
    "^^="   shift, and go to state 736
    ".."    shift, and go to state 737
    '='     shift, and go to state 820
    '?'     shift, and go to state 739
    '|'     shift, and go to state 740
    '^'     shift, and go to state 741
    '&'     shift, and go to state 742
    '<'     shift, and go to state 743
    '>'     shift, and go to state 744
    '-'     shift, and go to state 745
    '+'     shift, and go to state 746
    '*'     shift, and go to state 747
    '/'     shift, and go to state 748
    '%'     shift, and go to state 749
    '.'     shift, and go to state 750
    '['     shift, and go to state 751
    ';'     shift, and go to state 977

    $default  reduce using rule 332 (expr_assign)


State 767

  652 type_declaration_no_options: "type" '<' $@48 type_declaration . '>' $@49
  708 type_declaration: type_declaration . '|' type_declaration_no_options
  709                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409
    '>'  shift, and go to state 978


State 768

  673 type_declaration_no_options: "array" '<' $@52 type_declaration . '>' $@53
  708 type_declaration: type_declaration . '|' type_declaration_no_options
  709                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409
    '>'  shift, and go to state 979


State 769

  676 type_declaration_no_options: "table" '<' $@54 table_type_pair . '>' $@55

    '>'  shift, and go to state 980


State 770

  642 table_type_pair: type_declaration .
  643                | type_declaration . ';' type_declaration
  708 type_declaration: type_declaration . '|' type_declaration_no_options
  709                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409
    ';'  shift, and go to state 981

    $default  reduce using rule 642 (table_type_pair)


State 771

  653 type_declaration_no_options: "typedecl" '(' expr ')' .

    $default  reduce using rule 653 (type_declaration_no_options)


State 772

  679 type_declaration_no_options: "iterator" '<' $@56 type_declaration . '>' $@57
  708 type_declaration: type_declaration . '|' type_declaration_no_options
  709                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409
    '>'  shift, and go to state 982


State 773

  669 type_declaration_no_options: "smart_ptr" '<' $@50 type_declaration . '>' $@51
  708 type_declaration: type_declaration . '|' type_declaration_no_options
  709                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409
    '>'  shift, and go to state 983


State 774

  632 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 632 (auto_type_declaration)


State 775

  634 bitfield_bits: "name" .

    $default  reduce using rule 634 (bitfield_bits)


State 776

  635 bitfield_bits: bitfield_bits . ';' "name"
  641 bitfield_type_declaration: "bitfield" '<' $@46 bitfield_bits . '>' $@47

    '>'  shift, and go to state 984
    ';'  shift, and go to state 985


State 777

  683 type_declaration_no_options: "block" '<' $@58 type_declaration . '>' $@59
  708 type_declaration: type_declaration . '|' type_declaration_no_options
  709                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409
    '>'  shift, and go to state 986


State 778

  686 type_declaration_no_options: "block" '<' $@60 optional_function_argument_list . optional_function_type '>' $@61

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 987


State 779

  690 type_declaration_no_options: "function" '<' $@62 type_declaration . '>' $@63
  708 type_declaration: type_declaration . '|' type_declaration_no_options
  709                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409
    '>'  shift, and go to state 988


State 780

  693 type_declaration_no_options: "function" '<' $@64 optional_function_argument_list . optional_function_type '>' $@65

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 989


State 781

  697 type_declaration_no_options: "lambda" '<' $@66 type_declaration . '>' $@67
  708 type_declaration: type_declaration . '|' type_declaration_no_options
  709                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409
    '>'  shift, and go to state 990


State 782

  700 type_declaration_no_options: "lambda" '<' $@68 optional_function_argument_list . optional_function_type '>' $@69

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 991


State 783

  508 tuple_type_list: tuple_type .

    $default  reduce using rule 508 (tuple_type_list)


State 784

  509 tuple_type_list: tuple_type_list . ';' tuple_type
  703 type_declaration_no_options: "tuple" '<' $@70 tuple_type_list . '>' $@71

    '>'  shift, and go to state 992
    ';'  shift, and go to state 993


State 785

  514 variant_type_list: variant_type .

    $default  reduce using rule 514 (variant_type_list)


State 786

  515 variant_type_list: variant_type_list . ';' variant_type
  706 type_declaration_no_options: "variant" '<' $@72 variant_type_list . '>' $@73

    '>'  shift, and go to state 994
    ';'  shift, and go to state 995


State 787

  633 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 633 (auto_type_declaration)


State 788

  654 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 996


State 789

  244 optional_expr_list: expr_list .
  308 expr_list: expr_list . ',' expr

    ','  shift, and go to state 818

    $default  reduce using rule 244 (optional_expr_list)


State 790

  307 expr_list: expr .
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 307 (expr_list)


State 791

  655 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 655 (type_declaration_no_options)


State 792

  648 type_declaration_no_options: type_declaration_no_options '[' expr ']' .

    $default  reduce using rule 648 (type_declaration_no_options)


State 793

  638 bitfield_alias_bits: bitfield_alias_bits "name" ';' .

    $default  reduce using rule 638 (bitfield_alias_bits)


State 794

  724 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@82 "name" $@83 '{' $@84 bitfield_alias_bits $@85 '}' .

    $default  reduce using rule 724 (bitfield_alias_declaration)


State 795

  507 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 997


State 796

  512 tuple_alias_type_list: tuple_alias_type_list tuple_type ';' .

    $default  reduce using rule 512 (tuple_alias_type_list)


State 797

  714 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@74 "name" $@75 '{' $@76 tuple_alias_type_list $@77 '}' .

    $default  reduce using rule 714 (tuple_alias_declaration)


State 798

  513 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 998


State 799

  518 variant_alias_type_list: variant_alias_type_list variant_type ';' .

    $default  reduce using rule 518 (variant_alias_type_list)


State 800

  719 variant_alias_declaration: "variant" optional_public_or_private_alias $@78 "name" $@79 '{' $@80 variant_alias_type_list $@81 '}' .

    $default  reduce using rule 719 (variant_alias_declaration)


State 801

  503 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 503 (function_argument_declaration)


State 802

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'
  593 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ')'    shift, and go to state 999


State 803

  594 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 594 (variable_name_with_pos_list)


State 804

  595 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  596                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1000

    $default  reduce using rule 595 (variable_name_with_pos_list)


State 805

  523 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  524                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  708 type_declaration: type_declaration . '|' type_declaration_no_options
  709                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 605
    '='   shift, and go to state 607
    '|'   shift, and go to state 409

    $default  reduce using rule 523 (variable_declaration)

    copy_or_move  go to state 1001


State 806

  526 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 526 (variable_declaration)


State 807

  332 expr_assign: expr .
  333            | expr . '=' expr
  334            | expr . "<-" expr
  335            | expr . ":=" expr
  336            | expr . "&=" expr
  337            | expr . "|=" expr
  338            | expr . "^=" expr
  339            | expr . "&&=" expr
  340            | expr . "||=" expr
  341            | expr . "^^=" expr
  342            | expr . "+=" expr
  343            | expr . "-=" expr
  344            | expr . "*=" expr
  345            | expr . "/=" expr
  346            | expr . "%=" expr
  347            | expr . "<<=" expr
  348            | expr . ">>=" expr
  349            | expr . "<<<=" expr
  350            | expr . ">>>=" expr
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'
  525 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 699
    "as"    shift, and go to state 700
    "+="    shift, and go to state 701
    "-="    shift, and go to state 702
    "/="    shift, and go to state 703
    "*="    shift, and go to state 704
    "%="    shift, and go to state 705
    "&="    shift, and go to state 706
    "|="    shift, and go to state 707
    "^="    shift, and go to state 708
    "<<"    shift, and go to state 709
    ">>"    shift, and go to state 710
    "++"    shift, and go to state 711
    "--"    shift, and go to state 712
    "<="    shift, and go to state 713
    "<<="   shift, and go to state 714
    ">>="   shift, and go to state 715
    ">="    shift, and go to state 716
    "=="    shift, and go to state 717
    "!="    shift, and go to state 718
    "->"    shift, and go to state 719
    "<-"    shift, and go to state 819
    "??"    shift, and go to state 721
    "?."    shift, and go to state 722
    "?["    shift, and go to state 723
    "<|"    shift, and go to state 724
    "|>"    shift, and go to state 725
    ":="    shift, and go to state 726
    "<<<"   shift, and go to state 727
    ">>>"   shift, and go to state 728
    "<<<="  shift, and go to state 729
    ">>>="  shift, and go to state 730
    "&&"    shift, and go to state 731
    "||"    shift, and go to state 732
    "^^"    shift, and go to state 733
    "&&="   shift, and go to state 734
    "||="   shift, and go to state 735
    "^^="   shift, and go to state 736
    ".."    shift, and go to state 737
    '='     shift, and go to state 820
    '?'     shift, and go to state 739
    '|'     shift, and go to state 740
    '^'     shift, and go to state 741
    '&'     shift, and go to state 742
    '<'     shift, and go to state 743
    '>'     shift, and go to state 744
    '-'     shift, and go to state 745
    '+'     shift, and go to state 746
    '*'     shift, and go to state 747
    '/'     shift, and go to state 748
    '%'     shift, and go to state 749
    '.'     shift, and go to state 750
    '['     shift, and go to state 751

    " <|"     reduce using rule 332 (expr_assign)
    $default  reduce using rule 525 (variable_declaration)


State 808

   78 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 78 (expression_while_loop)


State 809

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list . "in" expr_list expression_block
  595 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  596                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1002
    ','   shift, and go to state 606


State 810

  262 new_type_declaration: '<' $@11 . type_declaration '>' $@12

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1003


State 811

  265 expr_new: "new" new_type_declaration '(' . ')'
  266         | "new" new_type_declaration '(' . expr_list ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    ')'                               shift, and go to state 1004
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    expr_list               go to state 1005
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 790
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 812

  304 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  305               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  306               | "typeinfo" '(' name_in_namespace . '<' "name" ';' "name" '>' expr ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '<'                               shift, and go to state 1006
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1007
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 813

  303 expr_type_decl: "type" '<' $@19 . type_declaration '>' $@20

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1008


State 814

  773 make_dim_decl: "array" '<' $@86 . type_declaration_no_options '>' $@87 '(' expr_list ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1009


State 815

  308 expr_list: expr_list . ',' expr
  770 make_dim_decl: "array" '(' expr_list . ')'

    ','  shift, and go to state 818
    ')'  shift, and go to state 1010


State 816

  275 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 275 (expression_return)


State 817

  272 expression_return_no_pipe: "return" "<-" expr_list .
  308 expr_list: expr_list . ',' expr

    ','  shift, and go to state 818

    $default  reduce using rule 272 (expression_return_no_pipe)


State 818

  308 expr_list: expr_list ',' . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1011
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 819

  334 expr_assign: expr "<-" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 922
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 820

  333 expr_assign: expr '=' . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 945
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 821

  281 expression_try_catch: "try" expression_block "recover" . expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 1012


State 822

  648 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  649                            | type_declaration_no_options . '[' ']'
  655                            | type_declaration_no_options . '-' '[' ']'
  656                            | type_declaration_no_options . "explicit"
  657                            | type_declaration_no_options . "const"
  658                            | type_declaration_no_options . '-' "const"
  659                            | type_declaration_no_options . '&'
  660                            | type_declaration_no_options . '-' '&'
  661                            | type_declaration_no_options . '#'
  662                            | type_declaration_no_options . "implicit"
  663                            | type_declaration_no_options . '-' '#'
  664                            | type_declaration_no_options . "==" "const"
  665                            | type_declaration_no_options . "==" '&'
  666                            | type_declaration_no_options . '?'
  670                            | type_declaration_no_options . "??"
  784 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' expr_map_tuple_list ')'
  785                | "table" '<' type_declaration_no_options . ';' type_declaration_no_options '>' '(' expr_map_tuple_list ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1013
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    ';'         shift, and go to state 1014
    '#'         shift, and go to state 408


State 823

  780 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 780 (expr_map_tuple_list)


State 824

  781 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  783 make_table_decl: "table" '(' expr_map_tuple_list . ')'

    ','  shift, and go to state 1015
    ')'  shift, and go to state 1016


State 825

  259 expression_delete: "delete" "explicit" expr .
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 259 (expression_delete)


State 826

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  430     | "deref" '(' expr . ')'
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ')'    shift, and go to state 1017


State 827

   79 expression_with: "with" expr expression_block .

    $default  reduce using rule 79 (expression_with)


State 828

   81 expression_with_alias: "assume" "name" '=' . $@5 expr

    $default  reduce using rule 80 ($@5)

    $@5  go to state 1018


State 829

  294 expr_cast: "cast" '<' $@13 . type_declaration_no_options '>' $@14 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1019


State 830

  297 expr_cast: "upcast" '<' $@15 . type_declaration_no_options '>' $@16 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1020


State 831

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  431     | "addr" '(' expr . ')'
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ')'    shift, and go to state 1021


State 832

  300 expr_cast: "reinterpret" '<' $@17 . type_declaration_no_options '>' $@18 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1022


State 833

   54 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 54 (expression_label)


State 834

   55 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 55 (expression_goto)


State 835

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  462     | "unsafe" '(' expr . ')'
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ')'    shift, and go to state 1023


State 836

  777 make_dim_decl: "fixed_array" '<' $@88 . type_declaration_no_options '>' $@89 '(' expr_list ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1024


State 837

  308 expr_list: expr_list . ',' expr
  774 make_dim_decl: "fixed_array" '(' expr_list . ')'

    ','  shift, and go to state 818
    ')'  shift, and go to state 1025


State 838

  308 expr_list: expr_list . ',' expr
  765 make_tuple_call: "tuple" '(' expr_list . ')'

    ','  shift, and go to state 818
    ')'  shift, and go to state 1026


State 839

  432 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  433     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  648 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  649                            | type_declaration_no_options . '[' ']'
  655                            | type_declaration_no_options . '-' '[' ']'
  656                            | type_declaration_no_options . "explicit"
  657                            | type_declaration_no_options . "const"
  658                            | type_declaration_no_options . '-' "const"
  659                            | type_declaration_no_options . '&'
  660                            | type_declaration_no_options . '-' '&'
  661                            | type_declaration_no_options . '#'
  662                            | type_declaration_no_options . "implicit"
  663                            | type_declaration_no_options . '-' '#'
  664                            | type_declaration_no_options . "==" "const"
  665                            | type_declaration_no_options . "==" '&'
  666                            | type_declaration_no_options . '?'
  670                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1027
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 840

  280 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 280 (expression_yield)


State 841

  277 expression_yield_no_pipe: "yield" "<-" expr .
  332 expr_assign: expr .
  333            | expr . '=' expr
  334            | expr . "<-" expr
  335            | expr . ":=" expr
  336            | expr . "&=" expr
  337            | expr . "|=" expr
  338            | expr . "^=" expr
  339            | expr . "&&=" expr
  340            | expr . "||=" expr
  341            | expr . "^^=" expr
  342            | expr . "+=" expr
  343            | expr . "-=" expr
  344            | expr . "*=" expr
  345            | expr . "/=" expr
  346            | expr . "%=" expr
  347            | expr . "<<=" expr
  348            | expr . ">>=" expr
  349            | expr . "<<<=" expr
  350            | expr . ">>>=" expr
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 699
    "as"    shift, and go to state 700
    "+="    shift, and go to state 701
    "-="    shift, and go to state 702
    "/="    shift, and go to state 703
    "*="    shift, and go to state 704
    "%="    shift, and go to state 705
    "&="    shift, and go to state 706
    "|="    shift, and go to state 707
    "^="    shift, and go to state 708
    "<<"    shift, and go to state 709
    ">>"    shift, and go to state 710
    "++"    shift, and go to state 711
    "--"    shift, and go to state 712
    "<="    shift, and go to state 713
    "<<="   shift, and go to state 714
    ">>="   shift, and go to state 715
    ">="    shift, and go to state 716
    "=="    shift, and go to state 717
    "!="    shift, and go to state 718
    "->"    shift, and go to state 719
    "<-"    shift, and go to state 819
    "??"    shift, and go to state 721
    "?."    shift, and go to state 722
    "?["    shift, and go to state 723
    "<|"    shift, and go to state 724
    "|>"    shift, and go to state 725
    ":="    shift, and go to state 726
    "<<<"   shift, and go to state 727
    ">>>"   shift, and go to state 728
    "<<<="  shift, and go to state 729
    ">>>="  shift, and go to state 730
    "&&"    shift, and go to state 731
    "||"    shift, and go to state 732
    "^^"    shift, and go to state 733
    "&&="   shift, and go to state 734
    "||="   shift, and go to state 735
    "^^="   shift, and go to state 736
    ".."    shift, and go to state 737
    '='     shift, and go to state 820
    '?'     shift, and go to state 739
    '|'     shift, and go to state 740
    '^'     shift, and go to state 741
    '&'     shift, and go to state 742
    '<'     shift, and go to state 743
    '>'     shift, and go to state 744
    '-'     shift, and go to state 745
    '+'     shift, and go to state 746
    '*'     shift, and go to state 747
    '/'     shift, and go to state 748
    '%'     shift, and go to state 749
    '.'     shift, and go to state 750
    '['     shift, and go to state 751

    " <|"     reduce using rule 332 (expr_assign)
    $default  reduce using rule 277 (expression_yield_no_pipe)


State 842

  314 block_or_lambda: '@' '@' .

    $default  reduce using rule 314 (block_or_lambda)


State 843

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  464 expr_mtag: "$$" '(' expr . ')'
  472          | expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ')'    shift, and go to state 1028


State 844

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  465 expr_mtag: "$i" '(' expr . ')'
  472          | expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ')'    shift, and go to state 1029


State 845

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  466 expr_mtag: "$v" '(' expr . ')'
  472          | expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ')'    shift, and go to state 1030


State 846

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  467 expr_mtag: "$b" '(' expr . ')'
  472          | expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ')'    shift, and go to state 1031


State 847

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  468 expr_mtag: "$a" '(' expr . ')'
  472          | expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ')'    shift, and go to state 1032


State 848

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  470 expr_mtag: "$c" '(' expr . ')' '(' ')'
  471          | "$c" '(' expr . ')' '(' expr_list ')'
  472          | expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ')'    shift, and go to state 1033


State 849

  595 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  596                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  788 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 1034
    ','   shift, and go to state 606


State 850

  741 optional_block: "where" . expr_block

    '$'  shift, and go to state 489
    '@'  shift, and go to state 654
    '{'  shift, and go to state 284

    expression_block  go to state 505
    block_or_lambda   go to state 525
    expr_block        go to state 1035


State 851

  734 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  735                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1036


State 852

  255 name_in_namespace: "name" .
  256                  | "name" . "::" "name"
  730 make_struct_fields: "name" . copy_or_move expr
  731                   | "name" . ":=" expr

    "<-"  shift, and go to state 605
    ":="  shift, and go to state 1037
    "::"  shift, and go to state 98
    '='   shift, and go to state 607

    $default  reduce using rule 255 (name_in_namespace)

    copy_or_move  go to state 1038


State 853

  390 expr: '-' . expr
  655 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  658                            | type_declaration_no_options '-' . "const"
  660                            | type_declaration_no_options '-' . '&'
  663                            | type_declaration_no_options '-' . '#'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "const"                           shift, and go to state 581
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '&'                               shift, and go to state 582
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '['                               shift, and go to state 583
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284
    '#'                               shift, and go to state 584

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 675
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 854

  417 expr: '(' . expr ')'
  756 make_struct_decl: "[[" type_declaration_no_options '(' . ')' optional_block optional_trailing_delim_sqr_sqr
  757                 | "[[" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    ')'                               shift, and go to state 1039
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 680
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 855

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'
  760 make_tuple: expr .
  761           | expr . "=>" expr

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "=>"   shift, and go to state 1040
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 760 (make_tuple)


State 856

  732 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  733                   | make_struct_fields . ',' "name" ":=" expr
  736                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  737                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  738 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 1041

    $default  reduce using rule 738 (make_struct_dim)


State 857

  739 make_struct_dim: make_struct_dim . ';' make_struct_fields
  754 make_struct_decl: "[[" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 850
    ';'      shift, and go to state 1042

    $default  reduce using rule 740 (optional_block)

    optional_block  go to state 1043


State 858

  755 make_struct_decl: "[[" type_declaration_no_options optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1044
    ",]]"  shift, and go to state 1045
    ']'    shift, and go to state 1046

    optional_trailing_delim_sqr_sqr  go to state 1047


State 859

  762 make_tuple: make_tuple . ',' expr
  766 make_dim: make_tuple .

    ','  shift, and go to state 1048

    $default  reduce using rule 766 (make_dim)


State 860

  767 make_dim: make_dim . ';' make_tuple
  768 make_dim_decl: "[[" type_declaration_no_options make_dim . optional_trailing_semicolon_sqr_sqr

    ";]]"  shift, and go to state 1049
    ']'    shift, and go to state 1050
    ';'    shift, and go to state 1051

    optional_trailing_semicolon_sqr_sqr  go to state 1052


State 861

  595 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  596                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  789 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where '}' ']'

    "in"  shift, and go to state 1053
    ','   shift, and go to state 606


State 862

  417 expr: '(' . expr ')'
  759 make_struct_decl: "[{" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    ')'                               shift, and go to state 1054
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 680
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 863

  739 make_struct_dim: make_struct_dim . ';' make_struct_fields
  758 make_struct_decl: "[{" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"  shift, and go to state 850
    ';'      shift, and go to state 1042

    $default  reduce using rule 740 (optional_block)

    optional_block  go to state 1055


State 864

  767 make_dim: make_dim . ';' make_tuple
  769 make_dim_decl: "[{" type_declaration_no_options make_dim . optional_trailing_semicolon_cur_sqr

    ";}]"  shift, and go to state 1056
    ';'    shift, and go to state 1051
    '}'    shift, and go to state 1057

    optional_trailing_semicolon_cur_sqr  go to state 1058


State 865

  763 make_map_tuple: expr "=>" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1059
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 866

  743 optional_trailing_semicolon_cur_cur: ";}}" .

    $default  reduce using rule 743 (optional_trailing_semicolon_cur_cur)


State 867

  779 make_table: make_table ';' . make_map_tuple

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 668
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_map_tuple          go to state 1060
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 868

  742 optional_trailing_semicolon_cur_cur: '}' . '}'

    '}'  shift, and go to state 1061


State 869

  782 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur .

    $default  reduce using rule 782 (make_table_decl)


State 870

  247 expression_keyword: "keyword" '<' $@7 . type_declaration_no_options '>' $@8 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1062


State 871

  242 expr_keyword: "keyword" expr expression_block .

    $default  reduce using rule 242 (expr_keyword)


State 872

  250 expression_keyword: "type function" '<' $@9 . type_declaration_no_options '>' $@10 '(' optional_expr_list ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1063


State 873

   31 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 31 (string_builder)


State 874

   30 string_builder_body: string_builder_body "{" . expr "}"

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1064
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 875

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   29 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 220
    STRING_CHARACTER_ESC  shift, and go to state 221

    STRING_CHARACTER      [reduce using rule 29 (string_builder_body)]
    STRING_CHARACTER_ESC  [reduce using rule 29 (string_builder_body)]
    $default              reduce using rule 29 (string_builder_body)


State 876

  417 expr: '(' expr ')' .

    $default  reduce using rule 417 (expr)


State 877

  362 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1065


State 878

  479 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1066


State 879

  366 func_addr_expr: '@' '@' '<' . $@21 type_declaration_no_options '>' $@22 func_addr_name
  369               | '@' '@' '<' . $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name

    ':'       reduce using rule 367 ($@23)
    '>'       reduce using rule 367 ($@23)
    '('       reduce using rule 367 ($@23)
    $default  reduce using rule 364 ($@21)

    $@21  go to state 1067
    $@23  go to state 1068


State 880

  361 func_addr_name: name_in_namespace .

    $default  reduce using rule 361 (func_addr_name)


State 881

  363 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 363 (func_addr_expr)


State 882

  217 expression_block: '{' expressions '}' "finally" '{' . expressions '}'

    $default  reduce using rule 239 (expressions)

    expressions  go to state 1069


State 883

   72 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1070
    "elif"         shift, and go to state 1071
    "static_elif"  shift, and go to state 1072

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1073
    expression_else      go to state 1074


State 884

   74 expression_if_then_else: expression_if_one_liner "if" $@3 . expr expression_else_one_liner ';'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1075
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 885

  357 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'

    "$f"    shift, and go to state 851
    "name"  shift, and go to state 1076

    make_struct_fields  go to state 1077


State 886

  425 expr: name_in_namespace '(' ')' .

    $default  reduce using rule 425 (expr)


State 887

  308 expr_list: expr_list . ',' expr
  358 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  426 expr: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1078
    ')'  shift, and go to state 1079


State 888

  288 tuple_expansion_variable_declaration: "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  289                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr ';'

    "name"  shift, and go to state 1080

    tuple_expansion  go to state 1081


State 889

  291 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 291 (expression_let)


State 890

  290 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 290 (expression_let)


State 891

  322 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"  shift, and go to state 1082
    ":="  shift, and go to state 1083
    '='   shift, and go to state 1084
    '&'   shift, and go to state 1085

    capture_entry  go to state 1086
    capture_list   go to state 1087


State 892

  324 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 1088


State 893

  251 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 251 (expr_pipe)


State 894

  438 expr: expr "is" "type" . '<' $@27 type_declaration_no_options '>' $@28

    '<'  shift, and go to state 1089


State 895

  478 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1090


State 896

  440 expr: expr "is" "name" .

    $default  reduce using rule 440 (expr)


State 897

  439 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 439 (expr)


State 898

  444 expr: expr "as" "type" . '<' $@29 type_declaration '>' $@30

    '<'  shift, and go to state 1091


State 899

  476 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1092


State 900

  441 expr: expr "as" "name" .

    $default  reduce using rule 441 (expr)


State 901

  445 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 445 (expr)


State 902

  342 expr_assign: expr "+=" expr .
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 342 (expr_assign)


State 903

  343 expr_assign: expr "-=" expr .
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 343 (expr_assign)


State 904

  345 expr_assign: expr "/=" expr .
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 345 (expr_assign)


State 905

  344 expr_assign: expr "*=" expr .
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 344 (expr_assign)


State 906

  346 expr_assign: expr "%=" expr .
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 346 (expr_assign)


State 907

  336 expr_assign: expr "&=" expr .
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 336 (expr_assign)


State 908

  337 expr_assign: expr "|=" expr .
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 337 (expr_assign)


State 909

  338 expr_assign: expr "^=" expr .
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 338 (expr_assign)


State 910

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  391     | expr "<<" expr .
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 699
    "as"  shift, and go to state 700
    "++"  shift, and go to state 711
    "--"  shift, and go to state 712
    "->"  shift, and go to state 719
    "??"  shift, and go to state 721
    "?."  shift, and go to state 722
    "?["  shift, and go to state 723
    "<|"  shift, and go to state 724
    "|>"  shift, and go to state 725
    '-'   shift, and go to state 745
    '+'   shift, and go to state 746
    '*'   shift, and go to state 747
    '/'   shift, and go to state 748
    '%'   shift, and go to state 749
    '.'   shift, and go to state 750
    '['   shift, and go to state 751

    $default  reduce using rule 391 (expr)


State 911

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  392     | expr ">>" expr .
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 699
    "as"  shift, and go to state 700
    "++"  shift, and go to state 711
    "--"  shift, and go to state 712
    "->"  shift, and go to state 719
    "??"  shift, and go to state 721
    "?."  shift, and go to state 722
    "?["  shift, and go to state 723
    "<|"  shift, and go to state 724
    "|>"  shift, and go to state 725
    '-'   shift, and go to state 745
    '+'   shift, and go to state 746
    '*'   shift, and go to state 747
    '/'   shift, and go to state 748
    '%'   shift, and go to state 749
    '.'   shift, and go to state 750
    '['   shift, and go to state 751

    $default  reduce using rule 392 (expr)


State 912

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  404     | expr "<=" expr .
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 404 (expr)


State 913

  347 expr_assign: expr "<<=" expr .
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 347 (expr_assign)


State 914

  348 expr_assign: expr ">>=" expr .
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 348 (expr_assign)


State 915

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  405     | expr ">=" expr .
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 405 (expr)


State 916

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  402     | expr "==" expr .
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 402 (expr)


State 917

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  403     | expr "!=" expr .
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 403 (expr)


State 918

  359 expr_method_call: expr "->" "name" . '(' ')'
  360                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1093


State 919

  356 expr_assign_pipe: expr "<-" "$ <|" . expr_block

    '$'  shift, and go to state 489
    '@'  shift, and go to state 654
    '{'  shift, and go to state 284

    expression_block  go to state 505
    block_or_lambda   go to state 525
    expr_block        go to state 1094


State 920

  354 expr_assign_pipe: expr "<-" "@ <|" . expr_block

    '$'  shift, and go to state 489
    '@'  shift, and go to state 654
    '{'  shift, and go to state 284

    expression_block  go to state 505
    block_or_lambda   go to state 525
    expr_block        go to state 1095


State 921

  355 expr_assign_pipe: expr "<-" "@@ <|" . expr_block

    '$'  shift, and go to state 489
    '@'  shift, and go to state 654
    '{'  shift, and go to state 284

    expression_block  go to state 505
    block_or_lambda   go to state 525
    expr_block        go to state 1096


State 922

  334 expr_assign: expr "<-" expr .
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 334 (expr_assign)


State 923

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  434     | expr "??" expr .
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 699
    "as"  shift, and go to state 700
    "++"  shift, and go to state 711
    "--"  shift, and go to state 712
    "->"  shift, and go to state 719
    "??"  shift, and go to state 721
    "?."  shift, and go to state 722
    "?["  shift, and go to state 723
    "<|"  shift, and go to state 724
    "|>"  shift, and go to state 725
    '.'   shift, and go to state 750
    '['   shift, and go to state 751

    $default  reduce using rule 434 (expr)


State 924

  473 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1097


State 925

  422 expr: expr "?." "name" .

    $default  reduce using rule 422 (expr)


State 926

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  420     | expr "?[" expr . ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ']'    shift, and go to state 1098


State 927

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  458     | expr "<|" expr .
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 719
    "?."  shift, and go to state 722
    "?["  shift, and go to state 723
    '.'   shift, and go to state 750
    '['   shift, and go to state 751

    $default  reduce using rule 458 (expr)


State 928

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  459     | expr "|>" expr .
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 719
    "?."  shift, and go to state 722
    "?["  shift, and go to state 723
    '.'   shift, and go to state 750
    '['   shift, and go to state 751

    $default  reduce using rule 459 (expr)


State 929

  427 expr: basic_type_declaration . '(' ')'
  428     | basic_type_declaration . '(' expr_list ')'
  460     | expr "|>" basic_type_declaration .

    '('  shift, and go to state 752

    $default  reduce using rule 460 (expr)


State 930

  335 expr_assign: expr ":=" expr .
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 335 (expr_assign)


State 931

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  393     | expr "<<<" expr .
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 699
    "as"  shift, and go to state 700
    "++"  shift, and go to state 711
    "--"  shift, and go to state 712
    "->"  shift, and go to state 719
    "??"  shift, and go to state 721
    "?."  shift, and go to state 722
    "?["  shift, and go to state 723
    "<|"  shift, and go to state 724
    "|>"  shift, and go to state 725
    '-'   shift, and go to state 745
    '+'   shift, and go to state 746
    '*'   shift, and go to state 747
    '/'   shift, and go to state 748
    '%'   shift, and go to state 749
    '.'   shift, and go to state 750
    '['   shift, and go to state 751

    $default  reduce using rule 393 (expr)


State 932

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  394     | expr ">>>" expr .
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 699
    "as"  shift, and go to state 700
    "++"  shift, and go to state 711
    "--"  shift, and go to state 712
    "->"  shift, and go to state 719
    "??"  shift, and go to state 721
    "?."  shift, and go to state 722
    "?["  shift, and go to state 723
    "<|"  shift, and go to state 724
    "|>"  shift, and go to state 725
    '-'   shift, and go to state 745
    '+'   shift, and go to state 746
    '*'   shift, and go to state 747
    '/'   shift, and go to state 748
    '%'   shift, and go to state 749
    '.'   shift, and go to state 750
    '['   shift, and go to state 751

    $default  reduce using rule 394 (expr)


State 933

  349 expr_assign: expr "<<<=" expr .
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 349 (expr_assign)


State 934

  350 expr_assign: expr ">>>=" expr .
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 350 (expr_assign)


State 935

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  409     | expr "&&" expr .
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 409 (expr)


State 936

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  410     | expr "||" expr .
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "^^"   shift, and go to state 733
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 410 (expr)


State 937

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  411     | expr "^^" expr .
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 411 (expr)


State 938

  339 expr_assign: expr "&&=" expr .
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 339 (expr_assign)


State 939

  340 expr_assign: expr "||=" expr .
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 340 (expr_assign)


State 940

  341 expr_assign: expr "^^=" expr .
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 341 (expr_assign)


State 941

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  412     | expr ".." expr .
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    ".."  error (nonassociative)

    $default  reduce using rule 412 (expr)


State 942

  353 expr_assign_pipe: expr '=' "$ <|" . expr_block

    '$'  shift, and go to state 489
    '@'  shift, and go to state 654
    '{'  shift, and go to state 284

    expression_block  go to state 505
    block_or_lambda   go to state 525
    expr_block        go to state 1099


State 943

  351 expr_assign_pipe: expr '=' "@ <|" . expr_block

    '$'  shift, and go to state 489
    '@'  shift, and go to state 654
    '{'  shift, and go to state 284

    expression_block  go to state 505
    block_or_lambda   go to state 525
    expr_block        go to state 1100


State 944

  352 expr_assign_pipe: expr '=' "@@ <|" . expr_block

    '$'  shift, and go to state 489
    '@'  shift, and go to state 654
    '{'  shift, and go to state 284

    expression_block  go to state 505
    block_or_lambda   go to state 525
    expr_block        go to state 1101


State 945

  333 expr_assign: expr '=' expr .
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 333 (expr_assign)


State 946

  446 expr: expr '?' "as" . "name"
  449     | expr '?' "as" . "type" '<' $@31 type_declaration '>' $@32
  450     | expr '?' "as" . basic_type_declaration
  477 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1102
    "bool"      shift, and go to state 310
    "void"      shift, and go to state 311
    "string"    shift, and go to state 312
    "int"       shift, and go to state 314
    "int2"      shift, and go to state 315
    "int3"      shift, and go to state 316
    "int4"      shift, and go to state 317
    "uint"      shift, and go to state 318
    "bitfield"  shift, and go to state 454
    "uint2"     shift, and go to state 320
    "uint3"     shift, and go to state 321
    "uint4"     shift, and go to state 322
    "float"     shift, and go to state 323
    "float2"    shift, and go to state 324
    "float3"    shift, and go to state 325
    "float4"    shift, and go to state 326
    "range"     shift, and go to state 327
    "urange"    shift, and go to state 328
    "range64"   shift, and go to state 329
    "urange64"  shift, and go to state 330
    "int64"     shift, and go to state 332
    "uint64"    shift, and go to state 333
    "double"    shift, and go to state 334
    "int8"      shift, and go to state 337
    "uint8"     shift, and go to state 338
    "int16"     shift, and go to state 339
    "uint16"    shift, and go to state 340
    "$f"        shift, and go to state 1103
    "name"      shift, and go to state 1104

    basic_type_declaration  go to state 1105


State 947

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  435     | expr '?' expr . ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    ':'    shift, and go to state 1106
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751


State 948

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  407     | expr '|' expr .
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 407 (expr)


State 949

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  408     | expr '^' expr .
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 408 (expr)


State 950

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  406     | expr '&' expr .
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 406 (expr)


State 951

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  400     | expr '<' expr .
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 400 (expr)


State 952

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  401     | expr '>' expr .
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 401 (expr)


State 953

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  396     | expr '-' expr .
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 699
    "as"  shift, and go to state 700
    "++"  shift, and go to state 711
    "--"  shift, and go to state 712
    "->"  shift, and go to state 719
    "??"  shift, and go to state 721
    "?."  shift, and go to state 722
    "?["  shift, and go to state 723
    "<|"  shift, and go to state 724
    "|>"  shift, and go to state 725
    '*'   shift, and go to state 747
    '/'   shift, and go to state 748
    '%'   shift, and go to state 749
    '.'   shift, and go to state 750
    '['   shift, and go to state 751

    $default  reduce using rule 396 (expr)


State 954

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  395     | expr '+' expr .
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 699
    "as"  shift, and go to state 700
    "++"  shift, and go to state 711
    "--"  shift, and go to state 712
    "->"  shift, and go to state 719
    "??"  shift, and go to state 721
    "?."  shift, and go to state 722
    "?["  shift, and go to state 723
    "<|"  shift, and go to state 724
    "|>"  shift, and go to state 725
    '*'   shift, and go to state 747
    '/'   shift, and go to state 748
    '%'   shift, and go to state 749
    '.'   shift, and go to state 750
    '['   shift, and go to state 751

    $default  reduce using rule 395 (expr)


State 955

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  397     | expr '*' expr .
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 699
    "as"  shift, and go to state 700
    "++"  shift, and go to state 711
    "--"  shift, and go to state 712
    "->"  shift, and go to state 719
    "??"  shift, and go to state 721
    "?."  shift, and go to state 722
    "?["  shift, and go to state 723
    "<|"  shift, and go to state 724
    "|>"  shift, and go to state 725
    '.'   shift, and go to state 750
    '['   shift, and go to state 751

    $default  reduce using rule 397 (expr)


State 956

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  398     | expr '/' expr .
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 699
    "as"  shift, and go to state 700
    "++"  shift, and go to state 711
    "--"  shift, and go to state 712
    "->"  shift, and go to state 719
    "??"  shift, and go to state 721
    "?."  shift, and go to state 722
    "?["  shift, and go to state 723
    "<|"  shift, and go to state 724
    "|>"  shift, and go to state 725
    '.'   shift, and go to state 750
    '['   shift, and go to state 751

    $default  reduce using rule 398 (expr)


State 957

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  399     | expr '%' expr .
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 699
    "as"  shift, and go to state 700
    "++"  shift, and go to state 711
    "--"  shift, and go to state 712
    "->"  shift, and go to state 719
    "??"  shift, and go to state 721
    "?."  shift, and go to state 722
    "?["  shift, and go to state 723
    "<|"  shift, and go to state 724
    "|>"  shift, and go to state 725
    '.'   shift, and go to state 750
    '['   shift, and go to state 751

    $default  reduce using rule 399 (expr)


State 958

  423 expr: expr '.' "?." . "name"
  475 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1107
    "name"  shift, and go to state 1108


State 959

  421 expr: expr '.' "?[" . expr ']'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1109
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 960

  472 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1110


State 961

  370 expr_field: expr '.' "name" .
  372           | expr '.' "name" . '(' ')'
  373           | expr '.' "name" . '(' expr_list ')'

    '('  shift, and go to state 1111

    '('       [reduce using rule 370 (expr_field)]
    $default  reduce using rule 370 (expr_field)


State 962

  371 expr_field: expr '.' '.' . "name"
  474 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1112
    "name"  shift, and go to state 1113


State 963

  419 expr: expr '.' '[' . expr ']'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1114
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 964

  376 expr_field: expr '.' $@25 . error $@26

    error  shift, and go to state 1115


State 965

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  418     | expr '[' expr . ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ']'    shift, and go to state 1116


State 966

  427 expr: basic_type_declaration '(' ')' .

    $default  reduce using rule 427 (expr)


State 967

  308 expr_list: expr_list . ',' expr
  428 expr: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 818
    ')'  shift, and go to state 1117


State 968

  576 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@42 enum_list $@43 . '}'

    '}'  shift, and go to state 1118


State 969

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'
  556 enum_list: enum_list "name" '=' expr . ';'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ';'    shift, and go to state 1119


State 970

  116 annotation_list: annotation_list . ',' annotation_declaration
  118 optional_annotation_list: '[' annotation_list . ']'
  500 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' ';'

    ','  shift, and go to state 107
    ']'  shift, and go to state 1120


State 971

  497 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header ';'
  499                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block

    "public"   shift, and go to state 1121
    "private"  shift, and go to state 1122

    $default  reduce using rule 487 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1123


State 972

  492 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1124

    $default  reduce using rule 490 (optional_static_member_variable)

    optional_static_member_variable  go to state 1125


State 973

  495 struct_variable_declaration_list: struct_variable_declaration_list $@33 structure_variable_declaration . ';'

    ';'  shift, and go to state 1126


State 974

  536 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 536 (let_variable_name_with_pos_list)


State 975

  539 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 539 (let_variable_declaration)


State 976

  332 expr_assign: expr .
  333            | expr . '=' expr
  334            | expr . "<-" expr
  335            | expr . ":=" expr
  336            | expr . "&=" expr
  337            | expr . "|=" expr
  338            | expr . "^=" expr
  339            | expr . "&&=" expr
  340            | expr . "||=" expr
  341            | expr . "^^=" expr
  342            | expr . "+=" expr
  343            | expr . "-=" expr
  344            | expr . "*=" expr
  345            | expr . "/=" expr
  346            | expr . "%=" expr
  347            | expr . "<<=" expr
  348            | expr . ">>=" expr
  349            | expr . "<<<=" expr
  350            | expr . ">>>=" expr
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'
  538 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 699
    "as"    shift, and go to state 700
    "+="    shift, and go to state 701
    "-="    shift, and go to state 702
    "/="    shift, and go to state 703
    "*="    shift, and go to state 704
    "%="    shift, and go to state 705
    "&="    shift, and go to state 706
    "|="    shift, and go to state 707
    "^="    shift, and go to state 708
    "<<"    shift, and go to state 709
    ">>"    shift, and go to state 710
    "++"    shift, and go to state 711
    "--"    shift, and go to state 712
    "<="    shift, and go to state 713
    "<<="   shift, and go to state 714
    ">>="   shift, and go to state 715
    ">="    shift, and go to state 716
    "=="    shift, and go to state 717
    "!="    shift, and go to state 718
    "->"    shift, and go to state 719
    "<-"    shift, and go to state 819
    "??"    shift, and go to state 721
    "?."    shift, and go to state 722
    "?["    shift, and go to state 723
    "<|"    shift, and go to state 724
    "|>"    shift, and go to state 725
    ":="    shift, and go to state 726
    "<<<"   shift, and go to state 727
    ">>>"   shift, and go to state 728
    "<<<="  shift, and go to state 729
    ">>>="  shift, and go to state 730
    "&&"    shift, and go to state 731
    "||"    shift, and go to state 732
    "^^"    shift, and go to state 733
    "&&="   shift, and go to state 734
    "||="   shift, and go to state 735
    "^^="   shift, and go to state 736
    ".."    shift, and go to state 737
    '='     shift, and go to state 820
    '?'     shift, and go to state 739
    '|'     shift, and go to state 740
    '^'     shift, and go to state 741
    '&'     shift, and go to state 742
    '<'     shift, and go to state 743
    '>'     shift, and go to state 744
    '-'     shift, and go to state 745
    '+'     shift, and go to state 746
    '*'     shift, and go to state 747
    '/'     shift, and go to state 748
    '%'     shift, and go to state 749
    '.'     shift, and go to state 750
    '['     shift, and go to state 751
    ';'     shift, and go to state 1127

    $default  reduce using rule 332 (expr_assign)


State 977

  540 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';' .

    $default  reduce using rule 540 (let_variable_declaration)


State 978

  652 type_declaration_no_options: "type" '<' $@48 type_declaration '>' . $@49

    $default  reduce using rule 651 ($@49)

    $@49  go to state 1128


State 979

  673 type_declaration_no_options: "array" '<' $@52 type_declaration '>' . $@53

    $default  reduce using rule 672 ($@53)

    $@53  go to state 1129


State 980

  676 type_declaration_no_options: "table" '<' $@54 table_type_pair '>' . $@55

    $default  reduce using rule 675 ($@55)

    $@55  go to state 1130


State 981

  643 table_type_pair: type_declaration ';' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1131


State 982

  679 type_declaration_no_options: "iterator" '<' $@56 type_declaration '>' . $@57

    $default  reduce using rule 678 ($@57)

    $@57  go to state 1132


State 983

  669 type_declaration_no_options: "smart_ptr" '<' $@50 type_declaration '>' . $@51

    $default  reduce using rule 668 ($@51)

    $@51  go to state 1133


State 984

  641 bitfield_type_declaration: "bitfield" '<' $@46 bitfield_bits '>' . $@47

    $default  reduce using rule 640 ($@47)

    $@47  go to state 1134


State 985

  635 bitfield_bits: bitfield_bits ';' . "name"

    "name"  shift, and go to state 1135


State 986

  683 type_declaration_no_options: "block" '<' $@58 type_declaration '>' . $@59

    $default  reduce using rule 682 ($@59)

    $@59  go to state 1136


State 987

  686 type_declaration_no_options: "block" '<' $@60 optional_function_argument_list optional_function_type . '>' $@61

    '>'  shift, and go to state 1137


State 988

  690 type_declaration_no_options: "function" '<' $@62 type_declaration '>' . $@63

    $default  reduce using rule 689 ($@63)

    $@63  go to state 1138


State 989

  693 type_declaration_no_options: "function" '<' $@64 optional_function_argument_list optional_function_type . '>' $@65

    '>'  shift, and go to state 1139


State 990

  697 type_declaration_no_options: "lambda" '<' $@66 type_declaration '>' . $@67

    $default  reduce using rule 696 ($@67)

    $@67  go to state 1140


State 991

  700 type_declaration_no_options: "lambda" '<' $@68 optional_function_argument_list optional_function_type . '>' $@69

    '>'  shift, and go to state 1141


State 992

  703 type_declaration_no_options: "tuple" '<' $@70 tuple_type_list '>' . $@71

    $default  reduce using rule 702 ($@71)

    $@71  go to state 1142


State 993

  509 tuple_type_list: tuple_type_list ';' . tuple_type

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 592
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    tuple_type                   go to state 1143
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 595


State 994

  706 type_declaration_no_options: "variant" '<' $@72 variant_type_list '>' . $@73

    $default  reduce using rule 705 ($@73)

    $@73  go to state 1144


State 995

  515 variant_type_list: variant_type_list ';' . variant_type

    "name"  shift, and go to state 597

    variant_type  go to state 1145


State 996

  654 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 654 (type_declaration_no_options)


State 997

  507 tuple_type: "name" ':' type_declaration .
  708 type_declaration: type_declaration . '|' type_declaration_no_options
  709                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409

    $default  reduce using rule 507 (tuple_type)


State 998

  513 variant_type: "name" ':' type_declaration .
  708 type_declaration: type_declaration . '|' type_declaration_no_options
  709                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409

    $default  reduce using rule 513 (variant_type)


State 999

  593 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 593 (variable_name_with_pos_list)


State 1000

  596 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1146


State 1001

  524 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1147
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1002

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" . expr_list expression_block

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    expr_list               go to state 1148
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 790
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1003

  262 new_type_declaration: '<' $@11 type_declaration . '>' $@12
  708 type_declaration: type_declaration . '|' type_declaration_no_options
  709                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409
    '>'  shift, and go to state 1149


State 1004

  265 expr_new: "new" new_type_declaration '(' ')' .

    $default  reduce using rule 265 (expr_new)


State 1005

  266 expr_new: "new" new_type_declaration '(' expr_list . ')'
  308 expr_list: expr_list . ',' expr

    ','  shift, and go to state 818
    ')'  shift, and go to state 1150


State 1006

  305 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  306               | "typeinfo" '(' name_in_namespace '<' . "name" ';' "name" '>' expr ')'

    "name"  shift, and go to state 1151


State 1007

  304 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ')'    shift, and go to state 1152


State 1008

  303 expr_type_decl: "type" '<' $@19 type_declaration . '>' $@20
  708 type_declaration: type_declaration . '|' type_declaration_no_options
  709                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409
    '>'  shift, and go to state 1153


State 1009

  648 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  649                            | type_declaration_no_options . '[' ']'
  655                            | type_declaration_no_options . '-' '[' ']'
  656                            | type_declaration_no_options . "explicit"
  657                            | type_declaration_no_options . "const"
  658                            | type_declaration_no_options . '-' "const"
  659                            | type_declaration_no_options . '&'
  660                            | type_declaration_no_options . '-' '&'
  661                            | type_declaration_no_options . '#'
  662                            | type_declaration_no_options . "implicit"
  663                            | type_declaration_no_options . '-' '#'
  664                            | type_declaration_no_options . "==" "const"
  665                            | type_declaration_no_options . "==" '&'
  666                            | type_declaration_no_options . '?'
  670                            | type_declaration_no_options . "??"
  773 make_dim_decl: "array" '<' $@86 type_declaration_no_options . '>' $@87 '(' expr_list ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1154
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1010

  770 make_dim_decl: "array" '(' expr_list ')' .

    $default  reduce using rule 770 (make_dim_decl)


State 1011

  308 expr_list: expr_list ',' expr .
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 308 (expr_list)


State 1012

  281 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 281 (expression_try_catch)


State 1013

  784 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' expr_map_tuple_list ')'

    '('  shift, and go to state 1155


State 1014

  785 make_table_decl: "table" '<' type_declaration_no_options ';' . type_declaration_no_options '>' '(' expr_map_tuple_list ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1156


State 1015

  781 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 668
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_map_tuple          go to state 1157
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1016

  783 make_table_decl: "table" '(' expr_map_tuple_list ')' .

    $default  reduce using rule 783 (make_table_decl)


State 1017

  430 expr: "deref" '(' expr ')' .

    $default  reduce using rule 430 (expr)


State 1018

   81 expression_with_alias: "assume" "name" '=' $@5 . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1158
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1019

  294 expr_cast: "cast" '<' $@13 type_declaration_no_options . '>' $@14 expr
  648 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  649                            | type_declaration_no_options . '[' ']'
  655                            | type_declaration_no_options . '-' '[' ']'
  656                            | type_declaration_no_options . "explicit"
  657                            | type_declaration_no_options . "const"
  658                            | type_declaration_no_options . '-' "const"
  659                            | type_declaration_no_options . '&'
  660                            | type_declaration_no_options . '-' '&'
  661                            | type_declaration_no_options . '#'
  662                            | type_declaration_no_options . "implicit"
  663                            | type_declaration_no_options . '-' '#'
  664                            | type_declaration_no_options . "==" "const"
  665                            | type_declaration_no_options . "==" '&'
  666                            | type_declaration_no_options . '?'
  670                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1159
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1020

  297 expr_cast: "upcast" '<' $@15 type_declaration_no_options . '>' $@16 expr
  648 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  649                            | type_declaration_no_options . '[' ']'
  655                            | type_declaration_no_options . '-' '[' ']'
  656                            | type_declaration_no_options . "explicit"
  657                            | type_declaration_no_options . "const"
  658                            | type_declaration_no_options . '-' "const"
  659                            | type_declaration_no_options . '&'
  660                            | type_declaration_no_options . '-' '&'
  661                            | type_declaration_no_options . '#'
  662                            | type_declaration_no_options . "implicit"
  663                            | type_declaration_no_options . '-' '#'
  664                            | type_declaration_no_options . "==" "const"
  665                            | type_declaration_no_options . "==" '&'
  666                            | type_declaration_no_options . '?'
  670                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1160
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1021

  431 expr: "addr" '(' expr ')' .

    $default  reduce using rule 431 (expr)


State 1022

  300 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options . '>' $@18 expr
  648 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  649                            | type_declaration_no_options . '[' ']'
  655                            | type_declaration_no_options . '-' '[' ']'
  656                            | type_declaration_no_options . "explicit"
  657                            | type_declaration_no_options . "const"
  658                            | type_declaration_no_options . '-' "const"
  659                            | type_declaration_no_options . '&'
  660                            | type_declaration_no_options . '-' '&'
  661                            | type_declaration_no_options . '#'
  662                            | type_declaration_no_options . "implicit"
  663                            | type_declaration_no_options . '-' '#'
  664                            | type_declaration_no_options . "==" "const"
  665                            | type_declaration_no_options . "==" '&'
  666                            | type_declaration_no_options . '?'
  670                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1161
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1023

  462 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 462 (expr)


State 1024

  648 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  649                            | type_declaration_no_options . '[' ']'
  655                            | type_declaration_no_options . '-' '[' ']'
  656                            | type_declaration_no_options . "explicit"
  657                            | type_declaration_no_options . "const"
  658                            | type_declaration_no_options . '-' "const"
  659                            | type_declaration_no_options . '&'
  660                            | type_declaration_no_options . '-' '&'
  661                            | type_declaration_no_options . '#'
  662                            | type_declaration_no_options . "implicit"
  663                            | type_declaration_no_options . '-' '#'
  664                            | type_declaration_no_options . "==" "const"
  665                            | type_declaration_no_options . "==" '&'
  666                            | type_declaration_no_options . '?'
  670                            | type_declaration_no_options . "??"
  777 make_dim_decl: "fixed_array" '<' $@88 type_declaration_no_options . '>' $@89 '(' expr_list ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1162
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1025

  774 make_dim_decl: "fixed_array" '(' expr_list ')' .

    $default  reduce using rule 774 (make_dim_decl)


State 1026

  765 make_tuple_call: "tuple" '(' expr_list ')' .

    $default  reduce using rule 765 (make_tuple_call)


State 1027

  432 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  433     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "[["  shift, and go to state 891

    $default  reduce using rule 321 (optional_capture_list)

    optional_capture_list  go to state 1163


State 1028

  464 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 464 (expr_mtag)


State 1029

  465 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 465 (expr_mtag)


State 1030

  466 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 466 (expr_mtag)


State 1031

  467 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 467 (expr_mtag)


State 1032

  468 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 468 (expr_mtag)


State 1033

  470 expr_mtag: "$c" '(' expr ')' . '(' ')'
  471          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1164


State 1034

  788 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where ']' ']'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    expr_list               go to state 1165
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 790
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1035

  741 optional_block: "where" expr_block .

    $default  reduce using rule 741 (optional_block)


State 1036

  734 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  735                   | "$f" '(' . expr ')' ":=" expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1166
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1037

  731 make_struct_fields: "name" ":=" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1167
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1038

  730 make_struct_fields: "name" copy_or_move . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1168
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1039

  756 make_struct_decl: "[[" type_declaration_no_options '(' ')' . optional_block optional_trailing_delim_sqr_sqr
  757                 | "[[" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 850
    "$f"     shift, and go to state 851
    "name"   shift, and go to state 1076

    $default  reduce using rule 740 (optional_block)

    make_struct_fields  go to state 856
    make_struct_dim     go to state 1169
    optional_block      go to state 1170


State 1040

  761 make_tuple: expr "=>" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1171
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1041

  732 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  733                   | make_struct_fields ',' . "name" ":=" expr
  736                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  737                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1172
    "name"  shift, and go to state 1173


State 1042

  739 make_struct_dim: make_struct_dim ';' . make_struct_fields

    "$f"    shift, and go to state 851
    "name"  shift, and go to state 1076

    make_struct_fields  go to state 1174


State 1043

  754 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1044
    ",]]"  shift, and go to state 1045
    ']'    shift, and go to state 1046

    optional_trailing_delim_sqr_sqr  go to state 1175


State 1044

  749 optional_trailing_delim_sqr_sqr: ";]]" .

    $default  reduce using rule 749 (optional_trailing_delim_sqr_sqr)


State 1045

  750 optional_trailing_delim_sqr_sqr: ",]]" .

    $default  reduce using rule 750 (optional_trailing_delim_sqr_sqr)


State 1046

  748 optional_trailing_delim_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1176


State 1047

  755 make_struct_decl: "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 755 (make_struct_decl)


State 1048

  762 make_tuple: make_tuple ',' . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1177
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1049

  747 optional_trailing_semicolon_sqr_sqr: ";]]" .

    $default  reduce using rule 747 (optional_trailing_semicolon_sqr_sqr)


State 1050

  746 optional_trailing_semicolon_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1178


State 1051

  767 make_dim: make_dim ';' . make_tuple

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 855
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple              go to state 1179
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1052

  768 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr .

    $default  reduce using rule 768 (make_dim_decl)


State 1053

  789 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where '}' ']'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    expr_list               go to state 1180
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 790
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1054

  759 make_struct_decl: "[{" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "$f"    shift, and go to state 851
    "name"  shift, and go to state 1076

    make_struct_fields  go to state 856
    make_struct_dim     go to state 1181


State 1055

  758 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    ";}]"  shift, and go to state 1182
    ",}]"  shift, and go to state 1183
    '}'    shift, and go to state 1184

    optional_trailing_delim_cur_sqr  go to state 1185


State 1056

  745 optional_trailing_semicolon_cur_sqr: ";}]" .

    $default  reduce using rule 745 (optional_trailing_semicolon_cur_sqr)


State 1057

  744 optional_trailing_semicolon_cur_sqr: '}' . ']'

    ']'  shift, and go to state 1186


State 1058

  769 make_dim_decl: "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr .

    $default  reduce using rule 769 (make_dim_decl)


State 1059

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'
  763 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 763 (make_map_tuple)


State 1060

  779 make_table: make_table ';' make_map_tuple .

    $default  reduce using rule 779 (make_table)


State 1061

  742 optional_trailing_semicolon_cur_cur: '}' '}' .

    $default  reduce using rule 742 (optional_trailing_semicolon_cur_cur)


State 1062

  247 expression_keyword: "keyword" '<' $@7 type_declaration_no_options . '>' $@8 expr
  648 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  649                            | type_declaration_no_options . '[' ']'
  655                            | type_declaration_no_options . '-' '[' ']'
  656                            | type_declaration_no_options . "explicit"
  657                            | type_declaration_no_options . "const"
  658                            | type_declaration_no_options . '-' "const"
  659                            | type_declaration_no_options . '&'
  660                            | type_declaration_no_options . '-' '&'
  661                            | type_declaration_no_options . '#'
  662                            | type_declaration_no_options . "implicit"
  663                            | type_declaration_no_options . '-' '#'
  664                            | type_declaration_no_options . "==" "const"
  665                            | type_declaration_no_options . "==" '&'
  666                            | type_declaration_no_options . '?'
  670                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1187
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1063

  250 expression_keyword: "type function" '<' $@9 type_declaration_no_options . '>' $@10 '(' optional_expr_list ')'
  648 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  649                            | type_declaration_no_options . '[' ']'
  655                            | type_declaration_no_options . '-' '[' ']'
  656                            | type_declaration_no_options . "explicit"
  657                            | type_declaration_no_options . "const"
  658                            | type_declaration_no_options . '-' "const"
  659                            | type_declaration_no_options . '&'
  660                            | type_declaration_no_options . '-' '&'
  661                            | type_declaration_no_options . '#'
  662                            | type_declaration_no_options . "implicit"
  663                            | type_declaration_no_options . '-' '#'
  664                            | type_declaration_no_options . "==" "const"
  665                            | type_declaration_no_options . "==" '&'
  666                            | type_declaration_no_options . '?'
  670                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1188
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1064

   30 string_builder_body: string_builder_body "{" expr . "}"
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    "}"    shift, and go to state 1189
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751


State 1065

  362 func_addr_name: "$i" '(' . expr ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1190
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1066

  479 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1191
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1067

  366 func_addr_expr: '@' '@' '<' $@21 . type_declaration_no_options '>' $@22 func_addr_name

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1192


State 1068

  369 func_addr_expr: '@' '@' '<' $@23 . optional_function_argument_list optional_function_type '>' $@24 func_addr_name

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 1193


State 1069

  217 expression_block: '{' expressions '}' "finally" '{' expressions . '}'
  240 expressions: expressions . expression_any
  241            | expressions . error

    error                             shift, and go to state 424
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 425
    "if"                              shift, and go to state 426
    "static_if"                       shift, and go to state 427
    "for"                             shift, and go to state 428
    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "return"                          shift, and go to state 435
    "null"                            shift, and go to state 436
    "break"                           shift, and go to state 437
    "try"                             shift, and go to state 438
    "table"                           shift, and go to state 439
    "delete"                          shift, and go to state 440
    "deref"                           shift, and go to state 441
    "with"                            shift, and go to state 442
    "assume"                          shift, and go to state 443
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 446
    "continue"                        shift, and go to state 447
    "pass"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 449
    "label"                           shift, and go to state 450
    "goto"                            shift, and go to state 451
    "unsafe"                          shift, and go to state 452
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "yield"                           shift, and go to state 457
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "$ <|"                            shift, and go to state 460
    "@ <|"                            shift, and go to state 461
    "@@ <|"                           shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 480
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    ';'                               shift, and go to state 491
    '{'                               shift, and go to state 284
    '}'                               shift, and go to state 1194

    string_builder             go to state 493
    expr_reader                go to state 494
    expression_label           go to state 495
    expression_goto            go to state 496
    if_or_static_if            go to state 497
    expression_if_one_liner    go to state 498
    expression_if_then_else    go to state 499
    expression_for_loop        go to state 500
    expression_unsafe          go to state 501
    expression_while_loop      go to state 502
    expression_with            go to state 503
    expression_with_alias      go to state 504
    expression_block           go to state 505
    expression_any             go to state 506
    expr_keyword               go to state 507
    expression_keyword         go to state 508
    expr_pipe                  go to state 509
    name_in_namespace          go to state 510
    expression_delete          go to state 511
    expr_new                   go to state 512
    expression_break           go to state 513
    expression_continue        go to state 514
    expression_return_no_pipe  go to state 515
    expression_return          go to state 516
    expression_yield_no_pipe   go to state 517
    expression_yield           go to state 518
    expression_try_catch       go to state 519
    kwd_let                    go to state 520
    expression_let             go to state 521
    expr_cast                  go to state 522
    expr_type_decl             go to state 523
    expr_type_info             go to state 524
    block_or_lambda            go to state 525
    expr_block                 go to state 526
    expr_numeric_const         go to state 527
    expr_assign                go to state 528
    expr_assign_pipe           go to state 529
    expr_named_call            go to state 530
    expr_method_call           go to state 531
    func_addr_expr             go to state 532
    expr_field                 go to state 533
    expr                       go to state 534
    expr_mtag                  go to state 535
    basic_type_declaration     go to state 536
    make_decl                  go to state 537
    make_struct_decl           go to state 538
    make_tuple_call            go to state 539
    make_dim_decl              go to state 540
    make_table_decl            go to state 541
    array_comprehension        go to state 542


State 1070

   60 expression_else: "else" . expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 1195


State 1071

   57 elif_or_static_elif: "elif" .

    $default  reduce using rule 57 (elif_or_static_elif)


State 1072

   58 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 58 (elif_or_static_elif)


State 1073

   61 expression_else: elif_or_static_elif . expr expression_block expression_else

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1196
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1074

   72 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 72 (expression_if_then_else)


State 1075

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr . expression_else_one_liner ';'
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1197
    "is"    shift, and go to state 699
    "as"    shift, and go to state 700
    "<<"    shift, and go to state 709
    ">>"    shift, and go to state 710
    "++"    shift, and go to state 711
    "--"    shift, and go to state 712
    "<="    shift, and go to state 713
    ">="    shift, and go to state 716
    "=="    shift, and go to state 717
    "!="    shift, and go to state 718
    "->"    shift, and go to state 719
    "??"    shift, and go to state 721
    "?."    shift, and go to state 722
    "?["    shift, and go to state 723
    "<|"    shift, and go to state 724
    "|>"    shift, and go to state 725
    "<<<"   shift, and go to state 727
    ">>>"   shift, and go to state 728
    "&&"    shift, and go to state 731
    "||"    shift, and go to state 732
    "^^"    shift, and go to state 733
    ".."    shift, and go to state 737
    '?'     shift, and go to state 739
    '|'     shift, and go to state 740
    '^'     shift, and go to state 741
    '&'     shift, and go to state 742
    '<'     shift, and go to state 743
    '>'     shift, and go to state 744
    '-'     shift, and go to state 745
    '+'     shift, and go to state 746
    '*'     shift, and go to state 747
    '/'     shift, and go to state 748
    '%'     shift, and go to state 749
    '.'     shift, and go to state 750
    '['     shift, and go to state 751

    $default  reduce using rule 64 (expression_else_one_liner)

    expression_else_one_liner  go to state 1198


State 1076

  730 make_struct_fields: "name" . copy_or_move expr
  731                   | "name" . ":=" expr

    "<-"  shift, and go to state 605
    ":="  shift, and go to state 1037
    '='   shift, and go to state 607

    copy_or_move  go to state 1038


State 1077

  357 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  732 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  733                   | make_struct_fields . ',' "name" ":=" expr
  736                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  737                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1041
    ']'  shift, and go to state 1199


State 1078

  308 expr_list: expr_list ',' . expr
  358 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '['                               shift, and go to state 1200
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1011
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1079

  426 expr: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 426 (expr)


State 1080

  286 tuple_expansion: "name" .

    $default  reduce using rule 286 (tuple_expansion)


State 1081

  287 tuple_expansion: tuple_expansion . ',' "name"
  288 tuple_expansion_variable_declaration: "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  289                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr ';'

    ','  shift, and go to state 1201
    ']'  shift, and go to state 1202


State 1082

  317 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1203


State 1083

  318 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1204


State 1084

  316 capture_entry: '=' . "name"

    "name"  shift, and go to state 1205


State 1085

  315 capture_entry: '&' . "name"

    "name"  shift, and go to state 1206


State 1086

  319 capture_list: capture_entry .

    $default  reduce using rule 319 (capture_list)


State 1087

  320 capture_list: capture_list . ',' capture_entry
  322 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 1207
    ']'  shift, and go to state 1208


State 1088

  324 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1209


State 1089

  438 expr: expr "is" "type" '<' . $@27 type_declaration_no_options '>' $@28

    $default  reduce using rule 436 ($@27)

    $@27  go to state 1210


State 1090

  478 expr_mtag: expr "is" "$f" '(' . expr ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1211
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1091

  444 expr: expr "as" "type" '<' . $@29 type_declaration '>' $@30

    $default  reduce using rule 442 ($@29)

    $@29  go to state 1212


State 1092

  476 expr_mtag: expr "as" "$f" '(' . expr ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1213
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1093

  359 expr_method_call: expr "->" "name" '(' . ')'
  360                 | expr "->" "name" '(' . expr_list ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    ')'                               shift, and go to state 1214
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    expr_list               go to state 1215
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 790
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1094

  356 expr_assign_pipe: expr "<-" "$ <|" expr_block .

    $default  reduce using rule 356 (expr_assign_pipe)


State 1095

  354 expr_assign_pipe: expr "<-" "@ <|" expr_block .

    $default  reduce using rule 354 (expr_assign_pipe)


State 1096

  355 expr_assign_pipe: expr "<-" "@@ <|" expr_block .

    $default  reduce using rule 355 (expr_assign_pipe)


State 1097

  473 expr_mtag: expr "?." "$f" '(' . expr ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1216
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1098

  420 expr: expr "?[" expr ']' .

    $default  reduce using rule 420 (expr)


State 1099

  353 expr_assign_pipe: expr '=' "$ <|" expr_block .

    $default  reduce using rule 353 (expr_assign_pipe)


State 1100

  351 expr_assign_pipe: expr '=' "@ <|" expr_block .

    $default  reduce using rule 351 (expr_assign_pipe)


State 1101

  352 expr_assign_pipe: expr '=' "@@ <|" expr_block .

    $default  reduce using rule 352 (expr_assign_pipe)


State 1102

  449 expr: expr '?' "as" "type" . '<' $@31 type_declaration '>' $@32

    '<'  shift, and go to state 1217


State 1103

  477 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1218


State 1104

  446 expr: expr '?' "as" "name" .

    $default  reduce using rule 446 (expr)


State 1105

  450 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 450 (expr)


State 1106

  435 expr: expr '?' expr ':' . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1219
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1107

  475 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1220


State 1108

  423 expr: expr '.' "?." "name" .

    $default  reduce using rule 423 (expr)


State 1109

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  421     | expr '.' "?[" expr . ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ']'    shift, and go to state 1221


State 1110

  472 expr_mtag: expr '.' "$f" '(' . expr ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1222
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1111

  372 expr_field: expr '.' "name" '(' . ')'
  373           | expr '.' "name" '(' . expr_list ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    ')'                               shift, and go to state 1223
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    expr_list               go to state 1224
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 790
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1112

  474 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1225


State 1113

  371 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 371 (expr_field)


State 1114

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  419     | expr '.' '[' expr . ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ']'    shift, and go to state 1226


State 1115

  376 expr_field: expr '.' $@25 error . $@26

    $default  reduce using rule 375 ($@26)

    $@26  go to state 1227


State 1116

  418 expr: expr '[' expr ']' .

    $default  reduce using rule 418 (expr)


State 1117

  428 expr: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 428 (expr)


State 1118

  576 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@42 enum_list $@43 '}' .

    $default  reduce using rule 576 (enum_declaration)


State 1119

  556 enum_list: enum_list "name" '=' expr ';' .

    $default  reduce using rule 556 (enum_list)


State 1120

  118 optional_annotation_list: '[' annotation_list ']' .
  500 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . ';'

    ';'  shift, and go to state 1228

    $default  reduce using rule 118 (optional_annotation_list)


State 1121

  488 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 488 (optional_public_or_private_member_variable)


State 1122

  489 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 489 (optional_public_or_private_member_variable)


State 1123

  497 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@34 function_declaration_header ';'
  499                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block

    "abstract"  shift, and go to state 1229
    "static"    shift, and go to state 1124

    $default  reduce using rule 490 (optional_static_member_variable)

    optional_static_member_variable  go to state 1230


State 1124

  491 optional_static_member_variable: "static" .

    $default  reduce using rule 491 (optional_static_member_variable)


State 1125

  492 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1231
    "sealed"    shift, and go to state 1232

    $default  reduce using rule 482 (optional_override)

    optional_override  go to state 1233


State 1126

  495 struct_variable_declaration_list: struct_variable_declaration_list $@33 structure_variable_declaration ';' .

    $default  reduce using rule 495 (struct_variable_declaration_list)


State 1127

  538 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr ';' .

    $default  reduce using rule 538 (let_variable_declaration)


State 1128

  652 type_declaration_no_options: "type" '<' $@48 type_declaration '>' $@49 .

    $default  reduce using rule 652 (type_declaration_no_options)


State 1129

  673 type_declaration_no_options: "array" '<' $@52 type_declaration '>' $@53 .

    $default  reduce using rule 673 (type_declaration_no_options)


State 1130

  676 type_declaration_no_options: "table" '<' $@54 table_type_pair '>' $@55 .

    $default  reduce using rule 676 (type_declaration_no_options)


State 1131

  643 table_type_pair: type_declaration ';' type_declaration .
  708 type_declaration: type_declaration . '|' type_declaration_no_options
  709                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409

    $default  reduce using rule 643 (table_type_pair)


State 1132

  679 type_declaration_no_options: "iterator" '<' $@56 type_declaration '>' $@57 .

    $default  reduce using rule 679 (type_declaration_no_options)


State 1133

  669 type_declaration_no_options: "smart_ptr" '<' $@50 type_declaration '>' $@51 .

    $default  reduce using rule 669 (type_declaration_no_options)


State 1134

  641 bitfield_type_declaration: "bitfield" '<' $@46 bitfield_bits '>' $@47 .

    $default  reduce using rule 641 (bitfield_type_declaration)


State 1135

  635 bitfield_bits: bitfield_bits ';' "name" .

    $default  reduce using rule 635 (bitfield_bits)


State 1136

  683 type_declaration_no_options: "block" '<' $@58 type_declaration '>' $@59 .

    $default  reduce using rule 683 (type_declaration_no_options)


State 1137

  686 type_declaration_no_options: "block" '<' $@60 optional_function_argument_list optional_function_type '>' . $@61

    $default  reduce using rule 685 ($@61)

    $@61  go to state 1234


State 1138

  690 type_declaration_no_options: "function" '<' $@62 type_declaration '>' $@63 .

    $default  reduce using rule 690 (type_declaration_no_options)


State 1139

  693 type_declaration_no_options: "function" '<' $@64 optional_function_argument_list optional_function_type '>' . $@65

    $default  reduce using rule 692 ($@65)

    $@65  go to state 1235


State 1140

  697 type_declaration_no_options: "lambda" '<' $@66 type_declaration '>' $@67 .

    $default  reduce using rule 697 (type_declaration_no_options)


State 1141

  700 type_declaration_no_options: "lambda" '<' $@68 optional_function_argument_list optional_function_type '>' . $@69

    $default  reduce using rule 699 ($@69)

    $@69  go to state 1236


State 1142

  703 type_declaration_no_options: "tuple" '<' $@70 tuple_type_list '>' $@71 .

    $default  reduce using rule 703 (type_declaration_no_options)


State 1143

  509 tuple_type_list: tuple_type_list ';' tuple_type .

    $default  reduce using rule 509 (tuple_type_list)


State 1144

  706 type_declaration_no_options: "variant" '<' $@72 variant_type_list '>' $@73 .

    $default  reduce using rule 706 (type_declaration_no_options)


State 1145

  515 variant_type_list: variant_type_list ';' variant_type .

    $default  reduce using rule 515 (variant_type_list)


State 1146

  596 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 596 (variable_name_with_pos_list)


State 1147

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'
  524 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 524 (variable_declaration)


State 1148

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list . expression_block
  308 expr_list: expr_list . ',' expr

    ','  shift, and go to state 818
    '{'  shift, and go to state 284

    expression_block  go to state 1237


State 1149

  262 new_type_declaration: '<' $@11 type_declaration '>' . $@12

    $default  reduce using rule 261 ($@12)

    $@12  go to state 1238


State 1150

  266 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 266 (expr_new)


State 1151

  305 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  306               | "typeinfo" '(' name_in_namespace '<' "name" . ';' "name" '>' expr ')'

    '>'  shift, and go to state 1239
    ';'  shift, and go to state 1240


State 1152

  304 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 304 (expr_type_info)


State 1153

  303 expr_type_decl: "type" '<' $@19 type_declaration '>' . $@20

    $default  reduce using rule 302 ($@20)

    $@20  go to state 1241


State 1154

  773 make_dim_decl: "array" '<' $@86 type_declaration_no_options '>' . $@87 '(' expr_list ')'

    $default  reduce using rule 772 ($@87)

    $@87  go to state 1242


State 1155

  784 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . expr_map_tuple_list ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 668
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_map_tuple          go to state 823
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    expr_map_tuple_list     go to state 1243
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1156

  648 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  649                            | type_declaration_no_options . '[' ']'
  655                            | type_declaration_no_options . '-' '[' ']'
  656                            | type_declaration_no_options . "explicit"
  657                            | type_declaration_no_options . "const"
  658                            | type_declaration_no_options . '-' "const"
  659                            | type_declaration_no_options . '&'
  660                            | type_declaration_no_options . '-' '&'
  661                            | type_declaration_no_options . '#'
  662                            | type_declaration_no_options . "implicit"
  663                            | type_declaration_no_options . '-' '#'
  664                            | type_declaration_no_options . "==" "const"
  665                            | type_declaration_no_options . "==" '&'
  666                            | type_declaration_no_options . '?'
  670                            | type_declaration_no_options . "??"
  785 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options . '>' '(' expr_map_tuple_list ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1244
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1157

  781 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 781 (expr_map_tuple_list)


State 1158

   81 expression_with_alias: "assume" "name" '=' $@5 expr .
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 81 (expression_with_alias)


State 1159

  294 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' . $@14 expr

    $default  reduce using rule 293 ($@14)

    $@14  go to state 1245


State 1160

  297 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' . $@16 expr

    $default  reduce using rule 296 ($@16)

    $@16  go to state 1246


State 1161

  300 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' . $@18 expr

    $default  reduce using rule 299 ($@18)

    $@18  go to state 1247


State 1162

  777 make_dim_decl: "fixed_array" '<' $@88 type_declaration_no_options '>' . $@89 '(' expr_list ')'

    $default  reduce using rule 776 ($@89)

    $@89  go to state 1248


State 1163

  432 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  433     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1249


State 1164

  470 expr_mtag: "$c" '(' expr ')' '(' . ')'
  471          | "$c" '(' expr ')' '(' . expr_list ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    ')'                               shift, and go to state 1250
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    expr_list               go to state 1251
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 790
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1165

  308 expr_list: expr_list . ',' expr
  788 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where ']' ']'

    ','  shift, and go to state 818
    ';'  shift, and go to state 1252


State 1166

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'
  734 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  735                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ')'    shift, and go to state 1253


State 1167

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'
  731 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 731 (make_struct_fields)


State 1168

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'
  730 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 730 (make_struct_fields)


State 1169

  739 make_struct_dim: make_struct_dim . ';' make_struct_fields
  757 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 850
    ';'      shift, and go to state 1042

    $default  reduce using rule 740 (optional_block)

    optional_block  go to state 1254


State 1170

  756 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1044
    ",]]"  shift, and go to state 1045
    ']'    shift, and go to state 1046

    optional_trailing_delim_sqr_sqr  go to state 1255


State 1171

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'
  761 make_tuple: expr "=>" expr .

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 761 (make_tuple)


State 1172

  736 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  737                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1256


State 1173

  732 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  733                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 605
    ":="  shift, and go to state 1257
    '='   shift, and go to state 607

    copy_or_move  go to state 1258


State 1174

  732 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  733                   | make_struct_fields . ',' "name" ":=" expr
  736                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  737                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  739 make_struct_dim: make_struct_dim ';' make_struct_fields .

    ','  shift, and go to state 1041

    $default  reduce using rule 739 (make_struct_dim)


State 1175

  754 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 754 (make_struct_decl)


State 1176

  748 optional_trailing_delim_sqr_sqr: ']' ']' .

    $default  reduce using rule 748 (optional_trailing_delim_sqr_sqr)


State 1177

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'
  762 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 762 (make_tuple)


State 1178

  746 optional_trailing_semicolon_sqr_sqr: ']' ']' .

    $default  reduce using rule 746 (optional_trailing_semicolon_sqr_sqr)


State 1179

  762 make_tuple: make_tuple . ',' expr
  767 make_dim: make_dim ';' make_tuple .

    ','  shift, and go to state 1048

    $default  reduce using rule 767 (make_dim)


State 1180

  308 expr_list: expr_list . ',' expr
  789 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where '}' ']'

    ','  shift, and go to state 818
    ';'  shift, and go to state 1259


State 1181

  739 make_struct_dim: make_struct_dim . ';' make_struct_fields
  759 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"  shift, and go to state 850
    ';'      shift, and go to state 1042

    $default  reduce using rule 740 (optional_block)

    optional_block  go to state 1260


State 1182

  752 optional_trailing_delim_cur_sqr: ";}]" .

    $default  reduce using rule 752 (optional_trailing_delim_cur_sqr)


State 1183

  753 optional_trailing_delim_cur_sqr: ",}]" .

    $default  reduce using rule 753 (optional_trailing_delim_cur_sqr)


State 1184

  751 optional_trailing_delim_cur_sqr: '}' . ']'

    ']'  shift, and go to state 1261


State 1185

  758 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 758 (make_struct_decl)


State 1186

  744 optional_trailing_semicolon_cur_sqr: '}' ']' .

    $default  reduce using rule 744 (optional_trailing_semicolon_cur_sqr)


State 1187

  247 expression_keyword: "keyword" '<' $@7 type_declaration_no_options '>' . $@8 expr

    $default  reduce using rule 246 ($@8)

    $@8  go to state 1262


State 1188

  250 expression_keyword: "type function" '<' $@9 type_declaration_no_options '>' . $@10 '(' optional_expr_list ')'

    $default  reduce using rule 249 ($@10)

    $@10  go to state 1263


State 1189

   30 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 30 (string_builder_body)


State 1190

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  362 func_addr_name: "$i" '(' expr . ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ')'    shift, and go to state 1264


State 1191

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'
  479          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ')'    shift, and go to state 1265


State 1192

  366 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options . '>' $@22 func_addr_name
  648 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  649                            | type_declaration_no_options . '[' ']'
  655                            | type_declaration_no_options . '-' '[' ']'
  656                            | type_declaration_no_options . "explicit"
  657                            | type_declaration_no_options . "const"
  658                            | type_declaration_no_options . '-' "const"
  659                            | type_declaration_no_options . '&'
  660                            | type_declaration_no_options . '-' '&'
  661                            | type_declaration_no_options . '#'
  662                            | type_declaration_no_options . "implicit"
  663                            | type_declaration_no_options . '-' '#'
  664                            | type_declaration_no_options . "==" "const"
  665                            | type_declaration_no_options . "==" '&'
  666                            | type_declaration_no_options . '?'
  670                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1266
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1193

  369 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list . optional_function_type '>' $@24 func_addr_name

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1267


State 1194

  217 expression_block: '{' expressions '}' "finally" '{' expressions '}' .

    $default  reduce using rule 217 (expression_block)


State 1195

   60 expression_else: "else" expression_block .

    $default  reduce using rule 60 (expression_else)


State 1196

   61 expression_else: elif_or_static_elif expr . expression_block expression_else
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    '{'    shift, and go to state 284

    expression_block  go to state 1268


State 1197

   66 expression_else_one_liner: "else" . $@2 expression_if_one_liner

    $default  reduce using rule 65 ($@2)

    $@2  go to state 1269


State 1198

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner . ';'

    ';'  shift, and go to state 1270


State 1199

  357 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1271


State 1200

  358 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'

    "$f"    shift, and go to state 851
    "name"  shift, and go to state 1076

    make_struct_fields  go to state 1272


State 1201

  287 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1273


State 1202

  288 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  289                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr ';'

    ']'  shift, and go to state 1274


State 1203

  317 capture_entry: "<-" "name" .

    $default  reduce using rule 317 (capture_entry)


State 1204

  318 capture_entry: ":=" "name" .

    $default  reduce using rule 318 (capture_entry)


State 1205

  316 capture_entry: '=' "name" .

    $default  reduce using rule 316 (capture_entry)


State 1206

  315 capture_entry: '&' "name" .

    $default  reduce using rule 315 (capture_entry)


State 1207

  320 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 1082
    ":="  shift, and go to state 1083
    '='   shift, and go to state 1084
    '&'   shift, and go to state 1085

    capture_entry  go to state 1275


State 1208

  322 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 1276


State 1209

  324 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"  shift, and go to state 1277
    '{'   shift, and go to state 284

    expression_block       go to state 1278
    block_or_simple_block  go to state 1279


State 1210

  438 expr: expr "is" "type" '<' $@27 . type_declaration_no_options '>' $@28

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1280


State 1211

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'
  478          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ')'    shift, and go to state 1281


State 1212

  444 expr: expr "as" "type" '<' $@29 . type_declaration '>' $@30

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1282


State 1213

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  476          | expr "as" "$f" '(' expr . ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ')'    shift, and go to state 1283


State 1214

  359 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 359 (expr_method_call)


State 1215

  308 expr_list: expr_list . ',' expr
  360 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 818
    ')'  shift, and go to state 1284


State 1216

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  473          | expr "?." "$f" '(' expr . ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ')'    shift, and go to state 1285


State 1217

  449 expr: expr '?' "as" "type" '<' . $@31 type_declaration '>' $@32

    $default  reduce using rule 447 ($@31)

    $@31  go to state 1286


State 1218

  477 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1287
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1219

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  435     | expr '?' expr ':' expr .
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 435 (expr)


State 1220

  475 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1288
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1221

  421 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 421 (expr)


State 1222

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  472          | expr '.' "$f" '(' expr . ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ')'    shift, and go to state 1289


State 1223

  372 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 372 (expr_field)


State 1224

  308 expr_list: expr_list . ',' expr
  373 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 818
    ')'  shift, and go to state 1290


State 1225

  474 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1291
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1226

  419 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 419 (expr)


State 1227

  376 expr_field: expr '.' $@25 error $@26 .

    $default  reduce using rule 376 (expr_field)


State 1228

  500 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' ';' .

    $default  reduce using rule 500 (struct_variable_declaration_list)


State 1229

  497 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@34 function_declaration_header ';'

    "const"  shift, and go to state 1292

    $default  reduce using rule 485 (optional_constant)

    optional_constant  go to state 1293


State 1230

  499 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@35 function_declaration_header expression_block

    "override"  shift, and go to state 1231
    "sealed"    shift, and go to state 1232

    $default  reduce using rule 482 (optional_override)

    optional_override  go to state 1294


State 1231

  483 optional_override: "override" .

    $default  reduce using rule 483 (optional_override)


State 1232

  484 optional_override: "sealed" .

    $default  reduce using rule 484 (optional_override)


State 1233

  492 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1121
    "private"  shift, and go to state 1122

    $default  reduce using rule 487 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1295


State 1234

  686 type_declaration_no_options: "block" '<' $@60 optional_function_argument_list optional_function_type '>' $@61 .

    $default  reduce using rule 686 (type_declaration_no_options)


State 1235

  693 type_declaration_no_options: "function" '<' $@64 optional_function_argument_list optional_function_type '>' $@65 .

    $default  reduce using rule 693 (type_declaration_no_options)


State 1236

  700 type_declaration_no_options: "lambda" '<' $@68 optional_function_argument_list optional_function_type '>' $@69 .

    $default  reduce using rule 700 (type_declaration_no_options)


State 1237

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list expression_block .

    $default  reduce using rule 76 (expression_for_loop)


State 1238

  262 new_type_declaration: '<' $@11 type_declaration '>' $@12 .

    $default  reduce using rule 262 (new_type_declaration)


State 1239

  305 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1296
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1240

  306 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' . "name" '>' expr ')'

    "name"  shift, and go to state 1297


State 1241

  303 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20 .

    $default  reduce using rule 303 (expr_type_decl)


State 1242

  773 make_dim_decl: "array" '<' $@86 type_declaration_no_options '>' $@87 . '(' expr_list ')'

    '('  shift, and go to state 1298


State 1243

  781 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  784 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list . ')'

    ','  shift, and go to state 1015
    ')'  shift, and go to state 1299


State 1244

  785 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' . '(' expr_map_tuple_list ')'

    '('  shift, and go to state 1300


State 1245

  294 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1301
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1246

  297 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1302
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1247

  300 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1303
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1248

  777 make_dim_decl: "fixed_array" '<' $@88 type_declaration_no_options '>' $@89 . '(' expr_list ')'

    '('  shift, and go to state 1304


State 1249

  432 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  433     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    ')'                               shift, and go to state 1305
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1306
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1250

  470 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 470 (expr_mtag)


State 1251

  308 expr_list: expr_list . ',' expr
  471 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 818
    ')'  shift, and go to state 1307


State 1252

  788 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where ']' ']'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1308
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1253

  734 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  735                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 605
    ":="  shift, and go to state 1309
    '='   shift, and go to state 607

    copy_or_move  go to state 1310


State 1254

  757 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1044
    ",]]"  shift, and go to state 1045
    ']'    shift, and go to state 1046

    optional_trailing_delim_sqr_sqr  go to state 1311


State 1255

  756 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 756 (make_struct_decl)


State 1256

  736 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  737                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1312
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1257

  733 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1313
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1258

  732 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1314
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1259

  789 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where '}' ']'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1315
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1260

  759 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    ";}]"  shift, and go to state 1182
    ",}]"  shift, and go to state 1183
    '}'    shift, and go to state 1184

    optional_trailing_delim_cur_sqr  go to state 1316


State 1261

  751 optional_trailing_delim_cur_sqr: '}' ']' .

    $default  reduce using rule 751 (optional_trailing_delim_cur_sqr)


State 1262

  247 expression_keyword: "keyword" '<' $@7 type_declaration_no_options '>' $@8 . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1317
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1263

  250 expression_keyword: "type function" '<' $@9 type_declaration_no_options '>' $@10 . '(' optional_expr_list ')'

    '('  shift, and go to state 1318


State 1264

  362 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 362 (func_addr_name)


State 1265

  479 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 479 (expr_mtag)


State 1266

  366 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options '>' . $@22 func_addr_name

    $default  reduce using rule 365 ($@22)

    $@22  go to state 1319


State 1267

  369 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type . '>' $@24 func_addr_name

    '>'  shift, and go to state 1320


State 1268

   61 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1070
    "elif"         shift, and go to state 1071
    "static_elif"  shift, and go to state 1072

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1073
    expression_else      go to state 1321


State 1269

   66 expression_else_one_liner: "else" $@2 . expression_if_one_liner

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "return"                          shift, and go to state 1322
    "null"                            shift, and go to state 436
    "break"                           shift, and go to state 437
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "continue"                        shift, and go to state 447
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "yield"                           shift, and go to state 1323
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder             go to state 493
    expr_reader                go to state 494
    expression_if_one_liner    go to state 1324
    expression_block           go to state 505
    expression_keyword         go to state 508
    name_in_namespace          go to state 510
    expr_new                   go to state 512
    expression_break           go to state 1325
    expression_continue        go to state 1326
    expression_return_no_pipe  go to state 1327
    expression_yield_no_pipe   go to state 1328
    expr_cast                  go to state 522
    expr_type_decl             go to state 523
    expr_type_info             go to state 524
    block_or_lambda            go to state 525
    expr_block                 go to state 526
    expr_numeric_const         go to state 527
    expr_named_call            go to state 530
    expr_method_call           go to state 531
    func_addr_expr             go to state 532
    expr_field                 go to state 533
    expr                       go to state 1329
    expr_mtag                  go to state 535
    basic_type_declaration     go to state 536
    make_decl                  go to state 537
    make_struct_decl           go to state 538
    make_tuple_call            go to state 539
    make_dim_decl              go to state 540
    make_table_decl            go to state 541
    array_comprehension        go to state 542


State 1270

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner ';' .

    $default  reduce using rule 74 (expression_if_then_else)


State 1271

  357 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 357 (expr_named_call)


State 1272

  358 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  732 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  733                   | make_struct_fields . ',' "name" ":=" expr
  736                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  737                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1041
    ']'  shift, and go to state 1330


State 1273

  287 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 287 (tuple_expansion)


State 1274

  288 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  289                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr ';'

    ':'  shift, and go to state 1331
    '&'  shift, and go to state 382

    $default  reduce using rule 530 (optional_ref)

    optional_ref  go to state 1332


State 1275

  320 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 320 (capture_list)


State 1276

  322 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 322 (optional_capture_list)


State 1277

  310 block_or_simple_block: "=>" . expr
  311                      | "=>" . "<-" expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "<-"                              shift, and go to state 1333
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1334
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1278

  309 block_or_simple_block: expression_block .

    $default  reduce using rule 309 (block_or_simple_block)


State 1279

  324 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 324 (expr_block)


State 1280

  438 expr: expr "is" "type" '<' $@27 type_declaration_no_options . '>' $@28
  648 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  649                            | type_declaration_no_options . '[' ']'
  655                            | type_declaration_no_options . '-' '[' ']'
  656                            | type_declaration_no_options . "explicit"
  657                            | type_declaration_no_options . "const"
  658                            | type_declaration_no_options . '-' "const"
  659                            | type_declaration_no_options . '&'
  660                            | type_declaration_no_options . '-' '&'
  661                            | type_declaration_no_options . '#'
  662                            | type_declaration_no_options . "implicit"
  663                            | type_declaration_no_options . '-' '#'
  664                            | type_declaration_no_options . "==" "const"
  665                            | type_declaration_no_options . "==" '&'
  666                            | type_declaration_no_options . '?'
  670                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1335
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1281

  478 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 478 (expr_mtag)


State 1282

  444 expr: expr "as" "type" '<' $@29 type_declaration . '>' $@30
  708 type_declaration: type_declaration . '|' type_declaration_no_options
  709                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409
    '>'  shift, and go to state 1336


State 1283

  476 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 476 (expr_mtag)


State 1284

  360 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 360 (expr_method_call)


State 1285

  473 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 473 (expr_mtag)


State 1286

  449 expr: expr '?' "as" "type" '<' $@31 . type_declaration '>' $@32

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1337


State 1287

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  477          | expr '?' "as" "$f" '(' expr . ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ')'    shift, and go to state 1338


State 1288

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  475          | expr '.' "?." "$f" '(' expr . ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ')'    shift, and go to state 1339


State 1289

  472 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 472 (expr_mtag)


State 1290

  373 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 373 (expr_field)


State 1291

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  474          | expr '.' '.' "$f" '(' expr . ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ')'    shift, and go to state 1340


State 1292

  486 optional_constant: "const" .

    $default  reduce using rule 486 (optional_constant)


State 1293

  497 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@34 function_declaration_header ';'

    $default  reduce using rule 496 ($@34)

    $@34  go to state 1341


State 1294

  499 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@35 function_declaration_header expression_block

    "const"  shift, and go to state 1292

    $default  reduce using rule 485 (optional_constant)

    optional_constant  go to state 1342


State 1295

  492 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 417
    "name"  shift, and go to state 418

    variable_declaration         go to state 1343
    variable_name_with_pos_list  go to state 420


State 1296

  305 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ')'    shift, and go to state 1344


State 1297

  306 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" . '>' expr ')'

    '>'  shift, and go to state 1345


State 1298

  773 make_dim_decl: "array" '<' $@86 type_declaration_no_options '>' $@87 '(' . expr_list ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    expr_list               go to state 1346
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 790
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1299

  784 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list ')' .

    $default  reduce using rule 784 (make_table_decl)


State 1300

  785 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' . expr_map_tuple_list ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 668
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_map_tuple          go to state 823
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    expr_map_tuple_list     go to state 1347
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1301

  294 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr .
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 294 (expr_cast)


State 1302

  297 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr .
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 297 (expr_cast)


State 1303

  300 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr .
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 300 (expr_cast)


State 1304

  777 make_dim_decl: "fixed_array" '<' $@88 type_declaration_no_options '>' $@89 '(' . expr_list ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    expr_list               go to state 1348
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 790
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1305

  432 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 432 (expr)


State 1306

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  433     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ')'    shift, and go to state 1349


State 1307

  471 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 471 (expr_mtag)


State 1308

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'
  788 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where ']' ']'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ';'    shift, and go to state 1350

    $default  reduce using rule 786 (array_comprehension_where)

    array_comprehension_where  go to state 1351


State 1309

  735 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1352
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1310

  734 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1353
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1311

  757 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 757 (make_struct_decl)


State 1312

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'
  736 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  737                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ')'    shift, and go to state 1354


State 1313

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'
  733 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 733 (make_struct_fields)


State 1314

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'
  732 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 732 (make_struct_fields)


State 1315

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'
  789 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where '}' ']'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ';'    shift, and go to state 1350

    $default  reduce using rule 786 (array_comprehension_where)

    array_comprehension_where  go to state 1355


State 1316

  759 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 759 (make_struct_decl)


State 1317

  247 expression_keyword: "keyword" '<' $@7 type_declaration_no_options '>' $@8 expr .
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 247 (expression_keyword)


State 1318

  250 expression_keyword: "type function" '<' $@9 type_declaration_no_options '>' $@10 '(' . optional_expr_list ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    $default  reduce using rule 243 (optional_expr_list)

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    optional_expr_list      go to state 1356
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    expr_list               go to state 789
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 790
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1319

  366 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options '>' $@22 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 877
    "name"  shift, and go to state 59

    name_in_namespace  go to state 880
    func_addr_name     go to state 1357


State 1320

  369 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type '>' . $@24 func_addr_name

    $default  reduce using rule 368 ($@24)

    $@24  go to state 1358


State 1321

   61 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 61 (expression_else)


State 1322

  270 expression_return_no_pipe: "return" .
  271                          | "return" . expr_list
  272                          | "return" . "<-" expr_list

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "<-"                              shift, and go to state 1359
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    $default  reduce using rule 270 (expression_return_no_pipe)

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    expr_list               go to state 624
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 790
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1323

  276 expression_yield_no_pipe: "yield" . expr
  277                         | "yield" . "<-" expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "<-"                              shift, and go to state 1360
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1361
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1324

   66 expression_else_one_liner: "else" $@2 expression_if_one_liner .

    $default  reduce using rule 66 (expression_else_one_liner)


State 1325

   70 expression_if_one_liner: expression_break .

    $default  reduce using rule 70 (expression_if_one_liner)


State 1326

   71 expression_if_one_liner: expression_continue .

    $default  reduce using rule 71 (expression_if_one_liner)


State 1327

   68 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 68 (expression_if_one_liner)


State 1328

   69 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 69 (expression_if_one_liner)


State 1329

   67 expression_if_one_liner: expr .
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 67 (expression_if_one_liner)


State 1330

  358 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1362


State 1331

  288 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr ';'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1363


State 1332

  289 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr ';'

    "<-"  shift, and go to state 557
    ":="  shift, and go to state 558
    '='   shift, and go to state 559

    copy_or_move_or_clone  go to state 1364


State 1333

  311 block_or_simple_block: "=>" "<-" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1365
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1334

  310 block_or_simple_block: "=>" expr .
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    ".."  error (nonassociative)

    $default  reduce using rule 310 (block_or_simple_block)


State 1335

  438 expr: expr "is" "type" '<' $@27 type_declaration_no_options '>' . $@28

    $default  reduce using rule 437 ($@28)

    $@28  go to state 1366


State 1336

  444 expr: expr "as" "type" '<' $@29 type_declaration '>' . $@30

    $default  reduce using rule 443 ($@30)

    $@30  go to state 1367


State 1337

  449 expr: expr '?' "as" "type" '<' $@31 type_declaration . '>' $@32
  708 type_declaration: type_declaration . '|' type_declaration_no_options
  709                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409
    '>'  shift, and go to state 1368


State 1338

  477 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 477 (expr_mtag)


State 1339

  475 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 475 (expr_mtag)


State 1340

  474 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 474 (expr_mtag)


State 1341

  497 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 . function_declaration_header ';'

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1369


State 1342

  499 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@35 function_declaration_header expression_block

    $default  reduce using rule 498 ($@35)

    $@35  go to state 1370


State 1343

  492 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 492 (structure_variable_declaration)


State 1344

  305 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 305 (expr_type_info)


State 1345

  306 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' . expr ')'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1371
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1346

  308 expr_list: expr_list . ',' expr
  773 make_dim_decl: "array" '<' $@86 type_declaration_no_options '>' $@87 '(' expr_list . ')'

    ','  shift, and go to state 818
    ')'  shift, and go to state 1372


State 1347

  781 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  785 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list . ')'

    ','  shift, and go to state 1015
    ')'  shift, and go to state 1373


State 1348

  308 expr_list: expr_list . ',' expr
  777 make_dim_decl: "fixed_array" '<' $@88 type_declaration_no_options '>' $@89 '(' expr_list . ')'

    ','  shift, and go to state 818
    ')'  shift, and go to state 1374


State 1349

  433 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 433 (expr)


State 1350

  787 array_comprehension_where: ';' . "where" expr

    "where"  shift, and go to state 1375


State 1351

  788 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1376


State 1352

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'
  735 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 735 (make_struct_fields)


State 1353

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'
  734 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 734 (make_struct_fields)


State 1354

  736 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  737                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 605
    ":="  shift, and go to state 1377
    '='   shift, and go to state 607

    copy_or_move  go to state 1378


State 1355

  789 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . '}' ']'

    '}'  shift, and go to state 1379


State 1356

  250 expression_keyword: "type function" '<' $@9 type_declaration_no_options '>' $@10 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1380


State 1357

  366 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options '>' $@22 func_addr_name .

    $default  reduce using rule 366 (func_addr_expr)


State 1358

  369 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type '>' $@24 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 877
    "name"  shift, and go to state 59

    name_in_namespace  go to state 880
    func_addr_name     go to state 1381


State 1359

  272 expression_return_no_pipe: "return" "<-" . expr_list

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    expr_list               go to state 817
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 790
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1360

  277 expression_yield_no_pipe: "yield" "<-" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1382
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1361

  276 expression_yield_no_pipe: "yield" expr .
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 276 (expression_yield_no_pipe)


State 1362

  358 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 358 (expr_named_call)


State 1363

  288 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr ';'
  648 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  649                            | type_declaration_no_options . '[' ']'
  655                            | type_declaration_no_options . '-' '[' ']'
  656                            | type_declaration_no_options . "explicit"
  657                            | type_declaration_no_options . "const"
  658                            | type_declaration_no_options . '-' "const"
  659                            | type_declaration_no_options . '&'
  660                            | type_declaration_no_options . '-' '&'
  661                            | type_declaration_no_options . '#'
  662                            | type_declaration_no_options . "implicit"
  663                            | type_declaration_no_options . '-' '#'
  664                            | type_declaration_no_options . "==" "const"
  665                            | type_declaration_no_options . "==" '&'
  666                            | type_declaration_no_options . '?'
  670                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "<-"        shift, and go to state 557
    "??"        shift, and go to state 403
    ":="        shift, and go to state 558
    '='         shift, and go to state 559
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    copy_or_move_or_clone  go to state 1383


State 1364

  289 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr ';'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1384
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1365

  311 block_or_simple_block: "=>" "<-" expr .
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 311 (block_or_simple_block)


State 1366

  438 expr: expr "is" "type" '<' $@27 type_declaration_no_options '>' $@28 .

    $default  reduce using rule 438 (expr)


State 1367

  444 expr: expr "as" "type" '<' $@29 type_declaration '>' $@30 .

    $default  reduce using rule 444 (expr)


State 1368

  449 expr: expr '?' "as" "type" '<' $@31 type_declaration '>' . $@32

    $default  reduce using rule 448 ($@32)

    $@32  go to state 1385


State 1369

  497 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header . ';'

    ';'  shift, and go to state 1386


State 1370

  499 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1387


State 1371

  306 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr . ')'
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ')'    shift, and go to state 1388


State 1372

  773 make_dim_decl: "array" '<' $@86 type_declaration_no_options '>' $@87 '(' expr_list ')' .

    $default  reduce using rule 773 (make_dim_decl)


State 1373

  785 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list ')' .

    $default  reduce using rule 785 (make_table_decl)


State 1374

  777 make_dim_decl: "fixed_array" '<' $@88 type_declaration_no_options '>' $@89 '(' expr_list ')' .

    $default  reduce using rule 777 (make_dim_decl)


State 1375

  787 array_comprehension_where: ';' "where" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1389
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1376

  788 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1390


State 1377

  737 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1391
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1378

  736 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1392
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1379

  789 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' . ']'

    ']'  shift, and go to state 1393


State 1380

  250 expression_keyword: "type function" '<' $@9 type_declaration_no_options '>' $@10 '(' optional_expr_list ')' .

    $default  reduce using rule 250 (expression_keyword)


State 1381

  369 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name .

    $default  reduce using rule 369 (func_addr_expr)


State 1382

  277 expression_yield_no_pipe: "yield" "<-" expr .
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 277 (expression_yield_no_pipe)


State 1383

  288 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr ';'

    "true"                            shift, and go to state 429
    "false"                           shift, and go to state 430
    "new"                             shift, and go to state 431
    "typeinfo"                        shift, and go to state 432
    "type"                            shift, and go to state 433
    "array"                           shift, and go to state 434
    "null"                            shift, and go to state 436
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 441
    "cast"                            shift, and go to state 444
    "upcast"                          shift, and go to state 445
    "addr"                            shift, and go to state 446
    "reinterpret"                     shift, and go to state 449
    "unsafe"                          shift, and go to state 551
    "fixed_array"                     shift, and go to state 453
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 454
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 455
    "generator"                       shift, and go to state 456
    "++"                              shift, and go to state 458
    "--"                              shift, and go to state 459
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 463
    "$i"                              shift, and go to state 464
    "$v"                              shift, and go to state 465
    "$b"                              shift, and go to state 466
    "$a"                              shift, and go to state 467
    "$c"                              shift, and go to state 468
    "..."                             shift, and go to state 469
    "[["                              shift, and go to state 470
    "[{"                              shift, and go to state 471
    "{{"                              shift, and go to state 472
    "integer constant"                shift, and go to state 473
    "long integer constant"           shift, and go to state 474
    "unsigned integer constant"       shift, and go to state 475
    "unsigned long integer constant"  shift, and go to state 476
    "unsigned int8 constant"          shift, and go to state 477
    "floating point constant"         shift, and go to state 478
    "double constant"                 shift, and go to state 479
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 552
    "type function"                   shift, and go to state 481
    "start of the string"             shift, and go to state 482
    '-'                               shift, and go to state 483
    '+'                               shift, and go to state 484
    '*'                               shift, and go to state 485
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 486
    '!'                               shift, and go to state 487
    '('                               shift, and go to state 488
    '$'                               shift, and go to state 489
    '@'                               shift, and go to state 490
    '{'                               shift, and go to state 284

    string_builder          go to state 493
    expr_reader             go to state 494
    expression_block        go to state 505
    expression_keyword      go to state 508
    name_in_namespace       go to state 510
    expr_new                go to state 512
    expr_cast               go to state 522
    expr_type_decl          go to state 523
    expr_type_info          go to state 524
    block_or_lambda         go to state 525
    expr_block              go to state 526
    expr_numeric_const      go to state 527
    expr_named_call         go to state 530
    expr_method_call        go to state 531
    func_addr_expr          go to state 532
    expr_field              go to state 533
    expr                    go to state 1394
    expr_mtag               go to state 535
    basic_type_declaration  go to state 536
    make_decl               go to state 537
    make_struct_decl        go to state 538
    make_tuple_call         go to state 539
    make_dim_decl           go to state 540
    make_table_decl         go to state 541
    array_comprehension     go to state 542


State 1384

  289 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr . ';'
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ';'    shift, and go to state 1395


State 1385

  449 expr: expr '?' "as" "type" '<' $@31 type_declaration '>' $@32 .

    $default  reduce using rule 449 (expr)


State 1386

  497 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header ';' .

    $default  reduce using rule 497 (struct_variable_declaration_list)


State 1387

  499 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header . expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 1396


State 1388

  306 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')' .

    $default  reduce using rule 306 (expr_type_info)


State 1389

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'
  787 array_comprehension_where: ';' "where" expr .

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 787 (array_comprehension_where)


State 1390

  788 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']' .

    $default  reduce using rule 788 (array_comprehension)


State 1391

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'
  737 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 737 (make_struct_fields)


State 1392

  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'
  736 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751

    $default  reduce using rule 736 (make_struct_fields)


State 1393

  789 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']' .

    $default  reduce using rule 789 (array_comprehension)


State 1394

  288 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr . ';'
  359 expr_method_call: expr . "->" "name" '(' ')'
  360                 | expr . "->" "name" '(' expr_list ')'
  370 expr_field: expr . '.' "name"
  371           | expr . '.' '.' "name"
  372           | expr . '.' "name" '(' ')'
  373           | expr . '.' "name" '(' expr_list ')'
  376           | expr . '.' $@25 error $@26
  391 expr: expr . "<<" expr
  392     | expr . ">>" expr
  393     | expr . "<<<" expr
  394     | expr . ">>>" expr
  395     | expr . '+' expr
  396     | expr . '-' expr
  397     | expr . '*' expr
  398     | expr . '/' expr
  399     | expr . '%' expr
  400     | expr . '<' expr
  401     | expr . '>' expr
  402     | expr . "==" expr
  403     | expr . "!=" expr
  404     | expr . "<=" expr
  405     | expr . ">=" expr
  406     | expr . '&' expr
  407     | expr . '|' expr
  408     | expr . '^' expr
  409     | expr . "&&" expr
  410     | expr . "||" expr
  411     | expr . "^^" expr
  412     | expr . ".." expr
  415     | expr . "++"
  416     | expr . "--"
  418     | expr . '[' expr ']'
  419     | expr . '.' '[' expr ']'
  420     | expr . "?[" expr ']'
  421     | expr . '.' "?[" expr ']'
  422     | expr . "?." "name"
  423     | expr . '.' "?." "name"
  434     | expr . "??" expr
  435     | expr . '?' expr ':' expr
  438     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  439     | expr . "is" basic_type_declaration
  440     | expr . "is" "name"
  441     | expr . "as" "name"
  444     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  445     | expr . "as" basic_type_declaration
  446     | expr . '?' "as" "name"
  449     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  450     | expr . '?' "as" basic_type_declaration
  458     | expr . "<|" expr
  459     | expr . "|>" expr
  460     | expr . "|>" basic_type_declaration
  472 expr_mtag: expr . '.' "$f" '(' expr ')'
  473          | expr . "?." "$f" '(' expr ')'
  474          | expr . '.' '.' "$f" '(' expr ')'
  475          | expr . '.' "?." "$f" '(' expr ')'
  476          | expr . "as" "$f" '(' expr ')'
  477          | expr . '?' "as" "$f" '(' expr ')'
  478          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 699
    "as"   shift, and go to state 700
    "<<"   shift, and go to state 709
    ">>"   shift, and go to state 710
    "++"   shift, and go to state 711
    "--"   shift, and go to state 712
    "<="   shift, and go to state 713
    ">="   shift, and go to state 716
    "=="   shift, and go to state 717
    "!="   shift, and go to state 718
    "->"   shift, and go to state 719
    "??"   shift, and go to state 721
    "?."   shift, and go to state 722
    "?["   shift, and go to state 723
    "<|"   shift, and go to state 724
    "|>"   shift, and go to state 725
    "<<<"  shift, and go to state 727
    ">>>"  shift, and go to state 728
    "&&"   shift, and go to state 731
    "||"   shift, and go to state 732
    "^^"   shift, and go to state 733
    ".."   shift, and go to state 737
    '?'    shift, and go to state 739
    '|'    shift, and go to state 740
    '^'    shift, and go to state 741
    '&'    shift, and go to state 742
    '<'    shift, and go to state 743
    '>'    shift, and go to state 744
    '-'    shift, and go to state 745
    '+'    shift, and go to state 746
    '*'    shift, and go to state 747
    '/'    shift, and go to state 748
    '%'    shift, and go to state 749
    '.'    shift, and go to state 750
    '['    shift, and go to state 751
    ';'    shift, and go to state 1397


State 1395

  289 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr ';' .

    $default  reduce using rule 289 (tuple_expansion_variable_declaration)


State 1396

  499 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block .

    $default  reduce using rule 499 (struct_variable_declaration_list)


State 1397

  288 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';' .

    $default  reduce using rule 288 (tuple_expansion_variable_declaration)

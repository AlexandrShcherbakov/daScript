Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 59 conflicts: 1 shift/reduce
State 313 conflicts: 1 shift/reduce
State 514 conflicts: 2 shift/reduce
State 621 conflicts: 1 shift/reduce
State 897 conflicts: 2 shift/reduce
State 990 conflicts: 1 shift/reduce
State 1074 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program ';'

   16 top_level_reader_macro: expr_reader ';'

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"

   28 string_builder_body: %empty
   29                    | string_builder_body character_sequence
   30                    | string_builder_body "{" expr "}"

   31 string_builder: "start of the string" string_builder_body "end of the string"

   32 reader_character_sequence: STRING_CHARACTER
   33                          | reader_character_sequence STRING_CHARACTER

   34 $@1: %empty

   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   36 options_declaration: "options" annotation_argument_list

   37 require_declaration: "require" require_module

   38 keyword_or_name: "name"
   39                | "keyword"
   40                | "type function"

   41 require_module_name: keyword_or_name
   42                    | '%' require_module_name
   43                    | require_module_name '.' keyword_or_name
   44                    | require_module_name '/' keyword_or_name

   45 require_module: require_module_name is_public_module
   46               | require_module_name "as" "name" is_public_module

   47 is_public_module: %empty
   48                 | "public"

   49 expect_declaration: "expect" expect_list

   50 expect_list: expect_error
   51            | expect_list ',' expect_error

   52 expect_error: "integer constant"
   53             | "integer constant" ':' "integer constant"

   54 expression_label: "label" "integer constant" ':'

   55 expression_goto: "goto" "label" "integer constant"
   56                | "goto" expr

   57 elif_or_static_elif: "elif"
   58                    | "static_elif"

   59 expression_else: %empty
   60                | "else" expression_block
   61                | elif_or_static_elif expr expression_block expression_else

   62 if_or_static_if: "if"
   63                | "static_if"

   64 expression_else_one_liner: %empty

   65 $@2: %empty

   66 expression_else_one_liner: "else" $@2 expression_if_one_liner

   67 expression_if_one_liner: expr
   68                        | expression_return_no_pipe
   69                        | expression_yield_no_pipe
   70                        | expression_break
   71                        | expression_continue

   72 expression_if_then_else: if_or_static_if expr expression_block expression_else

   73 $@3: %empty

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner ';'

   75 $@4: %empty

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list expression_block

   77 expression_unsafe: "unsafe" expression_block

   78 expression_while_loop: "while" expr expression_block

   79 expression_with: "with" expr expression_block

   80 $@5: %empty

   81 expression_with_alias: "assume" "name" '=' $@5 expr

   82 annotation_argument_value: string_constant
   83                          | "name"
   84                          | "integer constant"
   85                          | "floating point constant"
   86                          | "true"
   87                          | "false"

   88 annotation_argument_value_list: annotation_argument_value
   89                               | annotation_argument_value_list ',' annotation_argument_value

   90 annotation_argument_name: "name"
   91                         | "type"
   92                         | "in"

   93 annotation_argument: annotation_argument_name '=' string_constant
   94                    | annotation_argument_name '=' "name"
   95                    | annotation_argument_name '=' "integer constant"
   96                    | annotation_argument_name '=' "floating point constant"
   97                    | annotation_argument_name '=' "true"
   98                    | annotation_argument_name '=' "false"
   99                    | annotation_argument_name
  100                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  101 annotation_argument_list: annotation_argument
  102                         | annotation_argument_list ',' annotation_argument

  103 annotation_declaration_name: name_in_namespace
  104                            | "require"
  105                            | "private"

  106 annotation_declaration_basic: annotation_declaration_name
  107                             | annotation_declaration_name '(' annotation_argument_list ')'

  108 annotation_declaration: annotation_declaration_basic
  109                       | '!' annotation_declaration
  110                       | annotation_declaration "&&" annotation_declaration
  111                       | annotation_declaration "||" annotation_declaration
  112                       | annotation_declaration "^^" annotation_declaration
  113                       | '(' annotation_declaration ')'
  114                       | "|>" annotation_declaration

  115 annotation_list: annotation_declaration
  116                | annotation_list ',' annotation_declaration

  117 optional_annotation_list: %empty
  118                         | '[' annotation_list ']'

  119 optional_function_argument_list: %empty
  120                                | '(' ')'
  121                                | '(' function_argument_list ')'

  122 optional_function_type: %empty
  123                       | ':' type_declaration

  124 function_name: "name"
  125              | "operator" '!'
  126              | "operator" '~'
  127              | "operator" "+="
  128              | "operator" "-="
  129              | "operator" "*="
  130              | "operator" "/="
  131              | "operator" "%="
  132              | "operator" "&="
  133              | "operator" "|="
  134              | "operator" "^="
  135              | "operator" "&&="
  136              | "operator" "||="
  137              | "operator" "^^="
  138              | "operator" "&&"
  139              | "operator" "||"
  140              | "operator" "^^"
  141              | "operator" '+'
  142              | "operator" '-'
  143              | "operator" '*'
  144              | "operator" '/'
  145              | "operator" '%'
  146              | "operator" '<'
  147              | "operator" '>'
  148              | "operator" ".."
  149              | "operator" "=="
  150              | "operator" "!="
  151              | "operator" "<="
  152              | "operator" ">="
  153              | "operator" '&'
  154              | "operator" '|'
  155              | "operator" '^'
  156              | "++" "operator"
  157              | "--" "operator"
  158              | "operator" "++"
  159              | "operator" "--"
  160              | "operator" "<<"
  161              | "operator" ">>"
  162              | "operator" "<<="
  163              | "operator" ">>="
  164              | "operator" "<<<"
  165              | "operator" ">>>"
  166              | "operator" "<<<="
  167              | "operator" ">>>="
  168              | "operator" '[' ']'
  169              | "operator" "?[" ']'
  170              | "operator" '.'
  171              | "operator" "?."
  172              | "operator" '.' "name"
  173              | "operator" '.' "name" ":="
  174              | "operator" "?." "name"
  175              | "operator" ":="
  176              | "operator" "delete"
  177              | "operator" "??"
  178              | "operator" "is"
  179              | "operator" "as"
  180              | "operator" "is" "name"
  181              | "operator" "as" "name"
  182              | "operator" '?' "as"
  183              | "operator" '?' "as" "name"
  184              | "bool"
  185              | "string"
  186              | "int"
  187              | "int2"
  188              | "int3"
  189              | "int4"
  190              | "uint"
  191              | "uint2"
  192              | "uint3"
  193              | "uint4"
  194              | "float"
  195              | "float2"
  196              | "float3"
  197              | "float4"
  198              | "range"
  199              | "urange"
  200              | "range64"
  201              | "urange64"
  202              | "int64"
  203              | "uint64"
  204              | "double"
  205              | "int8"
  206              | "uint8"
  207              | "int16"
  208              | "uint16"

  209 global_function_declaration: optional_annotation_list "def" function_declaration

  210 optional_public_or_private_function: %empty
  211                                    | "private"
  212                                    | "public"

  213 function_declaration_header: function_name optional_function_argument_list optional_function_type

  214 $@6: %empty

  215 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block

  216 expression_block: '{' expressions '}'
  217                 | '{' expressions '}' "finally" '{' expressions '}'

  218 expression_any: ';'
  219               | expr_pipe
  220               | expr_keyword
  221               | expr_assign_pipe
  222               | expr_assign ';'
  223               | expression_delete ';'
  224               | expression_let
  225               | expression_while_loop
  226               | expression_unsafe
  227               | expression_with
  228               | expression_with_alias
  229               | expression_for_loop
  230               | expression_break ';'
  231               | expression_continue ';'
  232               | expression_return
  233               | expression_yield
  234               | expression_if_then_else
  235               | expression_try_catch
  236               | expression_label ';'
  237               | expression_goto ';'
  238               | "pass" ';'

  239 expressions: %empty
  240            | expressions expression_any
  241            | expressions error

  242 expr_keyword: "keyword" expr expression_block

  243 optional_expr_list: %empty
  244                   | expr_list

  245 $@7: %empty

  246 $@8: %empty

  247 expression_keyword: "keyword" '<' $@7 type_declaration_no_options '>' $@8 expr

  248 $@9: %empty

  249 $@10: %empty

  250 expression_keyword: "type function" '<' $@9 type_declaration_no_options '>' $@10 '(' optional_expr_list ')'

  251 expr_pipe: expr_assign " <|" expr_block
  252          | "@ <|" expr_block
  253          | "@@ <|" expr_block
  254          | "$ <|" expr_block

  255 name_in_namespace: "name"
  256                  | "name" "::" "name"
  257                  | "::" "name"

  258 expression_delete: "delete" expr
  259                  | "delete" "explicit" expr

  260 $@11: %empty

  261 $@12: %empty

  262 new_type_declaration: '<' $@11 type_declaration '>' $@12
  263                     | structure_type_declaration

  264 expr_new: "new" new_type_declaration
  265         | "new" new_type_declaration '(' ')'
  266         | "new" new_type_declaration '(' expr_list ')'
  267         | "new" make_decl

  268 expression_break: "break"

  269 expression_continue: "continue"

  270 expression_return_no_pipe: "return"
  271                          | "return" expr_list
  272                          | "return" "<-" expr_list

  273 expression_return: expression_return_no_pipe ';'
  274                  | "return" expr_pipe
  275                  | "return" "<-" expr_pipe

  276 expression_yield_no_pipe: "yield" expr
  277                         | "yield" "<-" expr

  278 expression_yield: expression_yield_no_pipe ';'
  279                 | "yield" expr_pipe
  280                 | "yield" "<-" expr_pipe

  281 expression_try_catch: "try" expression_block "recover" expression_block

  282 kwd_let: "let"
  283        | "var"

  284 optional_in_scope: "inscope"
  285                  | %empty

  286 tuple_expansion: "name"
  287                | tuple_expansion ',' "name"

  288 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  289                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr ';'

  290 expression_let: kwd_let optional_in_scope let_variable_declaration
  291               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  292 $@13: %empty

  293 $@14: %empty

  294 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr

  295 $@15: %empty

  296 $@16: %empty

  297 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr

  298 $@17: %empty

  299 $@18: %empty

  300 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr

  301 $@19: %empty

  302 $@20: %empty

  303 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20

  304 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  305               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  306               | "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

  307 expr_list: expr
  308          | expr_list ',' expr

  309 block_or_simple_block: expression_block
  310                      | "=>" expr
  311                      | "=>" "<-" expr

  312 block_or_lambda: '$'
  313                | '@'
  314                | '@' '@'

  315 capture_entry: '&' "name"
  316              | '=' "name"
  317              | "<-" "name"
  318              | ":=" "name"

  319 capture_list: capture_entry
  320             | capture_list ',' capture_entry

  321 optional_capture_list: %empty
  322                      | "[[" capture_list ']' ']'

  323 expr_block: expression_block
  324           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  325 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  326 expr_numeric_const: "integer constant"
  327                   | "unsigned integer constant"
  328                   | "long integer constant"
  329                   | "unsigned long integer constant"
  330                   | "unsigned int8 constant"
  331                   | "floating point constant"
  332                   | "double constant"

  333 expr_assign: expr
  334            | expr '=' expr
  335            | expr "<-" expr
  336            | expr ":=" expr
  337            | expr "&=" expr
  338            | expr "|=" expr
  339            | expr "^=" expr
  340            | expr "&&=" expr
  341            | expr "||=" expr
  342            | expr "^^=" expr
  343            | expr "+=" expr
  344            | expr "-=" expr
  345            | expr "*=" expr
  346            | expr "/=" expr
  347            | expr "%=" expr
  348            | expr "<<=" expr
  349            | expr ">>=" expr
  350            | expr "<<<=" expr
  351            | expr ">>>=" expr

  352 expr_assign_pipe: expr '=' "@ <|" expr_block
  353                 | expr '=' "@@ <|" expr_block
  354                 | expr '=' "$ <|" expr_block
  355                 | expr "<-" "@ <|" expr_block
  356                 | expr "<-" "@@ <|" expr_block
  357                 | expr "<-" "$ <|" expr_block

  358 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  359                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  360 expr_method_call: expr "->" "name" '(' ')'
  361                 | expr "->" "name" '(' expr_list ')'

  362 func_addr_name: name_in_namespace
  363               | "$i" '(' expr ')'

  364 func_addr_expr: '@' '@' func_addr_name

  365 $@21: %empty

  366 $@22: %empty

  367 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options '>' $@22 func_addr_name

  368 $@23: %empty

  369 $@24: %empty

  370 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name

  371 expr_field: expr '.' "name"
  372           | expr '.' '.' "name"
  373           | expr '.' "name" '(' ')'
  374           | expr '.' "name" '(' expr_list ')'

  375 $@25: %empty

  376 $@26: %empty

  377 expr_field: expr '.' $@25 error $@26

  378 expr: "null"
  379     | name_in_namespace
  380     | expr_numeric_const
  381     | expr_reader
  382     | string_builder
  383     | make_decl
  384     | "true"
  385     | "false"
  386     | expr_field
  387     | expr_mtag
  388     | '!' expr
  389     | '~' expr
  390     | '+' expr
  391     | '-' expr
  392     | expr "<<" expr
  393     | expr ">>" expr
  394     | expr "<<<" expr
  395     | expr ">>>" expr
  396     | expr '+' expr
  397     | expr '-' expr
  398     | expr '*' expr
  399     | expr '/' expr
  400     | expr '%' expr
  401     | expr '<' expr
  402     | expr '>' expr
  403     | expr "==" expr
  404     | expr "!=" expr
  405     | expr "<=" expr
  406     | expr ">=" expr
  407     | expr '&' expr
  408     | expr '|' expr
  409     | expr '^' expr
  410     | expr "&&" expr
  411     | expr "||" expr
  412     | expr "^^" expr
  413     | expr ".." expr
  414     | "++" expr
  415     | "--" expr
  416     | expr "++"
  417     | expr "--"
  418     | '(' expr_list ')'
  419     | expr '[' expr ']'
  420     | expr '.' '[' expr ']'
  421     | expr "?[" expr ']'
  422     | expr '.' "?[" expr ']'
  423     | expr "?." "name"
  424     | expr '.' "?." "name"
  425     | func_addr_expr
  426     | name_in_namespace '(' ')'
  427     | name_in_namespace '(' make_struct_dim ')'
  428     | name_in_namespace '(' expr_list ')'
  429     | basic_type_declaration '(' ')'
  430     | basic_type_declaration '(' expr_list ')'
  431     | '*' expr
  432     | "deref" '(' expr ')'
  433     | "addr" '(' expr ')'
  434     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  435     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  436     | expr "??" expr
  437     | expr '?' expr ':' expr

  438 $@27: %empty

  439 $@28: %empty

  440 expr: expr "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr "is" basic_type_declaration
  442     | expr "is" "name"
  443     | expr "as" "name"

  444 $@29: %empty

  445 $@30: %empty

  446 expr: expr "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr "as" basic_type_declaration
  448     | expr '?' "as" "name"

  449 $@31: %empty

  450 $@32: %empty

  451 expr: expr '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr '?' "as" basic_type_declaration
  453     | expr_type_info
  454     | expr_type_decl
  455     | expr_cast
  456     | expr_new
  457     | expr_method_call
  458     | expr_named_call
  459     | expr_full_block
  460     | expr "<|" expr
  461     | expr "|>" expr
  462     | expr "|>" basic_type_declaration
  463     | name_in_namespace "name"
  464     | "unsafe" '(' expr ')'
  465     | expression_keyword

  466 expr_mtag: "$$" '(' expr ')'
  467          | "$i" '(' expr ')'
  468          | "$v" '(' expr ')'
  469          | "$b" '(' expr ')'
  470          | "$a" '(' expr ')'
  471          | "..."
  472          | "$c" '(' expr ')' '(' ')'
  473          | "$c" '(' expr ')' '(' expr_list ')'
  474          | expr '.' "$f" '(' expr ')'
  475          | expr "?." "$f" '(' expr ')'
  476          | expr '.' '.' "$f" '(' expr ')'
  477          | expr '.' "?." "$f" '(' expr ')'
  478          | expr "as" "$f" '(' expr ')'
  479          | expr '?' "as" "$f" '(' expr ')'
  480          | expr "is" "$f" '(' expr ')'
  481          | '@' '@' "$c" '(' expr ')'

  482 optional_field_annotation: %empty
  483                          | "[[" annotation_argument_list ']' ']'

  484 optional_override: %empty
  485                  | "override"
  486                  | "sealed"

  487 optional_constant: %empty
  488                  | "const"

  489 optional_public_or_private_member_variable: %empty
  490                                           | "public"
  491                                           | "private"

  492 optional_static_member_variable: %empty
  493                                | "static"

  494 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  495 struct_variable_declaration_list: %empty

  496 $@33: %empty

  497 struct_variable_declaration_list: struct_variable_declaration_list $@33 structure_variable_declaration ';'

  498 $@34: %empty

  499 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header ';'

  500 $@35: %empty

  501 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block
  502                                 | struct_variable_declaration_list '[' annotation_list ']' ';'

  503 function_argument_declaration: optional_field_annotation variable_declaration
  504                              | optional_field_annotation "var" variable_declaration
  505                              | "$a" '(' expr ')'

  506 function_argument_list: function_argument_declaration
  507                       | function_argument_list ';' function_argument_declaration

  508 tuple_type: type_declaration
  509           | "name" ':' type_declaration

  510 tuple_type_list: tuple_type
  511                | tuple_type_list ';' tuple_type

  512 tuple_alias_type_list: %empty
  513                      | tuple_alias_type_list ';'
  514                      | tuple_alias_type_list tuple_type ';'

  515 variant_type: "name" ':' type_declaration

  516 variant_type_list: variant_type
  517                  | variant_type_list ';' variant_type

  518 variant_alias_type_list: %empty
  519                        | variant_alias_type_list ';'
  520                        | variant_alias_type_list variant_type ';'

  521 copy_or_move: '='
  522             | "<-"

  523 variable_declaration: variable_name_with_pos_list
  524                     | variable_name_with_pos_list '&'
  525                     | variable_name_with_pos_list ':' type_declaration
  526                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  527                     | variable_name_with_pos_list copy_or_move expr
  528                     | variable_name_with_pos_list copy_or_move expr_pipe

  529 copy_or_move_or_clone: '='
  530                      | "<-"
  531                      | ":="

  532 optional_ref: %empty
  533             | '&'

  534 let_variable_name_with_pos_list: "name"
  535                                | "$i" '(' expr ')'
  536                                | "name" "aka" "name"
  537                                | let_variable_name_with_pos_list ',' "name"
  538                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  539 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options ';'
  540                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  541                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  542                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';'
  543                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  544 global_variable_declaration_list: %empty

  545 $@36: %empty

  546 global_variable_declaration_list: global_variable_declaration_list $@36 optional_field_annotation let_variable_declaration

  547 optional_shared: %empty
  548                | "shared"

  549 optional_public_or_private_variable: %empty
  550                                    | "private"
  551                                    | "public"

  552 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'

  553 $@37: %empty

  554 global_let: kwd_let optional_shared optional_public_or_private_variable $@37 optional_field_annotation let_variable_declaration

  555 enum_list: %empty
  556          | enum_list ';'
  557          | enum_list "name" ';'
  558          | enum_list "name" '=' expr ';'

  559 optional_public_or_private_alias: %empty
  560                                 | "private"
  561                                 | "public"

  562 $@38: %empty

  563 single_alias: optional_public_or_private_alias "name" $@38 '=' type_declaration

  564 alias_list: single_alias ';'
  565           | alias_list single_alias ';'

  566 alias_declaration: "typedef" '{' alias_list '}'

  567 $@39: %empty

  568 alias_declaration: "typedef" $@39 single_alias ';'

  569 optional_public_or_private_enum: %empty
  570                                | "private"
  571                                | "public"

  572 enum_name: "name"

  573 $@40: %empty

  574 $@41: %empty

  575 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@40 enum_list $@41 '}'

  576 $@42: %empty

  577 $@43: %empty

  578 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@42 enum_list $@43 '}'

  579 optional_structure_parent: %empty
  580                          | ':' name_in_namespace

  581 optional_sealed: %empty
  582                | "sealed"

  583 structure_name: optional_sealed "name" optional_structure_parent

  584 class_or_struct: "class"
  585                | "struct"

  586 optional_public_or_private_structure: %empty
  587                                     | "private"
  588                                     | "public"

  589 optional_struct_variable_declaration_list: %empty
  590                                          | '{' struct_variable_declaration_list '}'

  591 $@44: %empty

  592 $@45: %empty

  593 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@44 structure_name $@45 optional_struct_variable_declaration_list

  594 variable_name_with_pos_list: "name"
  595                            | "$i" '(' expr ')'
  596                            | "name" "aka" "name"
  597                            | variable_name_with_pos_list ',' "name"
  598                            | variable_name_with_pos_list ',' "name" "aka" "name"

  599 basic_type_declaration: "bool"
  600                       | "string"
  601                       | "int"
  602                       | "int8"
  603                       | "int16"
  604                       | "int64"
  605                       | "int2"
  606                       | "int3"
  607                       | "int4"
  608                       | "uint"
  609                       | "uint8"
  610                       | "uint16"
  611                       | "uint64"
  612                       | "uint2"
  613                       | "uint3"
  614                       | "uint4"
  615                       | "float"
  616                       | "float2"
  617                       | "float3"
  618                       | "float4"
  619                       | "void"
  620                       | "range"
  621                       | "urange"
  622                       | "range64"
  623                       | "urange64"
  624                       | "double"
  625                       | "bitfield"

  626 enum_basic_type_declaration: "int"
  627                            | "int8"
  628                            | "int16"
  629                            | "uint"
  630                            | "uint8"
  631                            | "uint16"

  632 structure_type_declaration: name_in_namespace

  633 auto_type_declaration: "auto"
  634                      | "auto" '(' "name" ')'
  635                      | "$t" '(' expr ')'

  636 bitfield_bits: "name"
  637              | bitfield_bits ';' "name"

  638 bitfield_alias_bits: %empty
  639                    | bitfield_alias_bits ';'
  640                    | bitfield_alias_bits "name" ';'

  641 $@46: %empty

  642 $@47: %empty

  643 bitfield_type_declaration: "bitfield" '<' $@46 bitfield_bits '>' $@47

  644 table_type_pair: type_declaration
  645                | type_declaration ';' type_declaration

  646 type_declaration_no_options: basic_type_declaration
  647                            | auto_type_declaration
  648                            | bitfield_type_declaration
  649                            | structure_type_declaration
  650                            | type_declaration_no_options '[' expr ']'
  651                            | type_declaration_no_options '[' ']'

  652 $@48: %empty

  653 $@49: %empty

  654 type_declaration_no_options: "type" '<' $@48 type_declaration '>' $@49
  655                            | "typedecl" '(' expr ')'
  656                            | '$' name_in_namespace '(' optional_expr_list ')'
  657                            | type_declaration_no_options '-' '[' ']'
  658                            | type_declaration_no_options "explicit"
  659                            | type_declaration_no_options "const"
  660                            | type_declaration_no_options '-' "const"
  661                            | type_declaration_no_options '&'
  662                            | type_declaration_no_options '-' '&'
  663                            | type_declaration_no_options '#'
  664                            | type_declaration_no_options "implicit"
  665                            | type_declaration_no_options '-' '#'
  666                            | type_declaration_no_options "==" "const"
  667                            | type_declaration_no_options "==" '&'
  668                            | type_declaration_no_options '?'

  669 $@50: %empty

  670 $@51: %empty

  671 type_declaration_no_options: "smart_ptr" '<' $@50 type_declaration '>' $@51
  672                            | type_declaration_no_options "??"

  673 $@52: %empty

  674 $@53: %empty

  675 type_declaration_no_options: "array" '<' $@52 type_declaration '>' $@53

  676 $@54: %empty

  677 $@55: %empty

  678 type_declaration_no_options: "table" '<' $@54 table_type_pair '>' $@55

  679 $@56: %empty

  680 $@57: %empty

  681 type_declaration_no_options: "iterator" '<' $@56 type_declaration '>' $@57
  682                            | "block"

  683 $@58: %empty

  684 $@59: %empty

  685 type_declaration_no_options: "block" '<' $@58 type_declaration '>' $@59

  686 $@60: %empty

  687 $@61: %empty

  688 type_declaration_no_options: "block" '<' $@60 optional_function_argument_list optional_function_type '>' $@61
  689                            | "function"

  690 $@62: %empty

  691 $@63: %empty

  692 type_declaration_no_options: "function" '<' $@62 type_declaration '>' $@63

  693 $@64: %empty

  694 $@65: %empty

  695 type_declaration_no_options: "function" '<' $@64 optional_function_argument_list optional_function_type '>' $@65
  696                            | "lambda"

  697 $@66: %empty

  698 $@67: %empty

  699 type_declaration_no_options: "lambda" '<' $@66 type_declaration '>' $@67

  700 $@68: %empty

  701 $@69: %empty

  702 type_declaration_no_options: "lambda" '<' $@68 optional_function_argument_list optional_function_type '>' $@69

  703 $@70: %empty

  704 $@71: %empty

  705 type_declaration_no_options: "tuple" '<' $@70 tuple_type_list '>' $@71

  706 $@72: %empty

  707 $@73: %empty

  708 type_declaration_no_options: "variant" '<' $@72 variant_type_list '>' $@73

  709 type_declaration: type_declaration_no_options
  710                 | type_declaration '|' type_declaration_no_options
  711                 | type_declaration '|' '#'

  712 $@74: %empty

  713 $@75: %empty

  714 $@76: %empty

  715 $@77: %empty

  716 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@74 "name" $@75 '{' $@76 tuple_alias_type_list $@77 '}'

  717 $@78: %empty

  718 $@79: %empty

  719 $@80: %empty

  720 $@81: %empty

  721 variant_alias_declaration: "variant" optional_public_or_private_alias $@78 "name" $@79 '{' $@80 variant_alias_type_list $@81 '}'

  722 $@82: %empty

  723 $@83: %empty

  724 $@84: %empty

  725 $@85: %empty

  726 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@82 "name" $@83 '{' $@84 bitfield_alias_bits $@85 '}'

  727 make_decl: make_struct_decl
  728          | make_dim_decl
  729          | make_table_decl
  730          | array_comprehension
  731          | make_tuple_call

  732 make_struct_fields: "name" copy_or_move expr
  733                   | "name" ":=" expr
  734                   | make_struct_fields ',' "name" copy_or_move expr
  735                   | make_struct_fields ',' "name" ":=" expr
  736                   | "$f" '(' expr ')' copy_or_move expr
  737                   | "$f" '(' expr ')' ":=" expr
  738                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  739                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  740 make_struct_dim: make_struct_fields
  741                | make_struct_dim ';' make_struct_fields

  742 optional_block: %empty
  743               | "where" expr_block

  744 optional_trailing_semicolon_cur_cur: '}' '}'
  745                                    | ";}}"

  746 optional_trailing_semicolon_cur_sqr: '}' ']'
  747                                    | ";}]"

  748 optional_trailing_semicolon_sqr_sqr: ']' ']'
  749                                    | ";]]"

  750 optional_trailing_delim_sqr_sqr: ']' ']'
  751                                | ";]]"
  752                                | ",]]"

  753 optional_trailing_delim_cur_sqr: '}' ']'
  754                                | ";}]"
  755                                | ",}]"

  756 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  757                 | "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  758                 | "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  759                 | "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  760                 | "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  761                 | "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

  762 $@86: %empty

  763 $@87: %empty

  764 make_struct_decl: "struct" '<' $@86 type_declaration_no_options '>' $@87 '(' make_struct_dim ')'

  765 $@88: %empty

  766 $@89: %empty

  767 make_struct_decl: "class" '<' $@88 type_declaration_no_options '>' $@89 '(' make_struct_dim ')'

  768 $@90: %empty

  769 $@91: %empty

  770 make_struct_decl: "variant" '<' $@90 type_declaration_no_options '>' $@91 '(' make_struct_dim ')'

  771 make_tuple: expr
  772           | expr "=>" expr
  773           | make_tuple ',' expr

  774 make_map_tuple: expr "=>" expr
  775               | expr

  776 make_tuple_call: "tuple" '(' expr_list ')'

  777 $@92: %empty

  778 $@93: %empty

  779 make_tuple_call: "tuple" '<' $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim ')'

  780 make_dim: make_tuple
  781         | make_dim ';' make_tuple

  782 make_dim_decl: '[' expr_list optional_comma ']'
  783              | "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  784              | "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  785              | "array" '(' expr_list ')'

  786 $@94: %empty

  787 $@95: %empty

  788 make_dim_decl: "array" '<' $@94 type_declaration_no_options '>' $@95 '(' expr_list ')'
  789              | "fixed_array" '(' expr_list ')'

  790 $@96: %empty

  791 $@97: %empty

  792 make_dim_decl: "fixed_array" '<' $@96 type_declaration_no_options '>' $@97 '(' expr_list ')'

  793 make_table: make_map_tuple
  794           | make_table ';' make_map_tuple

  795 expr_map_tuple_list: make_map_tuple
  796                    | expr_map_tuple_list ',' make_map_tuple

  797 make_table_decl: '{' expr_map_tuple_list optional_comma '}'
  798                | "{{" make_table optional_trailing_semicolon_cur_cur
  799                | "table" '(' expr_map_tuple_list ')'
  800                | "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list ')'
  801                | "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list ')'

  802 array_comprehension_where: %empty
  803                          | ';' "where" expr

  804 optional_comma: %empty
  805               | ','

  806 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'
  807                    | "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'
  808                    | "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'
  809                    | '{' "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}'
  810                    | "{{" "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}' '}'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 109 125 388
    '#' (35) 663 665 711
    '$' (36) 20 312 656
    '%' (37) 35 42 145 400
    '&' (38) 153 315 407 524 533 661 662 667
    '(' (40) 100 107 113 120 121 250 265 266 304 305 306 358 359 360 361 363 373 374 418 426 427 428 429 430 432 433 434 435 464 466 467 468 469 470 472 473 474 475 476 477 478 479 480 481 505 535 595 634 635 655 656 736 737 738 739 758 759 761 764 767 770 776 779 785 788 789 792 799 800 801
    ')' (41) 100 107 113 120 121 250 265 266 304 305 306 358 359 360 361 363 373 374 418 426 427 428 429 430 432 433 434 435 464 466 467 468 469 470 472 473 474 475 476 477 478 479 480 481 505 535 595 634 635 655 656 736 737 738 739 758 759 761 764 767 770 776 779 785 788 789 792 799 800 801
    '*' (42) 143 398 431
    '+' (43) 141 390 396
    ',' (44) 51 89 102 116 287 308 320 359 537 538 597 598 734 735 738 739 773 796 805
    '-' (45) 142 391 397 657 660 662 665
    '.' (46) 43 170 172 173 371 372 373 374 377 420 422 424 474 476 477
    '/' (47) 44 144 399
    ':' (58) 53 54 123 288 437 509 515 525 526 539 540 541 578 580
    ';' (59) 15 16 74 218 222 223 230 231 236 237 238 273 278 288 289 306 497 499 502 507 511 513 514 517 519 520 539 540 542 556 557 558 564 565 568 637 639 640 645 741 781 794 801 803 806 807 808 809 810
    '<' (60) 146 247 250 262 294 297 300 303 305 306 367 370 401 434 435 440 446 451 643 654 671 675 678 681 685 688 692 695 699 702 705 708 764 767 770 779 788 792 800 801
    '=' (61) 81 93 94 95 96 97 98 100 316 334 352 353 354 521 529 558 563
    '>' (62) 147 247 250 262 294 297 300 303 305 306 367 370 402 434 435 440 446 451 643 654 671 675 678 681 685 688 692 695 699 702 705 708 764 767 770 779 788 792 800 801
    '?' (63) 182 183 437 448 451 452 479 668
    '@' (64) 313 314 364 367 370 481
    '[' (91) 118 168 358 359 419 420 502 650 651 657 782 806
    ']' (93) 118 168 169 288 289 322 358 359 419 420 421 422 483 502 650 651 657 746 748 750 753 782 806 807 808
    '^' (94) 155 409
    '{' (123) 216 217 552 566 575 578 590 716 721 726 797 809
    '|' (124) 154 408 710 711
    '}' (125) 216 217 552 566 575 578 590 716 721 726 744 746 753 797 808 809 810
    '~' (126) 126 389
    error (256) 241 377
    "lexer error" (258)
    "struct" (259) 585 764
    "class" (260) 584 767
    "let" (261) 282
    "def" (262) 209 499 501
    "while" (263) 78
    "if" (264) 62 74
    "static_if" (265) 63
    "else" (266) 60 66
    "for" (267) 76 806 807 808 809 810
    "recover" (268) 281
    "true" (269) 86 97 384
    "false" (270) 87 98 385
    "new" (271) 264 265 266 267
    "typeinfo" (272) 304 305 306
    "type" (273) 91 303 440 446 451 654
    "in" (274) 76 92 806 807 808 809 810
    "is" (275) 178 180 440 441 442 480
    "as" (276) 46 179 181 182 183 443 446 447 448 451 452 478 479
    "elif" (277) 57
    "static_elif" (278) 58
    "array" (279) 675 785 788
    "return" (280) 270 271 272 274 275
    "null" (281) 378
    "break" (282) 268
    "try" (283) 281
    "options" (284) 36
    "table" (285) 678 799 800 801
    "expect" (286) 49
    "const" (287) 488 659 660 666
    "require" (288) 37 104
    "operator" (289) 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183
    "enum" (290) 575 578
    "finally" (291) 217
    "delete" (292) 176 258 259
    "deref" (293) 432
    "typedef" (294) 566 568
    "typedecl" (295) 655
    "with" (296) 79
    "aka" (297) 536 538 596 598
    "assume" (298) 81
    "cast" (299) 294
    "override" (300) 485
    "abstract" (301) 499
    "upcast" (302) 297
    "iterator" (303) 681
    "var" (304) 283 504
    "addr" (305) 433
    "continue" (306) 269
    "where" (307) 743 803
    "pass" (308) 238
    "reinterpret" (309) 300
    "module" (310) 22
    "public" (311) 18 48 212 490 551 561 571 588
    "label" (312) 54 55
    "goto" (313) 55 56
    "implicit" (314) 664
    "explicit" (315) 259 658
    "shared" (316) 548
    "private" (317) 19 105 211 491 550 560 570 587
    "smart_ptr" (318) 671
    "unsafe" (319) 77 464
    "inscope" (320) 284
    "static" (321) 493
    "fixed_array" (322) 789 792
    "bool" (323) 184 599
    "void" (324) 619
    "string" (325) 185 600
    "auto" (326) 633 634
    "int" (327) 186 601 626
    "int2" (328) 187 605
    "int3" (329) 188 606
    "int4" (330) 189 607
    "uint" (331) 190 608 629
    "bitfield" (332) 625 643 726
    "uint2" (333) 191 612
    "uint3" (334) 192 613
    "uint4" (335) 193 614
    "float" (336) 194 615
    "float2" (337) 195 616
    "float3" (338) 196 617
    "float4" (339) 197 618
    "range" (340) 198 620
    "urange" (341) 199 621
    "range64" (342) 200 622
    "urange64" (343) 201 623
    "block" (344) 682 685 688
    "int64" (345) 202 604
    "uint64" (346) 203 611
    "double" (347) 204 624
    "function" (348) 689 692 695
    "lambda" (349) 696 699 702
    "int8" (350) 205 602 627
    "uint8" (351) 206 609 630
    "int16" (352) 207 603 628
    "uint16" (353) 208 610 631
    "tuple" (354) 705 716 776 779
    "variant" (355) 708 721 770
    "generator" (356) 434 435
    "yield" (357) 276 277 279 280
    "sealed" (358) 486 582
    "+=" (359) 127 343
    "-=" (360) 128 344
    "/=" (361) 130 346
    "*=" (362) 129 345
    "%=" (363) 131 347
    "&=" (364) 132 337
    "|=" (365) 133 338
    "^=" (366) 134 339
    "<<" (367) 160 392
    ">>" (368) 161 393
    "++" (369) 156 158 414 416
    "--" (370) 157 159 415 417
    "<=" (371) 151 405
    "<<=" (372) 162 348
    ">>=" (373) 163 349
    ">=" (374) 152 406
    "==" (375) 149 403 666 667
    "!=" (376) 150 404
    "->" (377) 360 361
    "<-" (378) 272 275 277 280 311 317 335 355 356 357 522 530
    "??" (379) 177 436 672
    "?." (380) 171 174 423 424 475 477
    "?[" (381) 169 421 422
    "<|" (382) 460
    " <|" (383) 251
    "$ <|" (384) 254 354 357
    "@ <|" (385) 252 352 355
    "@@ <|" (386) 253 353 356
    "|>" (387) 114 461 462
    ":=" (388) 173 175 318 336 531 733 735 737 739
    "<<<" (389) 164 394
    ">>>" (390) 165 395
    "<<<=" (391) 166 350
    ">>>=" (392) 167 351
    "=>" (393) 310 311 772 774
    "::" (394) 256 257
    "&&" (395) 110 138 410
    "||" (396) 111 139 411
    "^^" (397) 112 140 412
    "&&=" (398) 135 340
    "||=" (399) 136 341
    "^^=" (400) 137 342
    ".." (401) 148 413
    "$$" (402) 466
    "$i" (403) 363 467 535 595
    "$v" (404) 468
    "$b" (405) 469
    "$a" (406) 470 505
    "$t" (407) 635
    "$c" (408) 472 473 481
    "$f" (409) 474 475 476 477 478 479 480 736 737 738 739
    "..." (410) 471
    "[[" (411) 288 289 322 483 756 757 758 759 783 807
    "[{" (412) 760 761 784 808
    "{{" (413) 798 810
    "integer constant" <i> (414) 52 53 54 55 84 95 326
    "long integer constant" <i64> (415) 328
    "unsigned integer constant" <ui> (416) 327
    "unsigned long integer constant" <ui64> (417) 329
    "unsigned int8 constant" <ui> (418) 330
    "floating point constant" <fd> (419) 85 96 331
    "double constant" <d> (420) 332
    "name" <s> (421) 21 38 46 81 83 90 94 124 172 173 174 180 181 183 255 256 257 286 287 305 306 315 316 317 318 360 361 371 372 373 374 423 424 442 443 448 463 509 515 534 536 537 538 557 558 563 572 583 594 596 597 598 634 636 637 640 716 721 726 732 733 734 735
    "keyword" <s> (422) 39 242 247
    "type function" <s> (423) 40 250
    "start of the string" (424) 27 31
    STRING_CHARACTER <ch> (425) 23 25 32 33
    STRING_CHARACTER_ESC (426) 24 26
    "end of the string" (427) 27 31
    "{" (428) 30
    "}" (429) 30
    "end of failed eader macro" (430)
    ";}}" (431) 745
    ";}]" (432) 747 754
    ";]]" (433) 749 751
    ",]]" (434) 752
    ",}]" (435) 755
    UNARY_MINUS (436)
    UNARY_PLUS (437)
    PRE_INC (438)
    PRE_DEC (439)
    POST_INC (440)
    POST_DEC (441)
    DEREF (442)


Nonterminals, with rules where they appear

    $accept (215)
        on left: 0
    program (216)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (217)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (218)
        on left: 17 18 19
        on right: 22
    module_name <s> (219)
        on left: 20 21
        on right: 22
    module_declaration (220)
        on left: 22
        on right: 2
    character_sequence <s> (221)
        on left: 23 24 25 26
        on right: 25 26 27 29
    string_constant <s> (222)
        on left: 27
        on right: 82 93
    string_builder_body <pExpression> (223)
        on left: 28 29 30
        on right: 29 30 31
    string_builder <pExpression> (224)
        on left: 31
        on right: 382
    reader_character_sequence (225)
        on left: 32 33
        on right: 33 35
    expr_reader <pExpression> (226)
        on left: 35
        on right: 16 381
    $@1 (227)
        on left: 34
        on right: 35
    options_declaration (228)
        on left: 36
        on right: 9
    require_declaration (229)
        on left: 37
        on right: 8
    keyword_or_name <s> (230)
        on left: 38 39 40
        on right: 41 43 44
    require_module_name <s> (231)
        on left: 41 42 43 44
        on right: 42 43 44 45 46
    require_module (232)
        on left: 45 46
        on right: 37
    is_public_module <b> (233)
        on left: 47 48
        on right: 45 46
    expect_declaration (234)
        on left: 49
        on right: 7
    expect_list (235)
        on left: 50 51
        on right: 49 51
    expect_error (236)
        on left: 52 53
        on right: 50 51
    expression_label <pExpression> (237)
        on left: 54
        on right: 236
    expression_goto <pExpression> (238)
        on left: 55 56
        on right: 237
    elif_or_static_elif <b> (239)
        on left: 57 58
        on right: 61
    expression_else <pExpression> (240)
        on left: 59 60 61
        on right: 61 72
    if_or_static_if <b> (241)
        on left: 62 63
        on right: 72
    expression_else_one_liner <pExpression> (242)
        on left: 64 66
        on right: 74
    $@2 (243)
        on left: 65
        on right: 66
    expression_if_one_liner <pExpression> (244)
        on left: 67 68 69 70 71
        on right: 66 74
    expression_if_then_else <pExpression> (245)
        on left: 72 74
        on right: 234
    $@3 (246)
        on left: 73
        on right: 74
    expression_for_loop <pExpression> (247)
        on left: 76
        on right: 229
    $@4 (248)
        on left: 75
        on right: 76
    expression_unsafe <pExpression> (249)
        on left: 77
        on right: 226
    expression_while_loop <pExpression> (250)
        on left: 78
        on right: 225
    expression_with <pExpression> (251)
        on left: 79
        on right: 227
    expression_with_alias <pExpression> (252)
        on left: 81
        on right: 228
    $@5 (253)
        on left: 80
        on right: 81
    annotation_argument_value <aa> (254)
        on left: 82 83 84 85 86 87
        on right: 88 89
    annotation_argument_value_list <aaList> (255)
        on left: 88 89
        on right: 89 100
    annotation_argument_name <s> (256)
        on left: 90 91 92
        on right: 93 94 95 96 97 98 99 100
    annotation_argument <aa> (257)
        on left: 93 94 95 96 97 98 99 100
        on right: 101 102
    annotation_argument_list <aaList> (258)
        on left: 101 102
        on right: 36 102 107 483
    annotation_declaration_name <s> (259)
        on left: 103 104 105
        on right: 106 107
    annotation_declaration_basic <fa> (260)
        on left: 106 107
        on right: 108
    annotation_declaration <fa> (261)
        on left: 108 109 110 111 112 113 114
        on right: 109 110 111 112 113 114 115 116
    annotation_list <faList> (262)
        on left: 115 116
        on right: 116 118 502
    optional_annotation_list <faList> (263)
        on left: 117 118
        on right: 209 324 325 499 501 575 578 593
    optional_function_argument_list <pVarDeclList> (264)
        on left: 119 120 121
        on right: 213 324 325 370 688 695 702
    optional_function_type <pTypeDecl> (265)
        on left: 122 123
        on right: 213 324 325 370 688 695 702
    function_name <s> (266)
        on left: 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208
        on right: 213
    global_function_declaration (267)
        on left: 209
        on right: 6
    optional_public_or_private_function <b> (268)
        on left: 210 211 212
        on right: 215
    function_declaration_header <pFuncDecl> (269)
        on left: 213
        on right: 215 499 501
    function_declaration <pFuncDecl> (270)
        on left: 215
        on right: 209
    $@6 (271)
        on left: 214
        on right: 215
    expression_block <pExpression> (272)
        on left: 216 217
        on right: 60 61 72 76 77 78 79 215 242 281 309 323 501
    expression_any <pExpression> (273)
        on left: 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238
        on right: 240
    expressions <pExpression> (274)
        on left: 239 240 241
        on right: 216 217 240 241
    expr_keyword <pExpression> (275)
        on left: 242
        on right: 220
    optional_expr_list <pExpression> (276)
        on left: 243 244
        on right: 250 656
    expression_keyword <pExpression> (277)
        on left: 247 250
        on right: 465
    $@7 (278)
        on left: 245
        on right: 247
    $@8 (279)
        on left: 246
        on right: 247
    $@9 (280)
        on left: 248
        on right: 250
    $@10 (281)
        on left: 249
        on right: 250
    expr_pipe <pExpression> (282)
        on left: 251 252 253 254
        on right: 219 274 275 279 280 528 541 543
    name_in_namespace <s> (283)
        on left: 255 256 257
        on right: 35 103 304 305 306 358 359 362 379 426 427 428 463 580 632 656
    expression_delete <pExpression> (284)
        on left: 258 259
        on right: 223
    new_type_declaration <pTypeDecl> (285)
        on left: 262 263
        on right: 264 265 266
    $@11 (286)
        on left: 260
        on right: 262
    $@12 (287)
        on left: 261
        on right: 262
    expr_new <pExpression> (288)
        on left: 264 265 266 267
        on right: 456
    expression_break <pExpression> (289)
        on left: 268
        on right: 70 230
    expression_continue <pExpression> (290)
        on left: 269
        on right: 71 231
    expression_return_no_pipe <pExpression> (291)
        on left: 270 271 272
        on right: 68 273
    expression_return <pExpression> (292)
        on left: 273 274 275
        on right: 232
    expression_yield_no_pipe <pExpression> (293)
        on left: 276 277
        on right: 69 278
    expression_yield <pExpression> (294)
        on left: 278 279 280
        on right: 233
    expression_try_catch <pExpression> (295)
        on left: 281
        on right: 235
    kwd_let <b> (296)
        on left: 282 283
        on right: 290 291 552 554
    optional_in_scope <b> (297)
        on left: 284 285
        on right: 290 291
    tuple_expansion <pNameList> (298)
        on left: 286 287
        on right: 287 288 289
    tuple_expansion_variable_declaration <pVarDecl> (299)
        on left: 288 289
        on right: 291
    expression_let <pExpression> (300)
        on left: 290 291
        on right: 224
    expr_cast <pExpression> (301)
        on left: 294 297 300
        on right: 455
    $@13 (302)
        on left: 292
        on right: 294
    $@14 (303)
        on left: 293
        on right: 294
    $@15 (304)
        on left: 295
        on right: 297
    $@16 (305)
        on left: 296
        on right: 297
    $@17 (306)
        on left: 298
        on right: 300
    $@18 (307)
        on left: 299
        on right: 300
    expr_type_decl <pExpression> (308)
        on left: 303
        on right: 454
    $@19 (309)
        on left: 301
        on right: 303
    $@20 (310)
        on left: 302
        on right: 303
    expr_type_info <pExpression> (311)
        on left: 304 305 306
        on right: 453
    expr_list <pExpression> (312)
        on left: 307 308
        on right: 76 244 266 271 272 308 359 361 374 418 428 430 473 776 782 785 788 789 792 806 807 808 809 810
    block_or_simple_block <pExpression> (313)
        on left: 309 310 311
        on right: 324 325
    block_or_lambda <i> (314)
        on left: 312 313 314
        on right: 324 325
    capture_entry <pCapt> (315)
        on left: 315 316 317 318
        on right: 319 320
    capture_list <pCaptList> (316)
        on left: 319 320
        on right: 320 322
    optional_capture_list <pCaptList> (317)
        on left: 321 322
        on right: 324 325 434 435
    expr_block <pExpression> (318)
        on left: 323 324
        on right: 251 252 253 254 352 353 354 355 356 357 743
    expr_full_block <pExpression> (319)
        on left: 325
        on right: 459
    expr_numeric_const <pExpression> (320)
        on left: 326 327 328 329 330 331 332
        on right: 380
    expr_assign <pExpression> (321)
        on left: 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351
        on right: 222 251
    expr_assign_pipe <pExpression> (322)
        on left: 352 353 354 355 356 357
        on right: 221
    expr_named_call <pExpression> (323)
        on left: 358 359
        on right: 458
    expr_method_call <pExpression> (324)
        on left: 360 361
        on right: 457
    func_addr_name <pExpression> (325)
        on left: 362 363
        on right: 364 367 370
    func_addr_expr <pExpression> (326)
        on left: 364 367 370
        on right: 425
    $@21 (327)
        on left: 365
        on right: 367
    $@22 (328)
        on left: 366
        on right: 367
    $@23 (329)
        on left: 368
        on right: 370
    $@24 (330)
        on left: 369
        on right: 370
    expr_field <pExpression> (331)
        on left: 371 372 373 374 377
        on right: 386
    $@25 (332)
        on left: 375
        on right: 377
    $@26 (333)
        on left: 376
        on right: 377
    expr <pExpression> (334)
        on left: 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 440 441 442 443 446 447 448 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465
        on right
    $@27 (335)
        on left: 438
        on right: 440
    $@28 (336)
        on left: 439
        on right: 440
    $@29 (337)
        on left: 444
        on right: 446
    $@30 (338)
        on left: 445
        on right: 446
    $@31 (339)
        on left: 449
        on right: 451
    $@32 (340)
        on left: 450
        on right: 451
    expr_mtag <pExpression> (341)
        on left: 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481
        on right: 387
    optional_field_annotation <aaList> (342)
        on left: 482 483
        on right: 494 503 504 546 554
    optional_override <i> (343)
        on left: 484 485 486
        on right: 494 501
    optional_constant <b> (344)
        on left: 487 488
        on right: 499 501
    optional_public_or_private_member_variable <b> (345)
        on left: 489 490 491
        on right: 494 499 501
    optional_static_member_variable <b> (346)
        on left: 492 493
        on right: 494 501
    structure_variable_declaration <pVarDecl> (347)
        on left: 494
        on right: 497
    struct_variable_declaration_list <pVarDeclList> (348)
        on left: 495 497 499 501 502
        on right: 497 499 501 502 590
    $@33 (349)
        on left: 496
        on right: 497
    $@34 (350)
        on left: 498
        on right: 499
    $@35 (351)
        on left: 500
        on right: 501
    function_argument_declaration <pVarDecl> (352)
        on left: 503 504 505
        on right: 506 507
    function_argument_list <pVarDeclList> (353)
        on left: 506 507
        on right: 121 507
    tuple_type <pVarDecl> (354)
        on left: 508 509
        on right: 510 511 514
    tuple_type_list <pVarDeclList> (355)
        on left: 510 511
        on right: 511 705
    tuple_alias_type_list <pVarDeclList> (356)
        on left: 512 513 514
        on right: 513 514 716
    variant_type <pVarDecl> (357)
        on left: 515
        on right: 516 517 520
    variant_type_list <pVarDeclList> (358)
        on left: 516 517
        on right: 517 708
    variant_alias_type_list <pVarDeclList> (359)
        on left: 518 519 520
        on right: 519 520 721
    copy_or_move <b> (360)
        on left: 521 522
        on right: 526 527 528 732 734 736 738
    variable_declaration <pVarDecl> (361)
        on left: 523 524 525 526 527 528
        on right: 494 503 504
    copy_or_move_or_clone <i> (362)
        on left: 529 530 531
        on right: 288 289 540 541 542 543
    optional_ref <b> (363)
        on left: 532 533
        on right: 289 542 543
    let_variable_name_with_pos_list <pNameWithPosList> (364)
        on left: 534 535 536 537 538
        on right: 537 538 539 540 541 542 543
    let_variable_declaration <pVarDecl> (365)
        on left: 539 540 541 542 543
        on right: 290 546 554
    global_variable_declaration_list <pVarDeclList> (366)
        on left: 544 546
        on right: 546 552
    $@36 (367)
        on left: 545
        on right: 546
    optional_shared <b> (368)
        on left: 547 548
        on right: 22 552 554
    optional_public_or_private_variable <b> (369)
        on left: 549 550 551
        on right: 552 554
    global_let (370)
        on left: 552 554
        on right: 5
    $@37 (371)
        on left: 553
        on right: 554
    enum_list <pEnum> (372)
        on left: 555 556 557 558
        on right: 556 557 558 575 578
    optional_public_or_private_alias <b> (373)
        on left: 559 560 561
        on right: 563 716 721 726
    single_alias (374)
        on left: 563
        on right: 564 565 568
    $@38 (375)
        on left: 562
        on right: 563
    alias_list (376)
        on left: 564 565
        on right: 565 566
    alias_declaration (377)
        on left: 566 568
        on right: 10
    $@39 (378)
        on left: 567
        on right: 568
    optional_public_or_private_enum <b> (379)
        on left: 569 570 571
        on right: 575 578
    enum_name <pEnum> (380)
        on left: 572
        on right: 575 578
    enum_declaration (381)
        on left: 575 578
        on right: 4
    $@40 (382)
        on left: 573
        on right: 575
    $@41 (383)
        on left: 574
        on right: 575
    $@42 (384)
        on left: 576
        on right: 578
    $@43 (385)
        on left: 577
        on right: 578
    optional_structure_parent <s> (386)
        on left: 579 580
        on right: 583
    optional_sealed <b> (387)
        on left: 581 582
        on right: 583
    structure_name <pStructure> (388)
        on left: 583
        on right: 593
    class_or_struct <b> (389)
        on left: 584 585
        on right: 593
    optional_public_or_private_structure <b> (390)
        on left: 586 587 588
        on right: 593
    optional_struct_variable_declaration_list <pVarDeclList> (391)
        on left: 589 590
        on right: 593
    structure_declaration (392)
        on left: 593
        on right: 3
    $@44 (393)
        on left: 591
        on right: 593
    $@45 (394)
        on left: 592
        on right: 593
    variable_name_with_pos_list <pNameWithPosList> (395)
        on left: 594 595 596 597 598
        on right: 76 523 524 525 526 527 528 597 598 806 807 808 809 810
    basic_type_declaration <type> (396)
        on left: 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625
        on right: 429 430 441 447 452 462 646
    enum_basic_type_declaration <type> (397)
        on left: 626 627 628 629 630 631
        on right: 578
    structure_type_declaration <pTypeDecl> (398)
        on left: 632
        on right: 263 649
    auto_type_declaration <pTypeDecl> (399)
        on left: 633 634 635
        on right: 647
    bitfield_bits <pNameList> (400)
        on left: 636 637
        on right: 637 643
    bitfield_alias_bits <pNameList> (401)
        on left: 638 639 640
        on right: 639 640 726
    bitfield_type_declaration <pTypeDecl> (402)
        on left: 643
        on right: 648
    $@46 (403)
        on left: 641
        on right: 643
    $@47 (404)
        on left: 642
        on right: 643
    table_type_pair <aTypePair> (405)
        on left: 644 645
        on right: 678
    type_declaration_no_options <pTypeDecl> (406)
        on left: 646 647 648 649 650 651 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 671 672 675 678 681 682 685 688 689 692 695 696 699 702 705 708
        on right: 247 250 288 294 297 300 367 434 435 440 539 540 541 650 651 657 658 659 660 661 662 663 664 665 666 667 668 672 709 710 756 757 758 759 760 761 764 767 770 779 783 784 788 792 800 801
    $@48 (407)
        on left: 652
        on right: 654
    $@49 (408)
        on left: 653
        on right: 654
    $@50 (409)
        on left: 669
        on right: 671
    $@51 (410)
        on left: 670
        on right: 671
    $@52 (411)
        on left: 673
        on right: 675
    $@53 (412)
        on left: 674
        on right: 675
    $@54 (413)
        on left: 676
        on right: 678
    $@55 (414)
        on left: 677
        on right: 678
    $@56 (415)
        on left: 679
        on right: 681
    $@57 (416)
        on left: 680
        on right: 681
    $@58 (417)
        on left: 683
        on right: 685
    $@59 (418)
        on left: 684
        on right: 685
    $@60 (419)
        on left: 686
        on right: 688
    $@61 (420)
        on left: 687
        on right: 688
    $@62 (421)
        on left: 690
        on right: 692
    $@63 (422)
        on left: 691
        on right: 692
    $@64 (423)
        on left: 693
        on right: 695
    $@65 (424)
        on left: 694
        on right: 695
    $@66 (425)
        on left: 697
        on right: 699
    $@67 (426)
        on left: 698
        on right: 699
    $@68 (427)
        on left: 700
        on right: 702
    $@69 (428)
        on left: 701
        on right: 702
    $@70 (429)
        on left: 703
        on right: 705
    $@71 (430)
        on left: 704
        on right: 705
    $@72 (431)
        on left: 706
        on right: 708
    $@73 (432)
        on left: 707
        on right: 708
    type_declaration <pTypeDecl> (433)
        on left: 709 710 711
        on right: 123 262 303 446 451 508 509 515 525 526 563 644 645 654 671 675 681 685 692 699 710 711
    tuple_alias_declaration (434)
        on left: 716
        on right: 12
    $@74 (435)
        on left: 712
        on right: 716
    $@75 (436)
        on left: 713
        on right: 716
    $@76 (437)
        on left: 714
        on right: 716
    $@77 (438)
        on left: 715
        on right: 716
    variant_alias_declaration (439)
        on left: 721
        on right: 11
    $@78 (440)
        on left: 717
        on right: 721
    $@79 (441)
        on left: 718
        on right: 721
    $@80 (442)
        on left: 719
        on right: 721
    $@81 (443)
        on left: 720
        on right: 721
    bitfield_alias_declaration (444)
        on left: 726
        on right: 13
    $@82 (445)
        on left: 722
        on right: 726
    $@83 (446)
        on left: 723
        on right: 726
    $@84 (447)
        on left: 724
        on right: 726
    $@85 (448)
        on left: 725
        on right: 726
    make_decl <pExpression> (449)
        on left: 727 728 729 730 731
        on right: 267 383
    make_struct_fields <pMakeStruct> (450)
        on left: 732 733 734 735 736 737 738 739
        on right: 358 359 734 735 738 739 740 741
    make_struct_dim <pExpression> (451)
        on left: 740 741
        on right: 427 741 756 759 760 761 764 767 770 779
    optional_block <pExpression> (452)
        on left: 742 743
        on right: 756 757 758 759 760 761
    optional_trailing_semicolon_cur_cur (453)
        on left: 744 745
        on right: 798
    optional_trailing_semicolon_cur_sqr (454)
        on left: 746 747
        on right: 784
    optional_trailing_semicolon_sqr_sqr (455)
        on left: 748 749
        on right: 783
    optional_trailing_delim_sqr_sqr (456)
        on left: 750 751 752
        on right: 756 757 758 759
    optional_trailing_delim_cur_sqr (457)
        on left: 753 754 755
        on right: 760 761
    make_struct_decl <pExpression> (458)
        on left: 756 757 758 759 760 761 764 767 770
        on right: 727
    $@86 (459)
        on left: 762
        on right: 764
    $@87 (460)
        on left: 763
        on right: 764
    $@88 (461)
        on left: 765
        on right: 767
    $@89 (462)
        on left: 766
        on right: 767
    $@90 (463)
        on left: 768
        on right: 770
    $@91 (464)
        on left: 769
        on right: 770
    make_tuple <pExpression> (465)
        on left: 771 772 773
        on right: 773 780 781
    make_map_tuple <pExpression> (466)
        on left: 774 775
        on right: 793 794 795 796 809 810
    make_tuple_call <pExpression> (467)
        on left: 776 779
        on right: 731
    $@92 (468)
        on left: 777
        on right: 779
    $@93 (469)
        on left: 778
        on right: 779
    make_dim <pExpression> (470)
        on left: 780 781
        on right: 781 783 784
    make_dim_decl <pExpression> (471)
        on left: 782 783 784 785 788 789 792
        on right: 728
    $@94 (472)
        on left: 786
        on right: 788
    $@95 (473)
        on left: 787
        on right: 788
    $@96 (474)
        on left: 790
        on right: 792
    $@97 (475)
        on left: 791
        on right: 792
    make_table <pExpression> (476)
        on left: 793 794
        on right: 794 798
    expr_map_tuple_list <pExpression> (477)
        on left: 795 796
        on right: 796 797 799 800 801
    make_table_decl <pExpression> (478)
        on left: 797 798 799 800 801
        on right: 729
    array_comprehension_where <pExpression> (479)
        on left: 802 803
        on right: 806 807 808 809 810
    optional_comma (480)
        on left: 804 805
        on right: 782 797
    array_comprehension <pExpression> (481)
        on left: 806 807 808 809 810
        on right: 730


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . ';'

    $end        shift, and go to state 2
    "let"       shift, and go to state 3
    "options"   shift, and go to state 4
    "expect"    shift, and go to state 5
    "require"   shift, and go to state 6
    "typedef"   shift, and go to state 7
    "var"       shift, and go to state 8
    "module"    shift, and go to state 9
    "bitfield"  shift, and go to state 10
    "tuple"     shift, and go to state 11
    "variant"   shift, and go to state 12
    '%'         shift, and go to state 13
    '['         shift, and go to state 14
    ';'         shift, and go to state 15

    $default  reduce using rule 117 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  282 kwd_let: "let" .

    $default  reduce using rule 282 (kwd_let)


State 4

   36 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   49 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   37 require_declaration: "require" . require_module

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 46
    require_module       go to state 47


State 7

  566 alias_declaration: "typedef" . '{' alias_list '}'
  568                  | "typedef" . $@39 single_alias ';'

    '{'  shift, and go to state 48

    $default  reduce using rule 567 ($@39)

    $@39  go to state 49


State 8

  283 kwd_let: "var" .

    $default  reduce using rule 283 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 50
    '$'     shift, and go to state 51

    module_name  go to state 52


State 10

  726 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias $@82 "name" $@83 '{' $@84 bitfield_alias_bits $@85 '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 559 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 55


State 11

  716 tuple_alias_declaration: "tuple" . optional_public_or_private_alias $@74 "name" $@75 '{' $@76 tuple_alias_type_list $@77 '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 559 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 56


State 12

  721 variant_alias_declaration: "variant" . optional_public_or_private_alias $@78 "name" $@79 '{' $@80 variant_alias_type_list $@81 '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 559 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 57


State 13

   35 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 60


State 14

  118 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 69
    name_in_namespace             go to state 70


State 15

   15 program: program ';' .

    $default  reduce using rule 15 (program)


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   16 top_level_reader_macro: expr_reader . ';'

    ';'  shift, and go to state 71


State 19

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 20

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  209 global_function_declaration: optional_annotation_list . "def" function_declaration
  575 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name '{' $@40 enum_list $@41 '}'
  578                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@42 enum_list $@43 '}'
  593 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@44 structure_name $@45 optional_struct_variable_declaration_list

    "struct"  shift, and go to state 72
    "class"   shift, and go to state 73
    "def"     shift, and go to state 74
    "enum"    shift, and go to state 75

    class_or_struct  go to state 76


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  552 global_let: kwd_let . optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'
  554           | kwd_let . optional_shared optional_public_or_private_variable $@37 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 77

    $default  reduce using rule 547 (optional_shared)

    optional_shared  go to state 78


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

   91 annotation_argument_name: "type" .

    $default  reduce using rule 91 (annotation_argument_name)


State 33

   92 annotation_argument_name: "in" .

    $default  reduce using rule 92 (annotation_argument_name)


State 34

   90 annotation_argument_name: "name" .

    $default  reduce using rule 90 (annotation_argument_name)


State 35

   93 annotation_argument: annotation_argument_name . '=' string_constant
   94                    | annotation_argument_name . '=' "name"
   95                    | annotation_argument_name . '=' "integer constant"
   96                    | annotation_argument_name . '=' "floating point constant"
   97                    | annotation_argument_name . '=' "true"
   98                    | annotation_argument_name . '=' "false"
   99                    | annotation_argument_name .
  100                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 79

    $default  reduce using rule 99 (annotation_argument)


State 36

  101 annotation_argument_list: annotation_argument .

    $default  reduce using rule 101 (annotation_argument_list)


State 37

   36 options_declaration: "options" annotation_argument_list .
  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 80

    $default  reduce using rule 36 (options_declaration)


State 38

   52 expect_error: "integer constant" .
   53             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 81

    $default  reduce using rule 52 (expect_error)


State 39

   49 expect_declaration: "expect" expect_list .
   51 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 82

    $default  reduce using rule 49 (expect_declaration)


State 40

   50 expect_list: expect_error .

    $default  reduce using rule 50 (expect_list)


State 41

   38 keyword_or_name: "name" .

    $default  reduce using rule 38 (keyword_or_name)


State 42

   39 keyword_or_name: "keyword" .

    $default  reduce using rule 39 (keyword_or_name)


State 43

   40 keyword_or_name: "type function" .

    $default  reduce using rule 40 (keyword_or_name)


State 44

   42 require_module_name: '%' . require_module_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 83


State 45

   41 require_module_name: keyword_or_name .

    $default  reduce using rule 41 (require_module_name)


State 46

   43 require_module_name: require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name
   45 require_module: require_module_name . is_public_module
   46               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 84
    "public"  shift, and go to state 85
    '/'       shift, and go to state 86
    '.'       shift, and go to state 87

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 88


State 47

   37 require_declaration: "require" require_module .

    $default  reduce using rule 37 (require_declaration)


State 48

  566 alias_declaration: "typedef" '{' . alias_list '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 559 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 90
    alias_list                        go to state 91


State 49

  568 alias_declaration: "typedef" $@39 . single_alias ';'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54

    $default  reduce using rule 559 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 92


State 50

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 51

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 52

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 77

    $default  reduce using rule 547 (optional_shared)

    optional_shared  go to state 93


State 53

  561 optional_public_or_private_alias: "public" .

    $default  reduce using rule 561 (optional_public_or_private_alias)


State 54

  560 optional_public_or_private_alias: "private" .

    $default  reduce using rule 560 (optional_public_or_private_alias)


State 55

  726 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . $@82 "name" $@83 '{' $@84 bitfield_alias_bits $@85 '}'

    $default  reduce using rule 722 ($@82)

    $@82  go to state 94


State 56

  716 tuple_alias_declaration: "tuple" optional_public_or_private_alias . $@74 "name" $@75 '{' $@76 tuple_alias_type_list $@77 '}'

    $default  reduce using rule 712 ($@74)

    $@74  go to state 95


State 57

  721 variant_alias_declaration: "variant" optional_public_or_private_alias . $@78 "name" $@79 '{' $@80 variant_alias_type_list $@81 '}'

    $default  reduce using rule 717 ($@78)

    $@78  go to state 96


State 58

  257 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 97


State 59

  255 name_in_namespace: "name" .
  256                  | "name" . "::" "name"

    "::"  shift, and go to state 98

    "::"      [reduce using rule 255 (name_in_namespace)]
    $default  reduce using rule 255 (name_in_namespace)


State 60

   35 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 34 ($@1)

    $@1  go to state 99


State 61

  104 annotation_declaration_name: "require" .

    $default  reduce using rule 104 (annotation_declaration_name)


State 62

  105 annotation_declaration_name: "private" .

    $default  reduce using rule 105 (annotation_declaration_name)


State 63

  114 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 100
    name_in_namespace             go to state 70


State 64

  109 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 101
    name_in_namespace             go to state 70


State 65

  113 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 102
    name_in_namespace             go to state 70


State 66

  106 annotation_declaration_basic: annotation_declaration_name .
  107                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 103

    $default  reduce using rule 106 (annotation_declaration_basic)


State 67

  108 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 108 (annotation_declaration)


State 68

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  115 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106

    $default  reduce using rule 115 (annotation_list)


State 69

  116 annotation_list: annotation_list . ',' annotation_declaration
  118 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 107
    ']'  shift, and go to state 108


State 70

  103 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 103 (annotation_declaration_name)


State 71

   16 top_level_reader_macro: expr_reader ';' .

    $default  reduce using rule 16 (top_level_reader_macro)


State 72

  585 class_or_struct: "struct" .

    $default  reduce using rule 585 (class_or_struct)


State 73

  584 class_or_struct: "class" .

    $default  reduce using rule 584 (class_or_struct)


State 74

  209 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 109
    "private"  shift, and go to state 110

    $default  reduce using rule 210 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 111
    function_declaration                 go to state 112


State 75

  575 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name '{' $@40 enum_list $@41 '}'
  578                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@42 enum_list $@43 '}'

    "public"   shift, and go to state 113
    "private"  shift, and go to state 114

    $default  reduce using rule 569 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 115


State 76

  593 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@44 structure_name $@45 optional_struct_variable_declaration_list

    "public"   shift, and go to state 116
    "private"  shift, and go to state 117

    $default  reduce using rule 586 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 118


State 77

  548 optional_shared: "shared" .

    $default  reduce using rule 548 (optional_shared)


State 78

  552 global_let: kwd_let optional_shared . optional_public_or_private_variable '{' global_variable_declaration_list '}'
  554           | kwd_let optional_shared . optional_public_or_private_variable $@37 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 119
    "private"  shift, and go to state 120

    $default  reduce using rule 549 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 121


State 79

   93 annotation_argument: annotation_argument_name '=' . string_constant
   94                    | annotation_argument_name '=' . "name"
   95                    | annotation_argument_name '=' . "integer constant"
   96                    | annotation_argument_name '=' . "floating point constant"
   97                    | annotation_argument_name '=' . "true"
   98                    | annotation_argument_name '=' . "false"
  100                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 122
    "false"                    shift, and go to state 123
    "integer constant"         shift, and go to state 124
    "floating point constant"  shift, and go to state 125
    "name"                     shift, and go to state 126
    "start of the string"      shift, and go to state 127
    '('                        shift, and go to state 128

    string_constant  go to state 129


State 80

  102 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 130


State 81

   53 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 131


State 82

   51 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 132


State 83

   42 require_module_name: '%' require_module_name .
   43                    | require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name

    '.'  shift, and go to state 87

    $default  reduce using rule 42 (require_module_name)


State 84

   46 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 133


State 85

   48 is_public_module: "public" .

    $default  reduce using rule 48 (is_public_module)


State 86

   44 require_module_name: require_module_name '/' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 134


State 87

   43 require_module_name: require_module_name '.' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 135


State 88

   45 require_module: require_module_name is_public_module .

    $default  reduce using rule 45 (require_module)


State 89

  563 single_alias: optional_public_or_private_alias . "name" $@38 '=' type_declaration

    "name"  shift, and go to state 136


State 90

  564 alias_list: single_alias . ';'

    ';'  shift, and go to state 137


State 91

  565 alias_list: alias_list . single_alias ';'
  566 alias_declaration: "typedef" '{' alias_list . '}'

    "public"   shift, and go to state 53
    "private"  shift, and go to state 54
    '}'        shift, and go to state 138

    $default  reduce using rule 559 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89
    single_alias                      go to state 139


State 92

  568 alias_declaration: "typedef" $@39 single_alias . ';'

    ';'  shift, and go to state 140


State 93

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 141
    "private"  shift, and go to state 142

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 143


State 94

  726 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@82 . "name" $@83 '{' $@84 bitfield_alias_bits $@85 '}'

    "name"  shift, and go to state 144


State 95

  716 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@74 . "name" $@75 '{' $@76 tuple_alias_type_list $@77 '}'

    "name"  shift, and go to state 145


State 96

  721 variant_alias_declaration: "variant" optional_public_or_private_alias $@78 . "name" $@79 '{' $@80 variant_alias_type_list $@81 '}'

    "name"  shift, and go to state 146


State 97

  257 name_in_namespace: "::" "name" .

    $default  reduce using rule 257 (name_in_namespace)


State 98

  256 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 147


State 99

   35 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 148

    reader_character_sequence  go to state 149


State 100

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  114                       | "|>" annotation_declaration .

    $default  reduce using rule 114 (annotation_declaration)


State 101

  109 annotation_declaration: '!' annotation_declaration .
  110                       | annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 109 (annotation_declaration)


State 102

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  113                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106
    ')'   shift, and go to state 150


State 103

  107 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 151


State 104

  110 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 152
    name_in_namespace             go to state 70


State 105

  111 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 153
    name_in_namespace             go to state 70


State 106

  112 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 154
    name_in_namespace             go to state 70


State 107

  116 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 155
    name_in_namespace             go to state 70


State 108

  118 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 118 (optional_annotation_list)


State 109

  212 optional_public_or_private_function: "public" .

    $default  reduce using rule 212 (optional_public_or_private_function)


State 110

  211 optional_public_or_private_function: "private" .

    $default  reduce using rule 211 (optional_public_or_private_function)


State 111

  215 function_declaration: optional_public_or_private_function . $@6 function_declaration_header expression_block

    $default  reduce using rule 214 ($@6)

    $@6  go to state 156


State 112

  209 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 209 (global_function_declaration)


State 113

  571 optional_public_or_private_enum: "public" .

    $default  reduce using rule 571 (optional_public_or_private_enum)


State 114

  570 optional_public_or_private_enum: "private" .

    $default  reduce using rule 570 (optional_public_or_private_enum)


State 115

  575 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name '{' $@40 enum_list $@41 '}'
  578                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration '{' $@42 enum_list $@43 '}'

    "name"  shift, and go to state 157

    enum_name  go to state 158


State 116

  588 optional_public_or_private_structure: "public" .

    $default  reduce using rule 588 (optional_public_or_private_structure)


State 117

  587 optional_public_or_private_structure: "private" .

    $default  reduce using rule 587 (optional_public_or_private_structure)


State 118

  593 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@44 structure_name $@45 optional_struct_variable_declaration_list

    $default  reduce using rule 591 ($@44)

    $@44  go to state 159


State 119

  551 optional_public_or_private_variable: "public" .

    $default  reduce using rule 551 (optional_public_or_private_variable)


State 120

  550 optional_public_or_private_variable: "private" .

    $default  reduce using rule 550 (optional_public_or_private_variable)


State 121

  552 global_let: kwd_let optional_shared optional_public_or_private_variable . '{' global_variable_declaration_list '}'
  554           | kwd_let optional_shared optional_public_or_private_variable . $@37 optional_field_annotation let_variable_declaration

    '{'  shift, and go to state 160

    $default  reduce using rule 553 ($@37)

    $@37  go to state 161


State 122

   97 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 97 (annotation_argument)


State 123

   98 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 98 (annotation_argument)


State 124

   95 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 95 (annotation_argument)


State 125

   96 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 96 (annotation_argument)


State 126

   94 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 94 (annotation_argument)


State 127

   27 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163

    character_sequence  go to state 164


State 128

  100 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 127

    string_constant                 go to state 170
    annotation_argument_value       go to state 171
    annotation_argument_value_list  go to state 172


State 129

   93 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 93 (annotation_argument)


State 130

  102 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 102 (annotation_argument_list)


State 131

   53 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 53 (expect_error)


State 132

   51 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 51 (expect_list)


State 133

   46 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 85

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 173


State 134

   44 require_module_name: require_module_name '/' keyword_or_name .

    $default  reduce using rule 44 (require_module_name)


State 135

   43 require_module_name: require_module_name '.' keyword_or_name .

    $default  reduce using rule 43 (require_module_name)


State 136

  563 single_alias: optional_public_or_private_alias "name" . $@38 '=' type_declaration

    $default  reduce using rule 562 ($@38)

    $@38  go to state 174


State 137

  564 alias_list: single_alias ';' .

    $default  reduce using rule 564 (alias_list)


State 138

  566 alias_declaration: "typedef" '{' alias_list '}' .

    $default  reduce using rule 566 (alias_declaration)


State 139

  565 alias_list: alias_list single_alias . ';'

    ';'  shift, and go to state 175


State 140

  568 alias_declaration: "typedef" $@39 single_alias ';' .

    $default  reduce using rule 568 (alias_declaration)


State 141

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 142

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 143

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 144

  726 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@82 "name" . $@83 '{' $@84 bitfield_alias_bits $@85 '}'

    $default  reduce using rule 723 ($@83)

    $@83  go to state 176


State 145

  716 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@74 "name" . $@75 '{' $@76 tuple_alias_type_list $@77 '}'

    $default  reduce using rule 713 ($@75)

    $@75  go to state 177


State 146

  721 variant_alias_declaration: "variant" optional_public_or_private_alias $@78 "name" . $@79 '{' $@80 variant_alias_type_list $@81 '}'

    $default  reduce using rule 718 ($@79)

    $@79  go to state 178


State 147

  256 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 256 (name_in_namespace)


State 148

   32 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 32 (reader_character_sequence)


State 149

   33 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 179

    $default  reduce using rule 35 (expr_reader)


State 150

  113 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 113 (annotation_declaration)


State 151

  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  107 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 80
    ')'  shift, and go to state 180


State 152

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  110                       | annotation_declaration "&&" annotation_declaration .
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 110 (annotation_declaration)


State 153

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  111                       | annotation_declaration "||" annotation_declaration .
  112                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 104
    "^^"  shift, and go to state 106

    $default  reduce using rule 111 (annotation_declaration)


State 154

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  112                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 104

    $default  reduce using rule 112 (annotation_declaration)


State 155

  110 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  111                       | annotation_declaration . "||" annotation_declaration
  112                       | annotation_declaration . "^^" annotation_declaration
  116 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 104
    "||"  shift, and go to state 105
    "^^"  shift, and go to state 106

    $default  reduce using rule 116 (annotation_list)


State 156

  215 function_declaration: optional_public_or_private_function $@6 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 211


State 157

  572 enum_name: "name" .

    $default  reduce using rule 572 (enum_name)


State 158

  575 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . '{' $@40 enum_list $@41 '}'
  578                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration '{' $@42 enum_list $@43 '}'

    ':'  shift, and go to state 212
    '{'  shift, and go to state 213


State 159

  593 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@44 . structure_name $@45 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 214

    $default  reduce using rule 581 (optional_sealed)

    optional_sealed  go to state 215
    structure_name   go to state 216


State 160

  552 global_let: kwd_let optional_shared optional_public_or_private_variable '{' . global_variable_declaration_list '}'

    $default  reduce using rule 544 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 217


State 161

  554 global_let: kwd_let optional_shared optional_public_or_private_variable $@37 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 218

    $default  reduce using rule 482 (optional_field_annotation)

    optional_field_annotation  go to state 219


State 162

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 163

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 164

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 220
    STRING_CHARACTER_ESC  shift, and go to state 221
    "end of the string"   shift, and go to state 222


State 165

   86 annotation_argument_value: "true" .

    $default  reduce using rule 86 (annotation_argument_value)


State 166

   87 annotation_argument_value: "false" .

    $default  reduce using rule 87 (annotation_argument_value)


State 167

   84 annotation_argument_value: "integer constant" .

    $default  reduce using rule 84 (annotation_argument_value)


State 168

   85 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 85 (annotation_argument_value)


State 169

   83 annotation_argument_value: "name" .

    $default  reduce using rule 83 (annotation_argument_value)


State 170

   82 annotation_argument_value: string_constant .

    $default  reduce using rule 82 (annotation_argument_value)


State 171

   88 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 88 (annotation_argument_value_list)


State 172

   89 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  100 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 223
    ')'  shift, and go to state 224


State 173

   46 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 46 (require_module)


State 174

  563 single_alias: optional_public_or_private_alias "name" $@38 . '=' type_declaration

    '='  shift, and go to state 225


State 175

  565 alias_list: alias_list single_alias ';' .

    $default  reduce using rule 565 (alias_list)


State 176

  726 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@82 "name" $@83 . '{' $@84 bitfield_alias_bits $@85 '}'

    '{'  shift, and go to state 226


State 177

  716 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@74 "name" $@75 . '{' $@76 tuple_alias_type_list $@77 '}'

    '{'  shift, and go to state 227


State 178

  721 variant_alias_declaration: "variant" optional_public_or_private_alias $@78 "name" $@79 . '{' $@80 variant_alias_type_list $@81 '}'

    '{'  shift, and go to state 228


State 179

   33 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 33 (reader_character_sequence)


State 180

  107 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 107 (annotation_declaration_basic)


State 181

  125 function_name: "operator" . '!'
  126              | "operator" . '~'
  127              | "operator" . "+="
  128              | "operator" . "-="
  129              | "operator" . "*="
  130              | "operator" . "/="
  131              | "operator" . "%="
  132              | "operator" . "&="
  133              | "operator" . "|="
  134              | "operator" . "^="
  135              | "operator" . "&&="
  136              | "operator" . "||="
  137              | "operator" . "^^="
  138              | "operator" . "&&"
  139              | "operator" . "||"
  140              | "operator" . "^^"
  141              | "operator" . '+'
  142              | "operator" . '-'
  143              | "operator" . '*'
  144              | "operator" . '/'
  145              | "operator" . '%'
  146              | "operator" . '<'
  147              | "operator" . '>'
  148              | "operator" . ".."
  149              | "operator" . "=="
  150              | "operator" . "!="
  151              | "operator" . "<="
  152              | "operator" . ">="
  153              | "operator" . '&'
  154              | "operator" . '|'
  155              | "operator" . '^'
  158              | "operator" . "++"
  159              | "operator" . "--"
  160              | "operator" . "<<"
  161              | "operator" . ">>"
  162              | "operator" . "<<="
  163              | "operator" . ">>="
  164              | "operator" . "<<<"
  165              | "operator" . ">>>"
  166              | "operator" . "<<<="
  167              | "operator" . ">>>="
  168              | "operator" . '[' ']'
  169              | "operator" . "?[" ']'
  170              | "operator" . '.'
  171              | "operator" . "?."
  172              | "operator" . '.' "name"
  173              | "operator" . '.' "name" ":="
  174              | "operator" . "?." "name"
  175              | "operator" . ":="
  176              | "operator" . "delete"
  177              | "operator" . "??"
  178              | "operator" . "is"
  179              | "operator" . "as"
  180              | "operator" . "is" "name"
  181              | "operator" . "as" "name"
  182              | "operator" . '?' "as"
  183              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 229
    "as"      shift, and go to state 230
    "delete"  shift, and go to state 231
    "+="      shift, and go to state 232
    "-="      shift, and go to state 233
    "/="      shift, and go to state 234
    "*="      shift, and go to state 235
    "%="      shift, and go to state 236
    "&="      shift, and go to state 237
    "|="      shift, and go to state 238
    "^="      shift, and go to state 239
    "<<"      shift, and go to state 240
    ">>"      shift, and go to state 241
    "++"      shift, and go to state 242
    "--"      shift, and go to state 243
    "<="      shift, and go to state 244
    "<<="     shift, and go to state 245
    ">>="     shift, and go to state 246
    ">="      shift, and go to state 247
    "=="      shift, and go to state 248
    "!="      shift, and go to state 249
    "??"      shift, and go to state 250
    "?."      shift, and go to state 251
    "?["      shift, and go to state 252
    ":="      shift, and go to state 253
    "<<<"     shift, and go to state 254
    ">>>"     shift, and go to state 255
    "<<<="    shift, and go to state 256
    ">>>="    shift, and go to state 257
    "&&"      shift, and go to state 258
    "||"      shift, and go to state 259
    "^^"      shift, and go to state 260
    "&&="     shift, and go to state 261
    "||="     shift, and go to state 262
    "^^="     shift, and go to state 263
    ".."      shift, and go to state 264
    '?'       shift, and go to state 265
    '|'       shift, and go to state 266
    '^'       shift, and go to state 267
    '&'       shift, and go to state 268
    '<'       shift, and go to state 269
    '>'       shift, and go to state 270
    '-'       shift, and go to state 271
    '+'       shift, and go to state 272
    '*'       shift, and go to state 273
    '/'       shift, and go to state 274
    '%'       shift, and go to state 275
    '~'       shift, and go to state 276
    '!'       shift, and go to state 277
    '.'       shift, and go to state 278
    '['       shift, and go to state 279


State 182

  184 function_name: "bool" .

    $default  reduce using rule 184 (function_name)


State 183

  185 function_name: "string" .

    $default  reduce using rule 185 (function_name)


State 184

  186 function_name: "int" .

    $default  reduce using rule 186 (function_name)


State 185

  187 function_name: "int2" .

    $default  reduce using rule 187 (function_name)


State 186

  188 function_name: "int3" .

    $default  reduce using rule 188 (function_name)


State 187

  189 function_name: "int4" .

    $default  reduce using rule 189 (function_name)


State 188

  190 function_name: "uint" .

    $default  reduce using rule 190 (function_name)


State 189

  191 function_name: "uint2" .

    $default  reduce using rule 191 (function_name)


State 190

  192 function_name: "uint3" .

    $default  reduce using rule 192 (function_name)


State 191

  193 function_name: "uint4" .

    $default  reduce using rule 193 (function_name)


State 192

  194 function_name: "float" .

    $default  reduce using rule 194 (function_name)


State 193

  195 function_name: "float2" .

    $default  reduce using rule 195 (function_name)


State 194

  196 function_name: "float3" .

    $default  reduce using rule 196 (function_name)


State 195

  197 function_name: "float4" .

    $default  reduce using rule 197 (function_name)


State 196

  198 function_name: "range" .

    $default  reduce using rule 198 (function_name)


State 197

  199 function_name: "urange" .

    $default  reduce using rule 199 (function_name)


State 198

  200 function_name: "range64" .

    $default  reduce using rule 200 (function_name)


State 199

  201 function_name: "urange64" .

    $default  reduce using rule 201 (function_name)


State 200

  202 function_name: "int64" .

    $default  reduce using rule 202 (function_name)


State 201

  203 function_name: "uint64" .

    $default  reduce using rule 203 (function_name)


State 202

  204 function_name: "double" .

    $default  reduce using rule 204 (function_name)


State 203

  205 function_name: "int8" .

    $default  reduce using rule 205 (function_name)


State 204

  206 function_name: "uint8" .

    $default  reduce using rule 206 (function_name)


State 205

  207 function_name: "int16" .

    $default  reduce using rule 207 (function_name)


State 206

  208 function_name: "uint16" .

    $default  reduce using rule 208 (function_name)


State 207

  156 function_name: "++" . "operator"

    "operator"  shift, and go to state 280


State 208

  157 function_name: "--" . "operator"

    "operator"  shift, and go to state 281


State 209

  124 function_name: "name" .

    $default  reduce using rule 124 (function_name)


State 210

  213 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 283


State 211

  215 function_declaration: optional_public_or_private_function $@6 function_declaration_header . expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 285


State 212

  578 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration '{' $@42 enum_list $@43 '}'

    "int"     shift, and go to state 286
    "uint"    shift, and go to state 287
    "int8"    shift, and go to state 288
    "uint8"   shift, and go to state 289
    "int16"   shift, and go to state 290
    "uint16"  shift, and go to state 291

    enum_basic_type_declaration  go to state 292


State 213

  575 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' . $@40 enum_list $@41 '}'

    $default  reduce using rule 573 ($@40)

    $@40  go to state 293


State 214

  582 optional_sealed: "sealed" .

    $default  reduce using rule 582 (optional_sealed)


State 215

  583 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 294


State 216

  593 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@44 structure_name . $@45 optional_struct_variable_declaration_list

    $default  reduce using rule 592 ($@45)

    $@45  go to state 295


State 217

  546 global_variable_declaration_list: global_variable_declaration_list . $@36 optional_field_annotation let_variable_declaration
  552 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list . '}'

    '}'  shift, and go to state 296

    $default  reduce using rule 545 ($@36)

    $@36  go to state 297


State 218

  483 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 298


State 219

  554 global_let: kwd_let optional_shared optional_public_or_private_variable $@37 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 299
    "name"  shift, and go to state 300

    let_variable_name_with_pos_list  go to state 301
    let_variable_declaration         go to state 302


State 220

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 221

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 222

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 223

   89 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 127

    string_constant            go to state 170
    annotation_argument_value  go to state 303


State 224

  100 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 100 (annotation_argument)


State 225

  563 single_alias: optional_public_or_private_alias "name" $@38 '=' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 351


State 226

  726 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@82 "name" $@83 '{' . $@84 bitfield_alias_bits $@85 '}'

    $default  reduce using rule 724 ($@84)

    $@84  go to state 352


State 227

  716 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@74 "name" $@75 '{' . $@76 tuple_alias_type_list $@77 '}'

    $default  reduce using rule 714 ($@76)

    $@76  go to state 353


State 228

  721 variant_alias_declaration: "variant" optional_public_or_private_alias $@78 "name" $@79 '{' . $@80 variant_alias_type_list $@81 '}'

    $default  reduce using rule 719 ($@80)

    $@80  go to state 354


State 229

  178 function_name: "operator" "is" .
  180              | "operator" "is" . "name"

    "name"  shift, and go to state 355

    $default  reduce using rule 178 (function_name)


State 230

  179 function_name: "operator" "as" .
  181              | "operator" "as" . "name"

    "name"  shift, and go to state 356

    $default  reduce using rule 179 (function_name)


State 231

  176 function_name: "operator" "delete" .

    $default  reduce using rule 176 (function_name)


State 232

  127 function_name: "operator" "+=" .

    $default  reduce using rule 127 (function_name)


State 233

  128 function_name: "operator" "-=" .

    $default  reduce using rule 128 (function_name)


State 234

  130 function_name: "operator" "/=" .

    $default  reduce using rule 130 (function_name)


State 235

  129 function_name: "operator" "*=" .

    $default  reduce using rule 129 (function_name)


State 236

  131 function_name: "operator" "%=" .

    $default  reduce using rule 131 (function_name)


State 237

  132 function_name: "operator" "&=" .

    $default  reduce using rule 132 (function_name)


State 238

  133 function_name: "operator" "|=" .

    $default  reduce using rule 133 (function_name)


State 239

  134 function_name: "operator" "^=" .

    $default  reduce using rule 134 (function_name)


State 240

  160 function_name: "operator" "<<" .

    $default  reduce using rule 160 (function_name)


State 241

  161 function_name: "operator" ">>" .

    $default  reduce using rule 161 (function_name)


State 242

  158 function_name: "operator" "++" .

    $default  reduce using rule 158 (function_name)


State 243

  159 function_name: "operator" "--" .

    $default  reduce using rule 159 (function_name)


State 244

  151 function_name: "operator" "<=" .

    $default  reduce using rule 151 (function_name)


State 245

  162 function_name: "operator" "<<=" .

    $default  reduce using rule 162 (function_name)


State 246

  163 function_name: "operator" ">>=" .

    $default  reduce using rule 163 (function_name)


State 247

  152 function_name: "operator" ">=" .

    $default  reduce using rule 152 (function_name)


State 248

  149 function_name: "operator" "==" .

    $default  reduce using rule 149 (function_name)


State 249

  150 function_name: "operator" "!=" .

    $default  reduce using rule 150 (function_name)


State 250

  177 function_name: "operator" "??" .

    $default  reduce using rule 177 (function_name)


State 251

  171 function_name: "operator" "?." .
  174              | "operator" "?." . "name"

    "name"  shift, and go to state 357

    $default  reduce using rule 171 (function_name)


State 252

  169 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 358


State 253

  175 function_name: "operator" ":=" .

    $default  reduce using rule 175 (function_name)


State 254

  164 function_name: "operator" "<<<" .

    $default  reduce using rule 164 (function_name)


State 255

  165 function_name: "operator" ">>>" .

    $default  reduce using rule 165 (function_name)


State 256

  166 function_name: "operator" "<<<=" .

    $default  reduce using rule 166 (function_name)


State 257

  167 function_name: "operator" ">>>=" .

    $default  reduce using rule 167 (function_name)


State 258

  138 function_name: "operator" "&&" .

    $default  reduce using rule 138 (function_name)


State 259

  139 function_name: "operator" "||" .

    $default  reduce using rule 139 (function_name)


State 260

  140 function_name: "operator" "^^" .

    $default  reduce using rule 140 (function_name)


State 261

  135 function_name: "operator" "&&=" .

    $default  reduce using rule 135 (function_name)


State 262

  136 function_name: "operator" "||=" .

    $default  reduce using rule 136 (function_name)


State 263

  137 function_name: "operator" "^^=" .

    $default  reduce using rule 137 (function_name)


State 264

  148 function_name: "operator" ".." .

    $default  reduce using rule 148 (function_name)


State 265

  182 function_name: "operator" '?' . "as"
  183              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 359


State 266

  154 function_name: "operator" '|' .

    $default  reduce using rule 154 (function_name)


State 267

  155 function_name: "operator" '^' .

    $default  reduce using rule 155 (function_name)


State 268

  153 function_name: "operator" '&' .

    $default  reduce using rule 153 (function_name)


State 269

  146 function_name: "operator" '<' .

    $default  reduce using rule 146 (function_name)


State 270

  147 function_name: "operator" '>' .

    $default  reduce using rule 147 (function_name)


State 271

  142 function_name: "operator" '-' .

    $default  reduce using rule 142 (function_name)


State 272

  141 function_name: "operator" '+' .

    $default  reduce using rule 141 (function_name)


State 273

  143 function_name: "operator" '*' .

    $default  reduce using rule 143 (function_name)


State 274

  144 function_name: "operator" '/' .

    $default  reduce using rule 144 (function_name)


State 275

  145 function_name: "operator" '%' .

    $default  reduce using rule 145 (function_name)


State 276

  126 function_name: "operator" '~' .

    $default  reduce using rule 126 (function_name)


State 277

  125 function_name: "operator" '!' .

    $default  reduce using rule 125 (function_name)


State 278

  170 function_name: "operator" '.' .
  172              | "operator" '.' . "name"
  173              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 360

    $default  reduce using rule 170 (function_name)


State 279

  168 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 361


State 280

  156 function_name: "++" "operator" .

    $default  reduce using rule 156 (function_name)


State 281

  157 function_name: "--" "operator" .

    $default  reduce using rule 157 (function_name)


State 282

  120 optional_function_argument_list: '(' . ')'
  121                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 362
    "[["  shift, and go to state 218
    ')'   shift, and go to state 363

    $default  reduce using rule 482 (optional_field_annotation)

    optional_field_annotation      go to state 364
    function_argument_declaration  go to state 365
    function_argument_list         go to state 366


State 283

  213 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 368


State 284

  216 expression_block: '{' . expressions '}'
  217                 | '{' . expressions '}' "finally" '{' expressions '}'

    $default  reduce using rule 239 (expressions)

    expressions  go to state 369


State 285

  215 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block .

    $default  reduce using rule 215 (function_declaration)


State 286

  626 enum_basic_type_declaration: "int" .

    $default  reduce using rule 626 (enum_basic_type_declaration)


State 287

  629 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 629 (enum_basic_type_declaration)


State 288

  627 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 627 (enum_basic_type_declaration)


State 289

  630 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 630 (enum_basic_type_declaration)


State 290

  628 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 628 (enum_basic_type_declaration)


State 291

  631 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 631 (enum_basic_type_declaration)


State 292

  578 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . '{' $@42 enum_list $@43 '}'

    '{'  shift, and go to state 370


State 293

  575 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@40 . enum_list $@41 '}'

    $default  reduce using rule 555 (enum_list)

    enum_list  go to state 371


State 294

  583 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 372

    $default  reduce using rule 579 (optional_structure_parent)

    optional_structure_parent  go to state 373


State 295

  593 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@44 structure_name $@45 . optional_struct_variable_declaration_list

    '{'  shift, and go to state 374

    $default  reduce using rule 589 (optional_struct_variable_declaration_list)

    optional_struct_variable_declaration_list  go to state 375


State 296

  552 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}' .

    $default  reduce using rule 552 (global_let)


State 297

  546 global_variable_declaration_list: global_variable_declaration_list $@36 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 218

    $default  reduce using rule 482 (optional_field_annotation)

    optional_field_annotation  go to state 376


State 298

  102 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  483 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 80
    ']'  shift, and go to state 377


State 299

  535 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 378


State 300

  534 let_variable_name_with_pos_list: "name" .
  536                                | "name" . "aka" "name"

    "aka"  shift, and go to state 379

    $default  reduce using rule 534 (let_variable_name_with_pos_list)


State 301

  537 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  538                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  539 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options ';'
  540                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  541                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  542                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr ';'
  543                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 380
    ':'  shift, and go to state 381
    '&'  shift, and go to state 382

    $default  reduce using rule 532 (optional_ref)

    optional_ref  go to state 383


State 302

  554 global_let: kwd_let optional_shared optional_public_or_private_variable $@37 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 554 (global_let)


State 303

   89 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 89 (annotation_argument_value_list)


State 304

  654 type_declaration_no_options: "type" . '<' $@48 type_declaration '>' $@49

    '<'  shift, and go to state 384


State 305

  675 type_declaration_no_options: "array" . '<' $@52 type_declaration '>' $@53

    '<'  shift, and go to state 385


State 306

  678 type_declaration_no_options: "table" . '<' $@54 table_type_pair '>' $@55

    '<'  shift, and go to state 386


State 307

  655 type_declaration_no_options: "typedecl" . '(' expr ')'

    '('  shift, and go to state 387


State 308

  681 type_declaration_no_options: "iterator" . '<' $@56 type_declaration '>' $@57

    '<'  shift, and go to state 388


State 309

  671 type_declaration_no_options: "smart_ptr" . '<' $@50 type_declaration '>' $@51

    '<'  shift, and go to state 389


State 310

  599 basic_type_declaration: "bool" .

    $default  reduce using rule 599 (basic_type_declaration)


State 311

  619 basic_type_declaration: "void" .

    $default  reduce using rule 619 (basic_type_declaration)


State 312

  600 basic_type_declaration: "string" .

    $default  reduce using rule 600 (basic_type_declaration)


State 313

  633 auto_type_declaration: "auto" .
  634                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 390

    '('       [reduce using rule 633 (auto_type_declaration)]
    $default  reduce using rule 633 (auto_type_declaration)


State 314

  601 basic_type_declaration: "int" .

    $default  reduce using rule 601 (basic_type_declaration)


State 315

  605 basic_type_declaration: "int2" .

    $default  reduce using rule 605 (basic_type_declaration)


State 316

  606 basic_type_declaration: "int3" .

    $default  reduce using rule 606 (basic_type_declaration)


State 317

  607 basic_type_declaration: "int4" .

    $default  reduce using rule 607 (basic_type_declaration)


State 318

  608 basic_type_declaration: "uint" .

    $default  reduce using rule 608 (basic_type_declaration)


State 319

  625 basic_type_declaration: "bitfield" .
  643 bitfield_type_declaration: "bitfield" . '<' $@46 bitfield_bits '>' $@47

    '<'  shift, and go to state 391

    $default  reduce using rule 625 (basic_type_declaration)


State 320

  612 basic_type_declaration: "uint2" .

    $default  reduce using rule 612 (basic_type_declaration)


State 321

  613 basic_type_declaration: "uint3" .

    $default  reduce using rule 613 (basic_type_declaration)


State 322

  614 basic_type_declaration: "uint4" .

    $default  reduce using rule 614 (basic_type_declaration)


State 323

  615 basic_type_declaration: "float" .

    $default  reduce using rule 615 (basic_type_declaration)


State 324

  616 basic_type_declaration: "float2" .

    $default  reduce using rule 616 (basic_type_declaration)


State 325

  617 basic_type_declaration: "float3" .

    $default  reduce using rule 617 (basic_type_declaration)


State 326

  618 basic_type_declaration: "float4" .

    $default  reduce using rule 618 (basic_type_declaration)


State 327

  620 basic_type_declaration: "range" .

    $default  reduce using rule 620 (basic_type_declaration)


State 328

  621 basic_type_declaration: "urange" .

    $default  reduce using rule 621 (basic_type_declaration)


State 329

  622 basic_type_declaration: "range64" .

    $default  reduce using rule 622 (basic_type_declaration)


State 330

  623 basic_type_declaration: "urange64" .

    $default  reduce using rule 623 (basic_type_declaration)


State 331

  682 type_declaration_no_options: "block" .
  685                            | "block" . '<' $@58 type_declaration '>' $@59
  688                            | "block" . '<' $@60 optional_function_argument_list optional_function_type '>' $@61

    '<'  shift, and go to state 392

    $default  reduce using rule 682 (type_declaration_no_options)


State 332

  604 basic_type_declaration: "int64" .

    $default  reduce using rule 604 (basic_type_declaration)


State 333

  611 basic_type_declaration: "uint64" .

    $default  reduce using rule 611 (basic_type_declaration)


State 334

  624 basic_type_declaration: "double" .

    $default  reduce using rule 624 (basic_type_declaration)


State 335

  689 type_declaration_no_options: "function" .
  692                            | "function" . '<' $@62 type_declaration '>' $@63
  695                            | "function" . '<' $@64 optional_function_argument_list optional_function_type '>' $@65

    '<'  shift, and go to state 393

    $default  reduce using rule 689 (type_declaration_no_options)


State 336

  696 type_declaration_no_options: "lambda" .
  699                            | "lambda" . '<' $@66 type_declaration '>' $@67
  702                            | "lambda" . '<' $@68 optional_function_argument_list optional_function_type '>' $@69

    '<'  shift, and go to state 394

    $default  reduce using rule 696 (type_declaration_no_options)


State 337

  602 basic_type_declaration: "int8" .

    $default  reduce using rule 602 (basic_type_declaration)


State 338

  609 basic_type_declaration: "uint8" .

    $default  reduce using rule 609 (basic_type_declaration)


State 339

  603 basic_type_declaration: "int16" .

    $default  reduce using rule 603 (basic_type_declaration)


State 340

  610 basic_type_declaration: "uint16" .

    $default  reduce using rule 610 (basic_type_declaration)


State 341

  705 type_declaration_no_options: "tuple" . '<' $@70 tuple_type_list '>' $@71

    '<'  shift, and go to state 395


State 342

  708 type_declaration_no_options: "variant" . '<' $@72 variant_type_list '>' $@73

    '<'  shift, and go to state 396


State 343

  635 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 397


State 344

  656 type_declaration_no_options: '$' . name_in_namespace '(' optional_expr_list ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 398


State 345

  632 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 632 (structure_type_declaration)


State 346

  646 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 646 (type_declaration_no_options)


State 347

  649 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 649 (type_declaration_no_options)


State 348

  647 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 647 (type_declaration_no_options)


State 349

  648 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 648 (type_declaration_no_options)


State 350

  650 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  651                            | type_declaration_no_options . '[' ']'
  657                            | type_declaration_no_options . '-' '[' ']'
  658                            | type_declaration_no_options . "explicit"
  659                            | type_declaration_no_options . "const"
  660                            | type_declaration_no_options . '-' "const"
  661                            | type_declaration_no_options . '&'
  662                            | type_declaration_no_options . '-' '&'
  663                            | type_declaration_no_options . '#'
  664                            | type_declaration_no_options . "implicit"
  665                            | type_declaration_no_options . '-' '#'
  666                            | type_declaration_no_options . "==" "const"
  667                            | type_declaration_no_options . "==" '&'
  668                            | type_declaration_no_options . '?'
  672                            | type_declaration_no_options . "??"
  709 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    $default  reduce using rule 709 (type_declaration)


State 351

  563 single_alias: optional_public_or_private_alias "name" $@38 '=' type_declaration .
  710 type_declaration: type_declaration . '|' type_declaration_no_options
  711                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409

    $default  reduce using rule 563 (single_alias)


State 352

  726 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@82 "name" $@83 '{' $@84 . bitfield_alias_bits $@85 '}'

    $default  reduce using rule 638 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 410


State 353

  716 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@74 "name" $@75 '{' $@76 . tuple_alias_type_list $@77 '}'

    $default  reduce using rule 512 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 411


State 354

  721 variant_alias_declaration: "variant" optional_public_or_private_alias $@78 "name" $@79 '{' $@80 . variant_alias_type_list $@81 '}'

    $default  reduce using rule 518 (variant_alias_type_list)

    variant_alias_type_list  go to state 412


State 355

  180 function_name: "operator" "is" "name" .

    $default  reduce using rule 180 (function_name)


State 356

  181 function_name: "operator" "as" "name" .

    $default  reduce using rule 181 (function_name)


State 357

  174 function_name: "operator" "?." "name" .

    $default  reduce using rule 174 (function_name)


State 358

  169 function_name: "operator" "?[" ']' .

    $default  reduce using rule 169 (function_name)


State 359

  182 function_name: "operator" '?' "as" .
  183              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 413

    $default  reduce using rule 182 (function_name)


State 360

  172 function_name: "operator" '.' "name" .
  173              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 414

    $default  reduce using rule 172 (function_name)


State 361

  168 function_name: "operator" '[' ']' .

    $default  reduce using rule 168 (function_name)


State 362

  505 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 415


State 363

  120 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 120 (optional_function_argument_list)


State 364

  503 function_argument_declaration: optional_field_annotation . variable_declaration
  504                              | optional_field_annotation . "var" variable_declaration

    "var"   shift, and go to state 416
    "$i"    shift, and go to state 417
    "name"  shift, and go to state 418

    variable_declaration         go to state 419
    variable_name_with_pos_list  go to state 420


State 365

  506 function_argument_list: function_argument_declaration .

    $default  reduce using rule 506 (function_argument_list)


State 366

  121 optional_function_argument_list: '(' function_argument_list . ')'
  507 function_argument_list: function_argument_list . ';' function_argument_declaration

    ')'  shift, and go to state 421
    ';'  shift, and go to state 422


State 367

  123 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 423


State 368

  213 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 213 (function_declaration_header)


State 369

  216 expression_block: '{' expressions . '}'
  217                 | '{' expressions . '}' "finally" '{' expressions '}'
  240 expressions: expressions . expression_any
  241            | expressions . error

    error                             shift, and go to state 424
    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 427
    "if"                              shift, and go to state 428
    "static_if"                       shift, and go to state 429
    "for"                             shift, and go to state 430
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "return"                          shift, and go to state 437
    "null"                            shift, and go to state 438
    "break"                           shift, and go to state 439
    "try"                             shift, and go to state 440
    "table"                           shift, and go to state 441
    "delete"                          shift, and go to state 442
    "deref"                           shift, and go to state 443
    "with"                            shift, and go to state 444
    "assume"                          shift, and go to state 445
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 448
    "continue"                        shift, and go to state 449
    "pass"                            shift, and go to state 450
    "reinterpret"                     shift, and go to state 451
    "label"                           shift, and go to state 452
    "goto"                            shift, and go to state 453
    "unsafe"                          shift, and go to state 454
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "yield"                           shift, and go to state 460
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 463
    "@ <|"                            shift, and go to state 464
    "@@ <|"                           shift, and go to state 465
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 483
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    ';'                               shift, and go to state 495
    '{'                               shift, and go to state 496
    '}'                               shift, and go to state 497

    string_builder             go to state 498
    expr_reader                go to state 499
    expression_label           go to state 500
    expression_goto            go to state 501
    if_or_static_if            go to state 502
    expression_if_one_liner    go to state 503
    expression_if_then_else    go to state 504
    expression_for_loop        go to state 505
    expression_unsafe          go to state 506
    expression_while_loop      go to state 507
    expression_with            go to state 508
    expression_with_alias      go to state 509
    expression_any             go to state 510
    expr_keyword               go to state 511
    expression_keyword         go to state 512
    expr_pipe                  go to state 513
    name_in_namespace          go to state 514
    expression_delete          go to state 515
    expr_new                   go to state 516
    expression_break           go to state 517
    expression_continue        go to state 518
    expression_return_no_pipe  go to state 519
    expression_return          go to state 520
    expression_yield_no_pipe   go to state 521
    expression_yield           go to state 522
    expression_try_catch       go to state 523
    kwd_let                    go to state 524
    expression_let             go to state 525
    expr_cast                  go to state 526
    expr_type_decl             go to state 527
    expr_type_info             go to state 528
    block_or_lambda            go to state 529
    expr_full_block            go to state 530
    expr_numeric_const         go to state 531
    expr_assign                go to state 532
    expr_assign_pipe           go to state 533
    expr_named_call            go to state 534
    expr_method_call           go to state 535
    func_addr_expr             go to state 536
    expr_field                 go to state 537
    expr                       go to state 538
    expr_mtag                  go to state 539
    basic_type_declaration     go to state 540
    make_decl                  go to state 541
    make_struct_decl           go to state 542
    make_tuple_call            go to state 543
    make_dim_decl              go to state 544
    make_table_decl            go to state 545
    array_comprehension        go to state 546


State 370

  578 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' . $@42 enum_list $@43 '}'

    $default  reduce using rule 576 ($@42)

    $@42  go to state 547


State 371

  556 enum_list: enum_list . ';'
  557          | enum_list . "name" ';'
  558          | enum_list . "name" '=' expr ';'
  575 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@40 enum_list . $@41 '}'

    "name"  shift, and go to state 548
    ';'     shift, and go to state 549

    $default  reduce using rule 574 ($@41)

    $@41  go to state 550


State 372

  580 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 551


State 373

  583 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 583 (structure_name)


State 374

  590 optional_struct_variable_declaration_list: '{' . struct_variable_declaration_list '}'

    $default  reduce using rule 495 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 552


State 375

  593 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@44 structure_name $@45 optional_struct_variable_declaration_list .

    $default  reduce using rule 593 (structure_declaration)


State 376

  546 global_variable_declaration_list: global_variable_declaration_list $@36 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 299
    "name"  shift, and go to state 300

    let_variable_name_with_pos_list  go to state 301
    let_variable_declaration         go to state 553


State 377

  483 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 554


State 378

  535 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 557
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 379

  536 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 558


State 380

  537 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  538                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 559


State 381

  539 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options ';'
  540                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr ';'
  541                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 560


State 382

  533 optional_ref: '&' .

    $default  reduce using rule 533 (optional_ref)


State 383

  542 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr ';'
  543                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 561
    ":="  shift, and go to state 562
    '='   shift, and go to state 563

    copy_or_move_or_clone  go to state 564


State 384

  654 type_declaration_no_options: "type" '<' . $@48 type_declaration '>' $@49

    $default  reduce using rule 652 ($@48)

    $@48  go to state 565


State 385

  675 type_declaration_no_options: "array" '<' . $@52 type_declaration '>' $@53

    $default  reduce using rule 673 ($@52)

    $@52  go to state 566


State 386

  678 type_declaration_no_options: "table" '<' . $@54 table_type_pair '>' $@55

    $default  reduce using rule 676 ($@54)

    $@54  go to state 567


State 387

  655 type_declaration_no_options: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 568
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 388

  681 type_declaration_no_options: "iterator" '<' . $@56 type_declaration '>' $@57

    $default  reduce using rule 679 ($@56)

    $@56  go to state 569


State 389

  671 type_declaration_no_options: "smart_ptr" '<' . $@50 type_declaration '>' $@51

    $default  reduce using rule 669 ($@50)

    $@50  go to state 570


State 390

  634 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 571


State 391

  643 bitfield_type_declaration: "bitfield" '<' . $@46 bitfield_bits '>' $@47

    $default  reduce using rule 641 ($@46)

    $@46  go to state 572


State 392

  685 type_declaration_no_options: "block" '<' . $@58 type_declaration '>' $@59
  688                            | "block" '<' . $@60 optional_function_argument_list optional_function_type '>' $@61

    ':'       reduce using rule 686 ($@60)
    '>'       reduce using rule 686 ($@60)
    '('       reduce using rule 686 ($@60)
    $default  reduce using rule 683 ($@58)

    $@58  go to state 573
    $@60  go to state 574


State 393

  692 type_declaration_no_options: "function" '<' . $@62 type_declaration '>' $@63
  695                            | "function" '<' . $@64 optional_function_argument_list optional_function_type '>' $@65

    ':'       reduce using rule 693 ($@64)
    '>'       reduce using rule 693 ($@64)
    '('       reduce using rule 693 ($@64)
    $default  reduce using rule 690 ($@62)

    $@62  go to state 575
    $@64  go to state 576


State 394

  699 type_declaration_no_options: "lambda" '<' . $@66 type_declaration '>' $@67
  702                            | "lambda" '<' . $@68 optional_function_argument_list optional_function_type '>' $@69

    ':'       reduce using rule 700 ($@68)
    '>'       reduce using rule 700 ($@68)
    '('       reduce using rule 700 ($@68)
    $default  reduce using rule 697 ($@66)

    $@66  go to state 577
    $@68  go to state 578


State 395

  705 type_declaration_no_options: "tuple" '<' . $@70 tuple_type_list '>' $@71

    $default  reduce using rule 703 ($@70)

    $@70  go to state 579


State 396

  708 type_declaration_no_options: "variant" '<' . $@72 variant_type_list '>' $@73

    $default  reduce using rule 706 ($@72)

    $@72  go to state 580


State 397

  635 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 581
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 398

  656 type_declaration_no_options: '$' name_in_namespace . '(' optional_expr_list ')'

    '('  shift, and go to state 582


State 399

  659 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 659 (type_declaration_no_options)


State 400

  664 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 664 (type_declaration_no_options)


State 401

  658 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 658 (type_declaration_no_options)


State 402

  666 type_declaration_no_options: type_declaration_no_options "==" . "const"
  667                            | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 583
    '&'      shift, and go to state 584


State 403

  672 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 672 (type_declaration_no_options)


State 404

  668 type_declaration_no_options: type_declaration_no_options '?' .

    $default  reduce using rule 668 (type_declaration_no_options)


State 405

  661 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 661 (type_declaration_no_options)


State 406

  657 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  660                            | type_declaration_no_options '-' . "const"
  662                            | type_declaration_no_options '-' . '&'
  665                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 585
    '&'      shift, and go to state 586
    '['      shift, and go to state 587
    '#'      shift, and go to state 588


State 407

  650 type_declaration_no_options: type_declaration_no_options '[' . expr ']'
  651                            | type_declaration_no_options '[' . ']'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    ']'                               shift, and go to state 589
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 590
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 408

  663 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 663 (type_declaration_no_options)


State 409

  710 type_declaration: type_declaration '|' . type_declaration_no_options
  711                 | type_declaration '|' . '#'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344
    '#'          shift, and go to state 591

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 592


State 410

  639 bitfield_alias_bits: bitfield_alias_bits . ';'
  640                    | bitfield_alias_bits . "name" ';'
  726 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@82 "name" $@83 '{' $@84 bitfield_alias_bits . $@85 '}'

    "name"  shift, and go to state 593
    ';'     shift, and go to state 594

    $default  reduce using rule 725 ($@85)

    $@85  go to state 595


State 411

  513 tuple_alias_type_list: tuple_alias_type_list . ';'
  514                      | tuple_alias_type_list . tuple_type ';'
  716 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@74 "name" $@75 '{' $@76 tuple_alias_type_list . $@77 '}'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 596
    '$'          shift, and go to state 344
    ';'          shift, and go to state 597

    $default  reduce using rule 715 ($@77)

    name_in_namespace            go to state 345
    tuple_type                   go to state 598
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 599
    $@77                         go to state 600


State 412

  519 variant_alias_type_list: variant_alias_type_list . ';'
  520                        | variant_alias_type_list . variant_type ';'
  721 variant_alias_declaration: "variant" optional_public_or_private_alias $@78 "name" $@79 '{' $@80 variant_alias_type_list . $@81 '}'

    "name"  shift, and go to state 601
    ';'     shift, and go to state 602

    $default  reduce using rule 720 ($@81)

    variant_type  go to state 603
    $@81          go to state 604


State 413

  183 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 183 (function_name)


State 414

  173 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 173 (function_name)


State 415

  505 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 605
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 416

  504 function_argument_declaration: optional_field_annotation "var" . variable_declaration

    "$i"    shift, and go to state 417
    "name"  shift, and go to state 418

    variable_declaration         go to state 606
    variable_name_with_pos_list  go to state 420


State 417

  595 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 607


State 418

  594 variable_name_with_pos_list: "name" .
  596                            | "name" . "aka" "name"

    "aka"  shift, and go to state 608

    $default  reduce using rule 594 (variable_name_with_pos_list)


State 419

  503 function_argument_declaration: optional_field_annotation variable_declaration .

    $default  reduce using rule 503 (function_argument_declaration)


State 420

  523 variable_declaration: variable_name_with_pos_list .
  524                     | variable_name_with_pos_list . '&'
  525                     | variable_name_with_pos_list . ':' type_declaration
  526                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  527                     | variable_name_with_pos_list . copy_or_move expr
  528                     | variable_name_with_pos_list . copy_or_move expr_pipe
  597 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  598                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 609
    ','   shift, and go to state 610
    '='   shift, and go to state 611
    ':'   shift, and go to state 612
    '&'   shift, and go to state 613

    $default  reduce using rule 523 (variable_declaration)

    copy_or_move  go to state 614


State 421

  121 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 121 (optional_function_argument_list)


State 422

  507 function_argument_list: function_argument_list ';' . function_argument_declaration

    "$a"  shift, and go to state 362
    "[["  shift, and go to state 218

    $default  reduce using rule 482 (optional_field_annotation)

    optional_field_annotation      go to state 364
    function_argument_declaration  go to state 615


State 423

  123 optional_function_type: ':' type_declaration .
  710 type_declaration: type_declaration . '|' type_declaration_no_options
  711                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409

    $default  reduce using rule 123 (optional_function_type)


State 424

  241 expressions: expressions error .

    $default  reduce using rule 241 (expressions)


State 425

  764 make_struct_decl: "struct" . '<' $@86 type_declaration_no_options '>' $@87 '(' make_struct_dim ')'

    '<'  shift, and go to state 616


State 426

  767 make_struct_decl: "class" . '<' $@88 type_declaration_no_options '>' $@89 '(' make_struct_dim ')'

    '<'  shift, and go to state 617


State 427

   78 expression_while_loop: "while" . expr expression_block

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 618
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 428

   62 if_or_static_if: "if" .

    $default  reduce using rule 62 (if_or_static_if)


State 429

   63 if_or_static_if: "static_if" .

    $default  reduce using rule 63 (if_or_static_if)


State 430

   76 expression_for_loop: "for" . $@4 variable_name_with_pos_list "in" expr_list expression_block

    $default  reduce using rule 75 ($@4)

    $@4  go to state 619


State 431

  384 expr: "true" .

    $default  reduce using rule 384 (expr)


State 432

  385 expr: "false" .

    $default  reduce using rule 385 (expr)


State 433

  264 expr_new: "new" . new_type_declaration
  265         | "new" . new_type_declaration '(' ')'
  266         | "new" . new_type_declaration '(' expr_list ')'
  267         | "new" . make_decl

    "struct"       shift, and go to state 425
    "class"        shift, and go to state 426
    "array"        shift, and go to state 436
    "table"        shift, and go to state 441
    "fixed_array"  shift, and go to state 455
    "tuple"        shift, and go to state 457
    "variant"      shift, and go to state 458
    "::"           shift, and go to state 58
    "[["           shift, and go to state 473
    "[{"           shift, and go to state 474
    "{{"           shift, and go to state 475
    "name"         shift, and go to state 59
    '<'            shift, and go to state 620
    '['            shift, and go to state 491
    '{'            shift, and go to state 496

    name_in_namespace           go to state 345
    new_type_declaration        go to state 621
    structure_type_declaration  go to state 622
    make_decl                   go to state 623
    make_struct_decl            go to state 542
    make_tuple_call             go to state 543
    make_dim_decl               go to state 544
    make_table_decl             go to state 545
    array_comprehension         go to state 546


State 434

  304 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  305               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  306               | "typeinfo" . '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

    '('  shift, and go to state 624


State 435

  303 expr_type_decl: "type" . '<' $@19 type_declaration '>' $@20

    '<'  shift, and go to state 625


State 436

  785 make_dim_decl: "array" . '(' expr_list ')'
  788              | "array" . '<' $@94 type_declaration_no_options '>' $@95 '(' expr_list ')'

    '<'  shift, and go to state 626
    '('  shift, and go to state 627


State 437

  270 expression_return_no_pipe: "return" .
  271                          | "return" . expr_list
  272                          | "return" . "<-" expr_list
  274 expression_return: "return" . expr_pipe
  275                  | "return" . "<-" expr_pipe

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "<-"                              shift, and go to state 628
    "$ <|"                            shift, and go to state 463
    "@ <|"                            shift, and go to state 464
    "@@ <|"                           shift, and go to state 465
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    $default  reduce using rule 270 (expression_return_no_pipe)

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    expr_pipe               go to state 629
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    expr_list               go to state 630
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_assign             go to state 631
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 632
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 438

  378 expr: "null" .

    $default  reduce using rule 378 (expr)


State 439

  268 expression_break: "break" .

    $default  reduce using rule 268 (expression_break)


State 440

  281 expression_try_catch: "try" . expression_block "recover" expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 633


State 441

  799 make_table_decl: "table" . '(' expr_map_tuple_list ')'
  800                | "table" . '<' type_declaration_no_options '>' '(' expr_map_tuple_list ')'
  801                | "table" . '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list ')'

    '<'  shift, and go to state 634
    '('  shift, and go to state 635


State 442

  258 expression_delete: "delete" . expr
  259                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "explicit"                        shift, and go to state 636
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 637
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 443

  432 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 638


State 444

   79 expression_with: "with" . expr expression_block

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 639
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 445

   81 expression_with_alias: "assume" . "name" '=' $@5 expr

    "name"  shift, and go to state 640


State 446

  294 expr_cast: "cast" . '<' $@13 type_declaration_no_options '>' $@14 expr

    '<'  shift, and go to state 641


State 447

  297 expr_cast: "upcast" . '<' $@15 type_declaration_no_options '>' $@16 expr

    '<'  shift, and go to state 642


State 448

  433 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 643


State 449

  269 expression_continue: "continue" .

    $default  reduce using rule 269 (expression_continue)


State 450

  238 expression_any: "pass" . ';'

    ';'  shift, and go to state 644


State 451

  300 expr_cast: "reinterpret" . '<' $@17 type_declaration_no_options '>' $@18 expr

    '<'  shift, and go to state 645


State 452

   54 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 646


State 453

   55 expression_goto: "goto" . "label" "integer constant"
   56                | "goto" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "label"                           shift, and go to state 647
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 648
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 454

   77 expression_unsafe: "unsafe" . expression_block
  464 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 649
    '{'  shift, and go to state 284

    expression_block  go to state 650


State 455

  789 make_dim_decl: "fixed_array" . '(' expr_list ')'
  792              | "fixed_array" . '<' $@96 type_declaration_no_options '>' $@97 '(' expr_list ')'

    '<'  shift, and go to state 651
    '('  shift, and go to state 652


State 456

  625 basic_type_declaration: "bitfield" .

    $default  reduce using rule 625 (basic_type_declaration)


State 457

  776 make_tuple_call: "tuple" . '(' expr_list ')'
  779                | "tuple" . '<' $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim ')'

    '<'  shift, and go to state 653
    '('  shift, and go to state 654


State 458

  770 make_struct_decl: "variant" . '<' $@90 type_declaration_no_options '>' $@91 '(' make_struct_dim ')'

    '<'  shift, and go to state 655


State 459

  434 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  435     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 656


State 460

  276 expression_yield_no_pipe: "yield" . expr
  277                         | "yield" . "<-" expr
  279 expression_yield: "yield" . expr_pipe
  280                 | "yield" . "<-" expr_pipe

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "<-"                              shift, and go to state 657
    "$ <|"                            shift, and go to state 463
    "@ <|"                            shift, and go to state 464
    "@@ <|"                           shift, and go to state 465
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    expr_pipe               go to state 658
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_assign             go to state 631
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 659
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 461

  414 expr: "++" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 660
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 462

  415 expr: "--" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 661
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 463

  254 expr_pipe: "$ <|" . expr_block

    '$'  shift, and go to state 493
    '@'  shift, and go to state 662
    '{'  shift, and go to state 284

    expression_block  go to state 663
    block_or_lambda   go to state 664
    expr_block        go to state 665


State 464

  252 expr_pipe: "@ <|" . expr_block

    '$'  shift, and go to state 493
    '@'  shift, and go to state 662
    '{'  shift, and go to state 284

    expression_block  go to state 663
    block_or_lambda   go to state 664
    expr_block        go to state 666


State 465

  253 expr_pipe: "@@ <|" . expr_block

    '$'  shift, and go to state 493
    '@'  shift, and go to state 662
    '{'  shift, and go to state 284

    expression_block  go to state 663
    block_or_lambda   go to state 664
    expr_block        go to state 667


State 466

  466 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 668


State 467

  467 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 669


State 468

  468 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 670


State 469

  469 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 671


State 470

  470 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 672


State 471

  472 expr_mtag: "$c" . '(' expr ')' '(' ')'
  473          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 673


State 472

  471 expr_mtag: "..." .

    $default  reduce using rule 471 (expr_mtag)


State 473

  756 make_struct_decl: "[[" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  757                 | "[[" . type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  758                 | "[[" . type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  759                 | "[[" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  783 make_dim_decl: "[[" . type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  807 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 674
    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 675


State 474

  760 make_struct_decl: "[{" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  761                 | "[{" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  784 make_dim_decl: "[{" . type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  808 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "for"        shift, and go to state 676
    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 677


State 475

  798 make_table_decl: "{{" . make_table optional_trailing_semicolon_cur_cur
  810 array_comprehension: "{{" . "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}' '}'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "for"                             shift, and go to state 678
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 679
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_map_tuple          go to state 680
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table              go to state 681
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 476

  326 expr_numeric_const: "integer constant" .

    $default  reduce using rule 326 (expr_numeric_const)


State 477

  328 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 328 (expr_numeric_const)


State 478

  327 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 327 (expr_numeric_const)


State 479

  329 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 329 (expr_numeric_const)


State 480

  330 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 330 (expr_numeric_const)


State 481

  331 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 331 (expr_numeric_const)


State 482

  332 expr_numeric_const: "double constant" .

    $default  reduce using rule 332 (expr_numeric_const)


State 483

  242 expr_keyword: "keyword" . expr expression_block
  247 expression_keyword: "keyword" . '<' $@7 type_declaration_no_options '>' $@8 expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '<'                               shift, and go to state 682
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 683
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 484

  250 expression_keyword: "type function" . '<' $@9 type_declaration_no_options '>' $@10 '(' optional_expr_list ')'

    '<'  shift, and go to state 684


State 485

   31 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 28 (string_builder_body)

    string_builder_body  go to state 685


State 486

  391 expr: '-' . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 686
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 487

  390 expr: '+' . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 687
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 488

  431 expr: '*' . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 688
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 489

  389 expr: '~' . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 689
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 490

  388 expr: '!' . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 690
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 491

  782 make_dim_decl: '[' . expr_list optional_comma ']'
  806 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "for"                             shift, and go to state 691
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    expr_list               go to state 692
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 693
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 492

  418 expr: '(' . expr_list ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    expr_list               go to state 694
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 693
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 493

  312 block_or_lambda: '$' .

    $default  reduce using rule 312 (block_or_lambda)


State 494

  313 block_or_lambda: '@' .
  314                | '@' . '@'
  364 func_addr_expr: '@' . '@' func_addr_name
  367               | '@' . '@' '<' $@21 type_declaration_no_options '>' $@22 func_addr_name
  370               | '@' . '@' '<' $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name
  481 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 695

    $default  reduce using rule 313 (block_or_lambda)


State 495

  218 expression_any: ';' .

    $default  reduce using rule 218 (expression_any)


State 496

  797 make_table_decl: '{' . expr_map_tuple_list optional_comma '}'
  809 array_comprehension: '{' . "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "for"                             shift, and go to state 696
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 679
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_map_tuple          go to state 697
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    expr_map_tuple_list     go to state 698
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 497

  216 expression_block: '{' expressions '}' .
  217                 | '{' expressions '}' . "finally" '{' expressions '}'

    "finally"  shift, and go to state 699

    $default  reduce using rule 216 (expression_block)


State 498

  382 expr: string_builder .

    $default  reduce using rule 382 (expr)


State 499

  381 expr: expr_reader .

    $default  reduce using rule 381 (expr)


State 500

  236 expression_any: expression_label . ';'

    ';'  shift, and go to state 700


State 501

  237 expression_any: expression_goto . ';'

    ';'  shift, and go to state 701


State 502

   72 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 702
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 503

   74 expression_if_then_else: expression_if_one_liner . "if" $@3 expr expression_else_one_liner ';'

    "if"  shift, and go to state 703


State 504

  234 expression_any: expression_if_then_else .

    $default  reduce using rule 234 (expression_any)


State 505

  229 expression_any: expression_for_loop .

    $default  reduce using rule 229 (expression_any)


State 506

  226 expression_any: expression_unsafe .

    $default  reduce using rule 226 (expression_any)


State 507

  225 expression_any: expression_while_loop .

    $default  reduce using rule 225 (expression_any)


State 508

  227 expression_any: expression_with .

    $default  reduce using rule 227 (expression_any)


State 509

  228 expression_any: expression_with_alias .

    $default  reduce using rule 228 (expression_any)


State 510

  240 expressions: expressions expression_any .

    $default  reduce using rule 240 (expressions)


State 511

  220 expression_any: expr_keyword .

    $default  reduce using rule 220 (expression_any)


State 512

  465 expr: expression_keyword .

    $default  reduce using rule 465 (expr)


State 513

  219 expression_any: expr_pipe .

    $default  reduce using rule 219 (expression_any)


State 514

  358 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  359                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  379 expr: name_in_namespace .
  426     | name_in_namespace . '(' ')'
  427     | name_in_namespace . '(' make_struct_dim ')'
  428     | name_in_namespace . '(' expr_list ')'
  463     | name_in_namespace . "name"

    "name"  shift, and go to state 704
    '('     shift, and go to state 705

    "name"    [reduce using rule 379 (expr)]
    '('       [reduce using rule 379 (expr)]
    $default  reduce using rule 379 (expr)


State 515

  223 expression_any: expression_delete . ';'

    ';'  shift, and go to state 706


State 516

  456 expr: expr_new .

    $default  reduce using rule 456 (expr)


State 517

   70 expression_if_one_liner: expression_break .
  230 expression_any: expression_break . ';'

    ';'  shift, and go to state 707

    $default  reduce using rule 70 (expression_if_one_liner)


State 518

   71 expression_if_one_liner: expression_continue .
  231 expression_any: expression_continue . ';'

    ';'  shift, and go to state 708

    $default  reduce using rule 71 (expression_if_one_liner)


State 519

   68 expression_if_one_liner: expression_return_no_pipe .
  273 expression_return: expression_return_no_pipe . ';'

    ';'  shift, and go to state 709

    $default  reduce using rule 68 (expression_if_one_liner)


State 520

  232 expression_any: expression_return .

    $default  reduce using rule 232 (expression_any)


State 521

   69 expression_if_one_liner: expression_yield_no_pipe .
  278 expression_yield: expression_yield_no_pipe . ';'

    ';'  shift, and go to state 710

    $default  reduce using rule 69 (expression_if_one_liner)


State 522

  233 expression_any: expression_yield .

    $default  reduce using rule 233 (expression_any)


State 523

  235 expression_any: expression_try_catch .

    $default  reduce using rule 235 (expression_any)


State 524

  290 expression_let: kwd_let . optional_in_scope let_variable_declaration
  291               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 711

    $default  reduce using rule 285 (optional_in_scope)

    optional_in_scope  go to state 712


State 525

  224 expression_any: expression_let .

    $default  reduce using rule 224 (expression_any)


State 526

  455 expr: expr_cast .

    $default  reduce using rule 455 (expr)


State 527

  454 expr: expr_type_decl .

    $default  reduce using rule 454 (expr)


State 528

  453 expr: expr_type_info .

    $default  reduce using rule 453 (expr)


State 529

  325 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 14

    $default  reduce using rule 117 (optional_annotation_list)

    optional_annotation_list  go to state 713


State 530

  459 expr: expr_full_block .

    $default  reduce using rule 459 (expr)


State 531

  380 expr: expr_numeric_const .

    $default  reduce using rule 380 (expr)


State 532

  222 expression_any: expr_assign . ';'
  251 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 714
    ';'    shift, and go to state 715


State 533

  221 expression_any: expr_assign_pipe .

    $default  reduce using rule 221 (expression_any)


State 534

  458 expr: expr_named_call .

    $default  reduce using rule 458 (expr)


State 535

  457 expr: expr_method_call .

    $default  reduce using rule 457 (expr)


State 536

  425 expr: func_addr_expr .

    $default  reduce using rule 425 (expr)


State 537

  386 expr: expr_field .

    $default  reduce using rule 386 (expr)


State 538

   67 expression_if_one_liner: expr .
  333 expr_assign: expr .
  334            | expr . '=' expr
  335            | expr . "<-" expr
  336            | expr . ":=" expr
  337            | expr . "&=" expr
  338            | expr . "|=" expr
  339            | expr . "^=" expr
  340            | expr . "&&=" expr
  341            | expr . "||=" expr
  342            | expr . "^^=" expr
  343            | expr . "+=" expr
  344            | expr . "-=" expr
  345            | expr . "*=" expr
  346            | expr . "/=" expr
  347            | expr . "%=" expr
  348            | expr . "<<=" expr
  349            | expr . ">>=" expr
  350            | expr . "<<<=" expr
  351            | expr . ">>>=" expr
  352 expr_assign_pipe: expr . '=' "@ <|" expr_block
  353                 | expr . '=' "@@ <|" expr_block
  354                 | expr . '=' "$ <|" expr_block
  355                 | expr . "<-" "@ <|" expr_block
  356                 | expr . "<-" "@@ <|" expr_block
  357                 | expr . "<-" "$ <|" expr_block
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 716
    "as"    shift, and go to state 717
    "+="    shift, and go to state 718
    "-="    shift, and go to state 719
    "/="    shift, and go to state 720
    "*="    shift, and go to state 721
    "%="    shift, and go to state 722
    "&="    shift, and go to state 723
    "|="    shift, and go to state 724
    "^="    shift, and go to state 725
    "<<"    shift, and go to state 726
    ">>"    shift, and go to state 727
    "++"    shift, and go to state 728
    "--"    shift, and go to state 729
    "<="    shift, and go to state 730
    "<<="   shift, and go to state 731
    ">>="   shift, and go to state 732
    ">="    shift, and go to state 733
    "=="    shift, and go to state 734
    "!="    shift, and go to state 735
    "->"    shift, and go to state 736
    "<-"    shift, and go to state 737
    "??"    shift, and go to state 738
    "?."    shift, and go to state 739
    "?["    shift, and go to state 740
    "<|"    shift, and go to state 741
    "|>"    shift, and go to state 742
    ":="    shift, and go to state 743
    "<<<"   shift, and go to state 744
    ">>>"   shift, and go to state 745
    "<<<="  shift, and go to state 746
    ">>>="  shift, and go to state 747
    "&&"    shift, and go to state 748
    "||"    shift, and go to state 749
    "^^"    shift, and go to state 750
    "&&="   shift, and go to state 751
    "||="   shift, and go to state 752
    "^^="   shift, and go to state 753
    ".."    shift, and go to state 754
    '='     shift, and go to state 755
    '?'     shift, and go to state 756
    '|'     shift, and go to state 757
    '^'     shift, and go to state 758
    '&'     shift, and go to state 759
    '<'     shift, and go to state 760
    '>'     shift, and go to state 761
    '-'     shift, and go to state 762
    '+'     shift, and go to state 763
    '*'     shift, and go to state 764
    '/'     shift, and go to state 765
    '%'     shift, and go to state 766
    '.'     shift, and go to state 767
    '['     shift, and go to state 768

    "if"      reduce using rule 67 (expression_if_one_liner)
    $default  reduce using rule 333 (expr_assign)


State 539

  387 expr: expr_mtag .

    $default  reduce using rule 387 (expr)


State 540

  429 expr: basic_type_declaration . '(' ')'
  430     | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 769


State 541

  383 expr: make_decl .

    $default  reduce using rule 383 (expr)


State 542

  727 make_decl: make_struct_decl .

    $default  reduce using rule 727 (make_decl)


State 543

  731 make_decl: make_tuple_call .

    $default  reduce using rule 731 (make_decl)


State 544

  728 make_decl: make_dim_decl .

    $default  reduce using rule 728 (make_decl)


State 545

  729 make_decl: make_table_decl .

    $default  reduce using rule 729 (make_decl)


State 546

  730 make_decl: array_comprehension .

    $default  reduce using rule 730 (make_decl)


State 547

  578 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@42 . enum_list $@43 '}'

    $default  reduce using rule 555 (enum_list)

    enum_list  go to state 770


State 548

  557 enum_list: enum_list "name" . ';'
  558          | enum_list "name" . '=' expr ';'

    '='  shift, and go to state 771
    ';'  shift, and go to state 772


State 549

  556 enum_list: enum_list ';' .

    $default  reduce using rule 556 (enum_list)


State 550

  575 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@40 enum_list $@41 . '}'

    '}'  shift, and go to state 773


State 551

  580 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 580 (optional_structure_parent)


State 552

  497 struct_variable_declaration_list: struct_variable_declaration_list . $@33 structure_variable_declaration ';'
  499                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header ';'
  501                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block
  502                                 | struct_variable_declaration_list . '[' annotation_list ']' ';'
  590 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list . '}'

    '['  shift, and go to state 774
    '}'  shift, and go to state 775

    "def"     reduce using rule 117 (optional_annotation_list)
    $default  reduce using rule 496 ($@33)

    optional_annotation_list  go to state 776
    $@33                      go to state 777


State 553

  546 global_variable_declaration_list: global_variable_declaration_list $@36 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 546 (global_variable_declaration_list)


State 554

  483 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 483 (optional_field_annotation)


State 555

  464 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 649


State 556

  247 expression_keyword: "keyword" . '<' $@7 type_declaration_no_options '>' $@8 expr

    '<'  shift, and go to state 682


State 557

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'
  535 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ')'    shift, and go to state 778


State 558

  536 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 536 (let_variable_name_with_pos_list)


State 559

  537 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  538                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 779

    $default  reduce using rule 537 (let_variable_name_with_pos_list)


State 560

  539 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . ';'
  540                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr ';'
  541                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  650 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  651                            | type_declaration_no_options . '[' ']'
  657                            | type_declaration_no_options . '-' '[' ']'
  658                            | type_declaration_no_options . "explicit"
  659                            | type_declaration_no_options . "const"
  660                            | type_declaration_no_options . '-' "const"
  661                            | type_declaration_no_options . '&'
  662                            | type_declaration_no_options . '-' '&'
  663                            | type_declaration_no_options . '#'
  664                            | type_declaration_no_options . "implicit"
  665                            | type_declaration_no_options . '-' '#'
  666                            | type_declaration_no_options . "==" "const"
  667                            | type_declaration_no_options . "==" '&'
  668                            | type_declaration_no_options . '?'
  672                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "<-"        shift, and go to state 561
    "??"        shift, and go to state 403
    ":="        shift, and go to state 562
    '='         shift, and go to state 563
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    ';'         shift, and go to state 780
    '#'         shift, and go to state 408

    copy_or_move_or_clone  go to state 781


State 561

  530 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 530 (copy_or_move_or_clone)


State 562

  531 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 531 (copy_or_move_or_clone)


State 563

  529 copy_or_move_or_clone: '=' .

    $default  reduce using rule 529 (copy_or_move_or_clone)


State 564

  542 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr ';'
  543                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 463
    "@ <|"                            shift, and go to state 464
    "@@ <|"                           shift, and go to state 465
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    expr_pipe               go to state 782
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_assign             go to state 631
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 783
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 565

  654 type_declaration_no_options: "type" '<' $@48 . type_declaration '>' $@49

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 784


State 566

  675 type_declaration_no_options: "array" '<' $@52 . type_declaration '>' $@53

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 785


State 567

  678 type_declaration_no_options: "table" '<' $@54 . table_type_pair '>' $@55

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    table_type_pair              go to state 786
    type_declaration_no_options  go to state 350
    type_declaration             go to state 787


State 568

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'
  655 type_declaration_no_options: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ')'    shift, and go to state 788


State 569

  681 type_declaration_no_options: "iterator" '<' $@56 . type_declaration '>' $@57

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 789


State 570

  671 type_declaration_no_options: "smart_ptr" '<' $@50 . type_declaration '>' $@51

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 790


State 571

  634 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 791


State 572

  643 bitfield_type_declaration: "bitfield" '<' $@46 . bitfield_bits '>' $@47

    "name"  shift, and go to state 792

    bitfield_bits  go to state 793


State 573

  685 type_declaration_no_options: "block" '<' $@58 . type_declaration '>' $@59

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 794


State 574

  688 type_declaration_no_options: "block" '<' $@60 . optional_function_argument_list optional_function_type '>' $@61

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 795


State 575

  692 type_declaration_no_options: "function" '<' $@62 . type_declaration '>' $@63

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 796


State 576

  695 type_declaration_no_options: "function" '<' $@64 . optional_function_argument_list optional_function_type '>' $@65

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 797


State 577

  699 type_declaration_no_options: "lambda" '<' $@66 . type_declaration '>' $@67

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 798


State 578

  702 type_declaration_no_options: "lambda" '<' $@68 . optional_function_argument_list optional_function_type '>' $@69

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 799


State 579

  705 type_declaration_no_options: "tuple" '<' $@70 . tuple_type_list '>' $@71

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 596
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    tuple_type                   go to state 800
    tuple_type_list              go to state 801
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 599


State 580

  708 type_declaration_no_options: "variant" '<' $@72 . variant_type_list '>' $@73

    "name"  shift, and go to state 601

    variant_type       go to state 802
    variant_type_list  go to state 803


State 581

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'
  635 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ')'    shift, and go to state 804


State 582

  656 type_declaration_no_options: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    $default  reduce using rule 243 (optional_expr_list)

    string_builder          go to state 498
    expr_reader             go to state 499
    optional_expr_list      go to state 805
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    expr_list               go to state 806
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 693
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 583

  666 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 666 (type_declaration_no_options)


State 584

  667 type_declaration_no_options: type_declaration_no_options "==" '&' .

    $default  reduce using rule 667 (type_declaration_no_options)


State 585

  660 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 660 (type_declaration_no_options)


State 586

  662 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 662 (type_declaration_no_options)


State 587

  657 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 807


State 588

  665 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 665 (type_declaration_no_options)


State 589

  651 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 651 (type_declaration_no_options)


State 590

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'
  650 type_declaration_no_options: type_declaration_no_options '[' expr . ']'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ']'    shift, and go to state 808


State 591

  711 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 711 (type_declaration)


State 592

  650 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  651                            | type_declaration_no_options . '[' ']'
  657                            | type_declaration_no_options . '-' '[' ']'
  658                            | type_declaration_no_options . "explicit"
  659                            | type_declaration_no_options . "const"
  660                            | type_declaration_no_options . '-' "const"
  661                            | type_declaration_no_options . '&'
  662                            | type_declaration_no_options . '-' '&'
  663                            | type_declaration_no_options . '#'
  664                            | type_declaration_no_options . "implicit"
  665                            | type_declaration_no_options . '-' '#'
  666                            | type_declaration_no_options . "==" "const"
  667                            | type_declaration_no_options . "==" '&'
  668                            | type_declaration_no_options . '?'
  672                            | type_declaration_no_options . "??"
  710 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    $default  reduce using rule 710 (type_declaration)


State 593

  640 bitfield_alias_bits: bitfield_alias_bits "name" . ';'

    ';'  shift, and go to state 809


State 594

  639 bitfield_alias_bits: bitfield_alias_bits ';' .

    $default  reduce using rule 639 (bitfield_alias_bits)


State 595

  726 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@82 "name" $@83 '{' $@84 bitfield_alias_bits $@85 . '}'

    '}'  shift, and go to state 810


State 596

  255 name_in_namespace: "name" .
  256                  | "name" . "::" "name"
  509 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 98
    ':'   shift, and go to state 811

    $default  reduce using rule 255 (name_in_namespace)


State 597

  513 tuple_alias_type_list: tuple_alias_type_list ';' .

    $default  reduce using rule 513 (tuple_alias_type_list)


State 598

  514 tuple_alias_type_list: tuple_alias_type_list tuple_type . ';'

    ';'  shift, and go to state 812


State 599

  508 tuple_type: type_declaration .
  710 type_declaration: type_declaration . '|' type_declaration_no_options
  711                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409

    $default  reduce using rule 508 (tuple_type)


State 600

  716 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@74 "name" $@75 '{' $@76 tuple_alias_type_list $@77 . '}'

    '}'  shift, and go to state 813


State 601

  515 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 814


State 602

  519 variant_alias_type_list: variant_alias_type_list ';' .

    $default  reduce using rule 519 (variant_alias_type_list)


State 603

  520 variant_alias_type_list: variant_alias_type_list variant_type . ';'

    ';'  shift, and go to state 815


State 604

  721 variant_alias_declaration: "variant" optional_public_or_private_alias $@78 "name" $@79 '{' $@80 variant_alias_type_list $@81 . '}'

    '}'  shift, and go to state 816


State 605

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'
  505 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ')'    shift, and go to state 817


State 606

  504 function_argument_declaration: optional_field_annotation "var" variable_declaration .

    $default  reduce using rule 504 (function_argument_declaration)


State 607

  595 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 818
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 608

  596 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 819


State 609

  522 copy_or_move: "<-" .

    $default  reduce using rule 522 (copy_or_move)


State 610

  597 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  598                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 820


State 611

  521 copy_or_move: '=' .

    $default  reduce using rule 521 (copy_or_move)


State 612

  525 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  526                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 821


State 613

  524 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 524 (variable_declaration)


State 614

  527 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  528                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 463
    "@ <|"                            shift, and go to state 464
    "@@ <|"                           shift, and go to state 465
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    expr_pipe               go to state 822
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_assign             go to state 631
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 823
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 615

  507 function_argument_list: function_argument_list ';' function_argument_declaration .

    $default  reduce using rule 507 (function_argument_list)


State 616

  764 make_struct_decl: "struct" '<' . $@86 type_declaration_no_options '>' $@87 '(' make_struct_dim ')'

    $default  reduce using rule 762 ($@86)

    $@86  go to state 824


State 617

  767 make_struct_decl: "class" '<' . $@88 type_declaration_no_options '>' $@89 '(' make_struct_dim ')'

    $default  reduce using rule 765 ($@88)

    $@88  go to state 825


State 618

   78 expression_while_loop: "while" expr . expression_block
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    '{'    shift, and go to state 284

    expression_block  go to state 826


State 619

   76 expression_for_loop: "for" $@4 . variable_name_with_pos_list "in" expr_list expression_block

    "$i"    shift, and go to state 417
    "name"  shift, and go to state 418

    variable_name_with_pos_list  go to state 827


State 620

  262 new_type_declaration: '<' . $@11 type_declaration '>' $@12

    $default  reduce using rule 260 ($@11)

    $@11  go to state 828


State 621

  264 expr_new: "new" new_type_declaration .
  265         | "new" new_type_declaration . '(' ')'
  266         | "new" new_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 829

    '('       [reduce using rule 264 (expr_new)]
    $default  reduce using rule 264 (expr_new)


State 622

  263 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 263 (new_type_declaration)


State 623

  267 expr_new: "new" make_decl .

    $default  reduce using rule 267 (expr_new)


State 624

  304 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  305               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  306               | "typeinfo" '(' . name_in_namespace '<' "name" ';' "name" '>' expr ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 830


State 625

  303 expr_type_decl: "type" '<' . $@19 type_declaration '>' $@20

    $default  reduce using rule 301 ($@19)

    $@19  go to state 831


State 626

  788 make_dim_decl: "array" '<' . $@94 type_declaration_no_options '>' $@95 '(' expr_list ')'

    $default  reduce using rule 786 ($@94)

    $@94  go to state 832


State 627

  785 make_dim_decl: "array" '(' . expr_list ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    expr_list               go to state 833
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 693
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 628

  272 expression_return_no_pipe: "return" "<-" . expr_list
  275 expression_return: "return" "<-" . expr_pipe

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 463
    "@ <|"                            shift, and go to state 464
    "@@ <|"                           shift, and go to state 465
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    expr_pipe               go to state 834
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    expr_list               go to state 835
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_assign             go to state 631
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 632
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 629

  274 expression_return: "return" expr_pipe .

    $default  reduce using rule 274 (expression_return)


State 630

  271 expression_return_no_pipe: "return" expr_list .
  308 expr_list: expr_list . ',' expr

    ','  shift, and go to state 836

    $default  reduce using rule 271 (expression_return_no_pipe)


State 631

  251 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 714


State 632

  307 expr_list: expr .
  333 expr_assign: expr .
  334            | expr . '=' expr
  335            | expr . "<-" expr
  336            | expr . ":=" expr
  337            | expr . "&=" expr
  338            | expr . "|=" expr
  339            | expr . "^=" expr
  340            | expr . "&&=" expr
  341            | expr . "||=" expr
  342            | expr . "^^=" expr
  343            | expr . "+=" expr
  344            | expr . "-=" expr
  345            | expr . "*=" expr
  346            | expr . "/=" expr
  347            | expr . "%=" expr
  348            | expr . "<<=" expr
  349            | expr . ">>=" expr
  350            | expr . "<<<=" expr
  351            | expr . ">>>=" expr
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 716
    "as"    shift, and go to state 717
    "+="    shift, and go to state 718
    "-="    shift, and go to state 719
    "/="    shift, and go to state 720
    "*="    shift, and go to state 721
    "%="    shift, and go to state 722
    "&="    shift, and go to state 723
    "|="    shift, and go to state 724
    "^="    shift, and go to state 725
    "<<"    shift, and go to state 726
    ">>"    shift, and go to state 727
    "++"    shift, and go to state 728
    "--"    shift, and go to state 729
    "<="    shift, and go to state 730
    "<<="   shift, and go to state 731
    ">>="   shift, and go to state 732
    ">="    shift, and go to state 733
    "=="    shift, and go to state 734
    "!="    shift, and go to state 735
    "->"    shift, and go to state 736
    "<-"    shift, and go to state 837
    "??"    shift, and go to state 738
    "?."    shift, and go to state 739
    "?["    shift, and go to state 740
    "<|"    shift, and go to state 741
    "|>"    shift, and go to state 742
    ":="    shift, and go to state 743
    "<<<"   shift, and go to state 744
    ">>>"   shift, and go to state 745
    "<<<="  shift, and go to state 746
    ">>>="  shift, and go to state 747
    "&&"    shift, and go to state 748
    "||"    shift, and go to state 749
    "^^"    shift, and go to state 750
    "&&="   shift, and go to state 751
    "||="   shift, and go to state 752
    "^^="   shift, and go to state 753
    ".."    shift, and go to state 754
    '='     shift, and go to state 838
    '?'     shift, and go to state 756
    '|'     shift, and go to state 757
    '^'     shift, and go to state 758
    '&'     shift, and go to state 759
    '<'     shift, and go to state 760
    '>'     shift, and go to state 761
    '-'     shift, and go to state 762
    '+'     shift, and go to state 763
    '*'     shift, and go to state 764
    '/'     shift, and go to state 765
    '%'     shift, and go to state 766
    '.'     shift, and go to state 767
    '['     shift, and go to state 768

    " <|"     reduce using rule 333 (expr_assign)
    $default  reduce using rule 307 (expr_list)


State 633

  281 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 839


State 634

  800 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' expr_map_tuple_list ')'
  801                | "table" '<' . type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 840


State 635

  799 make_table_decl: "table" '(' . expr_map_tuple_list ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 679
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_map_tuple          go to state 697
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    expr_map_tuple_list     go to state 841
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 636

  259 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 842
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 637

  258 expression_delete: "delete" expr .
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 258 (expression_delete)


State 638

  432 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 843
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 639

   79 expression_with: "with" expr . expression_block
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    '{'    shift, and go to state 284

    expression_block  go to state 844


State 640

   81 expression_with_alias: "assume" "name" . '=' $@5 expr

    '='  shift, and go to state 845


State 641

  294 expr_cast: "cast" '<' . $@13 type_declaration_no_options '>' $@14 expr

    $default  reduce using rule 292 ($@13)

    $@13  go to state 846


State 642

  297 expr_cast: "upcast" '<' . $@15 type_declaration_no_options '>' $@16 expr

    $default  reduce using rule 295 ($@15)

    $@15  go to state 847


State 643

  433 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 848
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 644

  238 expression_any: "pass" ';' .

    $default  reduce using rule 238 (expression_any)


State 645

  300 expr_cast: "reinterpret" '<' . $@17 type_declaration_no_options '>' $@18 expr

    $default  reduce using rule 298 ($@17)

    $@17  go to state 849


State 646

   54 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 850


State 647

   55 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 851


State 648

   56 expression_goto: "goto" expr .
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 56 (expression_goto)


State 649

  464 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 852
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 650

   77 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 77 (expression_unsafe)


State 651

  792 make_dim_decl: "fixed_array" '<' . $@96 type_declaration_no_options '>' $@97 '(' expr_list ')'

    $default  reduce using rule 790 ($@96)

    $@96  go to state 853


State 652

  789 make_dim_decl: "fixed_array" '(' . expr_list ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    expr_list               go to state 854
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 693
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 653

  779 make_tuple_call: "tuple" '<' . $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim ')'

    $default  reduce using rule 777 ($@92)

    $@92  go to state 855


State 654

  776 make_tuple_call: "tuple" '(' . expr_list ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    expr_list               go to state 856
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 693
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 655

  770 make_struct_decl: "variant" '<' . $@90 type_declaration_no_options '>' $@91 '(' make_struct_dim ')'

    $default  reduce using rule 768 ($@90)

    $@90  go to state 857


State 656

  434 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  435     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 858


State 657

  277 expression_yield_no_pipe: "yield" "<-" . expr
  280 expression_yield: "yield" "<-" . expr_pipe

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 463
    "@ <|"                            shift, and go to state 464
    "@@ <|"                           shift, and go to state 465
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    expr_pipe               go to state 859
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_assign             go to state 631
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 860
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 658

  279 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 279 (expression_yield)


State 659

  276 expression_yield_no_pipe: "yield" expr .
  333 expr_assign: expr .
  334            | expr . '=' expr
  335            | expr . "<-" expr
  336            | expr . ":=" expr
  337            | expr . "&=" expr
  338            | expr . "|=" expr
  339            | expr . "^=" expr
  340            | expr . "&&=" expr
  341            | expr . "||=" expr
  342            | expr . "^^=" expr
  343            | expr . "+=" expr
  344            | expr . "-=" expr
  345            | expr . "*=" expr
  346            | expr . "/=" expr
  347            | expr . "%=" expr
  348            | expr . "<<=" expr
  349            | expr . ">>=" expr
  350            | expr . "<<<=" expr
  351            | expr . ">>>=" expr
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 716
    "as"    shift, and go to state 717
    "+="    shift, and go to state 718
    "-="    shift, and go to state 719
    "/="    shift, and go to state 720
    "*="    shift, and go to state 721
    "%="    shift, and go to state 722
    "&="    shift, and go to state 723
    "|="    shift, and go to state 724
    "^="    shift, and go to state 725
    "<<"    shift, and go to state 726
    ">>"    shift, and go to state 727
    "++"    shift, and go to state 728
    "--"    shift, and go to state 729
    "<="    shift, and go to state 730
    "<<="   shift, and go to state 731
    ">>="   shift, and go to state 732
    ">="    shift, and go to state 733
    "=="    shift, and go to state 734
    "!="    shift, and go to state 735
    "->"    shift, and go to state 736
    "<-"    shift, and go to state 837
    "??"    shift, and go to state 738
    "?."    shift, and go to state 739
    "?["    shift, and go to state 740
    "<|"    shift, and go to state 741
    "|>"    shift, and go to state 742
    ":="    shift, and go to state 743
    "<<<"   shift, and go to state 744
    ">>>"   shift, and go to state 745
    "<<<="  shift, and go to state 746
    ">>>="  shift, and go to state 747
    "&&"    shift, and go to state 748
    "||"    shift, and go to state 749
    "^^"    shift, and go to state 750
    "&&="   shift, and go to state 751
    "||="   shift, and go to state 752
    "^^="   shift, and go to state 753
    ".."    shift, and go to state 754
    '='     shift, and go to state 838
    '?'     shift, and go to state 756
    '|'     shift, and go to state 757
    '^'     shift, and go to state 758
    '&'     shift, and go to state 759
    '<'     shift, and go to state 760
    '>'     shift, and go to state 761
    '-'     shift, and go to state 762
    '+'     shift, and go to state 763
    '*'     shift, and go to state 764
    '/'     shift, and go to state 765
    '%'     shift, and go to state 766
    '.'     shift, and go to state 767
    '['     shift, and go to state 768

    " <|"     reduce using rule 333 (expr_assign)
    $default  reduce using rule 276 (expression_yield_no_pipe)


State 660

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  414     | "++" expr .
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 716
    "as"  shift, and go to state 717
    "++"  shift, and go to state 728
    "--"  shift, and go to state 729
    "->"  shift, and go to state 736
    "?."  shift, and go to state 739
    "?["  shift, and go to state 740
    "<|"  shift, and go to state 741
    "|>"  shift, and go to state 742
    '.'   shift, and go to state 767
    '['   shift, and go to state 768

    $default  reduce using rule 414 (expr)


State 661

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  415     | "--" expr .
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 716
    "as"  shift, and go to state 717
    "++"  shift, and go to state 728
    "--"  shift, and go to state 729
    "->"  shift, and go to state 736
    "?."  shift, and go to state 739
    "?["  shift, and go to state 740
    "<|"  shift, and go to state 741
    "|>"  shift, and go to state 742
    '.'   shift, and go to state 767
    '['   shift, and go to state 768

    $default  reduce using rule 415 (expr)


State 662

  313 block_or_lambda: '@' .
  314                | '@' . '@'

    '@'  shift, and go to state 861

    $default  reduce using rule 313 (block_or_lambda)


State 663

  323 expr_block: expression_block .

    $default  reduce using rule 323 (expr_block)


State 664

  324 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 14

    $default  reduce using rule 117 (optional_annotation_list)

    optional_annotation_list  go to state 862


State 665

  254 expr_pipe: "$ <|" expr_block .

    $default  reduce using rule 254 (expr_pipe)


State 666

  252 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 252 (expr_pipe)


State 667

  253 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 253 (expr_pipe)


State 668

  466 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 863
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 669

  467 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 864
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 670

  468 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 865
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 671

  469 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 866
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 672

  470 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 867
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 673

  472 expr_mtag: "$c" '(' . expr ')' '(' ')'
  473          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 868
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 674

  807 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "$i"    shift, and go to state 417
    "name"  shift, and go to state 418

    variable_name_with_pos_list  go to state 869


State 675

  650 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  651                            | type_declaration_no_options . '[' ']'
  657                            | type_declaration_no_options . '-' '[' ']'
  658                            | type_declaration_no_options . "explicit"
  659                            | type_declaration_no_options . "const"
  660                            | type_declaration_no_options . '-' "const"
  661                            | type_declaration_no_options . '&'
  662                            | type_declaration_no_options . '-' '&'
  663                            | type_declaration_no_options . '#'
  664                            | type_declaration_no_options . "implicit"
  665                            | type_declaration_no_options . '-' '#'
  666                            | type_declaration_no_options . "==" "const"
  667                            | type_declaration_no_options . "==" '&'
  668                            | type_declaration_no_options . '?'
  672                            | type_declaration_no_options . "??"
  756 make_struct_decl: "[[" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  757                 | "[[" type_declaration_no_options . optional_block optional_trailing_delim_sqr_sqr
  758                 | "[[" type_declaration_no_options . '(' ')' optional_block optional_trailing_delim_sqr_sqr
  759                 | "[[" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  783 make_dim_decl: "[[" type_declaration_no_options . make_dim optional_trailing_semicolon_sqr_sqr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "const"                           shift, and go to state 399
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "where"                           shift, and go to state 870
    "reinterpret"                     shift, and go to state 451
    "implicit"                        shift, and go to state 400
    "explicit"                        shift, and go to state 401
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "=="                              shift, and go to state 402
    "??"                              shift, and go to state 403
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "$f"                              shift, and go to state 871
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 872
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '?'                               shift, and go to state 404
    '&'                               shift, and go to state 405
    '-'                               shift, and go to state 873
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 874
    '('                               shift, and go to state 875
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496
    '#'                               shift, and go to state 408

    $default  reduce using rule 742 (optional_block)

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 876
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_fields      go to state 877
    make_struct_dim         go to state 878
    optional_block          go to state 879
    make_struct_decl        go to state 542
    make_tuple              go to state 880
    make_tuple_call         go to state 543
    make_dim                go to state 881
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 676

  808 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "$i"    shift, and go to state 417
    "name"  shift, and go to state 418

    variable_name_with_pos_list  go to state 882


State 677

  650 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  651                            | type_declaration_no_options . '[' ']'
  657                            | type_declaration_no_options . '-' '[' ']'
  658                            | type_declaration_no_options . "explicit"
  659                            | type_declaration_no_options . "const"
  660                            | type_declaration_no_options . '-' "const"
  661                            | type_declaration_no_options . '&'
  662                            | type_declaration_no_options . '-' '&'
  663                            | type_declaration_no_options . '#'
  664                            | type_declaration_no_options . "implicit"
  665                            | type_declaration_no_options . '-' '#'
  666                            | type_declaration_no_options . "==" "const"
  667                            | type_declaration_no_options . "==" '&'
  668                            | type_declaration_no_options . '?'
  672                            | type_declaration_no_options . "??"
  760 make_struct_decl: "[{" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_cur_sqr
  761                 | "[{" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  784 make_dim_decl: "[{" type_declaration_no_options . make_dim optional_trailing_semicolon_cur_sqr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "const"                           shift, and go to state 399
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "implicit"                        shift, and go to state 400
    "explicit"                        shift, and go to state 401
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "=="                              shift, and go to state 402
    "??"                              shift, and go to state 403
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "$f"                              shift, and go to state 871
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 872
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '?'                               shift, and go to state 404
    '&'                               shift, and go to state 405
    '-'                               shift, and go to state 873
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 874
    '('                               shift, and go to state 883
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496
    '#'                               shift, and go to state 408

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 876
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_fields      go to state 877
    make_struct_dim         go to state 884
    make_struct_decl        go to state 542
    make_tuple              go to state 880
    make_tuple_call         go to state 543
    make_dim                go to state 885
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 678

  810 array_comprehension: "{{" "for" . variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}' '}'

    "$i"    shift, and go to state 417
    "name"  shift, and go to state 418

    variable_name_with_pos_list  go to state 886


State 679

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'
  774 make_map_tuple: expr . "=>" expr
  775               | expr .

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "=>"   shift, and go to state 887
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 775 (make_map_tuple)


State 680

  793 make_table: make_map_tuple .

    $default  reduce using rule 793 (make_table)


State 681

  794 make_table: make_table . ';' make_map_tuple
  798 make_table_decl: "{{" make_table . optional_trailing_semicolon_cur_cur

    ";}}"  shift, and go to state 888
    ';'    shift, and go to state 889
    '}'    shift, and go to state 890

    optional_trailing_semicolon_cur_cur  go to state 891


State 682

  247 expression_keyword: "keyword" '<' . $@7 type_declaration_no_options '>' $@8 expr

    $default  reduce using rule 245 ($@7)

    $@7  go to state 892


State 683

  242 expr_keyword: "keyword" expr . expression_block
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    '{'    shift, and go to state 284

    expression_block  go to state 893


State 684

  250 expression_keyword: "type function" '<' . $@9 type_declaration_no_options '>' $@10 '(' optional_expr_list ')'

    $default  reduce using rule 248 ($@9)

    $@9  go to state 894


State 685

   29 string_builder_body: string_builder_body . character_sequence
   30                    | string_builder_body . "{" expr "}"
   31 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163
    "end of the string"   shift, and go to state 895
    "{"                   shift, and go to state 896

    character_sequence  go to state 897


State 686

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  391 expr: '-' expr .
  392     | expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 716
    "as"  shift, and go to state 717
    "++"  shift, and go to state 728
    "--"  shift, and go to state 729
    "->"  shift, and go to state 736
    "?."  shift, and go to state 739
    "?["  shift, and go to state 740
    "<|"  shift, and go to state 741
    "|>"  shift, and go to state 742
    '.'   shift, and go to state 767
    '['   shift, and go to state 768

    $default  reduce using rule 391 (expr)


State 687

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  390 expr: '+' expr .
  392     | expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 716
    "as"  shift, and go to state 717
    "++"  shift, and go to state 728
    "--"  shift, and go to state 729
    "->"  shift, and go to state 736
    "?."  shift, and go to state 739
    "?["  shift, and go to state 740
    "<|"  shift, and go to state 741
    "|>"  shift, and go to state 742
    '.'   shift, and go to state 767
    '['   shift, and go to state 768

    $default  reduce using rule 390 (expr)


State 688

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  431     | '*' expr .
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 739
    "?["  shift, and go to state 740
    '.'   shift, and go to state 767
    '['   shift, and go to state 768

    $default  reduce using rule 431 (expr)


State 689

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  389 expr: '~' expr .
  392     | expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 716
    "as"  shift, and go to state 717
    "++"  shift, and go to state 728
    "--"  shift, and go to state 729
    "->"  shift, and go to state 736
    "?."  shift, and go to state 739
    "?["  shift, and go to state 740
    "<|"  shift, and go to state 741
    "|>"  shift, and go to state 742
    '.'   shift, and go to state 767
    '['   shift, and go to state 768

    $default  reduce using rule 389 (expr)


State 690

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  388 expr: '!' expr .
  392     | expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 716
    "as"  shift, and go to state 717
    "++"  shift, and go to state 728
    "--"  shift, and go to state 729
    "->"  shift, and go to state 736
    "?."  shift, and go to state 739
    "?["  shift, and go to state 740
    "<|"  shift, and go to state 741
    "|>"  shift, and go to state 742
    '.'   shift, and go to state 767
    '['   shift, and go to state 768

    $default  reduce using rule 388 (expr)


State 691

  806 array_comprehension: '[' "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 417
    "name"  shift, and go to state 418

    variable_name_with_pos_list  go to state 898


State 692

  308 expr_list: expr_list . ',' expr
  782 make_dim_decl: '[' expr_list . optional_comma ']'

    ','  shift, and go to state 899

    $default  reduce using rule 804 (optional_comma)

    optional_comma  go to state 900


State 693

  307 expr_list: expr .
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 307 (expr_list)


State 694

  308 expr_list: expr_list . ',' expr
  418 expr: '(' expr_list . ')'

    ','  shift, and go to state 836
    ')'  shift, and go to state 901


State 695

  314 block_or_lambda: '@' '@' .
  364 func_addr_expr: '@' '@' . func_addr_name
  367               | '@' '@' . '<' $@21 type_declaration_no_options '>' $@22 func_addr_name
  370               | '@' '@' . '<' $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name
  481 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 902
    "$c"    shift, and go to state 903
    "name"  shift, and go to state 59
    '<'     shift, and go to state 904

    $default  reduce using rule 314 (block_or_lambda)

    name_in_namespace  go to state 905
    func_addr_name     go to state 906


State 696

  809 array_comprehension: '{' "for" . variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}'

    "$i"    shift, and go to state 417
    "name"  shift, and go to state 418

    variable_name_with_pos_list  go to state 907


State 697

  795 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 795 (expr_map_tuple_list)


State 698

  796 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  797 make_table_decl: '{' expr_map_tuple_list . optional_comma '}'

    ','  shift, and go to state 908

    $default  reduce using rule 804 (optional_comma)

    optional_comma  go to state 909


State 699

  217 expression_block: '{' expressions '}' "finally" . '{' expressions '}'

    '{'  shift, and go to state 910


State 700

  236 expression_any: expression_label ';' .

    $default  reduce using rule 236 (expression_any)


State 701

  237 expression_any: expression_goto ';' .

    $default  reduce using rule 237 (expression_any)


State 702

   72 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    '{'    shift, and go to state 284

    expression_block  go to state 911


State 703

   74 expression_if_then_else: expression_if_one_liner "if" . $@3 expr expression_else_one_liner ';'

    $default  reduce using rule 73 ($@3)

    $@3  go to state 912


State 704

  463 expr: name_in_namespace "name" .

    $default  reduce using rule 463 (expr)


State 705

  358 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  359                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  426 expr: name_in_namespace '(' . ')'
  427     | name_in_namespace '(' . make_struct_dim ')'
  428     | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "$f"                              shift, and go to state 871
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 872
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 913
    '('                               shift, and go to state 492
    ')'                               shift, and go to state 914
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    expr_list               go to state 915
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 693
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_fields      go to state 877
    make_struct_dim         go to state 916
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 706

  223 expression_any: expression_delete ';' .

    $default  reduce using rule 223 (expression_any)


State 707

  230 expression_any: expression_break ';' .

    $default  reduce using rule 230 (expression_any)


State 708

  231 expression_any: expression_continue ';' .

    $default  reduce using rule 231 (expression_any)


State 709

  273 expression_return: expression_return_no_pipe ';' .

    $default  reduce using rule 273 (expression_return)


State 710

  278 expression_yield: expression_yield_no_pipe ';' .

    $default  reduce using rule 278 (expression_yield)


State 711

  284 optional_in_scope: "inscope" .

    $default  reduce using rule 284 (optional_in_scope)


State 712

  290 expression_let: kwd_let optional_in_scope . let_variable_declaration
  291               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 299
    "[["    shift, and go to state 917
    "name"  shift, and go to state 300

    tuple_expansion_variable_declaration  go to state 918
    let_variable_name_with_pos_list       go to state 301
    let_variable_declaration              go to state 919


State 713

  325 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 920

    $default  reduce using rule 321 (optional_capture_list)

    optional_capture_list  go to state 921


State 714

  251 expr_pipe: expr_assign " <|" . expr_block

    '$'  shift, and go to state 493
    '@'  shift, and go to state 662
    '{'  shift, and go to state 284

    expression_block  go to state 663
    block_or_lambda   go to state 664
    expr_block        go to state 922


State 715

  222 expression_any: expr_assign ';' .

    $default  reduce using rule 222 (expression_any)


State 716

  440 expr: expr "is" . "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr "is" . basic_type_declaration
  442     | expr "is" . "name"
  480 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 923
    "bool"      shift, and go to state 310
    "void"      shift, and go to state 311
    "string"    shift, and go to state 312
    "int"       shift, and go to state 314
    "int2"      shift, and go to state 315
    "int3"      shift, and go to state 316
    "int4"      shift, and go to state 317
    "uint"      shift, and go to state 318
    "bitfield"  shift, and go to state 456
    "uint2"     shift, and go to state 320
    "uint3"     shift, and go to state 321
    "uint4"     shift, and go to state 322
    "float"     shift, and go to state 323
    "float2"    shift, and go to state 324
    "float3"    shift, and go to state 325
    "float4"    shift, and go to state 326
    "range"     shift, and go to state 327
    "urange"    shift, and go to state 328
    "range64"   shift, and go to state 329
    "urange64"  shift, and go to state 330
    "int64"     shift, and go to state 332
    "uint64"    shift, and go to state 333
    "double"    shift, and go to state 334
    "int8"      shift, and go to state 337
    "uint8"     shift, and go to state 338
    "int16"     shift, and go to state 339
    "uint16"    shift, and go to state 340
    "$f"        shift, and go to state 924
    "name"      shift, and go to state 925

    basic_type_declaration  go to state 926


State 717

  443 expr: expr "as" . "name"
  446     | expr "as" . "type" '<' $@29 type_declaration '>' $@30
  447     | expr "as" . basic_type_declaration
  478 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 927
    "bool"      shift, and go to state 310
    "void"      shift, and go to state 311
    "string"    shift, and go to state 312
    "int"       shift, and go to state 314
    "int2"      shift, and go to state 315
    "int3"      shift, and go to state 316
    "int4"      shift, and go to state 317
    "uint"      shift, and go to state 318
    "bitfield"  shift, and go to state 456
    "uint2"     shift, and go to state 320
    "uint3"     shift, and go to state 321
    "uint4"     shift, and go to state 322
    "float"     shift, and go to state 323
    "float2"    shift, and go to state 324
    "float3"    shift, and go to state 325
    "float4"    shift, and go to state 326
    "range"     shift, and go to state 327
    "urange"    shift, and go to state 328
    "range64"   shift, and go to state 329
    "urange64"  shift, and go to state 330
    "int64"     shift, and go to state 332
    "uint64"    shift, and go to state 333
    "double"    shift, and go to state 334
    "int8"      shift, and go to state 337
    "uint8"     shift, and go to state 338
    "int16"     shift, and go to state 339
    "uint16"    shift, and go to state 340
    "$f"        shift, and go to state 928
    "name"      shift, and go to state 929

    basic_type_declaration  go to state 930


State 718

  343 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 931
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 719

  344 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 932
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 720

  346 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 933
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 721

  345 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 934
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 722

  347 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 935
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 723

  337 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 936
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 724

  338 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 937
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 725

  339 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 938
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 726

  392 expr: expr "<<" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 939
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 727

  393 expr: expr ">>" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 940
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 728

  416 expr: expr "++" .

    $default  reduce using rule 416 (expr)


State 729

  417 expr: expr "--" .

    $default  reduce using rule 417 (expr)


State 730

  405 expr: expr "<=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 941
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 731

  348 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 942
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 732

  349 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 943
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 733

  406 expr: expr ">=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 944
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 734

  403 expr: expr "==" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 945
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 735

  404 expr: expr "!=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 946
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 736

  360 expr_method_call: expr "->" . "name" '(' ')'
  361                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 947


State 737

  335 expr_assign: expr "<-" . expr
  355 expr_assign_pipe: expr "<-" . "@ <|" expr_block
  356                 | expr "<-" . "@@ <|" expr_block
  357                 | expr "<-" . "$ <|" expr_block

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 948
    "@ <|"                            shift, and go to state 949
    "@@ <|"                           shift, and go to state 950
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 951
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 738

  436 expr: expr "??" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 952
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 739

  423 expr: expr "?." . "name"
  475 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 953
    "name"  shift, and go to state 954


State 740

  421 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 955
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 741

  460 expr: expr "<|" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 956
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 742

  461 expr: expr "|>" . expr
  462     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 957
    expr_mtag               go to state 539
    basic_type_declaration  go to state 958
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 743

  336 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 959
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 744

  394 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 960
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 745

  395 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 961
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 746

  350 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 962
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 747

  351 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 963
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 748

  410 expr: expr "&&" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 964
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 749

  411 expr: expr "||" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 965
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 750

  412 expr: expr "^^" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 966
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 751

  340 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 967
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 752

  341 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 968
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 753

  342 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 969
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 754

  413 expr: expr ".." . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 970
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 755

  334 expr_assign: expr '=' . expr
  352 expr_assign_pipe: expr '=' . "@ <|" expr_block
  353                 | expr '=' . "@@ <|" expr_block
  354                 | expr '=' . "$ <|" expr_block

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 971
    "@ <|"                            shift, and go to state 972
    "@@ <|"                           shift, and go to state 973
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 974
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 756

  437 expr: expr '?' . expr ':' expr
  448     | expr '?' . "as" "name"
  451     | expr '?' . "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr '?' . "as" basic_type_declaration
  479 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "as"                              shift, and go to state 975
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 976
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 757

  408 expr: expr '|' . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 977
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 758

  409 expr: expr '^' . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 978
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 759

  407 expr: expr '&' . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 979
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 760

  401 expr: expr '<' . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 980
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 761

  402 expr: expr '>' . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 981
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 762

  397 expr: expr '-' . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 982
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 763

  396 expr: expr '+' . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 983
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 764

  398 expr: expr '*' . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 984
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 765

  399 expr: expr '/' . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 985
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 766

  400 expr: expr '%' . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 986
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 767

  371 expr_field: expr '.' . "name"
  372           | expr '.' . '.' "name"
  373           | expr '.' . "name" '(' ')'
  374           | expr '.' . "name" '(' expr_list ')'
  377           | expr '.' . $@25 error $@26
  420 expr: expr '.' . '[' expr ']'
  422     | expr '.' . "?[" expr ']'
  424     | expr '.' . "?." "name"
  474 expr_mtag: expr '.' . "$f" '(' expr ')'
  476          | expr '.' . '.' "$f" '(' expr ')'
  477          | expr '.' . "?." "$f" '(' expr ')'

    "?."    shift, and go to state 987
    "?["    shift, and go to state 988
    "$f"    shift, and go to state 989
    "name"  shift, and go to state 990
    '.'     shift, and go to state 991
    '['     shift, and go to state 992

    $default  reduce using rule 375 ($@25)

    $@25  go to state 993


State 768

  419 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 994
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 769

  429 expr: basic_type_declaration '(' . ')'
  430     | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    ')'                               shift, and go to state 995
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    expr_list               go to state 996
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 693
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 770

  556 enum_list: enum_list . ';'
  557          | enum_list . "name" ';'
  558          | enum_list . "name" '=' expr ';'
  578 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@42 enum_list . $@43 '}'

    "name"  shift, and go to state 548
    ';'     shift, and go to state 549

    $default  reduce using rule 577 ($@43)

    $@43  go to state 997


State 771

  558 enum_list: enum_list "name" '=' . expr ';'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 998
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 772

  557 enum_list: enum_list "name" ';' .

    $default  reduce using rule 557 (enum_list)


State 773

  575 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' $@40 enum_list $@41 '}' .

    $default  reduce using rule 575 (enum_declaration)


State 774

  118 optional_annotation_list: '[' . annotation_list ']'
  502 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' ';'

    "require"  shift, and go to state 61
    "private"  shift, and go to state 62
    "|>"       shift, and go to state 63
    "::"       shift, and go to state 58
    "name"     shift, and go to state 59
    '!'        shift, and go to state 64
    '('        shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 999
    name_in_namespace             go to state 70


State 775

  590 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list '}' .

    $default  reduce using rule 590 (optional_struct_variable_declaration_list)


State 776

  499 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header ';'
  501                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block

    "def"  shift, and go to state 1000


State 777

  497 struct_variable_declaration_list: struct_variable_declaration_list $@33 . structure_variable_declaration ';'

    "[["  shift, and go to state 218

    $default  reduce using rule 482 (optional_field_annotation)

    optional_field_annotation       go to state 1001
    structure_variable_declaration  go to state 1002


State 778

  535 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 535 (let_variable_name_with_pos_list)


State 779

  538 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1003


State 780

  539 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options ';' .

    $default  reduce using rule 539 (let_variable_declaration)


State 781

  540 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr ';'
  541                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 463
    "@ <|"                            shift, and go to state 464
    "@@ <|"                           shift, and go to state 465
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    expr_pipe               go to state 1004
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_assign             go to state 631
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1005
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 782

  543 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 543 (let_variable_declaration)


State 783

  333 expr_assign: expr .
  334            | expr . '=' expr
  335            | expr . "<-" expr
  336            | expr . ":=" expr
  337            | expr . "&=" expr
  338            | expr . "|=" expr
  339            | expr . "^=" expr
  340            | expr . "&&=" expr
  341            | expr . "||=" expr
  342            | expr . "^^=" expr
  343            | expr . "+=" expr
  344            | expr . "-=" expr
  345            | expr . "*=" expr
  346            | expr . "/=" expr
  347            | expr . "%=" expr
  348            | expr . "<<=" expr
  349            | expr . ">>=" expr
  350            | expr . "<<<=" expr
  351            | expr . ">>>=" expr
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'
  542 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 716
    "as"    shift, and go to state 717
    "+="    shift, and go to state 718
    "-="    shift, and go to state 719
    "/="    shift, and go to state 720
    "*="    shift, and go to state 721
    "%="    shift, and go to state 722
    "&="    shift, and go to state 723
    "|="    shift, and go to state 724
    "^="    shift, and go to state 725
    "<<"    shift, and go to state 726
    ">>"    shift, and go to state 727
    "++"    shift, and go to state 728
    "--"    shift, and go to state 729
    "<="    shift, and go to state 730
    "<<="   shift, and go to state 731
    ">>="   shift, and go to state 732
    ">="    shift, and go to state 733
    "=="    shift, and go to state 734
    "!="    shift, and go to state 735
    "->"    shift, and go to state 736
    "<-"    shift, and go to state 837
    "??"    shift, and go to state 738
    "?."    shift, and go to state 739
    "?["    shift, and go to state 740
    "<|"    shift, and go to state 741
    "|>"    shift, and go to state 742
    ":="    shift, and go to state 743
    "<<<"   shift, and go to state 744
    ">>>"   shift, and go to state 745
    "<<<="  shift, and go to state 746
    ">>>="  shift, and go to state 747
    "&&"    shift, and go to state 748
    "||"    shift, and go to state 749
    "^^"    shift, and go to state 750
    "&&="   shift, and go to state 751
    "||="   shift, and go to state 752
    "^^="   shift, and go to state 753
    ".."    shift, and go to state 754
    '='     shift, and go to state 838
    '?'     shift, and go to state 756
    '|'     shift, and go to state 757
    '^'     shift, and go to state 758
    '&'     shift, and go to state 759
    '<'     shift, and go to state 760
    '>'     shift, and go to state 761
    '-'     shift, and go to state 762
    '+'     shift, and go to state 763
    '*'     shift, and go to state 764
    '/'     shift, and go to state 765
    '%'     shift, and go to state 766
    '.'     shift, and go to state 767
    '['     shift, and go to state 768
    ';'     shift, and go to state 1006

    $default  reduce using rule 333 (expr_assign)


State 784

  654 type_declaration_no_options: "type" '<' $@48 type_declaration . '>' $@49
  710 type_declaration: type_declaration . '|' type_declaration_no_options
  711                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409
    '>'  shift, and go to state 1007


State 785

  675 type_declaration_no_options: "array" '<' $@52 type_declaration . '>' $@53
  710 type_declaration: type_declaration . '|' type_declaration_no_options
  711                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409
    '>'  shift, and go to state 1008


State 786

  678 type_declaration_no_options: "table" '<' $@54 table_type_pair . '>' $@55

    '>'  shift, and go to state 1009


State 787

  644 table_type_pair: type_declaration .
  645                | type_declaration . ';' type_declaration
  710 type_declaration: type_declaration . '|' type_declaration_no_options
  711                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409
    ';'  shift, and go to state 1010

    $default  reduce using rule 644 (table_type_pair)


State 788

  655 type_declaration_no_options: "typedecl" '(' expr ')' .

    $default  reduce using rule 655 (type_declaration_no_options)


State 789

  681 type_declaration_no_options: "iterator" '<' $@56 type_declaration . '>' $@57
  710 type_declaration: type_declaration . '|' type_declaration_no_options
  711                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409
    '>'  shift, and go to state 1011


State 790

  671 type_declaration_no_options: "smart_ptr" '<' $@50 type_declaration . '>' $@51
  710 type_declaration: type_declaration . '|' type_declaration_no_options
  711                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409
    '>'  shift, and go to state 1012


State 791

  634 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 634 (auto_type_declaration)


State 792

  636 bitfield_bits: "name" .

    $default  reduce using rule 636 (bitfield_bits)


State 793

  637 bitfield_bits: bitfield_bits . ';' "name"
  643 bitfield_type_declaration: "bitfield" '<' $@46 bitfield_bits . '>' $@47

    '>'  shift, and go to state 1013
    ';'  shift, and go to state 1014


State 794

  685 type_declaration_no_options: "block" '<' $@58 type_declaration . '>' $@59
  710 type_declaration: type_declaration . '|' type_declaration_no_options
  711                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409
    '>'  shift, and go to state 1015


State 795

  688 type_declaration_no_options: "block" '<' $@60 optional_function_argument_list . optional_function_type '>' $@61

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1016


State 796

  692 type_declaration_no_options: "function" '<' $@62 type_declaration . '>' $@63
  710 type_declaration: type_declaration . '|' type_declaration_no_options
  711                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409
    '>'  shift, and go to state 1017


State 797

  695 type_declaration_no_options: "function" '<' $@64 optional_function_argument_list . optional_function_type '>' $@65

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1018


State 798

  699 type_declaration_no_options: "lambda" '<' $@66 type_declaration . '>' $@67
  710 type_declaration: type_declaration . '|' type_declaration_no_options
  711                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409
    '>'  shift, and go to state 1019


State 799

  702 type_declaration_no_options: "lambda" '<' $@68 optional_function_argument_list . optional_function_type '>' $@69

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1020


State 800

  510 tuple_type_list: tuple_type .

    $default  reduce using rule 510 (tuple_type_list)


State 801

  511 tuple_type_list: tuple_type_list . ';' tuple_type
  705 type_declaration_no_options: "tuple" '<' $@70 tuple_type_list . '>' $@71

    '>'  shift, and go to state 1021
    ';'  shift, and go to state 1022


State 802

  516 variant_type_list: variant_type .

    $default  reduce using rule 516 (variant_type_list)


State 803

  517 variant_type_list: variant_type_list . ';' variant_type
  708 type_declaration_no_options: "variant" '<' $@72 variant_type_list . '>' $@73

    '>'  shift, and go to state 1023
    ';'  shift, and go to state 1024


State 804

  635 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 635 (auto_type_declaration)


State 805

  656 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 1025


State 806

  244 optional_expr_list: expr_list .
  308 expr_list: expr_list . ',' expr

    ','  shift, and go to state 836

    $default  reduce using rule 244 (optional_expr_list)


State 807

  657 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 657 (type_declaration_no_options)


State 808

  650 type_declaration_no_options: type_declaration_no_options '[' expr ']' .

    $default  reduce using rule 650 (type_declaration_no_options)


State 809

  640 bitfield_alias_bits: bitfield_alias_bits "name" ';' .

    $default  reduce using rule 640 (bitfield_alias_bits)


State 810

  726 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@82 "name" $@83 '{' $@84 bitfield_alias_bits $@85 '}' .

    $default  reduce using rule 726 (bitfield_alias_declaration)


State 811

  509 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1026


State 812

  514 tuple_alias_type_list: tuple_alias_type_list tuple_type ';' .

    $default  reduce using rule 514 (tuple_alias_type_list)


State 813

  716 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@74 "name" $@75 '{' $@76 tuple_alias_type_list $@77 '}' .

    $default  reduce using rule 716 (tuple_alias_declaration)


State 814

  515 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1027


State 815

  520 variant_alias_type_list: variant_alias_type_list variant_type ';' .

    $default  reduce using rule 520 (variant_alias_type_list)


State 816

  721 variant_alias_declaration: "variant" optional_public_or_private_alias $@78 "name" $@79 '{' $@80 variant_alias_type_list $@81 '}' .

    $default  reduce using rule 721 (variant_alias_declaration)


State 817

  505 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 505 (function_argument_declaration)


State 818

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'
  595 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ')'    shift, and go to state 1028


State 819

  596 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 596 (variable_name_with_pos_list)


State 820

  597 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  598                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1029

    $default  reduce using rule 597 (variable_name_with_pos_list)


State 821

  525 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  526                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  710 type_declaration: type_declaration . '|' type_declaration_no_options
  711                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 609
    '='   shift, and go to state 611
    '|'   shift, and go to state 409

    $default  reduce using rule 525 (variable_declaration)

    copy_or_move  go to state 1030


State 822

  528 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 528 (variable_declaration)


State 823

  333 expr_assign: expr .
  334            | expr . '=' expr
  335            | expr . "<-" expr
  336            | expr . ":=" expr
  337            | expr . "&=" expr
  338            | expr . "|=" expr
  339            | expr . "^=" expr
  340            | expr . "&&=" expr
  341            | expr . "||=" expr
  342            | expr . "^^=" expr
  343            | expr . "+=" expr
  344            | expr . "-=" expr
  345            | expr . "*=" expr
  346            | expr . "/=" expr
  347            | expr . "%=" expr
  348            | expr . "<<=" expr
  349            | expr . ">>=" expr
  350            | expr . "<<<=" expr
  351            | expr . ">>>=" expr
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'
  527 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 716
    "as"    shift, and go to state 717
    "+="    shift, and go to state 718
    "-="    shift, and go to state 719
    "/="    shift, and go to state 720
    "*="    shift, and go to state 721
    "%="    shift, and go to state 722
    "&="    shift, and go to state 723
    "|="    shift, and go to state 724
    "^="    shift, and go to state 725
    "<<"    shift, and go to state 726
    ">>"    shift, and go to state 727
    "++"    shift, and go to state 728
    "--"    shift, and go to state 729
    "<="    shift, and go to state 730
    "<<="   shift, and go to state 731
    ">>="   shift, and go to state 732
    ">="    shift, and go to state 733
    "=="    shift, and go to state 734
    "!="    shift, and go to state 735
    "->"    shift, and go to state 736
    "<-"    shift, and go to state 837
    "??"    shift, and go to state 738
    "?."    shift, and go to state 739
    "?["    shift, and go to state 740
    "<|"    shift, and go to state 741
    "|>"    shift, and go to state 742
    ":="    shift, and go to state 743
    "<<<"   shift, and go to state 744
    ">>>"   shift, and go to state 745
    "<<<="  shift, and go to state 746
    ">>>="  shift, and go to state 747
    "&&"    shift, and go to state 748
    "||"    shift, and go to state 749
    "^^"    shift, and go to state 750
    "&&="   shift, and go to state 751
    "||="   shift, and go to state 752
    "^^="   shift, and go to state 753
    ".."    shift, and go to state 754
    '='     shift, and go to state 838
    '?'     shift, and go to state 756
    '|'     shift, and go to state 757
    '^'     shift, and go to state 758
    '&'     shift, and go to state 759
    '<'     shift, and go to state 760
    '>'     shift, and go to state 761
    '-'     shift, and go to state 762
    '+'     shift, and go to state 763
    '*'     shift, and go to state 764
    '/'     shift, and go to state 765
    '%'     shift, and go to state 766
    '.'     shift, and go to state 767
    '['     shift, and go to state 768

    " <|"     reduce using rule 333 (expr_assign)
    $default  reduce using rule 527 (variable_declaration)


State 824

  764 make_struct_decl: "struct" '<' $@86 . type_declaration_no_options '>' $@87 '(' make_struct_dim ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1031


State 825

  767 make_struct_decl: "class" '<' $@88 . type_declaration_no_options '>' $@89 '(' make_struct_dim ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1032


State 826

   78 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 78 (expression_while_loop)


State 827

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list . "in" expr_list expression_block
  597 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  598                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1033
    ','   shift, and go to state 610


State 828

  262 new_type_declaration: '<' $@11 . type_declaration '>' $@12

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1034


State 829

  265 expr_new: "new" new_type_declaration '(' . ')'
  266         | "new" new_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    ')'                               shift, and go to state 1035
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    expr_list               go to state 1036
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 693
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 830

  304 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  305               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  306               | "typeinfo" '(' name_in_namespace . '<' "name" ';' "name" '>' expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '<'                               shift, and go to state 1037
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1038
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 831

  303 expr_type_decl: "type" '<' $@19 . type_declaration '>' $@20

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1039


State 832

  788 make_dim_decl: "array" '<' $@94 . type_declaration_no_options '>' $@95 '(' expr_list ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1040


State 833

  308 expr_list: expr_list . ',' expr
  785 make_dim_decl: "array" '(' expr_list . ')'

    ','  shift, and go to state 836
    ')'  shift, and go to state 1041


State 834

  275 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 275 (expression_return)


State 835

  272 expression_return_no_pipe: "return" "<-" expr_list .
  308 expr_list: expr_list . ',' expr

    ','  shift, and go to state 836

    $default  reduce using rule 272 (expression_return_no_pipe)


State 836

  308 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1042
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 837

  335 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 951
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 838

  334 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 974
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 839

  281 expression_try_catch: "try" expression_block "recover" . expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 1043


State 840

  650 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  651                            | type_declaration_no_options . '[' ']'
  657                            | type_declaration_no_options . '-' '[' ']'
  658                            | type_declaration_no_options . "explicit"
  659                            | type_declaration_no_options . "const"
  660                            | type_declaration_no_options . '-' "const"
  661                            | type_declaration_no_options . '&'
  662                            | type_declaration_no_options . '-' '&'
  663                            | type_declaration_no_options . '#'
  664                            | type_declaration_no_options . "implicit"
  665                            | type_declaration_no_options . '-' '#'
  666                            | type_declaration_no_options . "==" "const"
  667                            | type_declaration_no_options . "==" '&'
  668                            | type_declaration_no_options . '?'
  672                            | type_declaration_no_options . "??"
  800 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' expr_map_tuple_list ')'
  801                | "table" '<' type_declaration_no_options . ';' type_declaration_no_options '>' '(' expr_map_tuple_list ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1044
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    ';'         shift, and go to state 1045
    '#'         shift, and go to state 408


State 841

  796 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  799 make_table_decl: "table" '(' expr_map_tuple_list . ')'

    ','  shift, and go to state 1046
    ')'  shift, and go to state 1047


State 842

  259 expression_delete: "delete" "explicit" expr .
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 259 (expression_delete)


State 843

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  432     | "deref" '(' expr . ')'
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ')'    shift, and go to state 1048


State 844

   79 expression_with: "with" expr expression_block .

    $default  reduce using rule 79 (expression_with)


State 845

   81 expression_with_alias: "assume" "name" '=' . $@5 expr

    $default  reduce using rule 80 ($@5)

    $@5  go to state 1049


State 846

  294 expr_cast: "cast" '<' $@13 . type_declaration_no_options '>' $@14 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1050


State 847

  297 expr_cast: "upcast" '<' $@15 . type_declaration_no_options '>' $@16 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1051


State 848

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  433     | "addr" '(' expr . ')'
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ')'    shift, and go to state 1052


State 849

  300 expr_cast: "reinterpret" '<' $@17 . type_declaration_no_options '>' $@18 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1053


State 850

   54 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 54 (expression_label)


State 851

   55 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 55 (expression_goto)


State 852

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  464     | "unsafe" '(' expr . ')'
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ')'    shift, and go to state 1054


State 853

  792 make_dim_decl: "fixed_array" '<' $@96 . type_declaration_no_options '>' $@97 '(' expr_list ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1055


State 854

  308 expr_list: expr_list . ',' expr
  789 make_dim_decl: "fixed_array" '(' expr_list . ')'

    ','  shift, and go to state 836
    ')'  shift, and go to state 1056


State 855

  779 make_tuple_call: "tuple" '<' $@92 . type_declaration_no_options '>' $@93 '(' make_struct_dim ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1057


State 856

  308 expr_list: expr_list . ',' expr
  776 make_tuple_call: "tuple" '(' expr_list . ')'

    ','  shift, and go to state 836
    ')'  shift, and go to state 1058


State 857

  770 make_struct_decl: "variant" '<' $@90 . type_declaration_no_options '>' $@91 '(' make_struct_dim ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1059


State 858

  434 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  435     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  650 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  651                            | type_declaration_no_options . '[' ']'
  657                            | type_declaration_no_options . '-' '[' ']'
  658                            | type_declaration_no_options . "explicit"
  659                            | type_declaration_no_options . "const"
  660                            | type_declaration_no_options . '-' "const"
  661                            | type_declaration_no_options . '&'
  662                            | type_declaration_no_options . '-' '&'
  663                            | type_declaration_no_options . '#'
  664                            | type_declaration_no_options . "implicit"
  665                            | type_declaration_no_options . '-' '#'
  666                            | type_declaration_no_options . "==" "const"
  667                            | type_declaration_no_options . "==" '&'
  668                            | type_declaration_no_options . '?'
  672                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1060
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 859

  280 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 280 (expression_yield)


State 860

  277 expression_yield_no_pipe: "yield" "<-" expr .
  333 expr_assign: expr .
  334            | expr . '=' expr
  335            | expr . "<-" expr
  336            | expr . ":=" expr
  337            | expr . "&=" expr
  338            | expr . "|=" expr
  339            | expr . "^=" expr
  340            | expr . "&&=" expr
  341            | expr . "||=" expr
  342            | expr . "^^=" expr
  343            | expr . "+=" expr
  344            | expr . "-=" expr
  345            | expr . "*=" expr
  346            | expr . "/=" expr
  347            | expr . "%=" expr
  348            | expr . "<<=" expr
  349            | expr . ">>=" expr
  350            | expr . "<<<=" expr
  351            | expr . ">>>=" expr
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 716
    "as"    shift, and go to state 717
    "+="    shift, and go to state 718
    "-="    shift, and go to state 719
    "/="    shift, and go to state 720
    "*="    shift, and go to state 721
    "%="    shift, and go to state 722
    "&="    shift, and go to state 723
    "|="    shift, and go to state 724
    "^="    shift, and go to state 725
    "<<"    shift, and go to state 726
    ">>"    shift, and go to state 727
    "++"    shift, and go to state 728
    "--"    shift, and go to state 729
    "<="    shift, and go to state 730
    "<<="   shift, and go to state 731
    ">>="   shift, and go to state 732
    ">="    shift, and go to state 733
    "=="    shift, and go to state 734
    "!="    shift, and go to state 735
    "->"    shift, and go to state 736
    "<-"    shift, and go to state 837
    "??"    shift, and go to state 738
    "?."    shift, and go to state 739
    "?["    shift, and go to state 740
    "<|"    shift, and go to state 741
    "|>"    shift, and go to state 742
    ":="    shift, and go to state 743
    "<<<"   shift, and go to state 744
    ">>>"   shift, and go to state 745
    "<<<="  shift, and go to state 746
    ">>>="  shift, and go to state 747
    "&&"    shift, and go to state 748
    "||"    shift, and go to state 749
    "^^"    shift, and go to state 750
    "&&="   shift, and go to state 751
    "||="   shift, and go to state 752
    "^^="   shift, and go to state 753
    ".."    shift, and go to state 754
    '='     shift, and go to state 838
    '?'     shift, and go to state 756
    '|'     shift, and go to state 757
    '^'     shift, and go to state 758
    '&'     shift, and go to state 759
    '<'     shift, and go to state 760
    '>'     shift, and go to state 761
    '-'     shift, and go to state 762
    '+'     shift, and go to state 763
    '*'     shift, and go to state 764
    '/'     shift, and go to state 765
    '%'     shift, and go to state 766
    '.'     shift, and go to state 767
    '['     shift, and go to state 768

    " <|"     reduce using rule 333 (expr_assign)
    $default  reduce using rule 277 (expression_yield_no_pipe)


State 861

  314 block_or_lambda: '@' '@' .

    $default  reduce using rule 314 (block_or_lambda)


State 862

  324 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 920

    $default  reduce using rule 321 (optional_capture_list)

    optional_capture_list  go to state 1061


State 863

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  466 expr_mtag: "$$" '(' expr . ')'
  474          | expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ')'    shift, and go to state 1062


State 864

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  467 expr_mtag: "$i" '(' expr . ')'
  474          | expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ')'    shift, and go to state 1063


State 865

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  468 expr_mtag: "$v" '(' expr . ')'
  474          | expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ')'    shift, and go to state 1064


State 866

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  469 expr_mtag: "$b" '(' expr . ')'
  474          | expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ')'    shift, and go to state 1065


State 867

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  470 expr_mtag: "$a" '(' expr . ')'
  474          | expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ')'    shift, and go to state 1066


State 868

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  472 expr_mtag: "$c" '(' expr . ')' '(' ')'
  473          | "$c" '(' expr . ')' '(' expr_list ')'
  474          | expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ')'    shift, and go to state 1067


State 869

  597 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  598                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  807 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 1068
    ','   shift, and go to state 610


State 870

  743 optional_block: "where" . expr_block

    '$'  shift, and go to state 493
    '@'  shift, and go to state 662
    '{'  shift, and go to state 284

    expression_block  go to state 663
    block_or_lambda   go to state 664
    expr_block        go to state 1069


State 871

  736 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  737                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1070


State 872

  255 name_in_namespace: "name" .
  256                  | "name" . "::" "name"
  732 make_struct_fields: "name" . copy_or_move expr
  733                   | "name" . ":=" expr

    "<-"  shift, and go to state 609
    ":="  shift, and go to state 1071
    "::"  shift, and go to state 98
    '='   shift, and go to state 611

    $default  reduce using rule 255 (name_in_namespace)

    copy_or_move  go to state 1072


State 873

  391 expr: '-' . expr
  657 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  660                            | type_declaration_no_options '-' . "const"
  662                            | type_declaration_no_options '-' . '&'
  665                            | type_declaration_no_options '-' . '#'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "const"                           shift, and go to state 585
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '&'                               shift, and go to state 586
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 1073
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496
    '#'                               shift, and go to state 588

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 686
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 874

  650 type_declaration_no_options: type_declaration_no_options '[' . expr ']'
  651                            | type_declaration_no_options '[' . ']'
  782 make_dim_decl: '[' . expr_list optional_comma ']'
  806 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "for"                             shift, and go to state 691
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    ']'                               shift, and go to state 589
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    expr_list               go to state 692
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1074
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 875

  418 expr: '(' . expr_list ')'
  758 make_struct_decl: "[[" type_declaration_no_options '(' . ')' optional_block optional_trailing_delim_sqr_sqr
  759                 | "[[" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    ')'                               shift, and go to state 1075
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    expr_list               go to state 694
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 693
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 876

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'
  771 make_tuple: expr .
  772           | expr . "=>" expr

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "=>"   shift, and go to state 1076
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 771 (make_tuple)


State 877

  734 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  735                   | make_struct_fields . ',' "name" ":=" expr
  738                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  739                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  740 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 1077

    $default  reduce using rule 740 (make_struct_dim)


State 878

  741 make_struct_dim: make_struct_dim . ';' make_struct_fields
  756 make_struct_decl: "[[" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 870
    ';'      shift, and go to state 1078

    $default  reduce using rule 742 (optional_block)

    optional_block  go to state 1079


State 879

  757 make_struct_decl: "[[" type_declaration_no_options optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1080
    ",]]"  shift, and go to state 1081
    ']'    shift, and go to state 1082

    optional_trailing_delim_sqr_sqr  go to state 1083


State 880

  773 make_tuple: make_tuple . ',' expr
  780 make_dim: make_tuple .

    ','  shift, and go to state 1084

    $default  reduce using rule 780 (make_dim)


State 881

  781 make_dim: make_dim . ';' make_tuple
  783 make_dim_decl: "[[" type_declaration_no_options make_dim . optional_trailing_semicolon_sqr_sqr

    ";]]"  shift, and go to state 1085
    ']'    shift, and go to state 1086
    ';'    shift, and go to state 1087

    optional_trailing_semicolon_sqr_sqr  go to state 1088


State 882

  597 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  598                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  808 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where '}' ']'

    "in"  shift, and go to state 1089
    ','   shift, and go to state 610


State 883

  418 expr: '(' . expr_list ')'
  761 make_struct_decl: "[{" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    ')'                               shift, and go to state 1090
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    expr_list               go to state 694
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 693
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 884

  741 make_struct_dim: make_struct_dim . ';' make_struct_fields
  760 make_struct_decl: "[{" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"  shift, and go to state 870
    ';'      shift, and go to state 1078

    $default  reduce using rule 742 (optional_block)

    optional_block  go to state 1091


State 885

  781 make_dim: make_dim . ';' make_tuple
  784 make_dim_decl: "[{" type_declaration_no_options make_dim . optional_trailing_semicolon_cur_sqr

    ";}]"  shift, and go to state 1092
    ';'    shift, and go to state 1087
    '}'    shift, and go to state 1093

    optional_trailing_semicolon_cur_sqr  go to state 1094


State 886

  597 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  598                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  810 array_comprehension: "{{" "for" variable_name_with_pos_list . "in" expr_list ';' make_map_tuple array_comprehension_where '}' '}'

    "in"  shift, and go to state 1095
    ','   shift, and go to state 610


State 887

  774 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1096
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 888

  745 optional_trailing_semicolon_cur_cur: ";}}" .

    $default  reduce using rule 745 (optional_trailing_semicolon_cur_cur)


State 889

  794 make_table: make_table ';' . make_map_tuple

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 679
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_map_tuple          go to state 1097
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 890

  744 optional_trailing_semicolon_cur_cur: '}' . '}'

    '}'  shift, and go to state 1098


State 891

  798 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur .

    $default  reduce using rule 798 (make_table_decl)


State 892

  247 expression_keyword: "keyword" '<' $@7 . type_declaration_no_options '>' $@8 expr

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1099


State 893

  242 expr_keyword: "keyword" expr expression_block .

    $default  reduce using rule 242 (expr_keyword)


State 894

  250 expression_keyword: "type function" '<' $@9 . type_declaration_no_options '>' $@10 '(' optional_expr_list ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1100


State 895

   31 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 31 (string_builder)


State 896

   30 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1101
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 897

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   29 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 220
    STRING_CHARACTER_ESC  shift, and go to state 221

    STRING_CHARACTER      [reduce using rule 29 (string_builder_body)]
    STRING_CHARACTER_ESC  [reduce using rule 29 (string_builder_body)]
    $default              reduce using rule 29 (string_builder_body)


State 898

  597 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  598                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  806 array_comprehension: '[' "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1102
    ','   shift, and go to state 610


State 899

  308 expr_list: expr_list ',' . expr
  805 optional_comma: ',' .

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    $default  reduce using rule 805 (optional_comma)

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1042
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 900

  782 make_dim_decl: '[' expr_list optional_comma . ']'

    ']'  shift, and go to state 1103


State 901

  418 expr: '(' expr_list ')' .

    $default  reduce using rule 418 (expr)


State 902

  363 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1104


State 903

  481 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1105


State 904

  367 func_addr_expr: '@' '@' '<' . $@21 type_declaration_no_options '>' $@22 func_addr_name
  370               | '@' '@' '<' . $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name

    ':'       reduce using rule 368 ($@23)
    '>'       reduce using rule 368 ($@23)
    '('       reduce using rule 368 ($@23)
    $default  reduce using rule 365 ($@21)

    $@21  go to state 1106
    $@23  go to state 1107


State 905

  362 func_addr_name: name_in_namespace .

    $default  reduce using rule 362 (func_addr_name)


State 906

  364 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 364 (func_addr_expr)


State 907

  597 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  598                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  809 array_comprehension: '{' "for" variable_name_with_pos_list . "in" expr_list ';' make_map_tuple array_comprehension_where '}'

    "in"  shift, and go to state 1108
    ','   shift, and go to state 610


State 908

  796 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  805 optional_comma: ',' .

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    $default  reduce using rule 805 (optional_comma)

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 679
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_map_tuple          go to state 1109
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 909

  797 make_table_decl: '{' expr_map_tuple_list optional_comma . '}'

    '}'  shift, and go to state 1110


State 910

  217 expression_block: '{' expressions '}' "finally" '{' . expressions '}'

    $default  reduce using rule 239 (expressions)

    expressions  go to state 1111


State 911

   72 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1112
    "elif"         shift, and go to state 1113
    "static_elif"  shift, and go to state 1114

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1115
    expression_else      go to state 1116


State 912

   74 expression_if_then_else: expression_if_one_liner "if" $@3 . expr expression_else_one_liner ';'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1117
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 913

  358 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  782 make_dim_decl: '[' . expr_list optional_comma ']'
  806 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "for"                             shift, and go to state 691
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "$f"                              shift, and go to state 871
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 872
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    expr_list               go to state 692
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 693
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_fields      go to state 1118
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 914

  426 expr: name_in_namespace '(' ')' .

    $default  reduce using rule 426 (expr)


State 915

  308 expr_list: expr_list . ',' expr
  359 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  428 expr: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1119
    ')'  shift, and go to state 1120


State 916

  427 expr: name_in_namespace '(' make_struct_dim . ')'
  741 make_struct_dim: make_struct_dim . ';' make_struct_fields

    ')'  shift, and go to state 1121
    ';'  shift, and go to state 1078


State 917

  288 tuple_expansion_variable_declaration: "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  289                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr ';'

    "name"  shift, and go to state 1122

    tuple_expansion  go to state 1123


State 918

  291 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 291 (expression_let)


State 919

  290 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 290 (expression_let)


State 920

  322 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"  shift, and go to state 1124
    ":="  shift, and go to state 1125
    '='   shift, and go to state 1126
    '&'   shift, and go to state 1127

    capture_entry  go to state 1128
    capture_list   go to state 1129


State 921

  325 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 1130


State 922

  251 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 251 (expr_pipe)


State 923

  440 expr: expr "is" "type" . '<' $@27 type_declaration_no_options '>' $@28

    '<'  shift, and go to state 1131


State 924

  480 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1132


State 925

  442 expr: expr "is" "name" .

    $default  reduce using rule 442 (expr)


State 926

  441 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 441 (expr)


State 927

  446 expr: expr "as" "type" . '<' $@29 type_declaration '>' $@30

    '<'  shift, and go to state 1133


State 928

  478 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1134


State 929

  443 expr: expr "as" "name" .

    $default  reduce using rule 443 (expr)


State 930

  447 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 447 (expr)


State 931

  343 expr_assign: expr "+=" expr .
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 343 (expr_assign)


State 932

  344 expr_assign: expr "-=" expr .
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 344 (expr_assign)


State 933

  346 expr_assign: expr "/=" expr .
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 346 (expr_assign)


State 934

  345 expr_assign: expr "*=" expr .
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 345 (expr_assign)


State 935

  347 expr_assign: expr "%=" expr .
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 347 (expr_assign)


State 936

  337 expr_assign: expr "&=" expr .
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 337 (expr_assign)


State 937

  338 expr_assign: expr "|=" expr .
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 338 (expr_assign)


State 938

  339 expr_assign: expr "^=" expr .
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 339 (expr_assign)


State 939

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  392     | expr "<<" expr .
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 716
    "as"  shift, and go to state 717
    "++"  shift, and go to state 728
    "--"  shift, and go to state 729
    "->"  shift, and go to state 736
    "??"  shift, and go to state 738
    "?."  shift, and go to state 739
    "?["  shift, and go to state 740
    "<|"  shift, and go to state 741
    "|>"  shift, and go to state 742
    '-'   shift, and go to state 762
    '+'   shift, and go to state 763
    '*'   shift, and go to state 764
    '/'   shift, and go to state 765
    '%'   shift, and go to state 766
    '.'   shift, and go to state 767
    '['   shift, and go to state 768

    $default  reduce using rule 392 (expr)


State 940

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  393     | expr ">>" expr .
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 716
    "as"  shift, and go to state 717
    "++"  shift, and go to state 728
    "--"  shift, and go to state 729
    "->"  shift, and go to state 736
    "??"  shift, and go to state 738
    "?."  shift, and go to state 739
    "?["  shift, and go to state 740
    "<|"  shift, and go to state 741
    "|>"  shift, and go to state 742
    '-'   shift, and go to state 762
    '+'   shift, and go to state 763
    '*'   shift, and go to state 764
    '/'   shift, and go to state 765
    '%'   shift, and go to state 766
    '.'   shift, and go to state 767
    '['   shift, and go to state 768

    $default  reduce using rule 393 (expr)


State 941

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  405     | expr "<=" expr .
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 405 (expr)


State 942

  348 expr_assign: expr "<<=" expr .
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 348 (expr_assign)


State 943

  349 expr_assign: expr ">>=" expr .
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 349 (expr_assign)


State 944

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  406     | expr ">=" expr .
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 406 (expr)


State 945

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  403     | expr "==" expr .
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 403 (expr)


State 946

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  404     | expr "!=" expr .
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 404 (expr)


State 947

  360 expr_method_call: expr "->" "name" . '(' ')'
  361                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1135


State 948

  357 expr_assign_pipe: expr "<-" "$ <|" . expr_block

    '$'  shift, and go to state 493
    '@'  shift, and go to state 662
    '{'  shift, and go to state 284

    expression_block  go to state 663
    block_or_lambda   go to state 664
    expr_block        go to state 1136


State 949

  355 expr_assign_pipe: expr "<-" "@ <|" . expr_block

    '$'  shift, and go to state 493
    '@'  shift, and go to state 662
    '{'  shift, and go to state 284

    expression_block  go to state 663
    block_or_lambda   go to state 664
    expr_block        go to state 1137


State 950

  356 expr_assign_pipe: expr "<-" "@@ <|" . expr_block

    '$'  shift, and go to state 493
    '@'  shift, and go to state 662
    '{'  shift, and go to state 284

    expression_block  go to state 663
    block_or_lambda   go to state 664
    expr_block        go to state 1138


State 951

  335 expr_assign: expr "<-" expr .
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 335 (expr_assign)


State 952

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  436     | expr "??" expr .
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 716
    "as"  shift, and go to state 717
    "++"  shift, and go to state 728
    "--"  shift, and go to state 729
    "->"  shift, and go to state 736
    "??"  shift, and go to state 738
    "?."  shift, and go to state 739
    "?["  shift, and go to state 740
    "<|"  shift, and go to state 741
    "|>"  shift, and go to state 742
    '.'   shift, and go to state 767
    '['   shift, and go to state 768

    $default  reduce using rule 436 (expr)


State 953

  475 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1139


State 954

  423 expr: expr "?." "name" .

    $default  reduce using rule 423 (expr)


State 955

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  421     | expr "?[" expr . ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ']'    shift, and go to state 1140


State 956

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  460     | expr "<|" expr .
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 736
    "?."  shift, and go to state 739
    "?["  shift, and go to state 740
    '.'   shift, and go to state 767
    '['   shift, and go to state 768

    $default  reduce using rule 460 (expr)


State 957

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  461     | expr "|>" expr .
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 736
    "?."  shift, and go to state 739
    "?["  shift, and go to state 740
    '.'   shift, and go to state 767
    '['   shift, and go to state 768

    $default  reduce using rule 461 (expr)


State 958

  429 expr: basic_type_declaration . '(' ')'
  430     | basic_type_declaration . '(' expr_list ')'
  462     | expr "|>" basic_type_declaration .

    '('  shift, and go to state 769

    $default  reduce using rule 462 (expr)


State 959

  336 expr_assign: expr ":=" expr .
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 336 (expr_assign)


State 960

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  394     | expr "<<<" expr .
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 716
    "as"  shift, and go to state 717
    "++"  shift, and go to state 728
    "--"  shift, and go to state 729
    "->"  shift, and go to state 736
    "??"  shift, and go to state 738
    "?."  shift, and go to state 739
    "?["  shift, and go to state 740
    "<|"  shift, and go to state 741
    "|>"  shift, and go to state 742
    '-'   shift, and go to state 762
    '+'   shift, and go to state 763
    '*'   shift, and go to state 764
    '/'   shift, and go to state 765
    '%'   shift, and go to state 766
    '.'   shift, and go to state 767
    '['   shift, and go to state 768

    $default  reduce using rule 394 (expr)


State 961

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  395     | expr ">>>" expr .
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 716
    "as"  shift, and go to state 717
    "++"  shift, and go to state 728
    "--"  shift, and go to state 729
    "->"  shift, and go to state 736
    "??"  shift, and go to state 738
    "?."  shift, and go to state 739
    "?["  shift, and go to state 740
    "<|"  shift, and go to state 741
    "|>"  shift, and go to state 742
    '-'   shift, and go to state 762
    '+'   shift, and go to state 763
    '*'   shift, and go to state 764
    '/'   shift, and go to state 765
    '%'   shift, and go to state 766
    '.'   shift, and go to state 767
    '['   shift, and go to state 768

    $default  reduce using rule 395 (expr)


State 962

  350 expr_assign: expr "<<<=" expr .
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 350 (expr_assign)


State 963

  351 expr_assign: expr ">>>=" expr .
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 351 (expr_assign)


State 964

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  410     | expr "&&" expr .
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 410 (expr)


State 965

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  411     | expr "||" expr .
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "^^"   shift, and go to state 750
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 411 (expr)


State 966

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  412     | expr "^^" expr .
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 412 (expr)


State 967

  340 expr_assign: expr "&&=" expr .
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 340 (expr_assign)


State 968

  341 expr_assign: expr "||=" expr .
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 341 (expr_assign)


State 969

  342 expr_assign: expr "^^=" expr .
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 342 (expr_assign)


State 970

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  413     | expr ".." expr .
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    ".."  error (nonassociative)

    $default  reduce using rule 413 (expr)


State 971

  354 expr_assign_pipe: expr '=' "$ <|" . expr_block

    '$'  shift, and go to state 493
    '@'  shift, and go to state 662
    '{'  shift, and go to state 284

    expression_block  go to state 663
    block_or_lambda   go to state 664
    expr_block        go to state 1141


State 972

  352 expr_assign_pipe: expr '=' "@ <|" . expr_block

    '$'  shift, and go to state 493
    '@'  shift, and go to state 662
    '{'  shift, and go to state 284

    expression_block  go to state 663
    block_or_lambda   go to state 664
    expr_block        go to state 1142


State 973

  353 expr_assign_pipe: expr '=' "@@ <|" . expr_block

    '$'  shift, and go to state 493
    '@'  shift, and go to state 662
    '{'  shift, and go to state 284

    expression_block  go to state 663
    block_or_lambda   go to state 664
    expr_block        go to state 1143


State 974

  334 expr_assign: expr '=' expr .
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 334 (expr_assign)


State 975

  448 expr: expr '?' "as" . "name"
  451     | expr '?' "as" . "type" '<' $@31 type_declaration '>' $@32
  452     | expr '?' "as" . basic_type_declaration
  479 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1144
    "bool"      shift, and go to state 310
    "void"      shift, and go to state 311
    "string"    shift, and go to state 312
    "int"       shift, and go to state 314
    "int2"      shift, and go to state 315
    "int3"      shift, and go to state 316
    "int4"      shift, and go to state 317
    "uint"      shift, and go to state 318
    "bitfield"  shift, and go to state 456
    "uint2"     shift, and go to state 320
    "uint3"     shift, and go to state 321
    "uint4"     shift, and go to state 322
    "float"     shift, and go to state 323
    "float2"    shift, and go to state 324
    "float3"    shift, and go to state 325
    "float4"    shift, and go to state 326
    "range"     shift, and go to state 327
    "urange"    shift, and go to state 328
    "range64"   shift, and go to state 329
    "urange64"  shift, and go to state 330
    "int64"     shift, and go to state 332
    "uint64"    shift, and go to state 333
    "double"    shift, and go to state 334
    "int8"      shift, and go to state 337
    "uint8"     shift, and go to state 338
    "int16"     shift, and go to state 339
    "uint16"    shift, and go to state 340
    "$f"        shift, and go to state 1145
    "name"      shift, and go to state 1146

    basic_type_declaration  go to state 1147


State 976

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  437     | expr '?' expr . ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    ':'    shift, and go to state 1148
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768


State 977

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  408     | expr '|' expr .
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 408 (expr)


State 978

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  409     | expr '^' expr .
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 409 (expr)


State 979

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  407     | expr '&' expr .
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 407 (expr)


State 980

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  401     | expr '<' expr .
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 401 (expr)


State 981

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  402     | expr '>' expr .
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 402 (expr)


State 982

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  397     | expr '-' expr .
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 716
    "as"  shift, and go to state 717
    "++"  shift, and go to state 728
    "--"  shift, and go to state 729
    "->"  shift, and go to state 736
    "??"  shift, and go to state 738
    "?."  shift, and go to state 739
    "?["  shift, and go to state 740
    "<|"  shift, and go to state 741
    "|>"  shift, and go to state 742
    '*'   shift, and go to state 764
    '/'   shift, and go to state 765
    '%'   shift, and go to state 766
    '.'   shift, and go to state 767
    '['   shift, and go to state 768

    $default  reduce using rule 397 (expr)


State 983

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  396     | expr '+' expr .
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 716
    "as"  shift, and go to state 717
    "++"  shift, and go to state 728
    "--"  shift, and go to state 729
    "->"  shift, and go to state 736
    "??"  shift, and go to state 738
    "?."  shift, and go to state 739
    "?["  shift, and go to state 740
    "<|"  shift, and go to state 741
    "|>"  shift, and go to state 742
    '*'   shift, and go to state 764
    '/'   shift, and go to state 765
    '%'   shift, and go to state 766
    '.'   shift, and go to state 767
    '['   shift, and go to state 768

    $default  reduce using rule 396 (expr)


State 984

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  398     | expr '*' expr .
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 716
    "as"  shift, and go to state 717
    "++"  shift, and go to state 728
    "--"  shift, and go to state 729
    "->"  shift, and go to state 736
    "??"  shift, and go to state 738
    "?."  shift, and go to state 739
    "?["  shift, and go to state 740
    "<|"  shift, and go to state 741
    "|>"  shift, and go to state 742
    '.'   shift, and go to state 767
    '['   shift, and go to state 768

    $default  reduce using rule 398 (expr)


State 985

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  399     | expr '/' expr .
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 716
    "as"  shift, and go to state 717
    "++"  shift, and go to state 728
    "--"  shift, and go to state 729
    "->"  shift, and go to state 736
    "??"  shift, and go to state 738
    "?."  shift, and go to state 739
    "?["  shift, and go to state 740
    "<|"  shift, and go to state 741
    "|>"  shift, and go to state 742
    '.'   shift, and go to state 767
    '['   shift, and go to state 768

    $default  reduce using rule 399 (expr)


State 986

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  400     | expr '%' expr .
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 716
    "as"  shift, and go to state 717
    "++"  shift, and go to state 728
    "--"  shift, and go to state 729
    "->"  shift, and go to state 736
    "??"  shift, and go to state 738
    "?."  shift, and go to state 739
    "?["  shift, and go to state 740
    "<|"  shift, and go to state 741
    "|>"  shift, and go to state 742
    '.'   shift, and go to state 767
    '['   shift, and go to state 768

    $default  reduce using rule 400 (expr)


State 987

  424 expr: expr '.' "?." . "name"
  477 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1149
    "name"  shift, and go to state 1150


State 988

  422 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1151
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 989

  474 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1152


State 990

  371 expr_field: expr '.' "name" .
  373           | expr '.' "name" . '(' ')'
  374           | expr '.' "name" . '(' expr_list ')'

    '('  shift, and go to state 1153

    '('       [reduce using rule 371 (expr_field)]
    $default  reduce using rule 371 (expr_field)


State 991

  372 expr_field: expr '.' '.' . "name"
  476 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1154
    "name"  shift, and go to state 1155


State 992

  420 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1156
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 993

  377 expr_field: expr '.' $@25 . error $@26

    error  shift, and go to state 1157


State 994

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  419     | expr '[' expr . ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ']'    shift, and go to state 1158


State 995

  429 expr: basic_type_declaration '(' ')' .

    $default  reduce using rule 429 (expr)


State 996

  308 expr_list: expr_list . ',' expr
  430 expr: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 836
    ')'  shift, and go to state 1159


State 997

  578 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@42 enum_list $@43 . '}'

    '}'  shift, and go to state 1160


State 998

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'
  558 enum_list: enum_list "name" '=' expr . ';'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ';'    shift, and go to state 1161


State 999

  116 annotation_list: annotation_list . ',' annotation_declaration
  118 optional_annotation_list: '[' annotation_list . ']'
  502 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' ';'

    ','  shift, and go to state 107
    ']'  shift, and go to state 1162


State 1000

  499 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header ';'
  501                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block

    "public"   shift, and go to state 1163
    "private"  shift, and go to state 1164

    $default  reduce using rule 489 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1165


State 1001

  494 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1166

    $default  reduce using rule 492 (optional_static_member_variable)

    optional_static_member_variable  go to state 1167


State 1002

  497 struct_variable_declaration_list: struct_variable_declaration_list $@33 structure_variable_declaration . ';'

    ';'  shift, and go to state 1168


State 1003

  538 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 538 (let_variable_name_with_pos_list)


State 1004

  541 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 541 (let_variable_declaration)


State 1005

  333 expr_assign: expr .
  334            | expr . '=' expr
  335            | expr . "<-" expr
  336            | expr . ":=" expr
  337            | expr . "&=" expr
  338            | expr . "|=" expr
  339            | expr . "^=" expr
  340            | expr . "&&=" expr
  341            | expr . "||=" expr
  342            | expr . "^^=" expr
  343            | expr . "+=" expr
  344            | expr . "-=" expr
  345            | expr . "*=" expr
  346            | expr . "/=" expr
  347            | expr . "%=" expr
  348            | expr . "<<=" expr
  349            | expr . ">>=" expr
  350            | expr . "<<<=" expr
  351            | expr . ">>>=" expr
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'
  540 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 716
    "as"    shift, and go to state 717
    "+="    shift, and go to state 718
    "-="    shift, and go to state 719
    "/="    shift, and go to state 720
    "*="    shift, and go to state 721
    "%="    shift, and go to state 722
    "&="    shift, and go to state 723
    "|="    shift, and go to state 724
    "^="    shift, and go to state 725
    "<<"    shift, and go to state 726
    ">>"    shift, and go to state 727
    "++"    shift, and go to state 728
    "--"    shift, and go to state 729
    "<="    shift, and go to state 730
    "<<="   shift, and go to state 731
    ">>="   shift, and go to state 732
    ">="    shift, and go to state 733
    "=="    shift, and go to state 734
    "!="    shift, and go to state 735
    "->"    shift, and go to state 736
    "<-"    shift, and go to state 837
    "??"    shift, and go to state 738
    "?."    shift, and go to state 739
    "?["    shift, and go to state 740
    "<|"    shift, and go to state 741
    "|>"    shift, and go to state 742
    ":="    shift, and go to state 743
    "<<<"   shift, and go to state 744
    ">>>"   shift, and go to state 745
    "<<<="  shift, and go to state 746
    ">>>="  shift, and go to state 747
    "&&"    shift, and go to state 748
    "||"    shift, and go to state 749
    "^^"    shift, and go to state 750
    "&&="   shift, and go to state 751
    "||="   shift, and go to state 752
    "^^="   shift, and go to state 753
    ".."    shift, and go to state 754
    '='     shift, and go to state 838
    '?'     shift, and go to state 756
    '|'     shift, and go to state 757
    '^'     shift, and go to state 758
    '&'     shift, and go to state 759
    '<'     shift, and go to state 760
    '>'     shift, and go to state 761
    '-'     shift, and go to state 762
    '+'     shift, and go to state 763
    '*'     shift, and go to state 764
    '/'     shift, and go to state 765
    '%'     shift, and go to state 766
    '.'     shift, and go to state 767
    '['     shift, and go to state 768
    ';'     shift, and go to state 1169

    $default  reduce using rule 333 (expr_assign)


State 1006

  542 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';' .

    $default  reduce using rule 542 (let_variable_declaration)


State 1007

  654 type_declaration_no_options: "type" '<' $@48 type_declaration '>' . $@49

    $default  reduce using rule 653 ($@49)

    $@49  go to state 1170


State 1008

  675 type_declaration_no_options: "array" '<' $@52 type_declaration '>' . $@53

    $default  reduce using rule 674 ($@53)

    $@53  go to state 1171


State 1009

  678 type_declaration_no_options: "table" '<' $@54 table_type_pair '>' . $@55

    $default  reduce using rule 677 ($@55)

    $@55  go to state 1172


State 1010

  645 table_type_pair: type_declaration ';' . type_declaration

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1173


State 1011

  681 type_declaration_no_options: "iterator" '<' $@56 type_declaration '>' . $@57

    $default  reduce using rule 680 ($@57)

    $@57  go to state 1174


State 1012

  671 type_declaration_no_options: "smart_ptr" '<' $@50 type_declaration '>' . $@51

    $default  reduce using rule 670 ($@51)

    $@51  go to state 1175


State 1013

  643 bitfield_type_declaration: "bitfield" '<' $@46 bitfield_bits '>' . $@47

    $default  reduce using rule 642 ($@47)

    $@47  go to state 1176


State 1014

  637 bitfield_bits: bitfield_bits ';' . "name"

    "name"  shift, and go to state 1177


State 1015

  685 type_declaration_no_options: "block" '<' $@58 type_declaration '>' . $@59

    $default  reduce using rule 684 ($@59)

    $@59  go to state 1178


State 1016

  688 type_declaration_no_options: "block" '<' $@60 optional_function_argument_list optional_function_type . '>' $@61

    '>'  shift, and go to state 1179


State 1017

  692 type_declaration_no_options: "function" '<' $@62 type_declaration '>' . $@63

    $default  reduce using rule 691 ($@63)

    $@63  go to state 1180


State 1018

  695 type_declaration_no_options: "function" '<' $@64 optional_function_argument_list optional_function_type . '>' $@65

    '>'  shift, and go to state 1181


State 1019

  699 type_declaration_no_options: "lambda" '<' $@66 type_declaration '>' . $@67

    $default  reduce using rule 698 ($@67)

    $@67  go to state 1182


State 1020

  702 type_declaration_no_options: "lambda" '<' $@68 optional_function_argument_list optional_function_type . '>' $@69

    '>'  shift, and go to state 1183


State 1021

  705 type_declaration_no_options: "tuple" '<' $@70 tuple_type_list '>' . $@71

    $default  reduce using rule 704 ($@71)

    $@71  go to state 1184


State 1022

  511 tuple_type_list: tuple_type_list ';' . tuple_type

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 596
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    tuple_type                   go to state 1185
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 599


State 1023

  708 type_declaration_no_options: "variant" '<' $@72 variant_type_list '>' . $@73

    $default  reduce using rule 707 ($@73)

    $@73  go to state 1186


State 1024

  517 variant_type_list: variant_type_list ';' . variant_type

    "name"  shift, and go to state 601

    variant_type  go to state 1187


State 1025

  656 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 656 (type_declaration_no_options)


State 1026

  509 tuple_type: "name" ':' type_declaration .
  710 type_declaration: type_declaration . '|' type_declaration_no_options
  711                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409

    $default  reduce using rule 509 (tuple_type)


State 1027

  515 variant_type: "name" ':' type_declaration .
  710 type_declaration: type_declaration . '|' type_declaration_no_options
  711                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409

    $default  reduce using rule 515 (variant_type)


State 1028

  595 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 595 (variable_name_with_pos_list)


State 1029

  598 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1188


State 1030

  526 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1189
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1031

  650 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  651                            | type_declaration_no_options . '[' ']'
  657                            | type_declaration_no_options . '-' '[' ']'
  658                            | type_declaration_no_options . "explicit"
  659                            | type_declaration_no_options . "const"
  660                            | type_declaration_no_options . '-' "const"
  661                            | type_declaration_no_options . '&'
  662                            | type_declaration_no_options . '-' '&'
  663                            | type_declaration_no_options . '#'
  664                            | type_declaration_no_options . "implicit"
  665                            | type_declaration_no_options . '-' '#'
  666                            | type_declaration_no_options . "==" "const"
  667                            | type_declaration_no_options . "==" '&'
  668                            | type_declaration_no_options . '?'
  672                            | type_declaration_no_options . "??"
  764 make_struct_decl: "struct" '<' $@86 type_declaration_no_options . '>' $@87 '(' make_struct_dim ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1190
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1032

  650 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  651                            | type_declaration_no_options . '[' ']'
  657                            | type_declaration_no_options . '-' '[' ']'
  658                            | type_declaration_no_options . "explicit"
  659                            | type_declaration_no_options . "const"
  660                            | type_declaration_no_options . '-' "const"
  661                            | type_declaration_no_options . '&'
  662                            | type_declaration_no_options . '-' '&'
  663                            | type_declaration_no_options . '#'
  664                            | type_declaration_no_options . "implicit"
  665                            | type_declaration_no_options . '-' '#'
  666                            | type_declaration_no_options . "==" "const"
  667                            | type_declaration_no_options . "==" '&'
  668                            | type_declaration_no_options . '?'
  672                            | type_declaration_no_options . "??"
  767 make_struct_decl: "class" '<' $@88 type_declaration_no_options . '>' $@89 '(' make_struct_dim ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1191
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1033

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" . expr_list expression_block

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    expr_list               go to state 1192
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 693
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1034

  262 new_type_declaration: '<' $@11 type_declaration . '>' $@12
  710 type_declaration: type_declaration . '|' type_declaration_no_options
  711                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409
    '>'  shift, and go to state 1193


State 1035

  265 expr_new: "new" new_type_declaration '(' ')' .

    $default  reduce using rule 265 (expr_new)


State 1036

  266 expr_new: "new" new_type_declaration '(' expr_list . ')'
  308 expr_list: expr_list . ',' expr

    ','  shift, and go to state 836
    ')'  shift, and go to state 1194


State 1037

  305 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  306               | "typeinfo" '(' name_in_namespace '<' . "name" ';' "name" '>' expr ')'

    "name"  shift, and go to state 1195


State 1038

  304 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ')'    shift, and go to state 1196


State 1039

  303 expr_type_decl: "type" '<' $@19 type_declaration . '>' $@20
  710 type_declaration: type_declaration . '|' type_declaration_no_options
  711                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409
    '>'  shift, and go to state 1197


State 1040

  650 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  651                            | type_declaration_no_options . '[' ']'
  657                            | type_declaration_no_options . '-' '[' ']'
  658                            | type_declaration_no_options . "explicit"
  659                            | type_declaration_no_options . "const"
  660                            | type_declaration_no_options . '-' "const"
  661                            | type_declaration_no_options . '&'
  662                            | type_declaration_no_options . '-' '&'
  663                            | type_declaration_no_options . '#'
  664                            | type_declaration_no_options . "implicit"
  665                            | type_declaration_no_options . '-' '#'
  666                            | type_declaration_no_options . "==" "const"
  667                            | type_declaration_no_options . "==" '&'
  668                            | type_declaration_no_options . '?'
  672                            | type_declaration_no_options . "??"
  788 make_dim_decl: "array" '<' $@94 type_declaration_no_options . '>' $@95 '(' expr_list ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1198
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1041

  785 make_dim_decl: "array" '(' expr_list ')' .

    $default  reduce using rule 785 (make_dim_decl)


State 1042

  308 expr_list: expr_list ',' expr .
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 308 (expr_list)


State 1043

  281 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 281 (expression_try_catch)


State 1044

  800 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' expr_map_tuple_list ')'

    '('  shift, and go to state 1199


State 1045

  801 make_table_decl: "table" '<' type_declaration_no_options ';' . type_declaration_no_options '>' '(' expr_map_tuple_list ')'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1200


State 1046

  796 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 679
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_map_tuple          go to state 1109
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1047

  799 make_table_decl: "table" '(' expr_map_tuple_list ')' .

    $default  reduce using rule 799 (make_table_decl)


State 1048

  432 expr: "deref" '(' expr ')' .

    $default  reduce using rule 432 (expr)


State 1049

   81 expression_with_alias: "assume" "name" '=' $@5 . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1201
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1050

  294 expr_cast: "cast" '<' $@13 type_declaration_no_options . '>' $@14 expr
  650 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  651                            | type_declaration_no_options . '[' ']'
  657                            | type_declaration_no_options . '-' '[' ']'
  658                            | type_declaration_no_options . "explicit"
  659                            | type_declaration_no_options . "const"
  660                            | type_declaration_no_options . '-' "const"
  661                            | type_declaration_no_options . '&'
  662                            | type_declaration_no_options . '-' '&'
  663                            | type_declaration_no_options . '#'
  664                            | type_declaration_no_options . "implicit"
  665                            | type_declaration_no_options . '-' '#'
  666                            | type_declaration_no_options . "==" "const"
  667                            | type_declaration_no_options . "==" '&'
  668                            | type_declaration_no_options . '?'
  672                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1202
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1051

  297 expr_cast: "upcast" '<' $@15 type_declaration_no_options . '>' $@16 expr
  650 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  651                            | type_declaration_no_options . '[' ']'
  657                            | type_declaration_no_options . '-' '[' ']'
  658                            | type_declaration_no_options . "explicit"
  659                            | type_declaration_no_options . "const"
  660                            | type_declaration_no_options . '-' "const"
  661                            | type_declaration_no_options . '&'
  662                            | type_declaration_no_options . '-' '&'
  663                            | type_declaration_no_options . '#'
  664                            | type_declaration_no_options . "implicit"
  665                            | type_declaration_no_options . '-' '#'
  666                            | type_declaration_no_options . "==" "const"
  667                            | type_declaration_no_options . "==" '&'
  668                            | type_declaration_no_options . '?'
  672                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1203
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1052

  433 expr: "addr" '(' expr ')' .

    $default  reduce using rule 433 (expr)


State 1053

  300 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options . '>' $@18 expr
  650 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  651                            | type_declaration_no_options . '[' ']'
  657                            | type_declaration_no_options . '-' '[' ']'
  658                            | type_declaration_no_options . "explicit"
  659                            | type_declaration_no_options . "const"
  660                            | type_declaration_no_options . '-' "const"
  661                            | type_declaration_no_options . '&'
  662                            | type_declaration_no_options . '-' '&'
  663                            | type_declaration_no_options . '#'
  664                            | type_declaration_no_options . "implicit"
  665                            | type_declaration_no_options . '-' '#'
  666                            | type_declaration_no_options . "==" "const"
  667                            | type_declaration_no_options . "==" '&'
  668                            | type_declaration_no_options . '?'
  672                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1204
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1054

  464 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 464 (expr)


State 1055

  650 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  651                            | type_declaration_no_options . '[' ']'
  657                            | type_declaration_no_options . '-' '[' ']'
  658                            | type_declaration_no_options . "explicit"
  659                            | type_declaration_no_options . "const"
  660                            | type_declaration_no_options . '-' "const"
  661                            | type_declaration_no_options . '&'
  662                            | type_declaration_no_options . '-' '&'
  663                            | type_declaration_no_options . '#'
  664                            | type_declaration_no_options . "implicit"
  665                            | type_declaration_no_options . '-' '#'
  666                            | type_declaration_no_options . "==" "const"
  667                            | type_declaration_no_options . "==" '&'
  668                            | type_declaration_no_options . '?'
  672                            | type_declaration_no_options . "??"
  792 make_dim_decl: "fixed_array" '<' $@96 type_declaration_no_options . '>' $@97 '(' expr_list ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1205
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1056

  789 make_dim_decl: "fixed_array" '(' expr_list ')' .

    $default  reduce using rule 789 (make_dim_decl)


State 1057

  650 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  651                            | type_declaration_no_options . '[' ']'
  657                            | type_declaration_no_options . '-' '[' ']'
  658                            | type_declaration_no_options . "explicit"
  659                            | type_declaration_no_options . "const"
  660                            | type_declaration_no_options . '-' "const"
  661                            | type_declaration_no_options . '&'
  662                            | type_declaration_no_options . '-' '&'
  663                            | type_declaration_no_options . '#'
  664                            | type_declaration_no_options . "implicit"
  665                            | type_declaration_no_options . '-' '#'
  666                            | type_declaration_no_options . "==" "const"
  667                            | type_declaration_no_options . "==" '&'
  668                            | type_declaration_no_options . '?'
  672                            | type_declaration_no_options . "??"
  779 make_tuple_call: "tuple" '<' $@92 type_declaration_no_options . '>' $@93 '(' make_struct_dim ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1206
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1058

  776 make_tuple_call: "tuple" '(' expr_list ')' .

    $default  reduce using rule 776 (make_tuple_call)


State 1059

  650 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  651                            | type_declaration_no_options . '[' ']'
  657                            | type_declaration_no_options . '-' '[' ']'
  658                            | type_declaration_no_options . "explicit"
  659                            | type_declaration_no_options . "const"
  660                            | type_declaration_no_options . '-' "const"
  661                            | type_declaration_no_options . '&'
  662                            | type_declaration_no_options . '-' '&'
  663                            | type_declaration_no_options . '#'
  664                            | type_declaration_no_options . "implicit"
  665                            | type_declaration_no_options . '-' '#'
  666                            | type_declaration_no_options . "==" "const"
  667                            | type_declaration_no_options . "==" '&'
  668                            | type_declaration_no_options . '?'
  672                            | type_declaration_no_options . "??"
  770 make_struct_decl: "variant" '<' $@90 type_declaration_no_options . '>' $@91 '(' make_struct_dim ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1207
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1060

  434 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  435     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "[["  shift, and go to state 920

    $default  reduce using rule 321 (optional_capture_list)

    optional_capture_list  go to state 1208


State 1061

  324 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 1209


State 1062

  466 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 466 (expr_mtag)


State 1063

  467 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 467 (expr_mtag)


State 1064

  468 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 468 (expr_mtag)


State 1065

  469 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 469 (expr_mtag)


State 1066

  470 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 470 (expr_mtag)


State 1067

  472 expr_mtag: "$c" '(' expr ')' . '(' ')'
  473          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1210


State 1068

  807 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    expr_list               go to state 1211
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 693
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1069

  743 optional_block: "where" expr_block .

    $default  reduce using rule 743 (optional_block)


State 1070

  736 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  737                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1212
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1071

  733 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1213
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1072

  732 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1214
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1073

  657 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'
  782 make_dim_decl: '[' . expr_list optional_comma ']'
  806 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "for"                             shift, and go to state 691
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    ']'                               shift, and go to state 807
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    expr_list               go to state 692
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 693
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1074

  307 expr_list: expr .
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'
  650 type_declaration_no_options: type_declaration_no_options '[' expr . ']'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ']'    shift, and go to state 808

    ']'       [reduce using rule 307 (expr_list)]
    $default  reduce using rule 307 (expr_list)


State 1075

  758 make_struct_decl: "[[" type_declaration_no_options '(' ')' . optional_block optional_trailing_delim_sqr_sqr
  759                 | "[[" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 870
    "$f"     shift, and go to state 871
    "name"   shift, and go to state 1215

    $default  reduce using rule 742 (optional_block)

    make_struct_fields  go to state 877
    make_struct_dim     go to state 1216
    optional_block      go to state 1217


State 1076

  772 make_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1218
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1077

  734 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  735                   | make_struct_fields ',' . "name" ":=" expr
  738                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  739                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1219
    "name"  shift, and go to state 1220


State 1078

  741 make_struct_dim: make_struct_dim ';' . make_struct_fields

    "$f"    shift, and go to state 871
    "name"  shift, and go to state 1215

    make_struct_fields  go to state 1221


State 1079

  756 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1080
    ",]]"  shift, and go to state 1081
    ']'    shift, and go to state 1082

    optional_trailing_delim_sqr_sqr  go to state 1222


State 1080

  751 optional_trailing_delim_sqr_sqr: ";]]" .

    $default  reduce using rule 751 (optional_trailing_delim_sqr_sqr)


State 1081

  752 optional_trailing_delim_sqr_sqr: ",]]" .

    $default  reduce using rule 752 (optional_trailing_delim_sqr_sqr)


State 1082

  750 optional_trailing_delim_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1223


State 1083

  757 make_struct_decl: "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 757 (make_struct_decl)


State 1084

  773 make_tuple: make_tuple ',' . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1224
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1085

  749 optional_trailing_semicolon_sqr_sqr: ";]]" .

    $default  reduce using rule 749 (optional_trailing_semicolon_sqr_sqr)


State 1086

  748 optional_trailing_semicolon_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1225


State 1087

  781 make_dim: make_dim ';' . make_tuple

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 876
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple              go to state 1226
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1088

  783 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr .

    $default  reduce using rule 783 (make_dim_decl)


State 1089

  808 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where '}' ']'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    expr_list               go to state 1227
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 693
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1090

  761 make_struct_decl: "[{" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "$f"    shift, and go to state 871
    "name"  shift, and go to state 1215

    make_struct_fields  go to state 877
    make_struct_dim     go to state 1228


State 1091

  760 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    ";}]"  shift, and go to state 1229
    ",}]"  shift, and go to state 1230
    '}'    shift, and go to state 1231

    optional_trailing_delim_cur_sqr  go to state 1232


State 1092

  747 optional_trailing_semicolon_cur_sqr: ";}]" .

    $default  reduce using rule 747 (optional_trailing_semicolon_cur_sqr)


State 1093

  746 optional_trailing_semicolon_cur_sqr: '}' . ']'

    ']'  shift, and go to state 1233


State 1094

  784 make_dim_decl: "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr .

    $default  reduce using rule 784 (make_dim_decl)


State 1095

  810 array_comprehension: "{{" "for" variable_name_with_pos_list "in" . expr_list ';' make_map_tuple array_comprehension_where '}' '}'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    expr_list               go to state 1234
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 693
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1096

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'
  774 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 774 (make_map_tuple)


State 1097

  794 make_table: make_table ';' make_map_tuple .

    $default  reduce using rule 794 (make_table)


State 1098

  744 optional_trailing_semicolon_cur_cur: '}' '}' .

    $default  reduce using rule 744 (optional_trailing_semicolon_cur_cur)


State 1099

  247 expression_keyword: "keyword" '<' $@7 type_declaration_no_options . '>' $@8 expr
  650 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  651                            | type_declaration_no_options . '[' ']'
  657                            | type_declaration_no_options . '-' '[' ']'
  658                            | type_declaration_no_options . "explicit"
  659                            | type_declaration_no_options . "const"
  660                            | type_declaration_no_options . '-' "const"
  661                            | type_declaration_no_options . '&'
  662                            | type_declaration_no_options . '-' '&'
  663                            | type_declaration_no_options . '#'
  664                            | type_declaration_no_options . "implicit"
  665                            | type_declaration_no_options . '-' '#'
  666                            | type_declaration_no_options . "==" "const"
  667                            | type_declaration_no_options . "==" '&'
  668                            | type_declaration_no_options . '?'
  672                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1235
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1100

  250 expression_keyword: "type function" '<' $@9 type_declaration_no_options . '>' $@10 '(' optional_expr_list ')'
  650 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  651                            | type_declaration_no_options . '[' ']'
  657                            | type_declaration_no_options . '-' '[' ']'
  658                            | type_declaration_no_options . "explicit"
  659                            | type_declaration_no_options . "const"
  660                            | type_declaration_no_options . '-' "const"
  661                            | type_declaration_no_options . '&'
  662                            | type_declaration_no_options . '-' '&'
  663                            | type_declaration_no_options . '#'
  664                            | type_declaration_no_options . "implicit"
  665                            | type_declaration_no_options . '-' '#'
  666                            | type_declaration_no_options . "==" "const"
  667                            | type_declaration_no_options . "==" '&'
  668                            | type_declaration_no_options . '?'
  672                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1236
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1101

   30 string_builder_body: string_builder_body "{" expr . "}"
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    "}"    shift, and go to state 1237
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768


State 1102

  806 array_comprehension: '[' "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    expr_list               go to state 1238
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 693
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1103

  782 make_dim_decl: '[' expr_list optional_comma ']' .

    $default  reduce using rule 782 (make_dim_decl)


State 1104

  363 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1239
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1105

  481 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1240
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1106

  367 func_addr_expr: '@' '@' '<' $@21 . type_declaration_no_options '>' $@22 func_addr_name

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1241


State 1107

  370 func_addr_expr: '@' '@' '<' $@23 . optional_function_argument_list optional_function_type '>' $@24 func_addr_name

    '('  shift, and go to state 282

    $default  reduce using rule 119 (optional_function_argument_list)

    optional_function_argument_list  go to state 1242


State 1108

  809 array_comprehension: '{' "for" variable_name_with_pos_list "in" . expr_list ';' make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    expr_list               go to state 1243
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 693
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1109

  796 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 796 (expr_map_tuple_list)


State 1110

  797 make_table_decl: '{' expr_map_tuple_list optional_comma '}' .

    $default  reduce using rule 797 (make_table_decl)


State 1111

  217 expression_block: '{' expressions '}' "finally" '{' expressions . '}'
  240 expressions: expressions . expression_any
  241            | expressions . error

    error                             shift, and go to state 424
    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 427
    "if"                              shift, and go to state 428
    "static_if"                       shift, and go to state 429
    "for"                             shift, and go to state 430
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "return"                          shift, and go to state 437
    "null"                            shift, and go to state 438
    "break"                           shift, and go to state 439
    "try"                             shift, and go to state 440
    "table"                           shift, and go to state 441
    "delete"                          shift, and go to state 442
    "deref"                           shift, and go to state 443
    "with"                            shift, and go to state 444
    "assume"                          shift, and go to state 445
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 448
    "continue"                        shift, and go to state 449
    "pass"                            shift, and go to state 450
    "reinterpret"                     shift, and go to state 451
    "label"                           shift, and go to state 452
    "goto"                            shift, and go to state 453
    "unsafe"                          shift, and go to state 454
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "yield"                           shift, and go to state 460
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "$ <|"                            shift, and go to state 463
    "@ <|"                            shift, and go to state 464
    "@@ <|"                           shift, and go to state 465
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 483
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    ';'                               shift, and go to state 495
    '{'                               shift, and go to state 496
    '}'                               shift, and go to state 1244

    string_builder             go to state 498
    expr_reader                go to state 499
    expression_label           go to state 500
    expression_goto            go to state 501
    if_or_static_if            go to state 502
    expression_if_one_liner    go to state 503
    expression_if_then_else    go to state 504
    expression_for_loop        go to state 505
    expression_unsafe          go to state 506
    expression_while_loop      go to state 507
    expression_with            go to state 508
    expression_with_alias      go to state 509
    expression_any             go to state 510
    expr_keyword               go to state 511
    expression_keyword         go to state 512
    expr_pipe                  go to state 513
    name_in_namespace          go to state 514
    expression_delete          go to state 515
    expr_new                   go to state 516
    expression_break           go to state 517
    expression_continue        go to state 518
    expression_return_no_pipe  go to state 519
    expression_return          go to state 520
    expression_yield_no_pipe   go to state 521
    expression_yield           go to state 522
    expression_try_catch       go to state 523
    kwd_let                    go to state 524
    expression_let             go to state 525
    expr_cast                  go to state 526
    expr_type_decl             go to state 527
    expr_type_info             go to state 528
    block_or_lambda            go to state 529
    expr_full_block            go to state 530
    expr_numeric_const         go to state 531
    expr_assign                go to state 532
    expr_assign_pipe           go to state 533
    expr_named_call            go to state 534
    expr_method_call           go to state 535
    func_addr_expr             go to state 536
    expr_field                 go to state 537
    expr                       go to state 538
    expr_mtag                  go to state 539
    basic_type_declaration     go to state 540
    make_decl                  go to state 541
    make_struct_decl           go to state 542
    make_tuple_call            go to state 543
    make_dim_decl              go to state 544
    make_table_decl            go to state 545
    array_comprehension        go to state 546


State 1112

   60 expression_else: "else" . expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 1245


State 1113

   57 elif_or_static_elif: "elif" .

    $default  reduce using rule 57 (elif_or_static_elif)


State 1114

   58 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 58 (elif_or_static_elif)


State 1115

   61 expression_else: elif_or_static_elif . expr expression_block expression_else

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1246
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1116

   72 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 72 (expression_if_then_else)


State 1117

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr . expression_else_one_liner ';'
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1247
    "is"    shift, and go to state 716
    "as"    shift, and go to state 717
    "<<"    shift, and go to state 726
    ">>"    shift, and go to state 727
    "++"    shift, and go to state 728
    "--"    shift, and go to state 729
    "<="    shift, and go to state 730
    ">="    shift, and go to state 733
    "=="    shift, and go to state 734
    "!="    shift, and go to state 735
    "->"    shift, and go to state 736
    "??"    shift, and go to state 738
    "?."    shift, and go to state 739
    "?["    shift, and go to state 740
    "<|"    shift, and go to state 741
    "|>"    shift, and go to state 742
    "<<<"   shift, and go to state 744
    ">>>"   shift, and go to state 745
    "&&"    shift, and go to state 748
    "||"    shift, and go to state 749
    "^^"    shift, and go to state 750
    ".."    shift, and go to state 754
    '?'     shift, and go to state 756
    '|'     shift, and go to state 757
    '^'     shift, and go to state 758
    '&'     shift, and go to state 759
    '<'     shift, and go to state 760
    '>'     shift, and go to state 761
    '-'     shift, and go to state 762
    '+'     shift, and go to state 763
    '*'     shift, and go to state 764
    '/'     shift, and go to state 765
    '%'     shift, and go to state 766
    '.'     shift, and go to state 767
    '['     shift, and go to state 768

    $default  reduce using rule 64 (expression_else_one_liner)

    expression_else_one_liner  go to state 1248


State 1118

  358 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  734 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  735                   | make_struct_fields . ',' "name" ":=" expr
  738                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  739                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1077
    ']'  shift, and go to state 1249


State 1119

  308 expr_list: expr_list ',' . expr
  359 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 1250
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1042
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1120

  428 expr: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 428 (expr)


State 1121

  427 expr: name_in_namespace '(' make_struct_dim ')' .

    $default  reduce using rule 427 (expr)


State 1122

  286 tuple_expansion: "name" .

    $default  reduce using rule 286 (tuple_expansion)


State 1123

  287 tuple_expansion: tuple_expansion . ',' "name"
  288 tuple_expansion_variable_declaration: "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  289                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr ';'

    ','  shift, and go to state 1251
    ']'  shift, and go to state 1252


State 1124

  317 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1253


State 1125

  318 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1254


State 1126

  316 capture_entry: '=' . "name"

    "name"  shift, and go to state 1255


State 1127

  315 capture_entry: '&' . "name"

    "name"  shift, and go to state 1256


State 1128

  319 capture_list: capture_entry .

    $default  reduce using rule 319 (capture_list)


State 1129

  320 capture_list: capture_list . ',' capture_entry
  322 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 1257
    ']'  shift, and go to state 1258


State 1130

  325 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1259


State 1131

  440 expr: expr "is" "type" '<' . $@27 type_declaration_no_options '>' $@28

    $default  reduce using rule 438 ($@27)

    $@27  go to state 1260


State 1132

  480 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1261
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1133

  446 expr: expr "as" "type" '<' . $@29 type_declaration '>' $@30

    $default  reduce using rule 444 ($@29)

    $@29  go to state 1262


State 1134

  478 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1263
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1135

  360 expr_method_call: expr "->" "name" '(' . ')'
  361                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    ')'                               shift, and go to state 1264
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    expr_list               go to state 1265
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 693
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1136

  357 expr_assign_pipe: expr "<-" "$ <|" expr_block .

    $default  reduce using rule 357 (expr_assign_pipe)


State 1137

  355 expr_assign_pipe: expr "<-" "@ <|" expr_block .

    $default  reduce using rule 355 (expr_assign_pipe)


State 1138

  356 expr_assign_pipe: expr "<-" "@@ <|" expr_block .

    $default  reduce using rule 356 (expr_assign_pipe)


State 1139

  475 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1266
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1140

  421 expr: expr "?[" expr ']' .

    $default  reduce using rule 421 (expr)


State 1141

  354 expr_assign_pipe: expr '=' "$ <|" expr_block .

    $default  reduce using rule 354 (expr_assign_pipe)


State 1142

  352 expr_assign_pipe: expr '=' "@ <|" expr_block .

    $default  reduce using rule 352 (expr_assign_pipe)


State 1143

  353 expr_assign_pipe: expr '=' "@@ <|" expr_block .

    $default  reduce using rule 353 (expr_assign_pipe)


State 1144

  451 expr: expr '?' "as" "type" . '<' $@31 type_declaration '>' $@32

    '<'  shift, and go to state 1267


State 1145

  479 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1268


State 1146

  448 expr: expr '?' "as" "name" .

    $default  reduce using rule 448 (expr)


State 1147

  452 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 452 (expr)


State 1148

  437 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1269
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1149

  477 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1270


State 1150

  424 expr: expr '.' "?." "name" .

    $default  reduce using rule 424 (expr)


State 1151

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  422     | expr '.' "?[" expr . ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ']'    shift, and go to state 1271


State 1152

  474 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1272
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1153

  373 expr_field: expr '.' "name" '(' . ')'
  374           | expr '.' "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    ')'                               shift, and go to state 1273
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    expr_list               go to state 1274
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 693
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1154

  476 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1275


State 1155

  372 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 372 (expr_field)


State 1156

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  420     | expr '.' '[' expr . ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ']'    shift, and go to state 1276


State 1157

  377 expr_field: expr '.' $@25 error . $@26

    $default  reduce using rule 376 ($@26)

    $@26  go to state 1277


State 1158

  419 expr: expr '[' expr ']' .

    $default  reduce using rule 419 (expr)


State 1159

  430 expr: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 430 (expr)


State 1160

  578 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' $@42 enum_list $@43 '}' .

    $default  reduce using rule 578 (enum_declaration)


State 1161

  558 enum_list: enum_list "name" '=' expr ';' .

    $default  reduce using rule 558 (enum_list)


State 1162

  118 optional_annotation_list: '[' annotation_list ']' .
  502 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . ';'

    ';'  shift, and go to state 1278

    $default  reduce using rule 118 (optional_annotation_list)


State 1163

  490 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 490 (optional_public_or_private_member_variable)


State 1164

  491 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 491 (optional_public_or_private_member_variable)


State 1165

  499 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@34 function_declaration_header ';'
  501                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block

    "abstract"  shift, and go to state 1279
    "static"    shift, and go to state 1166

    $default  reduce using rule 492 (optional_static_member_variable)

    optional_static_member_variable  go to state 1280


State 1166

  493 optional_static_member_variable: "static" .

    $default  reduce using rule 493 (optional_static_member_variable)


State 1167

  494 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1281
    "sealed"    shift, and go to state 1282

    $default  reduce using rule 484 (optional_override)

    optional_override  go to state 1283


State 1168

  497 struct_variable_declaration_list: struct_variable_declaration_list $@33 structure_variable_declaration ';' .

    $default  reduce using rule 497 (struct_variable_declaration_list)


State 1169

  540 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr ';' .

    $default  reduce using rule 540 (let_variable_declaration)


State 1170

  654 type_declaration_no_options: "type" '<' $@48 type_declaration '>' $@49 .

    $default  reduce using rule 654 (type_declaration_no_options)


State 1171

  675 type_declaration_no_options: "array" '<' $@52 type_declaration '>' $@53 .

    $default  reduce using rule 675 (type_declaration_no_options)


State 1172

  678 type_declaration_no_options: "table" '<' $@54 table_type_pair '>' $@55 .

    $default  reduce using rule 678 (type_declaration_no_options)


State 1173

  645 table_type_pair: type_declaration ';' type_declaration .
  710 type_declaration: type_declaration . '|' type_declaration_no_options
  711                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409

    $default  reduce using rule 645 (table_type_pair)


State 1174

  681 type_declaration_no_options: "iterator" '<' $@56 type_declaration '>' $@57 .

    $default  reduce using rule 681 (type_declaration_no_options)


State 1175

  671 type_declaration_no_options: "smart_ptr" '<' $@50 type_declaration '>' $@51 .

    $default  reduce using rule 671 (type_declaration_no_options)


State 1176

  643 bitfield_type_declaration: "bitfield" '<' $@46 bitfield_bits '>' $@47 .

    $default  reduce using rule 643 (bitfield_type_declaration)


State 1177

  637 bitfield_bits: bitfield_bits ';' "name" .

    $default  reduce using rule 637 (bitfield_bits)


State 1178

  685 type_declaration_no_options: "block" '<' $@58 type_declaration '>' $@59 .

    $default  reduce using rule 685 (type_declaration_no_options)


State 1179

  688 type_declaration_no_options: "block" '<' $@60 optional_function_argument_list optional_function_type '>' . $@61

    $default  reduce using rule 687 ($@61)

    $@61  go to state 1284


State 1180

  692 type_declaration_no_options: "function" '<' $@62 type_declaration '>' $@63 .

    $default  reduce using rule 692 (type_declaration_no_options)


State 1181

  695 type_declaration_no_options: "function" '<' $@64 optional_function_argument_list optional_function_type '>' . $@65

    $default  reduce using rule 694 ($@65)

    $@65  go to state 1285


State 1182

  699 type_declaration_no_options: "lambda" '<' $@66 type_declaration '>' $@67 .

    $default  reduce using rule 699 (type_declaration_no_options)


State 1183

  702 type_declaration_no_options: "lambda" '<' $@68 optional_function_argument_list optional_function_type '>' . $@69

    $default  reduce using rule 701 ($@69)

    $@69  go to state 1286


State 1184

  705 type_declaration_no_options: "tuple" '<' $@70 tuple_type_list '>' $@71 .

    $default  reduce using rule 705 (type_declaration_no_options)


State 1185

  511 tuple_type_list: tuple_type_list ';' tuple_type .

    $default  reduce using rule 511 (tuple_type_list)


State 1186

  708 type_declaration_no_options: "variant" '<' $@72 variant_type_list '>' $@73 .

    $default  reduce using rule 708 (type_declaration_no_options)


State 1187

  517 variant_type_list: variant_type_list ';' variant_type .

    $default  reduce using rule 517 (variant_type_list)


State 1188

  598 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 598 (variable_name_with_pos_list)


State 1189

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'
  526 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 526 (variable_declaration)


State 1190

  764 make_struct_decl: "struct" '<' $@86 type_declaration_no_options '>' . $@87 '(' make_struct_dim ')'

    $default  reduce using rule 763 ($@87)

    $@87  go to state 1287


State 1191

  767 make_struct_decl: "class" '<' $@88 type_declaration_no_options '>' . $@89 '(' make_struct_dim ')'

    $default  reduce using rule 766 ($@89)

    $@89  go to state 1288


State 1192

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list . expression_block
  308 expr_list: expr_list . ',' expr

    ','  shift, and go to state 836
    '{'  shift, and go to state 284

    expression_block  go to state 1289


State 1193

  262 new_type_declaration: '<' $@11 type_declaration '>' . $@12

    $default  reduce using rule 261 ($@12)

    $@12  go to state 1290


State 1194

  266 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 266 (expr_new)


State 1195

  305 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  306               | "typeinfo" '(' name_in_namespace '<' "name" . ';' "name" '>' expr ')'

    '>'  shift, and go to state 1291
    ';'  shift, and go to state 1292


State 1196

  304 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 304 (expr_type_info)


State 1197

  303 expr_type_decl: "type" '<' $@19 type_declaration '>' . $@20

    $default  reduce using rule 302 ($@20)

    $@20  go to state 1293


State 1198

  788 make_dim_decl: "array" '<' $@94 type_declaration_no_options '>' . $@95 '(' expr_list ')'

    $default  reduce using rule 787 ($@95)

    $@95  go to state 1294


State 1199

  800 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . expr_map_tuple_list ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 679
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_map_tuple          go to state 697
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    expr_map_tuple_list     go to state 1295
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1200

  650 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  651                            | type_declaration_no_options . '[' ']'
  657                            | type_declaration_no_options . '-' '[' ']'
  658                            | type_declaration_no_options . "explicit"
  659                            | type_declaration_no_options . "const"
  660                            | type_declaration_no_options . '-' "const"
  661                            | type_declaration_no_options . '&'
  662                            | type_declaration_no_options . '-' '&'
  663                            | type_declaration_no_options . '#'
  664                            | type_declaration_no_options . "implicit"
  665                            | type_declaration_no_options . '-' '#'
  666                            | type_declaration_no_options . "==" "const"
  667                            | type_declaration_no_options . "==" '&'
  668                            | type_declaration_no_options . '?'
  672                            | type_declaration_no_options . "??"
  801 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options . '>' '(' expr_map_tuple_list ')'

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1296
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1201

   81 expression_with_alias: "assume" "name" '=' $@5 expr .
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 81 (expression_with_alias)


State 1202

  294 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' . $@14 expr

    $default  reduce using rule 293 ($@14)

    $@14  go to state 1297


State 1203

  297 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' . $@16 expr

    $default  reduce using rule 296 ($@16)

    $@16  go to state 1298


State 1204

  300 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' . $@18 expr

    $default  reduce using rule 299 ($@18)

    $@18  go to state 1299


State 1205

  792 make_dim_decl: "fixed_array" '<' $@96 type_declaration_no_options '>' . $@97 '(' expr_list ')'

    $default  reduce using rule 791 ($@97)

    $@97  go to state 1300


State 1206

  779 make_tuple_call: "tuple" '<' $@92 type_declaration_no_options '>' . $@93 '(' make_struct_dim ')'

    $default  reduce using rule 778 ($@93)

    $@93  go to state 1301


State 1207

  770 make_struct_decl: "variant" '<' $@90 type_declaration_no_options '>' . $@91 '(' make_struct_dim ')'

    $default  reduce using rule 769 ($@91)

    $@91  go to state 1302


State 1208

  434 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  435     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1303


State 1209

  324 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1304


State 1210

  472 expr_mtag: "$c" '(' expr ')' '(' . ')'
  473          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    ')'                               shift, and go to state 1305
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    expr_list               go to state 1306
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 693
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1211

  308 expr_list: expr_list . ',' expr
  807 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where ']' ']'

    ','  shift, and go to state 836
    ';'  shift, and go to state 1307


State 1212

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'
  736 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  737                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ')'    shift, and go to state 1308


State 1213

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'
  733 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 733 (make_struct_fields)


State 1214

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'
  732 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 732 (make_struct_fields)


State 1215

  732 make_struct_fields: "name" . copy_or_move expr
  733                   | "name" . ":=" expr

    "<-"  shift, and go to state 609
    ":="  shift, and go to state 1071
    '='   shift, and go to state 611

    copy_or_move  go to state 1072


State 1216

  741 make_struct_dim: make_struct_dim . ';' make_struct_fields
  759 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 870
    ';'      shift, and go to state 1078

    $default  reduce using rule 742 (optional_block)

    optional_block  go to state 1309


State 1217

  758 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1080
    ",]]"  shift, and go to state 1081
    ']'    shift, and go to state 1082

    optional_trailing_delim_sqr_sqr  go to state 1310


State 1218

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'
  772 make_tuple: expr "=>" expr .

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 772 (make_tuple)


State 1219

  738 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  739                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1311


State 1220

  734 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  735                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 609
    ":="  shift, and go to state 1312
    '='   shift, and go to state 611

    copy_or_move  go to state 1313


State 1221

  734 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  735                   | make_struct_fields . ',' "name" ":=" expr
  738                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  739                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  741 make_struct_dim: make_struct_dim ';' make_struct_fields .

    ','  shift, and go to state 1077

    $default  reduce using rule 741 (make_struct_dim)


State 1222

  756 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 756 (make_struct_decl)


State 1223

  750 optional_trailing_delim_sqr_sqr: ']' ']' .

    $default  reduce using rule 750 (optional_trailing_delim_sqr_sqr)


State 1224

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'
  773 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 773 (make_tuple)


State 1225

  748 optional_trailing_semicolon_sqr_sqr: ']' ']' .

    $default  reduce using rule 748 (optional_trailing_semicolon_sqr_sqr)


State 1226

  773 make_tuple: make_tuple . ',' expr
  781 make_dim: make_dim ';' make_tuple .

    ','  shift, and go to state 1084

    $default  reduce using rule 781 (make_dim)


State 1227

  308 expr_list: expr_list . ',' expr
  808 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where '}' ']'

    ','  shift, and go to state 836
    ';'  shift, and go to state 1314


State 1228

  741 make_struct_dim: make_struct_dim . ';' make_struct_fields
  761 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"  shift, and go to state 870
    ';'      shift, and go to state 1078

    $default  reduce using rule 742 (optional_block)

    optional_block  go to state 1315


State 1229

  754 optional_trailing_delim_cur_sqr: ";}]" .

    $default  reduce using rule 754 (optional_trailing_delim_cur_sqr)


State 1230

  755 optional_trailing_delim_cur_sqr: ",}]" .

    $default  reduce using rule 755 (optional_trailing_delim_cur_sqr)


State 1231

  753 optional_trailing_delim_cur_sqr: '}' . ']'

    ']'  shift, and go to state 1316


State 1232

  760 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 760 (make_struct_decl)


State 1233

  746 optional_trailing_semicolon_cur_sqr: '}' ']' .

    $default  reduce using rule 746 (optional_trailing_semicolon_cur_sqr)


State 1234

  308 expr_list: expr_list . ',' expr
  810 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list . ';' make_map_tuple array_comprehension_where '}' '}'

    ','  shift, and go to state 836
    ';'  shift, and go to state 1317


State 1235

  247 expression_keyword: "keyword" '<' $@7 type_declaration_no_options '>' . $@8 expr

    $default  reduce using rule 246 ($@8)

    $@8  go to state 1318


State 1236

  250 expression_keyword: "type function" '<' $@9 type_declaration_no_options '>' . $@10 '(' optional_expr_list ')'

    $default  reduce using rule 249 ($@10)

    $@10  go to state 1319


State 1237

   30 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 30 (string_builder_body)


State 1238

  308 expr_list: expr_list . ',' expr
  806 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where ']'

    ','  shift, and go to state 836
    ';'  shift, and go to state 1320


State 1239

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  363 func_addr_name: "$i" '(' expr . ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ')'    shift, and go to state 1321


State 1240

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'
  481          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ')'    shift, and go to state 1322


State 1241

  367 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options . '>' $@22 func_addr_name
  650 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  651                            | type_declaration_no_options . '[' ']'
  657                            | type_declaration_no_options . '-' '[' ']'
  658                            | type_declaration_no_options . "explicit"
  659                            | type_declaration_no_options . "const"
  660                            | type_declaration_no_options . '-' "const"
  661                            | type_declaration_no_options . '&'
  662                            | type_declaration_no_options . '-' '&'
  663                            | type_declaration_no_options . '#'
  664                            | type_declaration_no_options . "implicit"
  665                            | type_declaration_no_options . '-' '#'
  666                            | type_declaration_no_options . "==" "const"
  667                            | type_declaration_no_options . "==" '&'
  668                            | type_declaration_no_options . '?'
  672                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1323
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1242

  370 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list . optional_function_type '>' $@24 func_addr_name

    ':'  shift, and go to state 367

    $default  reduce using rule 122 (optional_function_type)

    optional_function_type  go to state 1324


State 1243

  308 expr_list: expr_list . ',' expr
  809 array_comprehension: '{' "for" variable_name_with_pos_list "in" expr_list . ';' make_map_tuple array_comprehension_where '}'

    ','  shift, and go to state 836
    ';'  shift, and go to state 1325


State 1244

  217 expression_block: '{' expressions '}' "finally" '{' expressions '}' .

    $default  reduce using rule 217 (expression_block)


State 1245

   60 expression_else: "else" expression_block .

    $default  reduce using rule 60 (expression_else)


State 1246

   61 expression_else: elif_or_static_elif expr . expression_block expression_else
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    '{'    shift, and go to state 284

    expression_block  go to state 1326


State 1247

   66 expression_else_one_liner: "else" . $@2 expression_if_one_liner

    $default  reduce using rule 65 ($@2)

    $@2  go to state 1327


State 1248

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner . ';'

    ';'  shift, and go to state 1328


State 1249

  358 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1329


State 1250

  359 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  782 make_dim_decl: '[' . expr_list optional_comma ']'
  806 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "for"                             shift, and go to state 691
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "$f"                              shift, and go to state 871
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 872
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    expr_list               go to state 692
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 693
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_fields      go to state 1330
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1251

  287 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1331


State 1252

  288 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  289                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr ';'

    ']'  shift, and go to state 1332


State 1253

  317 capture_entry: "<-" "name" .

    $default  reduce using rule 317 (capture_entry)


State 1254

  318 capture_entry: ":=" "name" .

    $default  reduce using rule 318 (capture_entry)


State 1255

  316 capture_entry: '=' "name" .

    $default  reduce using rule 316 (capture_entry)


State 1256

  315 capture_entry: '&' "name" .

    $default  reduce using rule 315 (capture_entry)


State 1257

  320 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 1124
    ":="  shift, and go to state 1125
    '='   shift, and go to state 1126
    '&'   shift, and go to state 1127

    capture_entry  go to state 1333


State 1258

  322 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 1334


State 1259

  325 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"  shift, and go to state 1335
    '{'   shift, and go to state 284

    expression_block       go to state 1336
    block_or_simple_block  go to state 1337


State 1260

  440 expr: expr "is" "type" '<' $@27 . type_declaration_no_options '>' $@28

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1338


State 1261

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'
  480          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ')'    shift, and go to state 1339


State 1262

  446 expr: expr "as" "type" '<' $@29 . type_declaration '>' $@30

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1340


State 1263

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  478          | expr "as" "$f" '(' expr . ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ')'    shift, and go to state 1341


State 1264

  360 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 360 (expr_method_call)


State 1265

  308 expr_list: expr_list . ',' expr
  361 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 836
    ')'  shift, and go to state 1342


State 1266

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  475          | expr "?." "$f" '(' expr . ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ')'    shift, and go to state 1343


State 1267

  451 expr: expr '?' "as" "type" '<' . $@31 type_declaration '>' $@32

    $default  reduce using rule 449 ($@31)

    $@31  go to state 1344


State 1268

  479 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1345
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1269

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  437     | expr '?' expr ':' expr .
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 437 (expr)


State 1270

  477 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1346
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1271

  422 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 422 (expr)


State 1272

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  474          | expr '.' "$f" '(' expr . ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ')'    shift, and go to state 1347


State 1273

  373 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 373 (expr_field)


State 1274

  308 expr_list: expr_list . ',' expr
  374 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 836
    ')'  shift, and go to state 1348


State 1275

  476 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1349
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1276

  420 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 420 (expr)


State 1277

  377 expr_field: expr '.' $@25 error $@26 .

    $default  reduce using rule 377 (expr_field)


State 1278

  502 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' ';' .

    $default  reduce using rule 502 (struct_variable_declaration_list)


State 1279

  499 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@34 function_declaration_header ';'

    "const"  shift, and go to state 1350

    $default  reduce using rule 487 (optional_constant)

    optional_constant  go to state 1351


State 1280

  501 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@35 function_declaration_header expression_block

    "override"  shift, and go to state 1281
    "sealed"    shift, and go to state 1282

    $default  reduce using rule 484 (optional_override)

    optional_override  go to state 1352


State 1281

  485 optional_override: "override" .

    $default  reduce using rule 485 (optional_override)


State 1282

  486 optional_override: "sealed" .

    $default  reduce using rule 486 (optional_override)


State 1283

  494 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1163
    "private"  shift, and go to state 1164

    $default  reduce using rule 489 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1353


State 1284

  688 type_declaration_no_options: "block" '<' $@60 optional_function_argument_list optional_function_type '>' $@61 .

    $default  reduce using rule 688 (type_declaration_no_options)


State 1285

  695 type_declaration_no_options: "function" '<' $@64 optional_function_argument_list optional_function_type '>' $@65 .

    $default  reduce using rule 695 (type_declaration_no_options)


State 1286

  702 type_declaration_no_options: "lambda" '<' $@68 optional_function_argument_list optional_function_type '>' $@69 .

    $default  reduce using rule 702 (type_declaration_no_options)


State 1287

  764 make_struct_decl: "struct" '<' $@86 type_declaration_no_options '>' $@87 . '(' make_struct_dim ')'

    '('  shift, and go to state 1354


State 1288

  767 make_struct_decl: "class" '<' $@88 type_declaration_no_options '>' $@89 . '(' make_struct_dim ')'

    '('  shift, and go to state 1355


State 1289

   76 expression_for_loop: "for" $@4 variable_name_with_pos_list "in" expr_list expression_block .

    $default  reduce using rule 76 (expression_for_loop)


State 1290

  262 new_type_declaration: '<' $@11 type_declaration '>' $@12 .

    $default  reduce using rule 262 (new_type_declaration)


State 1291

  305 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1356
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1292

  306 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' . "name" '>' expr ')'

    "name"  shift, and go to state 1357


State 1293

  303 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20 .

    $default  reduce using rule 303 (expr_type_decl)


State 1294

  788 make_dim_decl: "array" '<' $@94 type_declaration_no_options '>' $@95 . '(' expr_list ')'

    '('  shift, and go to state 1358


State 1295

  796 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  800 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list . ')'

    ','  shift, and go to state 1046
    ')'  shift, and go to state 1359


State 1296

  801 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' . '(' expr_map_tuple_list ')'

    '('  shift, and go to state 1360


State 1297

  294 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1361
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1298

  297 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1362
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1299

  300 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1363
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1300

  792 make_dim_decl: "fixed_array" '<' $@96 type_declaration_no_options '>' $@97 . '(' expr_list ')'

    '('  shift, and go to state 1364


State 1301

  779 make_tuple_call: "tuple" '<' $@92 type_declaration_no_options '>' $@93 . '(' make_struct_dim ')'

    '('  shift, and go to state 1365


State 1302

  770 make_struct_decl: "variant" '<' $@90 type_declaration_no_options '>' $@91 . '(' make_struct_dim ')'

    '('  shift, and go to state 1366


State 1303

  434 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  435     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    ')'                               shift, and go to state 1367
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1368
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1304

  324 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"  shift, and go to state 1335
    '{'   shift, and go to state 284

    expression_block       go to state 1336
    block_or_simple_block  go to state 1369


State 1305

  472 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 472 (expr_mtag)


State 1306

  308 expr_list: expr_list . ',' expr
  473 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 836
    ')'  shift, and go to state 1370


State 1307

  807 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1371
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1308

  736 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  737                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 609
    ":="  shift, and go to state 1372
    '='   shift, and go to state 611

    copy_or_move  go to state 1373


State 1309

  759 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1080
    ",]]"  shift, and go to state 1081
    ']'    shift, and go to state 1082

    optional_trailing_delim_sqr_sqr  go to state 1374


State 1310

  758 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 758 (make_struct_decl)


State 1311

  738 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  739                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1375
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1312

  735 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1376
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1313

  734 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1377
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1314

  808 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where '}' ']'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1378
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1315

  761 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    ";}]"  shift, and go to state 1229
    ",}]"  shift, and go to state 1230
    '}'    shift, and go to state 1231

    optional_trailing_delim_cur_sqr  go to state 1379


State 1316

  753 optional_trailing_delim_cur_sqr: '}' ']' .

    $default  reduce using rule 753 (optional_trailing_delim_cur_sqr)


State 1317

  810 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list ';' . make_map_tuple array_comprehension_where '}' '}'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 679
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_map_tuple          go to state 1380
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1318

  247 expression_keyword: "keyword" '<' $@7 type_declaration_no_options '>' $@8 . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1381
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1319

  250 expression_keyword: "type function" '<' $@9 type_declaration_no_options '>' $@10 . '(' optional_expr_list ')'

    '('  shift, and go to state 1382


State 1320

  806 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1383
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1321

  363 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 363 (func_addr_name)


State 1322

  481 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 481 (expr_mtag)


State 1323

  367 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options '>' . $@22 func_addr_name

    $default  reduce using rule 366 ($@22)

    $@22  go to state 1384


State 1324

  370 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type . '>' $@24 func_addr_name

    '>'  shift, and go to state 1385


State 1325

  809 array_comprehension: '{' "for" variable_name_with_pos_list "in" expr_list ';' . make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 679
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_map_tuple          go to state 1386
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1326

   61 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1112
    "elif"         shift, and go to state 1113
    "static_elif"  shift, and go to state 1114

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1115
    expression_else      go to state 1387


State 1327

   66 expression_else_one_liner: "else" $@2 . expression_if_one_liner

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "return"                          shift, and go to state 1388
    "null"                            shift, and go to state 438
    "break"                           shift, and go to state 439
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "continue"                        shift, and go to state 449
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "yield"                           shift, and go to state 1389
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder             go to state 498
    expr_reader                go to state 499
    expression_if_one_liner    go to state 1390
    expression_keyword         go to state 512
    name_in_namespace          go to state 514
    expr_new                   go to state 516
    expression_break           go to state 1391
    expression_continue        go to state 1392
    expression_return_no_pipe  go to state 1393
    expression_yield_no_pipe   go to state 1394
    expr_cast                  go to state 526
    expr_type_decl             go to state 527
    expr_type_info             go to state 528
    block_or_lambda            go to state 529
    expr_full_block            go to state 530
    expr_numeric_const         go to state 531
    expr_named_call            go to state 534
    expr_method_call           go to state 535
    func_addr_expr             go to state 536
    expr_field                 go to state 537
    expr                       go to state 1395
    expr_mtag                  go to state 539
    basic_type_declaration     go to state 540
    make_decl                  go to state 541
    make_struct_decl           go to state 542
    make_tuple_call            go to state 543
    make_dim_decl              go to state 544
    make_table_decl            go to state 545
    array_comprehension        go to state 546


State 1328

   74 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner ';' .

    $default  reduce using rule 74 (expression_if_then_else)


State 1329

  358 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 358 (expr_named_call)


State 1330

  359 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  734 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  735                   | make_struct_fields . ',' "name" ":=" expr
  738                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  739                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1077
    ']'  shift, and go to state 1396


State 1331

  287 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 287 (tuple_expansion)


State 1332

  288 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  289                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr ';'

    ':'  shift, and go to state 1397
    '&'  shift, and go to state 382

    $default  reduce using rule 532 (optional_ref)

    optional_ref  go to state 1398


State 1333

  320 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 320 (capture_list)


State 1334

  322 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 322 (optional_capture_list)


State 1335

  310 block_or_simple_block: "=>" . expr
  311                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "<-"                              shift, and go to state 1399
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1400
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1336

  309 block_or_simple_block: expression_block .

    $default  reduce using rule 309 (block_or_simple_block)


State 1337

  325 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 325 (expr_full_block)


State 1338

  440 expr: expr "is" "type" '<' $@27 type_declaration_no_options . '>' $@28
  650 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  651                            | type_declaration_no_options . '[' ']'
  657                            | type_declaration_no_options . '-' '[' ']'
  658                            | type_declaration_no_options . "explicit"
  659                            | type_declaration_no_options . "const"
  660                            | type_declaration_no_options . '-' "const"
  661                            | type_declaration_no_options . '&'
  662                            | type_declaration_no_options . '-' '&'
  663                            | type_declaration_no_options . '#'
  664                            | type_declaration_no_options . "implicit"
  665                            | type_declaration_no_options . '-' '#'
  666                            | type_declaration_no_options . "==" "const"
  667                            | type_declaration_no_options . "==" '&'
  668                            | type_declaration_no_options . '?'
  672                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "??"        shift, and go to state 403
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '>'         shift, and go to state 1401
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408


State 1339

  480 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 480 (expr_mtag)


State 1340

  446 expr: expr "as" "type" '<' $@29 type_declaration . '>' $@30
  710 type_declaration: type_declaration . '|' type_declaration_no_options
  711                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409
    '>'  shift, and go to state 1402


State 1341

  478 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 478 (expr_mtag)


State 1342

  361 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 361 (expr_method_call)


State 1343

  475 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 475 (expr_mtag)


State 1344

  451 expr: expr '?' "as" "type" '<' $@31 . type_declaration '>' $@32

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 350
    type_declaration             go to state 1403


State 1345

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  479          | expr '?' "as" "$f" '(' expr . ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ')'    shift, and go to state 1404


State 1346

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  477          | expr '.' "?." "$f" '(' expr . ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ')'    shift, and go to state 1405


State 1347

  474 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 474 (expr_mtag)


State 1348

  374 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 374 (expr_field)


State 1349

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  476          | expr '.' '.' "$f" '(' expr . ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ')'    shift, and go to state 1406


State 1350

  488 optional_constant: "const" .

    $default  reduce using rule 488 (optional_constant)


State 1351

  499 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@34 function_declaration_header ';'

    $default  reduce using rule 498 ($@34)

    $@34  go to state 1407


State 1352

  501 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@35 function_declaration_header expression_block

    "const"  shift, and go to state 1350

    $default  reduce using rule 487 (optional_constant)

    optional_constant  go to state 1408


State 1353

  494 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 417
    "name"  shift, and go to state 418

    variable_declaration         go to state 1409
    variable_name_with_pos_list  go to state 420


State 1354

  764 make_struct_decl: "struct" '<' $@86 type_declaration_no_options '>' $@87 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 871
    "name"  shift, and go to state 1215

    make_struct_fields  go to state 877
    make_struct_dim     go to state 1410


State 1355

  767 make_struct_decl: "class" '<' $@88 type_declaration_no_options '>' $@89 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 871
    "name"  shift, and go to state 1215

    make_struct_fields  go to state 877
    make_struct_dim     go to state 1411


State 1356

  305 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ')'    shift, and go to state 1412


State 1357

  306 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" . '>' expr ')'

    '>'  shift, and go to state 1413


State 1358

  788 make_dim_decl: "array" '<' $@94 type_declaration_no_options '>' $@95 '(' . expr_list ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    expr_list               go to state 1414
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 693
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1359

  800 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list ')' .

    $default  reduce using rule 800 (make_table_decl)


State 1360

  801 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' . expr_map_tuple_list ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 679
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_map_tuple          go to state 697
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    expr_map_tuple_list     go to state 1415
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1361

  294 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr .
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 294 (expr_cast)


State 1362

  297 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr .
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 297 (expr_cast)


State 1363

  300 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr .
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 300 (expr_cast)


State 1364

  792 make_dim_decl: "fixed_array" '<' $@96 type_declaration_no_options '>' $@97 '(' . expr_list ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    expr_list               go to state 1416
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 693
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1365

  779 make_tuple_call: "tuple" '<' $@92 type_declaration_no_options '>' $@93 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 871
    "name"  shift, and go to state 1215

    make_struct_fields  go to state 877
    make_struct_dim     go to state 1417


State 1366

  770 make_struct_decl: "variant" '<' $@90 type_declaration_no_options '>' $@91 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 871
    "name"  shift, and go to state 1215

    make_struct_fields  go to state 877
    make_struct_dim     go to state 1418


State 1367

  434 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 434 (expr)


State 1368

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  435     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ')'    shift, and go to state 1419


State 1369

  324 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 324 (expr_block)


State 1370

  473 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 473 (expr_mtag)


State 1371

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'
  807 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where ']' ']'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ';'    shift, and go to state 1420

    $default  reduce using rule 802 (array_comprehension_where)

    array_comprehension_where  go to state 1421


State 1372

  737 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1422
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1373

  736 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1423
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1374

  759 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 759 (make_struct_decl)


State 1375

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'
  738 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  739                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ')'    shift, and go to state 1424


State 1376

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'
  735 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 735 (make_struct_fields)


State 1377

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'
  734 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 734 (make_struct_fields)


State 1378

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'
  808 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where '}' ']'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ';'    shift, and go to state 1420

    $default  reduce using rule 802 (array_comprehension_where)

    array_comprehension_where  go to state 1425


State 1379

  761 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 761 (make_struct_decl)


State 1380

  810 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple . array_comprehension_where '}' '}'

    ';'  shift, and go to state 1420

    $default  reduce using rule 802 (array_comprehension_where)

    array_comprehension_where  go to state 1426


State 1381

  247 expression_keyword: "keyword" '<' $@7 type_declaration_no_options '>' $@8 expr .
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 247 (expression_keyword)


State 1382

  250 expression_keyword: "type function" '<' $@9 type_declaration_no_options '>' $@10 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    $default  reduce using rule 243 (optional_expr_list)

    string_builder          go to state 498
    expr_reader             go to state 499
    optional_expr_list      go to state 1427
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    expr_list               go to state 806
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 693
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1383

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'
  806 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ';'    shift, and go to state 1420

    $default  reduce using rule 802 (array_comprehension_where)

    array_comprehension_where  go to state 1428


State 1384

  367 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options '>' $@22 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 902
    "name"  shift, and go to state 59

    name_in_namespace  go to state 905
    func_addr_name     go to state 1429


State 1385

  370 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type '>' . $@24 func_addr_name

    $default  reduce using rule 369 ($@24)

    $@24  go to state 1430


State 1386

  809 array_comprehension: '{' "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple . array_comprehension_where '}'

    ';'  shift, and go to state 1420

    $default  reduce using rule 802 (array_comprehension_where)

    array_comprehension_where  go to state 1431


State 1387

   61 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 61 (expression_else)


State 1388

  270 expression_return_no_pipe: "return" .
  271                          | "return" . expr_list
  272                          | "return" . "<-" expr_list

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "<-"                              shift, and go to state 1432
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    $default  reduce using rule 270 (expression_return_no_pipe)

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    expr_list               go to state 630
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 693
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1389

  276 expression_yield_no_pipe: "yield" . expr
  277                         | "yield" . "<-" expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "<-"                              shift, and go to state 1433
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1434
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1390

   66 expression_else_one_liner: "else" $@2 expression_if_one_liner .

    $default  reduce using rule 66 (expression_else_one_liner)


State 1391

   70 expression_if_one_liner: expression_break .

    $default  reduce using rule 70 (expression_if_one_liner)


State 1392

   71 expression_if_one_liner: expression_continue .

    $default  reduce using rule 71 (expression_if_one_liner)


State 1393

   68 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 68 (expression_if_one_liner)


State 1394

   69 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 69 (expression_if_one_liner)


State 1395

   67 expression_if_one_liner: expr .
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 67 (expression_if_one_liner)


State 1396

  359 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1435


State 1397

  288 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr ';'

    "type"       shift, and go to state 304
    "array"      shift, and go to state 305
    "table"      shift, and go to state 306
    "typedecl"   shift, and go to state 307
    "iterator"   shift, and go to state 308
    "smart_ptr"  shift, and go to state 309
    "bool"       shift, and go to state 310
    "void"       shift, and go to state 311
    "string"     shift, and go to state 312
    "auto"       shift, and go to state 313
    "int"        shift, and go to state 314
    "int2"       shift, and go to state 315
    "int3"       shift, and go to state 316
    "int4"       shift, and go to state 317
    "uint"       shift, and go to state 318
    "bitfield"   shift, and go to state 319
    "uint2"      shift, and go to state 320
    "uint3"      shift, and go to state 321
    "uint4"      shift, and go to state 322
    "float"      shift, and go to state 323
    "float2"     shift, and go to state 324
    "float3"     shift, and go to state 325
    "float4"     shift, and go to state 326
    "range"      shift, and go to state 327
    "urange"     shift, and go to state 328
    "range64"    shift, and go to state 329
    "urange64"   shift, and go to state 330
    "block"      shift, and go to state 331
    "int64"      shift, and go to state 332
    "uint64"     shift, and go to state 333
    "double"     shift, and go to state 334
    "function"   shift, and go to state 335
    "lambda"     shift, and go to state 336
    "int8"       shift, and go to state 337
    "uint8"      shift, and go to state 338
    "int16"      shift, and go to state 339
    "uint16"     shift, and go to state 340
    "tuple"      shift, and go to state 341
    "variant"    shift, and go to state 342
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 343
    "name"       shift, and go to state 59
    '$'          shift, and go to state 344

    name_in_namespace            go to state 345
    basic_type_declaration       go to state 346
    structure_type_declaration   go to state 347
    auto_type_declaration        go to state 348
    bitfield_type_declaration    go to state 349
    type_declaration_no_options  go to state 1436


State 1398

  289 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr ';'

    "<-"  shift, and go to state 561
    ":="  shift, and go to state 562
    '='   shift, and go to state 563

    copy_or_move_or_clone  go to state 1437


State 1399

  311 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1438
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1400

  310 block_or_simple_block: "=>" expr .
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    ".."  error (nonassociative)

    $default  reduce using rule 310 (block_or_simple_block)


State 1401

  440 expr: expr "is" "type" '<' $@27 type_declaration_no_options '>' . $@28

    $default  reduce using rule 439 ($@28)

    $@28  go to state 1439


State 1402

  446 expr: expr "as" "type" '<' $@29 type_declaration '>' . $@30

    $default  reduce using rule 445 ($@30)

    $@30  go to state 1440


State 1403

  451 expr: expr '?' "as" "type" '<' $@31 type_declaration . '>' $@32
  710 type_declaration: type_declaration . '|' type_declaration_no_options
  711                 | type_declaration . '|' '#'

    '|'  shift, and go to state 409
    '>'  shift, and go to state 1441


State 1404

  479 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 479 (expr_mtag)


State 1405

  477 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 477 (expr_mtag)


State 1406

  476 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 476 (expr_mtag)


State 1407

  499 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 . function_declaration_header ';'

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1442


State 1408

  501 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@35 function_declaration_header expression_block

    $default  reduce using rule 500 ($@35)

    $@35  go to state 1443


State 1409

  494 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 494 (structure_variable_declaration)


State 1410

  741 make_struct_dim: make_struct_dim . ';' make_struct_fields
  764 make_struct_decl: "struct" '<' $@86 type_declaration_no_options '>' $@87 '(' make_struct_dim . ')'

    ')'  shift, and go to state 1444
    ';'  shift, and go to state 1078


State 1411

  741 make_struct_dim: make_struct_dim . ';' make_struct_fields
  767 make_struct_decl: "class" '<' $@88 type_declaration_no_options '>' $@89 '(' make_struct_dim . ')'

    ')'  shift, and go to state 1445
    ';'  shift, and go to state 1078


State 1412

  305 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 305 (expr_type_info)


State 1413

  306 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' . expr ')'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1446
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1414

  308 expr_list: expr_list . ',' expr
  788 make_dim_decl: "array" '<' $@94 type_declaration_no_options '>' $@95 '(' expr_list . ')'

    ','  shift, and go to state 836
    ')'  shift, and go to state 1447


State 1415

  796 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  801 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list . ')'

    ','  shift, and go to state 1046
    ')'  shift, and go to state 1448


State 1416

  308 expr_list: expr_list . ',' expr
  792 make_dim_decl: "fixed_array" '<' $@96 type_declaration_no_options '>' $@97 '(' expr_list . ')'

    ','  shift, and go to state 836
    ')'  shift, and go to state 1449


State 1417

  741 make_struct_dim: make_struct_dim . ';' make_struct_fields
  779 make_tuple_call: "tuple" '<' $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim . ')'

    ')'  shift, and go to state 1450
    ';'  shift, and go to state 1078


State 1418

  741 make_struct_dim: make_struct_dim . ';' make_struct_fields
  770 make_struct_decl: "variant" '<' $@90 type_declaration_no_options '>' $@91 '(' make_struct_dim . ')'

    ')'  shift, and go to state 1451
    ';'  shift, and go to state 1078


State 1419

  435 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 435 (expr)


State 1420

  803 array_comprehension_where: ';' . "where" expr

    "where"  shift, and go to state 1452


State 1421

  807 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1453


State 1422

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'
  737 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 737 (make_struct_fields)


State 1423

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'
  736 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 736 (make_struct_fields)


State 1424

  738 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  739                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 609
    ":="  shift, and go to state 1454
    '='   shift, and go to state 611

    copy_or_move  go to state 1455


State 1425

  808 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . '}' ']'

    '}'  shift, and go to state 1456


State 1426

  810 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where . '}' '}'

    '}'  shift, and go to state 1457


State 1427

  250 expression_keyword: "type function" '<' $@9 type_declaration_no_options '>' $@10 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1458


State 1428

  806 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1459


State 1429

  367 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options '>' $@22 func_addr_name .

    $default  reduce using rule 367 (func_addr_expr)


State 1430

  370 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type '>' $@24 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 902
    "name"  shift, and go to state 59

    name_in_namespace  go to state 905
    func_addr_name     go to state 1460


State 1431

  809 array_comprehension: '{' "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where . '}'

    '}'  shift, and go to state 1461


State 1432

  272 expression_return_no_pipe: "return" "<-" . expr_list

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    expr_list               go to state 835
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 693
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1433

  277 expression_yield_no_pipe: "yield" "<-" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1462
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1434

  276 expression_yield_no_pipe: "yield" expr .
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 276 (expression_yield_no_pipe)


State 1435

  359 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 359 (expr_named_call)


State 1436

  288 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr ';'
  650 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  651                            | type_declaration_no_options . '[' ']'
  657                            | type_declaration_no_options . '-' '[' ']'
  658                            | type_declaration_no_options . "explicit"
  659                            | type_declaration_no_options . "const"
  660                            | type_declaration_no_options . '-' "const"
  661                            | type_declaration_no_options . '&'
  662                            | type_declaration_no_options . '-' '&'
  663                            | type_declaration_no_options . '#'
  664                            | type_declaration_no_options . "implicit"
  665                            | type_declaration_no_options . '-' '#'
  666                            | type_declaration_no_options . "==" "const"
  667                            | type_declaration_no_options . "==" '&'
  668                            | type_declaration_no_options . '?'
  672                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 399
    "implicit"  shift, and go to state 400
    "explicit"  shift, and go to state 401
    "=="        shift, and go to state 402
    "<-"        shift, and go to state 561
    "??"        shift, and go to state 403
    ":="        shift, and go to state 562
    '='         shift, and go to state 563
    '?'         shift, and go to state 404
    '&'         shift, and go to state 405
    '-'         shift, and go to state 406
    '['         shift, and go to state 407
    '#'         shift, and go to state 408

    copy_or_move_or_clone  go to state 1463


State 1437

  289 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr ';'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1464
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1438

  311 block_or_simple_block: "=>" "<-" expr .
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 311 (block_or_simple_block)


State 1439

  440 expr: expr "is" "type" '<' $@27 type_declaration_no_options '>' $@28 .

    $default  reduce using rule 440 (expr)


State 1440

  446 expr: expr "as" "type" '<' $@29 type_declaration '>' $@30 .

    $default  reduce using rule 446 (expr)


State 1441

  451 expr: expr '?' "as" "type" '<' $@31 type_declaration '>' . $@32

    $default  reduce using rule 450 ($@32)

    $@32  go to state 1465


State 1442

  499 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header . ';'

    ';'  shift, and go to state 1466


State 1443

  501 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1467


State 1444

  764 make_struct_decl: "struct" '<' $@86 type_declaration_no_options '>' $@87 '(' make_struct_dim ')' .

    $default  reduce using rule 764 (make_struct_decl)


State 1445

  767 make_struct_decl: "class" '<' $@88 type_declaration_no_options '>' $@89 '(' make_struct_dim ')' .

    $default  reduce using rule 767 (make_struct_decl)


State 1446

  306 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr . ')'
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ')'    shift, and go to state 1468


State 1447

  788 make_dim_decl: "array" '<' $@94 type_declaration_no_options '>' $@95 '(' expr_list ')' .

    $default  reduce using rule 788 (make_dim_decl)


State 1448

  801 make_table_decl: "table" '<' type_declaration_no_options ';' type_declaration_no_options '>' '(' expr_map_tuple_list ')' .

    $default  reduce using rule 801 (make_table_decl)


State 1449

  792 make_dim_decl: "fixed_array" '<' $@96 type_declaration_no_options '>' $@97 '(' expr_list ')' .

    $default  reduce using rule 792 (make_dim_decl)


State 1450

  779 make_tuple_call: "tuple" '<' $@92 type_declaration_no_options '>' $@93 '(' make_struct_dim ')' .

    $default  reduce using rule 779 (make_tuple_call)


State 1451

  770 make_struct_decl: "variant" '<' $@90 type_declaration_no_options '>' $@91 '(' make_struct_dim ')' .

    $default  reduce using rule 770 (make_struct_decl)


State 1452

  803 array_comprehension_where: ';' "where" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1469
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1453

  807 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1470


State 1454

  739 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1471
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1455

  738 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1472
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1456

  808 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' . ']'

    ']'  shift, and go to state 1473


State 1457

  810 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}' . '}'

    '}'  shift, and go to state 1474


State 1458

  250 expression_keyword: "type function" '<' $@9 type_declaration_no_options '>' $@10 '(' optional_expr_list ')' .

    $default  reduce using rule 250 (expression_keyword)


State 1459

  806 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' .

    $default  reduce using rule 806 (array_comprehension)


State 1460

  370 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name .

    $default  reduce using rule 370 (func_addr_expr)


State 1461

  809 array_comprehension: '{' "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}' .

    $default  reduce using rule 809 (array_comprehension)


State 1462

  277 expression_yield_no_pipe: "yield" "<-" expr .
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 277 (expression_yield_no_pipe)


State 1463

  288 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr ';'

    "struct"                          shift, and go to state 425
    "class"                           shift, and go to state 426
    "true"                            shift, and go to state 431
    "false"                           shift, and go to state 432
    "new"                             shift, and go to state 433
    "typeinfo"                        shift, and go to state 434
    "type"                            shift, and go to state 435
    "array"                           shift, and go to state 436
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 441
    "deref"                           shift, and go to state 443
    "cast"                            shift, and go to state 446
    "upcast"                          shift, and go to state 447
    "addr"                            shift, and go to state 448
    "reinterpret"                     shift, and go to state 451
    "unsafe"                          shift, and go to state 555
    "fixed_array"                     shift, and go to state 455
    "bool"                            shift, and go to state 310
    "void"                            shift, and go to state 311
    "string"                          shift, and go to state 312
    "int"                             shift, and go to state 314
    "int2"                            shift, and go to state 315
    "int3"                            shift, and go to state 316
    "int4"                            shift, and go to state 317
    "uint"                            shift, and go to state 318
    "bitfield"                        shift, and go to state 456
    "uint2"                           shift, and go to state 320
    "uint3"                           shift, and go to state 321
    "uint4"                           shift, and go to state 322
    "float"                           shift, and go to state 323
    "float2"                          shift, and go to state 324
    "float3"                          shift, and go to state 325
    "float4"                          shift, and go to state 326
    "range"                           shift, and go to state 327
    "urange"                          shift, and go to state 328
    "range64"                         shift, and go to state 329
    "urange64"                        shift, and go to state 330
    "int64"                           shift, and go to state 332
    "uint64"                          shift, and go to state 333
    "double"                          shift, and go to state 334
    "int8"                            shift, and go to state 337
    "uint8"                           shift, and go to state 338
    "int16"                           shift, and go to state 339
    "uint16"                          shift, and go to state 340
    "tuple"                           shift, and go to state 457
    "variant"                         shift, and go to state 458
    "generator"                       shift, and go to state 459
    "++"                              shift, and go to state 461
    "--"                              shift, and go to state 462
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 466
    "$i"                              shift, and go to state 467
    "$v"                              shift, and go to state 468
    "$b"                              shift, and go to state 469
    "$a"                              shift, and go to state 470
    "$c"                              shift, and go to state 471
    "..."                             shift, and go to state 472
    "[["                              shift, and go to state 473
    "[{"                              shift, and go to state 474
    "{{"                              shift, and go to state 475
    "integer constant"                shift, and go to state 476
    "long integer constant"           shift, and go to state 477
    "unsigned integer constant"       shift, and go to state 478
    "unsigned long integer constant"  shift, and go to state 479
    "unsigned int8 constant"          shift, and go to state 480
    "floating point constant"         shift, and go to state 481
    "double constant"                 shift, and go to state 482
    "name"                            shift, and go to state 59
    "keyword"                         shift, and go to state 556
    "type function"                   shift, and go to state 484
    "start of the string"             shift, and go to state 485
    '-'                               shift, and go to state 486
    '+'                               shift, and go to state 487
    '*'                               shift, and go to state 488
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 489
    '!'                               shift, and go to state 490
    '['                               shift, and go to state 491
    '('                               shift, and go to state 492
    '$'                               shift, and go to state 493
    '@'                               shift, and go to state 494
    '{'                               shift, and go to state 496

    string_builder          go to state 498
    expr_reader             go to state 499
    expression_keyword      go to state 512
    name_in_namespace       go to state 514
    expr_new                go to state 516
    expr_cast               go to state 526
    expr_type_decl          go to state 527
    expr_type_info          go to state 528
    block_or_lambda         go to state 529
    expr_full_block         go to state 530
    expr_numeric_const      go to state 531
    expr_named_call         go to state 534
    expr_method_call        go to state 535
    func_addr_expr          go to state 536
    expr_field              go to state 537
    expr                    go to state 1475
    expr_mtag               go to state 539
    basic_type_declaration  go to state 540
    make_decl               go to state 541
    make_struct_decl        go to state 542
    make_tuple_call         go to state 543
    make_dim_decl           go to state 544
    make_table_decl         go to state 545
    array_comprehension     go to state 546


State 1464

  289 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr . ';'
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ';'    shift, and go to state 1476


State 1465

  451 expr: expr '?' "as" "type" '<' $@31 type_declaration '>' $@32 .

    $default  reduce using rule 451 (expr)


State 1466

  499 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header ';' .

    $default  reduce using rule 499 (struct_variable_declaration_list)


State 1467

  501 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header . expression_block

    '{'  shift, and go to state 284

    expression_block  go to state 1477


State 1468

  306 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')' .

    $default  reduce using rule 306 (expr_type_info)


State 1469

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'
  803 array_comprehension_where: ';' "where" expr .

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 803 (array_comprehension_where)


State 1470

  807 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']' .

    $default  reduce using rule 807 (array_comprehension)


State 1471

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'
  739 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 739 (make_struct_fields)


State 1472

  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'
  738 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768

    $default  reduce using rule 738 (make_struct_fields)


State 1473

  808 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']' .

    $default  reduce using rule 808 (array_comprehension)


State 1474

  810 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list ';' make_map_tuple array_comprehension_where '}' '}' .

    $default  reduce using rule 810 (array_comprehension)


State 1475

  288 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr . ';'
  360 expr_method_call: expr . "->" "name" '(' ')'
  361                 | expr . "->" "name" '(' expr_list ')'
  371 expr_field: expr . '.' "name"
  372           | expr . '.' '.' "name"
  373           | expr . '.' "name" '(' ')'
  374           | expr . '.' "name" '(' expr_list ')'
  377           | expr . '.' $@25 error $@26
  392 expr: expr . "<<" expr
  393     | expr . ">>" expr
  394     | expr . "<<<" expr
  395     | expr . ">>>" expr
  396     | expr . '+' expr
  397     | expr . '-' expr
  398     | expr . '*' expr
  399     | expr . '/' expr
  400     | expr . '%' expr
  401     | expr . '<' expr
  402     | expr . '>' expr
  403     | expr . "==" expr
  404     | expr . "!=" expr
  405     | expr . "<=" expr
  406     | expr . ">=" expr
  407     | expr . '&' expr
  408     | expr . '|' expr
  409     | expr . '^' expr
  410     | expr . "&&" expr
  411     | expr . "||" expr
  412     | expr . "^^" expr
  413     | expr . ".." expr
  416     | expr . "++"
  417     | expr . "--"
  419     | expr . '[' expr ']'
  420     | expr . '.' '[' expr ']'
  421     | expr . "?[" expr ']'
  422     | expr . '.' "?[" expr ']'
  423     | expr . "?." "name"
  424     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: expr . '.' "$f" '(' expr ')'
  475          | expr . "?." "$f" '(' expr ')'
  476          | expr . '.' '.' "$f" '(' expr ')'
  477          | expr . '.' "?." "$f" '(' expr ')'
  478          | expr . "as" "$f" '(' expr ')'
  479          | expr . '?' "as" "$f" '(' expr ')'
  480          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 716
    "as"   shift, and go to state 717
    "<<"   shift, and go to state 726
    ">>"   shift, and go to state 727
    "++"   shift, and go to state 728
    "--"   shift, and go to state 729
    "<="   shift, and go to state 730
    ">="   shift, and go to state 733
    "=="   shift, and go to state 734
    "!="   shift, and go to state 735
    "->"   shift, and go to state 736
    "??"   shift, and go to state 738
    "?."   shift, and go to state 739
    "?["   shift, and go to state 740
    "<|"   shift, and go to state 741
    "|>"   shift, and go to state 742
    "<<<"  shift, and go to state 744
    ">>>"  shift, and go to state 745
    "&&"   shift, and go to state 748
    "||"   shift, and go to state 749
    "^^"   shift, and go to state 750
    ".."   shift, and go to state 754
    '?'    shift, and go to state 756
    '|'    shift, and go to state 757
    '^'    shift, and go to state 758
    '&'    shift, and go to state 759
    '<'    shift, and go to state 760
    '>'    shift, and go to state 761
    '-'    shift, and go to state 762
    '+'    shift, and go to state 763
    '*'    shift, and go to state 764
    '/'    shift, and go to state 765
    '%'    shift, and go to state 766
    '.'    shift, and go to state 767
    '['    shift, and go to state 768
    ';'    shift, and go to state 1478


State 1476

  289 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr ';' .

    $default  reduce using rule 289 (tuple_expansion_variable_declaration)


State 1477

  501 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block .

    $default  reduce using rule 501 (struct_variable_declaration_list)


State 1478

  288 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr ';' .

    $default  reduce using rule 288 (tuple_expansion_variable_declaration)
